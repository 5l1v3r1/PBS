./unmodified_drivers/linux-2.6/platform-pci/platform-pci.c:		if (isa_irq_to_vector(irq) == pdev->irq)
./unmodified_drivers/linux-2.6/platform-pci/platform-pci.c:	irq = pdev->irq;
./unmodified_drivers/linux-2.6/platform-pci/platform-pci.c:	pin = pdev->pin;
./unmodified_drivers/linux-2.6/platform-pci/platform-pci.c:		((uint64_t)pci_domain_nr(pdev->bus) << 32) |
./unmodified_drivers/linux-2.6/platform-pci/platform-pci.c:		((uint64_t)pdev->bus->number << 16) |
./unmodified_drivers/linux-2.6/platform-pci/platform-pci.c:		((uint64_t)(pdev->devfn & 0xff) << 8) |
./unmodified_drivers/linux-2.6/platform-pci/platform-pci.c:	ret = check_platform_magic(&pdev->dev, ioaddr, iolen);
./unmodified_drivers/linux-2.6/platform-pci/machine_reboot.c:	disable_irq(xen_platform_pdev->irq);
./unmodified_drivers/linux-2.6/platform-pci/machine_reboot.c:	enable_irq(xen_platform_pdev->irq);
./unmodified_drivers/linux-2.6/platform-pci/evtchn.c:	v->evtchn_upcall_pending = 0;
./unmodified_drivers/linux-2.6/platform-pci/evtchn.c:	l1 = xchg(&v->evtchn_pending_sel, 0);
./unmodified_drivers/linux-2.6/platform-pci/evtchn.c:	return request_irq(pdev->irq, evtchn_interrupt,
./tools/xenstore/talloc.c:		if ((p)->prev) (p)->prev->next = (p)->next; \
./tools/xenstore/talloc.c:		if (tc->prev) tc->prev->next = tc->next;
./tools/xenstore/talloc.c:		tc->prev->next = tc;
./tools/xenstore/talloc.c:			if (tc->prev) tc->prev->next = tc->next;
./tools/xenstore/talloc.c:		if (tc->prev) tc->prev->next = tc->next;
./tools/xenstore/xenstored_core.c:	{ "priv-domid", 1, NULL, 'p' },
./tools/libxc/xc_compression.c:            item->prev->next = item->next;
./tools/libxc/xc_compression.c:                item->prev->next = item->next;
./tools/libxc/xc_linux_osdep.c:         * Newer (e.g. pv-ops) kernels don't implement this IOCTL,
./tools/libxc/xc_dom_core.c:        prev->next = phys->next;
./tools/blktap/drivers/block-qcow2.c:	nr_events = tap_aio_get_events(&prv->async.aio_ctx);
./tools/blktap/drivers/block-qcow2.c:	for (ep = prv->async.aio_events, i = nr_events; i-- > 0; ep++) {
./tools/blktap/drivers/block-qcow2.c:		pio = &prv->async.pending_aio[(long)io->data];
./tools/blktap/drivers/block-qcow2.c:		tap_aio_unlock(&prv->async, pio->sector);
./tools/blktap/drivers/block-qcow2.c:		if (prv->crypt_method)
./tools/blktap/drivers/block-qcow2.c:					&prv->aes_decrypt_key);
./tools/blktap/drivers/block-qcow2.c:		prv->async.iocb_free[prv->async.iocb_free_count++] = io;
./tools/blktap/drivers/block-qcow2.c:		nr_events = tap_aio_more_events(&prv->async.aio_ctx);
./tools/blktap/drivers/block-qcow2.c:	tap_aio_continue(&prv->async.aio_ctx);
./tools/blktap/drivers/img2qcow.c:			(long long)(prev-1)*5);
./tools/blktap/drivers/img2qcow.c:	dd.private  = malloc(dd.drv->private_data_size);
./tools/blktap/drivers/img2qcow.c:        if (dd.drv->td_open(&dd, argv[1], 0)!=0) {
./tools/blktap/drivers/img2qcow.c:			ret = dd.drv->td_queue_write(&dd, i >> 9,
./tools/blktap/drivers/img2qcow.c:				dd.drv->td_submit(&dd);
./tools/blktap/drivers/img2qcow.c:		if (ret > 0) dd.drv->td_do_callbacks(&dd, 0);
./tools/blktap/drivers/img2qcow.c:        dd.drv->td_close(&dd);
./tools/blktap/drivers/qcow2raw.c:			output, (long long)((prev-1)*5));
./tools/blktap/drivers/qcow2raw.c:	ret = ddaio.drv->td_queue_write(&ddaio, idx, BLOCK_PROCESSSZ>>9, private, 
./tools/blktap/drivers/qcow2raw.c:		ddaio.drv->td_submit(&ddaio);
./tools/blktap/drivers/qcow2raw.c:	ddqcow.private = malloc(ddqcow.drv->private_data_size);
./tools/blktap/drivers/qcow2raw.c:        if (ddqcow.drv->td_open(&ddqcow, argv[2], TD_RDONLY)!=0) {
./tools/blktap/drivers/qcow2raw.c:	ddaio.private = malloc(ddaio.drv->private_data_size);
./tools/blktap/drivers/qcow2raw.c:        if (ddaio.drv->td_open(&ddaio, argv[1], 0)!=0) {
./tools/blktap/drivers/qcow2raw.c:			ret = ddqcow.drv->td_queue_read(&ddqcow, i>>9,
./tools/blktap/drivers/qcow2raw.c:				ddqcow.drv->td_submit(&ddqcow);
./tools/blktap/drivers/qcow2raw.c:				ddqcow.drv->td_do_callbacks(&ddqcow, 0);
./tools/blktap/drivers/qcow2raw.c:				ddaio.drv->td_do_callbacks(&ddaio, 0);
./tools/blktap/drivers/block-sync.c:	dd->io_fd[0] = prv->poll_pipe[0];
./tools/blktap/drivers/block-sync.c:	ret = pipe(prv->poll_pipe);
./tools/blktap/drivers/block-sync.c:        prv->fd = fd;
./tools/blktap/drivers/block-sync.c:	ret = lseek(prv->fd, offset, SEEK_SET);
./tools/blktap/drivers/block-sync.c:		ret = read(prv->fd, buf, size);
./tools/blktap/drivers/block-sync.c:	ret = lseek(prv->fd, offset, SEEK_SET);
./tools/blktap/drivers/block-sync.c:		ret = write(prv->fd, buf, size);
./tools/blktap/drivers/block-sync.c:	close(prv->fd);
./tools/blktap/drivers/block-sync.c:	close(prv->poll_pipe[0]);
./tools/blktap/drivers/block-sync.c:	close(prv->poll_pipe[1]);
./tools/blktap/drivers/block-ram.c:        dd->io_fd[0] = prv->poll_pipe[0];
./tools/blktap/drivers/block-ram.c:	ret = pipe(prv->poll_pipe);
./tools/blktap/drivers/block-ram.c:		prv->fd = -1;
./tools/blktap/drivers/block-ram.c:        prv->fd = fd;
./tools/blktap/drivers/block-ram.c:		ret = read(prv->fd, p, s->sector_size);
./tools/blktap/drivers/block-qcow.c:		return dd->drv->td_open(dd, name, flags);
./tools/blktap/drivers/block-qcow.c:	return tap_aio_submit(&prv->aio);
./tools/blktap/drivers/block-qcow.c:        nr_events = tap_aio_get_events(&prv->aio.aio_ctx);
./tools/blktap/drivers/block-qcow.c:        for (ep = prv->aio.aio_events, i = nr_events; i-- > 0; ep++) {
./tools/blktap/drivers/block-qcow.c:                pio = &prv->aio.pending_aio[(long)io->data];
./tools/blktap/drivers/block-qcow.c:		tap_aio_unlock(&prv->aio, pio->sector);
./tools/blktap/drivers/block-qcow.c:		if (prv->crypt_method)
./tools/blktap/drivers/block-qcow.c:					&prv->aes_decrypt_key);
./tools/blktap/drivers/block-qcow.c:                prv->aio.iocb_free[prv->aio.iocb_free_count++] = io;
./tools/blktap/drivers/block-qcow.c:                nr_events = tap_aio_more_events(&prv->aio.aio_ctx);
./tools/blktap/drivers/block-qcow.c:        tap_aio_continue(&prv->aio.aio_ctx);
./tools/blktap/drivers/block-aio.c:	dd->io_fd[0] = prv->aio.aio_ctx.pollfd;
./tools/blktap/drivers/block-aio.c:	ret = tap_aio_init(&prv->aio, 0, MAX_AIO_REQS);
./tools/blktap/drivers/block-aio.c:        prv->fd = fd;
./tools/blktap/drivers/block-aio.c:	return tap_aio_read(&prv->aio, prv->fd, size, offset, buf, 
./tools/blktap/drivers/block-aio.c:	return tap_aio_write(&prv->aio, prv->fd, size, offset, buf,
./tools/blktap/drivers/block-aio.c:	return tap_aio_submit(&prv->aio);
./tools/blktap/drivers/block-aio.c:	io_destroy(prv->aio.aio_ctx.aio_ctx);
./tools/blktap/drivers/block-aio.c:	close(prv->fd);
./tools/blktap/drivers/block-aio.c:	nr_events = tap_aio_get_events(&prv->aio.aio_ctx);
./tools/blktap/drivers/block-aio.c:	for (ep = prv->aio.aio_events, i = nr_events; i-- > 0; ep++) {
./tools/blktap/drivers/block-aio.c:		pio = &prv->aio.pending_aio[(long)io->data];
./tools/blktap/drivers/block-aio.c:		prv->aio.iocb_free[prv->aio.iocb_free_count++] = io;
./tools/blktap/drivers/block-aio.c:		nr_events = tap_aio_more_events(&prv->aio.aio_ctx);
./tools/blktap/drivers/block-aio.c:	tap_aio_continue(&prv->aio.aio_ctx);
./tools/blktap/drivers/blktapctrl.c:		msg_dev->devnum = blkif->minor;
./tools/blktap/drivers/blktapctrl.c:		msg_dev->domid = blkif->domid;
./tools/blktap/drivers/tapdisk.c:        for (drv = tds->disks; drv != NULL; drv = drv->next)
./tools/blktap/drivers/tapdisk.c:		dd->drv->td_close(dd);
./tools/blktap/drivers/tapdisk.c:	dd->private = malloc(drv->private_data_size);
./tools/blktap/drivers/tapdisk.c:	err = drv->td_open(d, path, flags);
./tools/blktap/drivers/tapdisk.c:	while ((err = d->drv->td_get_parent_id(d, &id)) == 0) {
./tools/blktap/drivers/tapdisk.c:		err = new->drv->td_open(new, new->name, pflags);
./tools/blktap/drivers/tapdisk.c:		err = d->drv->td_validate_parent(d, new, 0);
./tools/blktap/drivers/tapdisk.c:		d->drv->td_close(d);
./tools/blktap/drivers/tapdisk.c:				drv->disk_type, msg->drivertype);
./tools/blktap/drivers/tapdisk.c:				ret = ((map_new_dev(s, msg_dev->devnum) 
./tools/blktap/drivers/tapdisk.c:					== msg_dev->devnum ? 0: -1));
./tools/blktap/drivers/tapdisk.c:	if (sid > MAX_IOFD || drv->td_do_callbacks(dd, sid) > 0)
./tools/blktap/drivers/tapdisk.c:	ret = parent->drv->td_queue_read(parent, sector, nr_secs,
./tools/blktap/drivers/tapdisk.c:				ret = drv->td_queue_write(dd, sector_nr,
./tools/blktap/drivers/tapdisk.c:				ret = drv->td_queue_read(dd, sector_nr,
./tools/blktap/drivers/tapdisk.c:		dd->early += dd->drv->td_submit(dd);
./tools/blktap/drivers/tapdisk.c:							dd->drv->td_submit(dd);
./tools/blktap/drivers/block-vmdk.c:        dd->io_fd[0] = prv->poll_pipe[0];
./tools/blktap/drivers/block-vmdk.c:	ret = pipe(prv->poll_pipe);
./tools/blktap/drivers/block-vmdk.c:        prv->fd = fd;
./tools/blktap/drivers/block-vmdk.c:        	prv->cluster_sectors = le32_to_cpu(header.granularity);
./tools/blktap/drivers/block-vmdk.c:        	prv->l2_size = 1 << 9;
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_size = 1 << 6;
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_table_offset = le32_to_cpu(header.l1dir_offset) << 9;
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_backup_table_offset = 0;
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_entry_sectors = prv->l2_size * prv->cluster_sectors;
./tools/blktap/drivers/block-vmdk.c:        	prv->cluster_sectors = le32_to_cpu(header.granularity);
./tools/blktap/drivers/block-vmdk.c:        	prv->l2_size = le32_to_cpu(header.num_gtes_per_gte);
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_entry_sectors = prv->l2_size * prv->cluster_sectors;
./tools/blktap/drivers/block-vmdk.c:        	if (prv->l1_entry_sectors <= 0)
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_size = (s->size + prv->l1_entry_sectors - 1) 
./tools/blktap/drivers/block-vmdk.c:            		       / prv->l1_entry_sectors;
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_table_offset = le64_to_cpu(header.rgd_offset) << 9;
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_backup_table_offset = 
./tools/blktap/drivers/block-vmdk.c:    	l1_size = prv->l1_size * sizeof(uint32_t);
./tools/blktap/drivers/block-vmdk.c:    	prv->l1_table = malloc(l1_size);
./tools/blktap/drivers/block-vmdk.c:    	if (!prv->l1_table)
./tools/blktap/drivers/block-vmdk.c:    	if (lseek(fd, prv->l1_table_offset, SEEK_SET) == -1)
./tools/blktap/drivers/block-vmdk.c:    	if (read(fd, prv->l1_table, l1_size) != l1_size)
./tools/blktap/drivers/block-vmdk.c:    	for (i = 0; i < prv->l1_size; i++) {
./tools/blktap/drivers/block-vmdk.c:        	le32_to_cpus(&prv->l1_table[i]);
./tools/blktap/drivers/block-vmdk.c:    	if (prv->l1_backup_table_offset) {
./tools/blktap/drivers/block-vmdk.c:        	prv->l1_backup_table = malloc(l1_size);
./tools/blktap/drivers/block-vmdk.c:        	if (!prv->l1_backup_table)
./tools/blktap/drivers/block-vmdk.c:        	if (lseek(fd, prv->l1_backup_table_offset, SEEK_SET) == -1)
./tools/blktap/drivers/block-vmdk.c:        	if (read(fd, prv->l1_backup_table, l1_size) != l1_size)
./tools/blktap/drivers/block-vmdk.c:        	for(i = 0; i < prv->l1_size; i++) {
./tools/blktap/drivers/block-vmdk.c:            		le32_to_cpus(&prv->l1_backup_table[i]);
./tools/blktap/drivers/block-vmdk.c:    	prv->l2_cache = malloc(prv->l2_size * L2_CACHE_SIZE *sizeof(uint32_t));
./tools/blktap/drivers/block-vmdk.c:    	if (!prv->l2_cache)
./tools/blktap/drivers/block-vmdk.c:    	prv->fd = fd;
./tools/blktap/drivers/block-vmdk.c:   	safer_free(prv->l1_backup_table);
./tools/blktap/drivers/block-vmdk.c:    	free(prv->l1_table);
./tools/blktap/drivers/block-vmdk.c:    	free(prv->l2_cache);
./tools/blktap/drivers/block-vmdk.c:    	l1_index = (offset >> 9) / prv->l1_entry_sectors;
./tools/blktap/drivers/block-vmdk.c:    	if (l1_index >= prv->l1_size)
./tools/blktap/drivers/block-vmdk.c:    	l2_offset = prv->l1_table[l1_index];
./tools/blktap/drivers/block-vmdk.c:        	if (l2_offset == prv->l2_cache_offsets[i]) {
./tools/blktap/drivers/block-vmdk.c:            		if (++prv->l2_cache_counts[i] == 0xffffffff) {
./tools/blktap/drivers/block-vmdk.c:	                    		prv->l2_cache_counts[j] >>= 1;
./tools/blktap/drivers/block-vmdk.c:            		l2_table = prv->l2_cache + (i * prv->l2_size);
./tools/blktap/drivers/block-vmdk.c:        	if (prv->l2_cache_counts[i] < min_count) {
./tools/blktap/drivers/block-vmdk.c:            		min_count = prv->l2_cache_counts[i];
./tools/blktap/drivers/block-vmdk.c:    	l2_table = prv->l2_cache + (min_index * prv->l2_size);
./tools/blktap/drivers/block-vmdk.c:    	lseek(prv->fd, (int64_t)l2_offset * 512, SEEK_SET);
./tools/blktap/drivers/block-vmdk.c:    	if (read(prv->fd, l2_table, prv->l2_size * sizeof(uint32_t)) != 
./tools/blktap/drivers/block-vmdk.c:        	 prv->l2_size * sizeof(uint32_t))
./tools/blktap/drivers/block-vmdk.c:    	prv->l2_cache_offsets[min_index] = l2_offset;
./tools/blktap/drivers/block-vmdk.c:    	prv->l2_cache_counts[min_index] = 1;
./tools/blktap/drivers/block-vmdk.c:    	l2_index = ((offset >> 9) / prv->cluster_sectors) % prv->l2_size;
./tools/blktap/drivers/block-vmdk.c:        	cluster_offset = lseek(prv->fd, 0, SEEK_END);
./tools/blktap/drivers/block-vmdk.c:        	if (ftruncate(prv->fd, cluster_offset + 
./tools/blktap/drivers/block-vmdk.c:			      (prv->cluster_sectors << 9)))
./tools/blktap/drivers/block-vmdk.c:        	lseek(prv->fd, ((int64_t)l2_offset * 512) + 
./tools/blktap/drivers/block-vmdk.c:        	if (write(prv->fd, &tmp, sizeof(tmp)) != sizeof(tmp))
./tools/blktap/drivers/block-vmdk.c:        	if (prv->l1_backup_table_offset != 0) {
./tools/blktap/drivers/block-vmdk.c:            		l2_offset = prv->l1_backup_table[l1_index];
./tools/blktap/drivers/block-vmdk.c:            	lseek(prv->fd, ((int64_t)l2_offset * 512) + 
./tools/blktap/drivers/block-vmdk.c:            	if (write(prv->fd, &tmp, sizeof(tmp)) != sizeof(tmp))
./tools/blktap/drivers/block-vmdk.c:        	index_in_cluster = sector % prv->cluster_sectors;
./tools/blktap/drivers/block-vmdk.c:        	n = prv->cluster_sectors - index_in_cluster;
./tools/blktap/drivers/block-vmdk.c:            		lseek(prv->fd, cluster_offset + index_in_cluster * 512,
./tools/blktap/drivers/block-vmdk.c:            		ret = read(prv->fd, buf, n * 512);
./tools/blktap/drivers/block-vmdk.c:        	index_in_cluster = sector & (prv->cluster_sectors - 1);
./tools/blktap/drivers/block-vmdk.c:        	n = prv->cluster_sectors - index_in_cluster;
./tools/blktap/drivers/block-vmdk.c:        	lseek(prv->fd, cluster_offset + index_in_cluster * 512, 
./tools/blktap/drivers/block-vmdk.c:        	ret = write(prv->fd, buf, n * 512);
./tools/blktap/drivers/block-vmdk.c:    	safer_free(prv->l1_table);
./tools/blktap/drivers/block-vmdk.c:    	safer_free(prv->l1_backup_table);
./tools/blktap/drivers/block-vmdk.c:    	safer_free(prv->l2_cache);
./tools/blktap/drivers/block-vmdk.c:    	close(prv->fd);
./tools/blktap/drivers/block-vmdk.c:	close(prv->poll_pipe[0]);
./tools/blktap/drivers/block-vmdk.c:	close(prv->poll_pipe[1]);
./tools/libfsimage/zfs/fsys_zfs.c:	if (nvlist_unpack(vdev->vp_nvlist, &nvlist))
./tools/firmware/seabios-dir-remote/src/pci.c:            pprev = &dev->next;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->bdf = bdf;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->parent = parent;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->rootbus = rootbus;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->vendor = vendev & 0xffff;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->device = vendev >> 16;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->class = classrev >> 16;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->prog_if = classrev >> 8;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->revision = classrev & 0xff;
./tools/firmware/seabios-dir-remote/src/pci.c:            dev->header_type = pci_config_readb(bdf, PCI_HEADER_TYPE);
./tools/firmware/seabios-dir-remote/src/pci.c:            u8 v = dev->header_type & 0x7f;
./tools/firmware/seabios-dir-remote/src/pci.c:                dev->secondary_bus = secbus;
./tools/firmware/seabios-dir-remote/src/pci.c:                    , dev->vendor, dev->device, dev->class);
./tools/firmware/seabios-dir-remote/src/pciinit.c:    u16 bdf = dev->bdf;
./tools/firmware/seabios-dir-remote/src/pciinit.c:    if (dev->class == PCI_CLASS_BRIDGE_PCI) {
./tools/firmware/seabios-dir-remote/src/pciinit.c:        if (dev->secondary_bus >= busses_count) {
./tools/firmware/seabios-dir-remote/src/pciinit.c:                    busses_count, dev->secondary_bus);
./tools/firmware/seabios-dir-remote/src/pciinit.c:        struct pci_bus *s = busses + dev->secondary_bus;
./tools/firmware/seabios-dir-remote/src/pciinit.c:        pci_bios_check_device_in_bus(dev->secondary_bus);
./tools/firmware/seabios-dir-remote/src/pciinit.c:                dev->secondary_bus,
./tools/firmware/seabios-dir-remote/src/pciinit.c:        dev->bars[i].addr = val;
./tools/firmware/seabios-dir-remote/src/pciinit.c:        dev->bars[i].size = size;
./tools/firmware/seabios-dir-remote/src/pciinit.c:        dev->bars[i].is64 = (!(val & PCI_BASE_ADDRESS_SPACE_IO) &&
./tools/firmware/seabios-dir-remote/src/pciinit.c:        if (dev->bars[i].is64) {
./tools/firmware/seabios-dir-remote/src/pciinit.c:    u16 bdf = dev->bdf;
./tools/firmware/seabios-dir-remote/src/pciinit.c:    if (dev->class == PCI_CLASS_BRIDGE_PCI) {
./tools/firmware/seabios-dir-remote/src/pciinit.c:        if (dev->secondary_bus >= busses_count) {
./tools/firmware/seabios-dir-remote/src/pciinit.c:        struct pci_bus *s = busses + dev->secondary_bus;
./tools/firmware/seabios-dir-remote/src/pciinit.c:        dprintf(1, "PCI: init bases bus %d (secondary)\n", dev->secondary_bus);
./tools/firmware/seabios-dir-remote/src/pciinit.c:        pci_bios_map_device_in_bus(dev->secondary_bus);
./tools/firmware/seabios-dir-remote/src/pciinit.c:        if (dev->bars[i].addr == 0) {
./tools/firmware/seabios-dir-remote/src/pciinit.c:        addr = pci_bios_bus_get_addr(bus, pci_addr_to_type(dev->bars[i].addr),
./tools/firmware/seabios-dir-remote/src/pciinit.c:                                     dev->bars[i].size);
./tools/firmware/seabios-dir-remote/src/pciinit.c:                i, addr, dev->bars[i].size,
./tools/firmware/seabios-dir-remote/src/pciinit.c:                dev->bars[i].addr & PCI_BASE_ADDRESS_SPACE_IO ? "io" : "mem");
./tools/firmware/seabios-dir-remote/src/pciinit.c:        if (dev->bars[i].is64) {
./tools/firmware/seabios-dir-remote/src/boot.c:    bev->type = type;
./tools/firmware/seabios-dir-remote/src/boot.c:    bev->vector = vector;
./tools/xentrace/xenctx.c:        && prev->address <= symbol->address
./tools/xentrace/xenctx.c:        && (!prev->next || prev->next->address > symbol->address)) {
./tools/memshr/bidir-hash.c:    entry->value_next = bv->hash_entry;
./tools/memshr/bidir-hash.c:    bv->hash_entry = L2C(h, entry);
./tools/memshr/bidir-hash.c:    pev = &(bv->hash_entry);
./tools/memshr/bidir-hash.c:    pev = &(bv->hash_entry);
./tools/qemu-xen-traditional/gdbstub.c:        GET_REGL(env->regs[gpr_map[n]]);
./tools/qemu-xen-traditional/gdbstub.c:        memcpy(mem_buf, &env->fpregs[n - (CPU_NB_REGS + 8)], 10);
./tools/qemu-xen-traditional/gdbstub.c:            stq_p(mem_buf, env->xmm_regs[n].XMM_Q(0));
./tools/qemu-xen-traditional/gdbstub.c:            stq_p(mem_buf + 8, env->xmm_regs[n].XMM_Q(1));
./tools/qemu-xen-traditional/gdbstub.c:            GET_REG32(env->mxcsr);
./tools/qemu-xen-traditional/gdbstub.c:        case 0: GET_REGL(env->eip);
./tools/qemu-xen-traditional/gdbstub.c:        case 1: GET_REG32(env->eflags);
./tools/qemu-xen-traditional/gdbstub.c:        case 2: GET_REG32(env->segs[R_CS].selector);
./tools/qemu-xen-traditional/gdbstub.c:        case 3: GET_REG32(env->segs[R_SS].selector);
./tools/qemu-xen-traditional/gdbstub.c:        case 4: GET_REG32(env->segs[R_DS].selector);
./tools/qemu-xen-traditional/gdbstub.c:        case 5: GET_REG32(env->segs[R_ES].selector);
./tools/qemu-xen-traditional/gdbstub.c:        case 6: GET_REG32(env->segs[R_FS].selector);
./tools/qemu-xen-traditional/gdbstub.c:        case 7: GET_REG32(env->segs[R_GS].selector);
./tools/qemu-xen-traditional/gdbstub.c:        case 16: GET_REG32(env->fpuc);
./tools/qemu-xen-traditional/gdbstub.c:        case 17: GET_REG32((env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11);
./tools/qemu-xen-traditional/gdbstub.c:        env->regs[gpr_map[i]] = ldtul_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:        memcpy(&env->fpregs[i], mem_buf, 10);
./tools/qemu-xen-traditional/gdbstub.c:            env->xmm_regs[i].XMM_Q(0) = ldq_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:            env->xmm_regs[i].XMM_Q(1) = ldq_p(mem_buf + 8);
./tools/qemu-xen-traditional/gdbstub.c:            env->mxcsr = ldl_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:        case 0: env->eip = ldtul_p(mem_buf); return sizeof(target_ulong);
./tools/qemu-xen-traditional/gdbstub.c:        case 1: env->eflags = ldl_p(mem_buf); return 4;
./tools/qemu-xen-traditional/gdbstub.c:            if (tmp != env->segs[sreg].selector)\
./tools/qemu-xen-traditional/gdbstub.c:        case 16: env->fpuc = ldl_p(mem_buf); return 4;
./tools/qemu-xen-traditional/gdbstub.c:                 env->fpstt = (tmp >> 11) & 7;
./tools/qemu-xen-traditional/gdbstub.c:                 env->fpus = tmp & ~0x3800;
./tools/qemu-xen-traditional/gdbstub.c:        GET_REGL(env->gpr[n]);
./tools/qemu-xen-traditional/gdbstub.c:        stfq_p(mem_buf, env->fpr[n-32]);
./tools/qemu-xen-traditional/gdbstub.c:        case 64: GET_REGL(env->nip);
./tools/qemu-xen-traditional/gdbstub.c:        case 65: GET_REGL(env->msr);
./tools/qemu-xen-traditional/gdbstub.c:                    cr |= env->crf[i] << (32 - ((i + 1) * 4));
./tools/qemu-xen-traditional/gdbstub.c:        case 67: GET_REGL(env->lr);
./tools/qemu-xen-traditional/gdbstub.c:        case 68: GET_REGL(env->ctr);
./tools/qemu-xen-traditional/gdbstub.c:        case 69: GET_REGL(env->xer);
./tools/qemu-xen-traditional/gdbstub.c:        env->gpr[n] = ldtul_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:        env->fpr[n-32] = ldfq_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:            env->nip = ldtul_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:                    env->crf[i] = (cr >> (32 - ((i + 1) * 4))) & 0xF;
./tools/qemu-xen-traditional/gdbstub.c:            env->lr = ldtul_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:            env->ctr = ldtul_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:            env->xer = ldtul_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:        GET_REGA(env->gregs[n]);
./tools/qemu-xen-traditional/gdbstub.c:        GET_REGA(env->regwptr[n - 8]);
./tools/qemu-xen-traditional/gdbstub.c:        GET_REG32(*((uint32_t *)&env->fpr[n - 32]));
./tools/qemu-xen-traditional/gdbstub.c:    case 64: GET_REGA(env->y);
./tools/qemu-xen-traditional/gdbstub.c:    case 66: GET_REGA(env->wim);
./tools/qemu-xen-traditional/gdbstub.c:    case 67: GET_REGA(env->tbr);
./tools/qemu-xen-traditional/gdbstub.c:    case 68: GET_REGA(env->pc);
./tools/qemu-xen-traditional/gdbstub.c:    case 69: GET_REGA(env->npc);
./tools/qemu-xen-traditional/gdbstub.c:    case 70: GET_REGA(env->fsr);
./tools/qemu-xen-traditional/gdbstub.c:        GET_REG32(*((uint32_t *)&env->fpr[n - 32]));
./tools/qemu-xen-traditional/gdbstub.c:        val = (uint64_t)*((uint32_t *)&env->fpr[(n - 64) * 2 + 32]) << 32;
./tools/qemu-xen-traditional/gdbstub.c:        val |= *((uint32_t *)&env->fpr[(n - 64) * 2 + 33]);
./tools/qemu-xen-traditional/gdbstub.c:    case 80: GET_REGL(env->pc);
./tools/qemu-xen-traditional/gdbstub.c:    case 81: GET_REGL(env->npc);
./tools/qemu-xen-traditional/gdbstub.c:                           ((env->asi & 0xff) << 24) |
./tools/qemu-xen-traditional/gdbstub.c:                           ((env->pstate & 0xfff) << 8) |
./tools/qemu-xen-traditional/gdbstub.c:    case 83: GET_REGL(env->fsr);
./tools/qemu-xen-traditional/gdbstub.c:    case 84: GET_REGL(env->fprs);
./tools/qemu-xen-traditional/gdbstub.c:    case 85: GET_REGL(env->y);
./tools/qemu-xen-traditional/gdbstub.c:        env->gregs[n] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        env->regwptr[n - 8] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        *((uint32_t *)&env->fpr[n - 32]) = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        case 64: env->y = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 66: env->wim = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 67: env->tbr = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 68: env->pc = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 69: env->npc = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 70: env->fsr = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        env->fpr[n] = ldfl_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:        *((uint32_t *)&env->fpr[(n - 64) * 2 + 32]) = tmp >> 32;
./tools/qemu-xen-traditional/gdbstub.c:        *((uint32_t *)&env->fpr[(n - 64) * 2 + 33]) = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        case 80: env->pc = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 81: env->npc = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:	    env->asi = (tmp >> 24) & 0xff;
./tools/qemu-xen-traditional/gdbstub.c:	    env->pstate = (tmp >> 8) & 0xfff;
./tools/qemu-xen-traditional/gdbstub.c:        case 83: env->fsr = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 84: env->fprs = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 85: env->y = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        GET_REG32(env->regs[n]);
./tools/qemu-xen-traditional/gdbstub.c:        env->regs[n] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        GET_REG32(env->dregs[n]);
./tools/qemu-xen-traditional/gdbstub.c:        GET_REG32(env->aregs[n - 8]);
./tools/qemu-xen-traditional/gdbstub.c:        case 16: GET_REG32(env->sr);
./tools/qemu-xen-traditional/gdbstub.c:        case 17: GET_REG32(env->pc);
./tools/qemu-xen-traditional/gdbstub.c:        env->dregs[n] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        env->aregs[n - 8] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        case 16: env->sr = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        case 17: env->pc = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        GET_REGL(env->active_tc.gpr[n]);
./tools/qemu-xen-traditional/gdbstub.c:    if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen-traditional/gdbstub.c:            if (env->CP0_Status & (1 << CP0St_FR))
./tools/qemu-xen-traditional/gdbstub.c:		GET_REGL(env->active_fpu.fpr[n - 38].d);
./tools/qemu-xen-traditional/gdbstub.c:		GET_REGL(env->active_fpu.fpr[n - 38].w[FP_ENDIAN_IDX]);
./tools/qemu-xen-traditional/gdbstub.c:        case 70: GET_REGL((int32_t)env->active_fpu.fcr31);
./tools/qemu-xen-traditional/gdbstub.c:        case 71: GET_REGL((int32_t)env->active_fpu.fcr0);
./tools/qemu-xen-traditional/gdbstub.c:    case 32: GET_REGL((int32_t)env->CP0_Status);
./tools/qemu-xen-traditional/gdbstub.c:    case 33: GET_REGL(env->active_tc.LO[0]);
./tools/qemu-xen-traditional/gdbstub.c:    case 34: GET_REGL(env->active_tc.HI[0]);
./tools/qemu-xen-traditional/gdbstub.c:    case 35: GET_REGL(env->CP0_BadVAddr);
./tools/qemu-xen-traditional/gdbstub.c:    case 36: GET_REGL((int32_t)env->CP0_Cause);
./tools/qemu-xen-traditional/gdbstub.c:    case 37: GET_REGL(env->active_tc.PC);
./tools/qemu-xen-traditional/gdbstub.c:    case 89: GET_REGL((int32_t)env->CP0_PRid);
./tools/qemu-xen-traditional/gdbstub.c:    set_float_rounding_mode(ieee_rm[env->active_fpu.fcr31 & 3], &env->active_fpu.fp_status)
./tools/qemu-xen-traditional/gdbstub.c:        env->active_tc.gpr[n] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    if (env->CP0_Config1 & (1 << CP0C1_FP)
./tools/qemu-xen-traditional/gdbstub.c:            if (env->CP0_Status & (1 << CP0St_FR))
./tools/qemu-xen-traditional/gdbstub.c:              env->active_fpu.fpr[n - 38].d = tmp;
./tools/qemu-xen-traditional/gdbstub.c:              env->active_fpu.fpr[n - 38].w[FP_ENDIAN_IDX] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:            env->active_fpu.fcr31 = tmp & 0xFF83FFFF;
./tools/qemu-xen-traditional/gdbstub.c:            SET_FP_ENABLE(env->active_fpu.fcr31, 0);
./tools/qemu-xen-traditional/gdbstub.c:        case 71: env->active_fpu.fcr0 = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:    case 32: env->CP0_Status = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:    case 33: env->active_tc.LO[0] = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:    case 34: env->active_tc.HI[0] = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:    case 35: env->CP0_BadVAddr = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:    case 36: env->CP0_Cause = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:    case 37: env->active_tc.PC = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:        if ((env->sr & (SR_MD | SR_RB)) == (SR_MD | SR_RB)) {
./tools/qemu-xen-traditional/gdbstub.c:            GET_REGL(env->gregs[n + 16]);
./tools/qemu-xen-traditional/gdbstub.c:            GET_REGL(env->gregs[n]);
./tools/qemu-xen-traditional/gdbstub.c:        GET_REGL(env->gregs[n - 8]);
./tools/qemu-xen-traditional/gdbstub.c:	GET_REGL(env->fregs[(n - 25) + ((env->fpscr & FPSCR_FR) ? 16 : 0)]);
./tools/qemu-xen-traditional/gdbstub.c:	GET_REGL(env->gregs[n - 43]);
./tools/qemu-xen-traditional/gdbstub.c:	GET_REGL(env->gregs[n - (51 - 16)]);
./tools/qemu-xen-traditional/gdbstub.c:    case 16: GET_REGL(env->pc);
./tools/qemu-xen-traditional/gdbstub.c:    case 17: GET_REGL(env->pr);
./tools/qemu-xen-traditional/gdbstub.c:    case 18: GET_REGL(env->gbr);
./tools/qemu-xen-traditional/gdbstub.c:    case 19: GET_REGL(env->vbr);
./tools/qemu-xen-traditional/gdbstub.c:    case 20: GET_REGL(env->mach);
./tools/qemu-xen-traditional/gdbstub.c:    case 21: GET_REGL(env->macl);
./tools/qemu-xen-traditional/gdbstub.c:    case 22: GET_REGL(env->sr);
./tools/qemu-xen-traditional/gdbstub.c:    case 23: GET_REGL(env->fpul);
./tools/qemu-xen-traditional/gdbstub.c:    case 24: GET_REGL(env->fpscr);
./tools/qemu-xen-traditional/gdbstub.c:    case 41: GET_REGL(env->ssr);
./tools/qemu-xen-traditional/gdbstub.c:    case 42: GET_REGL(env->spc);
./tools/qemu-xen-traditional/gdbstub.c:        if ((env->sr & (SR_MD | SR_RB)) == (SR_MD | SR_RB)) {
./tools/qemu-xen-traditional/gdbstub.c:            env->gregs[n + 16] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:            env->gregs[n] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        env->gregs[n - 8] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:	env->fregs[(n - 25) + ((env->fpscr & FPSCR_FR) ? 16 : 0)] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:	env->gregs[n - 43] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:	env->gregs[n - (51 - 16)] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 16: env->pc = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 17: env->pr = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 18: env->gbr = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 19: env->vbr = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 20: env->mach = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 21: env->macl = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 22: env->sr = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 23: env->fpul = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 24: env->fpscr = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 41: env->ssr = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 42: env->spc = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    srs = env->pregs[PR_SRS];
./tools/qemu-xen-traditional/gdbstub.c:	GET_REG32(env->regs[n]);
./tools/qemu-xen-traditional/gdbstub.c:	GET_REG32(env->pregs[n - 16]);
./tools/qemu-xen-traditional/gdbstub.c:	GET_REG32(env->sregs[srs][n - 33]);
./tools/qemu-xen-traditional/gdbstub.c:    case 16: GET_REG8(env->pregs[0]);
./tools/qemu-xen-traditional/gdbstub.c:    case 17: GET_REG8(env->pregs[1]);
./tools/qemu-xen-traditional/gdbstub.c:    case 18: GET_REG32(env->pregs[2]);
./tools/qemu-xen-traditional/gdbstub.c:    case 20: GET_REG16(env->pregs[4]);
./tools/qemu-xen-traditional/gdbstub.c:    case 32: GET_REG32(env->pc);
./tools/qemu-xen-traditional/gdbstub.c:	env->regs[n] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:	env->pregs[n - 16] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:    case 18: env->pregs[PR_PID] = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:    case 32: env->pc = tmp; break;
./tools/qemu-xen-traditional/gdbstub.c:       GET_REGL(env->ir[n]);
./tools/qemu-xen-traditional/gdbstub.c:       val=*((uint64_t *)&env->fir[n-32]);
./tools/qemu-xen-traditional/gdbstub.c:       GET_REGL(env->fpcr);
./tools/qemu-xen-traditional/gdbstub.c:       GET_REGL(env->pc);
./tools/qemu-xen-traditional/gdbstub.c:        env->ir[n] = tmp;
./tools/qemu-xen-traditional/gdbstub.c:        env->fir[n - 32] = ldfl_p(mem_buf);
./tools/qemu-xen-traditional/gdbstub.c:       env->pc=tmp;
./tools/qemu-xen-traditional/gdbstub.c:    for (r = env->gdb_regs; r; r = r->next) {
./tools/qemu-xen-traditional/gdbstub.c:    for (r = env->gdb_regs; r; r = r->next) {
./tools/qemu-xen-traditional/gdbstub.c:    p = &env->gdb_regs;
./tools/qemu-xen-traditional/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/gdbstub.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu)
./tools/qemu-xen-traditional/gdbstub.c:            if (env->cpu_index + 1 == thread)
./tools/qemu-xen-traditional/gdbstub.c:            for (env = first_cpu; env != NULL; env = env->next_cpu)
./tools/qemu-xen-traditional/gdbstub.c:                if (env->cpu_index + 1 == thread) {
./tools/qemu-xen-traditional/gdbstub.c:                                   "CPU#%d [%s]", env->cpu_index,
./tools/qemu-xen-traditional/gdbstub.c:                                   env->halted ? "halted " : "running");
./tools/qemu-xen-traditional/gdbstub.c:        if (env->watchpoint_hit) {
./tools/qemu-xen-traditional/gdbstub.c:            switch (env->watchpoint_hit->flags & BP_MEM_ACCESS) {
./tools/qemu-xen-traditional/gdbstub.c:                     GDB_SIGNAL_TRAP, env->cpu_index+1, type,
./tools/qemu-xen-traditional/gdbstub.c:                     env->watchpoint_hit->vaddr);
./tools/qemu-xen-traditional/gdbstub.c:            env->watchpoint_hit = NULL;
./tools/qemu-xen-traditional/gdbstub.c:    snprintf(buf, sizeof(buf), "T%02xthread:%02x;", ret, env->cpu_index+1);
./tools/qemu-xen-traditional/dma-helpers.c:        for (i = 0; i < qiov->niov; ++i) {
./tools/qemu-xen-traditional/dma-helpers.c:           flush_icache_range((unsigned long)qiov->iov[i].iov_base,
./tools/qemu-xen-traditional/dma-helpers.c:                 (unsigned long)(qiov->iov[i].iov_base + qiov->iov[i].iov_len));
./tools/qemu-xen-traditional/kvm-all.c:    ret = kvm_vm_ioctl(s, KVM_CREATE_VCPU, env->cpu_index);
./tools/qemu-xen-traditional/kvm-all.c:    env->kvm_fd = ret;
./tools/qemu-xen-traditional/kvm-all.c:    env->kvm_state = s;
./tools/qemu-xen-traditional/kvm-all.c:    env->kvm_run = mmap(NULL, mmap_size, PROT_READ | PROT_WRITE, MAP_SHARED,
./tools/qemu-xen-traditional/kvm-all.c:                        env->kvm_fd, 0);
./tools/qemu-xen-traditional/kvm-all.c:    if (env->kvm_run == MAP_FAILED) {
./tools/qemu-xen-traditional/kvm-all.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/kvm-all.c:    struct kvm_run *run = env->kvm_run;
./tools/qemu-xen-traditional/kvm-all.c:        if (env->exit_request) {
./tools/qemu-xen-traditional/kvm-all.c:    if (env->exit_request) {
./tools/qemu-xen-traditional/kvm-all.c:        env->exit_request = 0;
./tools/qemu-xen-traditional/kvm-all.c:        env->exception_index = EXCP_INTERRUPT;
./tools/qemu-xen-traditional/kvm-all.c:    ret = ioctl(env->kvm_fd, type, arg);
./tools/qemu-xen-traditional/bsd-user/main.c:    index = (index + cwp * 16) % (16 * env->nwindows);
./tools/qemu-xen-traditional/bsd-user/main.c:    if (index < 8 && env->cwp == env->nwindows - 1)
./tools/qemu-xen-traditional/bsd-user/main.c:        index += 16 * env->nwindows;
./tools/qemu-xen-traditional/bsd-user/main.c:    sp_ptr = env->regbase[get_reg_index(env, cwp1, 6)];
./tools/qemu-xen-traditional/bsd-user/main.c:        put_user_ual(env->regbase[get_reg_index(env, cwp1, 8 + i)], sp_ptr);
./tools/qemu-xen-traditional/bsd-user/main.c:    new_wim = ((env->wim >> 1) | (env->wim << (env->nwindows - 1))) &
./tools/qemu-xen-traditional/bsd-user/main.c:        ((1LL << env->nwindows) - 1);
./tools/qemu-xen-traditional/bsd-user/main.c:    save_window_offset(env, cpu_cwp_dec(env, env->cwp - 2));
./tools/qemu-xen-traditional/bsd-user/main.c:    env->wim = new_wim;
./tools/qemu-xen-traditional/bsd-user/main.c:    save_window_offset(env, cpu_cwp_dec(env, env->cwp - 2));
./tools/qemu-xen-traditional/bsd-user/main.c:    env->cansave++;
./tools/qemu-xen-traditional/bsd-user/main.c:    env->canrestore--;
./tools/qemu-xen-traditional/bsd-user/main.c:    new_wim = ((env->wim << 1) | (env->wim >> (env->nwindows - 1))) &
./tools/qemu-xen-traditional/bsd-user/main.c:        ((1LL << env->nwindows) - 1);
./tools/qemu-xen-traditional/bsd-user/main.c:    cwp1 = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen-traditional/bsd-user/main.c:    sp_ptr = env->regbase[get_reg_index(env, cwp1, 6)];
./tools/qemu-xen-traditional/bsd-user/main.c:        get_user_ual(env->regbase[get_reg_index(env, cwp1, 8 + i)], sp_ptr);
./tools/qemu-xen-traditional/bsd-user/main.c:    env->canrestore++;
./tools/qemu-xen-traditional/bsd-user/main.c:    if (env->cleanwin < env->nwindows - 1)
./tools/qemu-xen-traditional/bsd-user/main.c:        env->cleanwin++;
./tools/qemu-xen-traditional/bsd-user/main.c:    env->cansave--;
./tools/qemu-xen-traditional/bsd-user/main.c:    env->wim = new_wim;
./tools/qemu-xen-traditional/bsd-user/main.c:        cwp1 = cpu_cwp_inc(env, env->cwp + offset);
./tools/qemu-xen-traditional/bsd-user/main.c:        if (env->wim & (1 << cwp1))
./tools/qemu-xen-traditional/bsd-user/main.c:        if (env->canrestore == 0)
./tools/qemu-xen-traditional/bsd-user/main.c:        env->cansave++;
./tools/qemu-xen-traditional/bsd-user/main.c:        env->canrestore--;
./tools/qemu-xen-traditional/bsd-user/main.c:    cwp1 = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen-traditional/bsd-user/main.c:    env->wim = 1 << cwp1;
./tools/qemu-xen-traditional/bsd-user/main.c:            syscall_nr = env->gregs[1];
./tools/qemu-xen-traditional/bsd-user/main.c:                                         env->regwptr[0], env->regwptr[1],
./tools/qemu-xen-traditional/bsd-user/main.c:                                         env->regwptr[2], env->regwptr[3],
./tools/qemu-xen-traditional/bsd-user/main.c:                                         env->regwptr[4], env->regwptr[5]);
./tools/qemu-xen-traditional/bsd-user/main.c:                                        env->regwptr[0], env->regwptr[1],
./tools/qemu-xen-traditional/bsd-user/main.c:                                        env->regwptr[2], env->regwptr[3],
./tools/qemu-xen-traditional/bsd-user/main.c:                                        env->regwptr[4], env->regwptr[5]);
./tools/qemu-xen-traditional/bsd-user/main.c:                                         env->regwptr[0], env->regwptr[1],
./tools/qemu-xen-traditional/bsd-user/main.c:                                         env->regwptr[2], env->regwptr[3],
./tools/qemu-xen-traditional/bsd-user/main.c:                                         env->regwptr[4], env->regwptr[5]);
./tools/qemu-xen-traditional/bsd-user/main.c:                env->xcc |= PSR_CARRY;
./tools/qemu-xen-traditional/bsd-user/main.c:                env->psr |= PSR_CARRY;
./tools/qemu-xen-traditional/bsd-user/main.c:                env->xcc &= ~PSR_CARRY;
./tools/qemu-xen-traditional/bsd-user/main.c:                env->psr &= ~PSR_CARRY;
./tools/qemu-xen-traditional/bsd-user/main.c:            env->regwptr[0] = ret;
./tools/qemu-xen-traditional/bsd-user/main.c:                env->gregs[1] & TARGET_OPENBSD_SYSCALL_G2RFLAG) {
./tools/qemu-xen-traditional/bsd-user/main.c:                env->pc = env->gregs[2];
./tools/qemu-xen-traditional/bsd-user/main.c:                env->npc = env->pc + 4;
./tools/qemu-xen-traditional/bsd-user/main.c:                       env->gregs[1] & TARGET_OPENBSD_SYSCALL_G7RFLAG) {
./tools/qemu-xen-traditional/bsd-user/main.c:                env->pc = env->gregs[7];
./tools/qemu-xen-traditional/bsd-user/main.c:                env->npc = env->pc + 4;
./tools/qemu-xen-traditional/bsd-user/main.c:                env->pc = env->npc;
./tools/qemu-xen-traditional/bsd-user/main.c:                env->npc = env->npc + 4;
./tools/qemu-xen-traditional/bsd-user/main.c:            env->pc = env->npc;
./tools/qemu-xen-traditional/bsd-user/main.c:            env->npc = env->npc + 4;
./tools/qemu-xen-traditional/bsd-user/main.c:            env->pc = env->npc;
./tools/qemu-xen-traditional/bsd-user/main.c:            env->npc = env->npc + 4;
./tools/qemu-xen-traditional/bsd-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen-traditional/bsd-user/main.c:                info._sifields._sigfault._addr = env->mmuregs[4];
./tools/qemu-xen-traditional/bsd-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen-traditional/bsd-user/main.c:                    info._sifields._sigfault._addr = env->dmmuregs[4];
./tools/qemu-xen-traditional/bsd-user/main.c:                    info._sifields._sigfault._addr = env->tsptr->tpc;
./tools/qemu-xen-traditional/bsd-user/main.c:    env->opaque = ts;
./tools/qemu-xen-traditional/bsd-user/main.c:        env->pc = regs->pc;
./tools/qemu-xen-traditional/bsd-user/main.c:        env->npc = regs->npc;
./tools/qemu-xen-traditional/bsd-user/main.c:        env->y = regs->y;
./tools/qemu-xen-traditional/bsd-user/main.c:            env->gregs[i] = regs->u_regs[i];
./tools/qemu-xen-traditional/bsd-user/main.c:            env->regwptr[i] = regs->u_regs[i + 8];
./tools/qemu-xen-traditional/bsd-user/elfload.c:    int family = (thread_env->cpuid_version >> 8) & 0xff;
./tools/qemu-xen-traditional/bsd-user/elfload.c:  return thread_env->cpuid_features;
./tools/qemu-xen-traditional/target-alpha/translate.c:    ctx.amask = env->amask;
./tools/qemu-xen-traditional/target-alpha/translate.c:    ctx.mem_idx = ((env->ps >> 3) & 3);
./tools/qemu-xen-traditional/target-alpha/translate.c:    ctx.pal_mode = env->ipr[IPR_EXC_ADDR] & 1;
./tools/qemu-xen-traditional/target-alpha/translate.c:        if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-alpha/translate.c:            TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-alpha/translate.c:        if (env->singlestep_enabled) {
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->implver = IMPLVER_2106x;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ps = 0x1F00;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ps |= 1 << 3;
./tools/qemu-xen-traditional/target-alpha/translate.c:    hwpcb = env->ipr[IPR_PCBB];
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_ASN] = 0;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_ASTEN] = 0;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_ASTSR] = 0;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_DATFX] = 0;
./tools/qemu-xen-traditional/target-alpha/translate.c:    //    env->ipr[IPR_ESP] = ldq_raw(hwpcb + 8);
./tools/qemu-xen-traditional/target-alpha/translate.c:    //    env->ipr[IPR_KSP] = ldq_raw(hwpcb + 0);
./tools/qemu-xen-traditional/target-alpha/translate.c:    //    env->ipr[IPR_SSP] = ldq_raw(hwpcb + 16);
./tools/qemu-xen-traditional/target-alpha/translate.c:    //    env->ipr[IPR_USP] = ldq_raw(hwpcb + 24);
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_FEN] = 0;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_IPL] = 31;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_MCES] = 0;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_PERFMON] = 0; /* Implementation specific */
./tools/qemu-xen-traditional/target-alpha/translate.c:    //    env->ipr[IPR_PTBR] = ldq_raw(hwpcb + 32);
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_SISR] = 0;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->ipr[IPR_VIRBND] = -1ULL;
./tools/qemu-xen-traditional/target-alpha/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->exception_index = excp;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->error_code = error;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    switch (env->implver) {
./tools/qemu-xen-traditional/target-alpha/op_helper.c:        arg &= ~env->amask;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    return env->implver;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    ret |= env->fp_status.float_exception_flags << 52;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    if (env->fp_status.float_exception_flags)
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->ipr[IPR_EXC_SUM] &= ~0x3E:
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->ipr[IPR_EXC_SUM] |= env->fp_status.float_exception_flags << 1;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    switch (env->fp_status.float_rounding_mode) {
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    tmp = env->intr_flag;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->intr_flag = 1;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    tmp = env->intr_flag;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->intr_flag = 0;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->pc = env->ipr[IPR_EXC_ADDR] & ~3;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->ipr[IPR_EXC_ADDR] = env->ipr[IPR_EXC_ADDR] & 1;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->pc = a & ~3;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->ipr[IPR_EXC_ADDR] = a & 1;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->saved_mode = env->ps & 0xC;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->ps = (env->ps & ~0xC) | (env->ipr[IPR_ALT_MODE] & 0xC);
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->ps = (env->ps & ~0xC) | env->saved_mode;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    tlb_addr = env->tlb_table[mmu_idx][index].addr_read;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:        physaddr = virtaddr + env->tlb_table[mmu_idx][index].addend;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    tlb_addr = env->tlb_table[mmu_idx][index].addr_write;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:        physaddr = virtaddr + env->tlb_table[mmu_idx][index].addend;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->lock = t1;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->lock = t1;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    if (t1 == env->lock) {
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->lock = 1;
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    if (t1 == env->lock) {
./tools/qemu-xen-traditional/target-alpha/op_helper.c:    env->lock = 1;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->exception_index = EXCP_ITB_MISS;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->exception_index = EXCP_DFAULT;
./tools/qemu-xen-traditional/target-alpha/helper.c:    env->ipr[IPR_EXC_ADDR] = address;
./tools/qemu-xen-traditional/target-alpha/helper.c:    env->exception_index = -1;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->exception_index = EXCP_ITB_MISS;
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->ipr[IPR_EXC_ADDR] & 1)
./tools/qemu-xen-traditional/target-alpha/helper.c:            env->exception_index = EXCP_DTB_MISS_PAL;
./tools/qemu-xen-traditional/target-alpha/helper.c:            env->exception_index = EXCP_DTB_MISS_NATIVE;
./tools/qemu-xen-traditional/target-alpha/helper.c:        opc = (ldl_code(env->pc) >> 21) << 4;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_MM_STAT] = opc;
./tools/qemu-xen-traditional/target-alpha/helper.c:    hwpcb = env->ipr[IPR_PCBB];
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_ASN)
./tools/qemu-xen-traditional/target-alpha/helper.c:            *valp = env->ipr[IPR_ASN];
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = ((int64_t)(env->ipr[IPR_ASTEN] << 60)) >> 60;
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = ((int64_t)(env->ipr[IPR_ASTSR] << 60)) >> 60;
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_SPS)
./tools/qemu-xen-traditional/target-alpha/helper.c:            *valp = env->ipr[IPR_ESP];
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = ((int64_t)(env->ipr[IPR_FEN] << 63)) >> 63;
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = ((int64_t)(env->ipr[IPR_IPL] << 59)) >> 59;
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (!(env->ipr[IPR_EXC_ADDR] & 1)) {
./tools/qemu-xen-traditional/target-alpha/helper.c:            if (env->features & FEATURE_SPS)
./tools/qemu-xen-traditional/target-alpha/helper.c:                *valp = env->ipr[IPR_KSP];
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = ((int64_t)(env->ipr[IPR_MCES] << 59)) >> 59;
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = ((int64_t)env->ipr[IPR_PCBB] << 16) >> 16;
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = env->ipr[IPR_PRBR];
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = env->ipr[IPR_PTBR];
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = (int64_t)((int32_t)env->ipr[IPR_SCBB]);
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = (int64_t)((int16_t)env->ipr[IPR_SISR]);
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_SPS)
./tools/qemu-xen-traditional/target-alpha/helper.c:            *valp = env->ipr[IPR_SSP];
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_VIRBND)
./tools/qemu-xen-traditional/target-alpha/helper.c:            *valp = env->ipr[IPR_SYSPTBR];
./tools/qemu-xen-traditional/target-alpha/helper.c:        if ((env->features & FEATURE_TBCHK)) {
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_SPS)
./tools/qemu-xen-traditional/target-alpha/helper.c:            *valp = env->ipr[IPR_USP];
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_VIRBND)
./tools/qemu-xen-traditional/target-alpha/helper.c:            *valp = env->ipr[IPR_VIRBND];
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = env->ipr[IPR_VPTB];
./tools/qemu-xen-traditional/target-alpha/helper.c:        *valp = env->ipr[IPR_WHAMI];
./tools/qemu-xen-traditional/target-alpha/helper.c:    hwpcb = env->ipr[IPR_PCBB];
./tools/qemu-xen-traditional/target-alpha/helper.c:        tmp8 = ((int8_t)(env->ipr[IPR_ASTEN] << 4)) >> 4;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_ASTEN] &= ~0xF;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_ASTEN] |= tmp8;
./tools/qemu-xen-traditional/target-alpha/helper.c:        tmp8 = ((int8_t)(env->ipr[IPR_ASTSR] << 4)) >> 4;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_ASTSR] &= ~0xF;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_ASTSR] |= tmp8;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_DATFX] &= ~0x1;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_DATFX] |= val & 1;
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_SPS)
./tools/qemu-xen-traditional/target-alpha/helper.c:            env->ipr[IPR_ESP] = val;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_FEN] = val & 1;
./tools/qemu-xen-traditional/target-alpha/helper.c:        *oldvalp = ((int64_t)(env->ipr[IPR_IPL] << 59)) >> 59;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_IPL] &= ~0x1F;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_IPL] |= val & 0x1F;
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (!(env->ipr[IPR_EXC_ADDR] & 1)) {
./tools/qemu-xen-traditional/target-alpha/helper.c:            if (env->features & FEATURE_SPS)
./tools/qemu-xen-traditional/target-alpha/helper.c:                env->ipr[IPR_KSP] = val;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_MCES] &= ~((val & 0x7) | 0x18);
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_MCES] |= val & 0x18;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_PRBR] = val;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_SCBB] = (uint32_t)val;
./tools/qemu-xen-traditional/target-alpha/helper.c:            env->ipr[IPR_SISR] |= 1 << (val & 0xF);
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_SPS)
./tools/qemu-xen-traditional/target-alpha/helper.c:            env->ipr[IPR_SSP] = val;
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_VIRBND)
./tools/qemu-xen-traditional/target-alpha/helper.c:            env->ipr[IPR_SYSPTBR] = val;
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_SPS)
./tools/qemu-xen-traditional/target-alpha/helper.c:            env->ipr[IPR_USP] = val;
./tools/qemu-xen-traditional/target-alpha/helper.c:        if (env->features & FEATURE_VIRBND)
./tools/qemu-xen-traditional/target-alpha/helper.c:            env->ipr[IPR_VIRBND] = val;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_VPTB] = val;
./tools/qemu-xen-traditional/target-alpha/helper.c:    env->ipr[IPR_EXC_ADDR] = env->pc | 1;
./tools/qemu-xen-traditional/target-alpha/helper.c:    excp = env->exception_index;
./tools/qemu-xen-traditional/target-alpha/helper.c:    env->exception_index = 0;
./tools/qemu-xen-traditional/target-alpha/helper.c:    env->error_code = 0;
./tools/qemu-xen-traditional/target-alpha/helper.c:    if (env->ipr[IPR_PAL_BASE] != -1ULL) {
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->pc = env->ipr[IPR_PAL_BASE] + excp;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->pc = env->ipr[IPR_EXC_ADDR] & ~7;
./tools/qemu-xen-traditional/target-alpha/helper.c:        env->ipr[IPR_EXC_ADDR] = env->ipr[IPR_EXC_ADDR] & 1;
./tools/qemu-xen-traditional/target-alpha/helper.c:                env->pc, env->ps);
./tools/qemu-xen-traditional/target-alpha/helper.c:                    linux_reg_names[i], env->ir[i]);
./tools/qemu-xen-traditional/target-alpha/helper.c:                    *((uint64_t *)(&env->fir[i])));
./tools/qemu-xen-traditional/target-alpha/helper.c:    cpu_fprintf(f, "\nlock     " TARGET_FMT_lx "\n", env->lock);
./tools/qemu-xen-traditional/target-sh4/translate.c:		env->pc, env->sr, env->pr, env->fpscr);
./tools/qemu-xen-traditional/target-sh4/translate.c:		env->spc, env->ssr, env->gbr, env->vbr);
./tools/qemu-xen-traditional/target-sh4/translate.c:		env->sgr, env->dbr, env->delayed_pc, env->fpul);
./tools/qemu-xen-traditional/target-sh4/translate.c:		    i, env->gregs[i], i + 1, env->gregs[i + 1],
./tools/qemu-xen-traditional/target-sh4/translate.c:		    i + 2, env->gregs[i + 2], i + 3, env->gregs[i + 3]);
./tools/qemu-xen-traditional/target-sh4/translate.c:    if (env->flags & DELAY_SLOT) {
./tools/qemu-xen-traditional/target-sh4/translate.c:		    env->delayed_pc);
./tools/qemu-xen-traditional/target-sh4/translate.c:    } else if (env->flags & DELAY_SLOT_CONDITIONAL) {
./tools/qemu-xen-traditional/target-sh4/translate.c:		    env->delayed_pc);
./tools/qemu-xen-traditional/target-sh4/translate.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->sr = 0;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->sr = SR_MD | SR_RB | SR_BL | SR_I3 | SR_I2 | SR_I1 | SR_I0;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->vbr = 0;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->pc = 0xA0000000;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->fpscr = FPSCR_PR; /* value for userspace according to the kernel */
./tools/qemu-xen-traditional/target-sh4/translate.c:    set_float_rounding_mode(float_round_nearest_even, &env->fp_status); /* ?! */
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->fpscr = 0x00040001; /* CPU reset value according to SH4 manual */
./tools/qemu-xen-traditional/target-sh4/translate.c:    set_float_rounding_mode(float_round_to_zero, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->mmucr = 0;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->pvr = def->pvr;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->prr = def->prr;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->cvr = def->cvr;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->id = def->id;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->features = def->features;
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen-traditional/target-sh4/translate.c:    ctx.sr = env->sr;
./tools/qemu-xen-traditional/target-sh4/translate.c:    ctx.fpscr = env->fpscr;
./tools/qemu-xen-traditional/target-sh4/translate.c:    ctx.memidx = (env->sr & SR_MD) ? 1 : 0;
./tools/qemu-xen-traditional/target-sh4/translate.c:    ctx.singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen-traditional/target-sh4/translate.c:    ctx.features = env->features;
./tools/qemu-xen-traditional/target-sh4/translate.c:        if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-sh4/translate.c:            TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-sh4/translate.c:	if (env->singlestep_enabled)
./tools/qemu-xen-traditional/target-sh4/translate.c:    if (env->singlestep_enabled) {
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen-traditional/target-sh4/translate.c:    env->flags = gen_opc_hflags[pc_pos];
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->exception_index = 0x180;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->exception_index = 0x1a0;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:  env->exception_index = 0x800;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:  env->exception_index = 0x820;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->exception_index = EXCP_DEBUG;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->halted = 1;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->exception_index = EXCP_HLT;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->pc = next_pc;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->tra = tra << 2;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->exception_index = 0x160;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    arg1 = tmp1 + (env->sr & 1);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->sr &= ~SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define T (env->sr & SR_T)
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define Q (env->sr & SR_Q ? 1 : 0)
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define M (env->sr & SR_M ? 1 : 0)
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define SETT env->sr |= SR_T
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define CLRT env->sr &= ~SR_T
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define SETQ env->sr |= SR_Q
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define CLRQ env->sr &= ~SR_Q
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define SETM env->sr |= SR_M
./tools/qemu-xen-traditional/target-sh4/op_helper.c:#define CLRM env->sr &= ~SR_M
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    res = ((uint64_t) env->mach << 32) | env->macl;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->mach = (res >> 32) & 0xffffffff;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->macl = res & 0xffffffff;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    if (env->sr & SR_S) {
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->mach |= 0xffff0000;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->mach &= 0x00007fff;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    res = ((uint64_t) env->mach << 32) | env->macl;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->mach = (res >> 32) & 0xffffffff;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->macl = res & 0xffffffff;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    if (env->sr & SR_S) {
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->mach = 1;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->macl = 0x80000000;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->mach = 1;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->macl = 0x7fffffff;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    arg = temp - (env->sr & SR_T);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    arg1 = tmp1 - (env->sr & SR_T);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	    env->sr &= ~SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->sr |= SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->sr &= ~SR_T;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    env->fpscr = val & 0x003fffff;
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	set_float_rounding_mode(float_round_to_zero, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:	set_float_rounding_mode(float_round_nearest_even, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f0.f = float32_add(f0.f, f1.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    d0.d = float64_add(d0.d, d1.d, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    if (float32_compare(f0.f, f1.f, &env->fp_status) == 0)
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    if (float64_compare(d0.d, d1.d, &env->fp_status) == 0)
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    if (float32_compare(f0.f, f1.f, &env->fp_status) == 1)
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    if (float64_compare(d0.d, d1.d, &env->fp_status) == 1)
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    d.d = float32_to_float64(f.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f.f = float64_to_float32(d.d, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f0.f = float32_div(f0.f, f1.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    d0.d = float64_div(d0.d, d1.d, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f.f = int32_to_float32(t0, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    d.d = int32_to_float64(t0, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f0.f = float32_mul(f0.f, f1.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f0.f = float32_add(f0.f, f2.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f0.f = float32_mul(f0.f, f1.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    d0.d = float64_mul(d0.d, d1.d, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f.f = float32_sqrt(f.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    d.d = float64_sqrt(d.d, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    f0.f = float32_sub(f0.f, f1.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    d0.d = float64_sub(d0.d, d1.d, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    return float32_to_int32_round_to_zero(f.f, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/op_helper.c:    return float64_to_int32_round_to_zero(d.d, &env->fp_status);
./tools/qemu-xen-traditional/target-sh4/helper.c:  env->exception_index = -1;
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->tea = address;
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->exception_index = 0;
./tools/qemu-xen-traditional/target-sh4/helper.c:        env->exception_index = 0x0a0;
./tools/qemu-xen-traditional/target-sh4/helper.c:        env->exception_index = 0x0c0;
./tools/qemu-xen-traditional/target-sh4/helper.c:        env->exception_index = 0x0a0;
./tools/qemu-xen-traditional/target-sh4/helper.c:    int do_irq = env->interrupt_request & CPU_INTERRUPT_HARD;
./tools/qemu-xen-traditional/target-sh4/helper.c:    int do_exp, irq_vector = env->exception_index;
./tools/qemu-xen-traditional/target-sh4/helper.c:    do_exp = env->exception_index != -1;
./tools/qemu-xen-traditional/target-sh4/helper.c:    do_irq = do_irq && (env->exception_index == -1);
./tools/qemu-xen-traditional/target-sh4/helper.c:    if (env->sr & SR_BL) {
./tools/qemu-xen-traditional/target-sh4/helper.c:        if (do_exp && env->exception_index != 0x1e0) {
./tools/qemu-xen-traditional/target-sh4/helper.c:            env->exception_index = 0x000; /* masked exception -> reset */
./tools/qemu-xen-traditional/target-sh4/helper.c:        if (do_irq && !env->intr_at_halt) {
./tools/qemu-xen-traditional/target-sh4/helper.c:        env->intr_at_halt = 0;
./tools/qemu-xen-traditional/target-sh4/helper.c:        irq_vector = sh_intc_get_pending_vector(env->intc_handle,
./tools/qemu-xen-traditional/target-sh4/helper.c:						(env->sr >> 4) & 0xf);
./tools/qemu-xen-traditional/target-sh4/helper.c:	switch (env->exception_index) {
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->ssr = env->sr;
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->spc = env->pc;
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->sgr = env->gregs[15];
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->sr |= SR_BL | SR_MD | SR_RB;
./tools/qemu-xen-traditional/target-sh4/helper.c:    if (env->flags & (DELAY_SLOT | DELAY_SLOT_CONDITIONAL)) {
./tools/qemu-xen-traditional/target-sh4/helper.c:	env->spc -= 2;
./tools/qemu-xen-traditional/target-sh4/helper.c:	env->flags &= ~(DELAY_SLOT | DELAY_SLOT_CONDITIONAL | DELAY_SLOT_TRUE);
./tools/qemu-xen-traditional/target-sh4/helper.c:    if (env->flags & DELAY_SLOT_CLEARME)
./tools/qemu-xen-traditional/target-sh4/helper.c:        env->flags = 0;
./tools/qemu-xen-traditional/target-sh4/helper.c:        env->expevt = env->exception_index;
./tools/qemu-xen-traditional/target-sh4/helper.c:        switch (env->exception_index) {
./tools/qemu-xen-traditional/target-sh4/helper.c:            env->sr &= ~SR_FD;
./tools/qemu-xen-traditional/target-sh4/helper.c:            env->sr |= 0xf << 4; /* IMASK */
./tools/qemu-xen-traditional/target-sh4/helper.c:            env->pc = 0xa0000000;
./tools/qemu-xen-traditional/target-sh4/helper.c:            env->pc = env->vbr + 0x400;
./tools/qemu-xen-traditional/target-sh4/helper.c:            env->spc += 2; /* special case for TRAPA */
./tools/qemu-xen-traditional/target-sh4/helper.c:            env->pc = env->vbr + 0x100;
./tools/qemu-xen-traditional/target-sh4/helper.c:        env->intevt = irq_vector;
./tools/qemu-xen-traditional/target-sh4/helper.c:        env->pc = env->vbr + 0x600;
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->mmucr &= (and_mask << 24) | 0x00ffffff;
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->mmucr |= (or_mask << 24);
./tools/qemu-xen-traditional/target-sh4/helper.c:    if ((env->mmucr & 0xe0000000) == 0xe0000000)
./tools/qemu-xen-traditional/target-sh4/helper.c:    if ((env->mmucr & 0x98000000) == 0x18000000)
./tools/qemu-xen-traditional/target-sh4/helper.c:    if ((env->mmucr & 0x54000000) == 0x04000000)
./tools/qemu-xen-traditional/target-sh4/helper.c:    if ((env->mmucr & 0x2c000000) == 0x00000000)
./tools/qemu-xen-traditional/target-sh4/helper.c:    asid = env->pteh & 0xff;
./tools/qemu-xen-traditional/target-sh4/helper.c:    urb = ((env->mmucr) >> 18) & 0x3f;
./tools/qemu-xen-traditional/target-sh4/helper.c:    urc = ((env->mmucr) >> 10) & 0x3f;
./tools/qemu-xen-traditional/target-sh4/helper.c:    env->mmucr = (env->mmucr & 0xffff03ff) | (urc << 10);
./tools/qemu-xen-traditional/target-sh4/helper.c:    e = find_tlb_entry(env, address, env->itlb, ITLB_SIZE, use_asid);
./tools/qemu-xen-traditional/target-sh4/helper.c:	e = find_tlb_entry(env, address, env->utlb, UTLB_SIZE, use_asid);
./tools/qemu-xen-traditional/target-sh4/helper.c:	    ientry = &env->itlb[n];
./tools/qemu-xen-traditional/target-sh4/helper.c:		if (!same_tlb_entry_exists(env->utlb, UTLB_SIZE, ientry))
./tools/qemu-xen-traditional/target-sh4/helper.c:	    *ientry = env->utlb[e];
./tools/qemu-xen-traditional/target-sh4/helper.c:    return find_tlb_entry(env, address, env->utlb, UTLB_SIZE, use_asid);
./tools/qemu-xen-traditional/target-sh4/helper.c:    use_asid = (env->mmucr & MMUCR_SV) == 0 || (env->sr & SR_MD) == 0;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    matching = &env->itlb[n];
./tools/qemu-xen-traditional/target-sh4/helper.c:	    if ((env->sr & SR_MD) & !(matching->pr & 2))
./tools/qemu-xen-traditional/target-sh4/helper.c:	    matching = &env->utlb[n];
./tools/qemu-xen-traditional/target-sh4/helper.c:	    switch ((matching->pr << 1) | ((env->sr & SR_MD) ? 1 : 0)) {
./tools/qemu-xen-traditional/target-sh4/helper.c:	if (!(env->sr & SR_MD)
./tools/qemu-xen-traditional/target-sh4/helper.c:    if (!env->mmucr & MMUCR_AT) {
./tools/qemu-xen-traditional/target-sh4/helper.c:	env->tea = address;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x040;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x140;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x0a0;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x060;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x080;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x0a0;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x0c0;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x0c0;
./tools/qemu-xen-traditional/target-sh4/helper.c:	    env->exception_index = 0x100;
./tools/qemu-xen-traditional/target-sh4/helper.c:    int n = cpu_mmucr_urc(env->mmucr);
./tools/qemu-xen-traditional/target-sh4/helper.c:    tlb_t * entry = &env->utlb[n];
./tools/qemu-xen-traditional/target-sh4/helper.c:	if (!same_tlb_entry_exists(env->itlb, ITLB_SIZE, entry)) {
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->asid = (uint8_t)cpu_pteh_asid(env->pteh);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->vpn  = cpu_pteh_vpn(env->pteh);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->v    = (uint8_t)cpu_ptel_v(env->ptel);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->ppn  = cpu_ptel_ppn(env->ptel);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->sz   = (uint8_t)cpu_ptel_sz(env->ptel);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->sh   = (uint8_t)cpu_ptel_sh(env->ptel);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->c    = (uint8_t)cpu_ptel_c(env->ptel);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->pr   = (uint8_t)cpu_ptel_pr(env->ptel);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->d    = (uint8_t)cpu_ptel_d(env->ptel);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->wt   = (uint8_t)cpu_ptel_wt(env->ptel);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->sa   = (uint8_t)cpu_ptea_sa(env->ptea);
./tools/qemu-xen-traditional/target-sh4/helper.c:    entry->tc   = (uint8_t)cpu_ptea_tc(env->ptea);
./tools/qemu-xen-traditional/qemu-char.c:        ret = d->drv->chr_write(d->drv, buf, len);
./tools/qemu-xen-traditional/qemu-char.c:            ret += d->drv->chr_write(d->drv, buf+i, 1);
./tools/qemu-xen-traditional/qemu-char.c:                d->drv->chr_write(d->drv, (uint8_t *)buf1, strlen(buf1));
./tools/qemu-xen-traditional/qemu-char.c:    int fd = drv->fd;
./tools/qemu-xen-traditional/qemu-char.c:    int fd = drv->fd;
./tools/qemu-xen-traditional/qemu-char.c:    drv->fd = fd;
./tools/qemu-xen-traditional/qemu-char.c:    drv->mode = IEEE1284_MODE_COMPAT;
./tools/qemu-xen-traditional/cutils.c:    qiov->iov = qemu_malloc(alloc_hint * sizeof(struct iovec));
./tools/qemu-xen-traditional/cutils.c:    qiov->niov = 0;
./tools/qemu-xen-traditional/cutils.c:    qiov->nalloc = alloc_hint;
./tools/qemu-xen-traditional/cutils.c:    qiov->size = 0;
./tools/qemu-xen-traditional/cutils.c:    if (qiov->niov == qiov->nalloc) {
./tools/qemu-xen-traditional/cutils.c:        qiov->nalloc = 2 * qiov->nalloc + 1;
./tools/qemu-xen-traditional/cutils.c:        qiov->iov = qemu_realloc(qiov->iov, qiov->nalloc * sizeof(struct iovec));
./tools/qemu-xen-traditional/cutils.c:    qiov->iov[qiov->niov].iov_base = base;
./tools/qemu-xen-traditional/cutils.c:    qiov->iov[qiov->niov].iov_len = len;
./tools/qemu-xen-traditional/cutils.c:    qiov->size += len;
./tools/qemu-xen-traditional/cutils.c:    ++qiov->niov;
./tools/qemu-xen-traditional/cutils.c:    qemu_free(qiov->iov);
./tools/qemu-xen-traditional/cutils.c:    qiov->niov = 0;
./tools/qemu-xen-traditional/cutils.c:    qiov->size = 0;
./tools/qemu-xen-traditional/cutils.c:    for (i = 0; i < qiov->niov; ++i) {
./tools/qemu-xen-traditional/cutils.c:        memcpy(p, qiov->iov[i].iov_base, qiov->iov[i].iov_len);
./tools/qemu-xen-traditional/cutils.c:        p += qiov->iov[i].iov_len;
./tools/qemu-xen-traditional/cutils.c:    for (i = 0; i < qiov->niov && count; ++i) {
./tools/qemu-xen-traditional/cutils.c:        if (copy > qiov->iov[i].iov_len)
./tools/qemu-xen-traditional/cutils.c:            copy = qiov->iov[i].iov_len;
./tools/qemu-xen-traditional/cutils.c:        memcpy(qiov->iov[i].iov_base, p, copy);
./tools/qemu-xen-traditional/cutils.c:        flush_icache_range((unsigned long)qiov->iov[i].iov_base,
./tools/qemu-xen-traditional/cutils.c:                  (unsigned long)(qiov->iov[i].iov_base + copy));
./tools/qemu-xen-traditional/audio/wavcapture.c:    uint32_t datalen = wav->bytes;
./tools/qemu-xen-traditional/audio/wavcapture.c:    if (wav->f) {
./tools/qemu-xen-traditional/audio/wavcapture.c:        qemu_fseek (wav->f, 4, SEEK_SET);
./tools/qemu-xen-traditional/audio/wavcapture.c:        qemu_put_buffer (wav->f, rlen, 4);
./tools/qemu-xen-traditional/audio/wavcapture.c:        qemu_fseek (wav->f, 32, SEEK_CUR);
./tools/qemu-xen-traditional/audio/wavcapture.c:        qemu_put_buffer (wav->f, dlen, 4);
./tools/qemu-xen-traditional/audio/wavcapture.c:        qemu_fclose (wav->f);
./tools/qemu-xen-traditional/audio/wavcapture.c:    qemu_free (wav->path);
./tools/qemu-xen-traditional/audio/wavcapture.c:    qemu_put_buffer (wav->f, buf, size);
./tools/qemu-xen-traditional/audio/wavcapture.c:    wav->bytes += size;
./tools/qemu-xen-traditional/audio/wavcapture.c:    AUD_del_capture (wav->cap, wav);
./tools/qemu-xen-traditional/audio/wavcapture.c:    char *path = wav->path;
./tools/qemu-xen-traditional/audio/wavcapture.c:                 wav->freq, wav->bits, wav->nchannels,
./tools/qemu-xen-traditional/audio/wavcapture.c:                 path ? path : "<not available>", wav->bytes);
./tools/qemu-xen-traditional/audio/wavcapture.c:    wav->f = qemu_fopen (path, "wb");
./tools/qemu-xen-traditional/audio/wavcapture.c:    if (!wav->f) {
./tools/qemu-xen-traditional/audio/wavcapture.c:    wav->path = qemu_strdup (path);
./tools/qemu-xen-traditional/audio/wavcapture.c:    wav->bits = bits;
./tools/qemu-xen-traditional/audio/wavcapture.c:    wav->nchannels = nchannels;
./tools/qemu-xen-traditional/audio/wavcapture.c:    wav->freq = freq;
./tools/qemu-xen-traditional/audio/wavcapture.c:    qemu_put_buffer (wav->f, hdr, sizeof (hdr));
./tools/qemu-xen-traditional/audio/wavcapture.c:        qemu_free (wav->path);
./tools/qemu-xen-traditional/audio/wavcapture.c:        qemu_fclose (wav->f);
./tools/qemu-xen-traditional/audio/wavcapture.c:    wav->cap = cap;
./tools/qemu-xen-traditional/audio/audio.c:    if (drv->options) {
./tools/qemu-xen-traditional/audio/audio.c:        audio_process_options (drv->name, drv->options);
./tools/qemu-xen-traditional/audio/audio.c:    s->drv_opaque = drv->init ();
./tools/qemu-xen-traditional/audio/audio.c:        dolog ("Could not init `%s' audio driver\n", drv->name);
./tools/qemu-xen-traditional/audio/audio.c:        s->drv->fini (s->drv_opaque);
./tools/qemu-xen-traditional/audio/wavaudio.c:    int64_t ticks = now - wav->old_ticks;
./tools/qemu-xen-traditional/audio/wavaudio.c:    wav->old_ticks = now;
./tools/qemu-xen-traditional/audio/wavaudio.c:        dst = advance (wav->pcm_buf, rpos << hw->info.shift);
./tools/qemu-xen-traditional/audio/wavaudio.c:        qemu_put_buffer (wav->f, dst, convert_samples << hw->info.shift);
./tools/qemu-xen-traditional/audio/wavaudio.c:        wav->total_samples += convert_samples;
./tools/qemu-xen-traditional/audio/wavaudio.c:    wav->pcm_buf = audio_calloc (AUDIO_FUNC, hw->samples, 1 << hw->info.shift);
./tools/qemu-xen-traditional/audio/wavaudio.c:    if (!wav->pcm_buf) {
./tools/qemu-xen-traditional/audio/wavaudio.c:    wav->f = qemu_fopen (conf.wav_path, "wb");
./tools/qemu-xen-traditional/audio/wavaudio.c:    if (!wav->f) {
./tools/qemu-xen-traditional/audio/wavaudio.c:        qemu_free (wav->pcm_buf);
./tools/qemu-xen-traditional/audio/wavaudio.c:        wav->pcm_buf = NULL;
./tools/qemu-xen-traditional/audio/wavaudio.c:    qemu_put_buffer (wav->f, hdr, sizeof (hdr));
./tools/qemu-xen-traditional/audio/wavaudio.c:    uint32_t datalen = wav->total_samples << hw->info.shift;
./tools/qemu-xen-traditional/audio/wavaudio.c:    if (!wav->f) {
./tools/qemu-xen-traditional/audio/wavaudio.c:    qemu_fseek (wav->f, 4, SEEK_SET);
./tools/qemu-xen-traditional/audio/wavaudio.c:    qemu_put_buffer (wav->f, rlen, 4);
./tools/qemu-xen-traditional/audio/wavaudio.c:    qemu_fseek (wav->f, 32, SEEK_CUR);
./tools/qemu-xen-traditional/audio/wavaudio.c:    qemu_put_buffer (wav->f, dlen, 4);
./tools/qemu-xen-traditional/audio/wavaudio.c:    qemu_fclose (wav->f);
./tools/qemu-xen-traditional/audio/wavaudio.c:    wav->f = NULL;
./tools/qemu-xen-traditional/audio/wavaudio.c:    qemu_free (wav->pcm_buf);
./tools/qemu-xen-traditional/audio/wavaudio.c:    wav->pcm_buf = NULL;
./tools/qemu-xen-traditional/i386-dm/exec-dm.c:    env->next_cpu = NULL;
./tools/qemu-xen-traditional/i386-dm/exec-dm.c:    env->cpu_index = cpu_index;
./tools/qemu-xen-traditional/i386-dm/exec-dm.c:    env->interrupt_request |= mask;
./tools/qemu-xen-traditional/i386-dm/exec-dm.c:    env->interrupt_request &= ~mask;
./tools/qemu-xen-traditional/i386-dm/helper2.c:    if (a20_state != ((env->a20_mask >> 20) & 1)) {
./tools/qemu-xen-traditional/i386-dm/helper2.c:        env->a20_mask = 0xffefffff | (a20_state << 20);
./tools/qemu-xen-traditional/target-cris/machine.c:        qemu_put_be32(f, env->regs[i]);
./tools/qemu-xen-traditional/target-cris/machine.c:        qemu_put_be32(f, env->pregs[i]);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->pc);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->ksp);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->dslot);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->btaken);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->btarget);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->cc_op);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->cc_mask);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->cc_dest);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->cc_src);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->cc_result);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->cc_size);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->cc_x);
./tools/qemu-xen-traditional/target-cris/machine.c:            qemu_put_be32(f, env->sregs[s][i]);
./tools/qemu-xen-traditional/target-cris/machine.c:    qemu_put_be32(f, env->mmu_rand_lfsr);
./tools/qemu-xen-traditional/target-cris/machine.c:                qemu_put_be32(f, env->tlbsets[mmu][s][i].lo);
./tools/qemu-xen-traditional/target-cris/machine.c:                qemu_put_be32(f, env->tlbsets[mmu][s][i].hi);
./tools/qemu-xen-traditional/target-cris/machine.c:        env->regs[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:        env->pregs[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->pc = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->ksp = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->dslot = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->btaken = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->btarget = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->cc_op = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->cc_mask = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->cc_dest = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->cc_src = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->cc_result = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->cc_size = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->cc_x = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:            env->sregs[s][i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:    env->mmu_rand_lfsr = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:                env->tlbsets[mmu][s][i].lo = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/machine.c:                env->tlbsets[mmu][s][i].hi = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-cris/translate.c:	if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-cris/translate.c:		TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-cris/translate.c: * The TB contaning the branch insn will set up env->btarget and evaluate 
./tools/qemu-xen-traditional/target-cris/translate.c: * env->btaken. When the translation loop exits we will note that the branch 
./tools/qemu-xen-traditional/target-cris/translate.c: * sequence is broken and let env->dslot be the size of the branch insn (those
./tools/qemu-xen-traditional/target-cris/translate.c: * set). It will also expect to have env->dslot setup with the size of the 
./tools/qemu-xen-traditional/target-cris/translate.c: * delay slot so that env->pc - env->dslot point to the branch insn. This TB 
./tools/qemu-xen-traditional/target-cris/translate.c: * When exceptions occur, we check for env->dslot in do_interrupt to detect 
./tools/qemu-xen-traditional/target-cris/translate.c: * branch and set lsb). Then env->dslot gets cleared so that the exception 
./tools/qemu-xen-traditional/target-cris/translate.c:	dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen-traditional/target-cris/translate.c:			env->btarget, (unsigned)tb->flags & 7,
./tools/qemu-xen-traditional/target-cris/translate.c:			env->pregs[PR_CCS], 
./tools/qemu-xen-traditional/target-cris/translate.c:			env->pregs[PR_PID], env->pregs[PR_USP],
./tools/qemu-xen-traditional/target-cris/translate.c:			env->regs[0], env->regs[1], env->regs[2], env->regs[3],
./tools/qemu-xen-traditional/target-cris/translate.c:			env->regs[4], env->regs[5], env->regs[6], env->regs[7],
./tools/qemu-xen-traditional/target-cris/translate.c:			env->regs[8], env->regs[9],
./tools/qemu-xen-traditional/target-cris/translate.c:			env->regs[10], env->regs[11],
./tools/qemu-xen-traditional/target-cris/translate.c:			env->regs[12], env->regs[13],
./tools/qemu-xen-traditional/target-cris/translate.c:			env->regs[14], env->regs[15]);
./tools/qemu-xen-traditional/target-cris/translate.c:		if (!(tb->pc & 1) && env->singlestep_enabled)
./tools/qemu-xen-traditional/target-cris/translate.c:		/* Set env->dslot to the size of the branch insn.  */
./tools/qemu-xen-traditional/target-cris/translate.c:	if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen-traditional/target-cris/translate.c:		    env->pc, env->pregs[PR_CCS], env->btaken, env->btarget,
./tools/qemu-xen-traditional/target-cris/translate.c:		    env->cc_op,
./tools/qemu-xen-traditional/target-cris/translate.c:		    env->cc_src, env->cc_dest, env->cc_result, env->cc_mask);
./tools/qemu-xen-traditional/target-cris/translate.c:		cpu_fprintf(f, "r%2.2d=%8.8x ", i, env->regs[i]);
./tools/qemu-xen-traditional/target-cris/translate.c:		cpu_fprintf(f, "p%2.2d=%8.8x ", i, env->pregs[i]);
./tools/qemu-xen-traditional/target-cris/translate.c:	srs = env->pregs[PR_SRS];
./tools/qemu-xen-traditional/target-cris/translate.c:				    i, env->sregs[srs][i]);
./tools/qemu-xen-traditional/target-cris/translate.c:		qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen-traditional/target-cris/translate.c:	env->pregs[PR_VR] = 32;
./tools/qemu-xen-traditional/target-cris/translate.c:	env->pregs[PR_CCS] |= U_FLAG | I_FLAG;
./tools/qemu-xen-traditional/target-cris/translate.c:	env->pregs[PR_CCS] = 0;
./tools/qemu-xen-traditional/target-cris/translate.c:	env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen-traditional/target-cris/mmu.c:	env->mmu_rand_lfsr = 0xcccc;
./tools/qemu-xen-traditional/target-cris/mmu.c:		base = env->sregs[SFR_RW_MM_KBASE_LO];
./tools/qemu-xen-traditional/target-cris/mmu.c:		base = env->sregs[SFR_RW_MM_KBASE_HI];
./tools/qemu-xen-traditional/target-cris/mmu.c:			lo = env->tlbsets[mmu][set][idx].lo;
./tools/qemu-xen-traditional/target-cris/mmu.c:			hi = env->tlbsets[mmu][set][idx].hi;
./tools/qemu-xen-traditional/target-cris/mmu.c:	r_cause = env->sregs[SFR_R_MM_CAUSE];
./tools/qemu-xen-traditional/target-cris/mmu.c:	r_cfg = env->sregs[SFR_RW_MM_CFG];
./tools/qemu-xen-traditional/target-cris/mmu.c:	pid = env->pregs[PR_PID] & 0xff;
./tools/qemu-xen-traditional/target-cris/mmu.c:			lo = env->tlbsets[mmu][set][idx].lo;
./tools/qemu-xen-traditional/target-cris/mmu.c:			hi = env->tlbsets[mmu][set][idx].hi;
./tools/qemu-xen-traditional/target-cris/mmu.c:		lo = env->tlbsets[mmu][set][idx].lo;
./tools/qemu-xen-traditional/target-cris/mmu.c:		hi = env->tlbsets[mmu][set][idx].hi;
./tools/qemu-xen-traditional/target-cris/mmu.c:				  vaddr, lo, env->pc));
./tools/qemu-xen-traditional/target-cris/mmu.c:				  vaddr, lo, env->pc));
./tools/qemu-xen-traditional/target-cris/mmu.c:				 vaddr, lo, env->pc));
./tools/qemu-xen-traditional/target-cris/mmu.c:		set = env->mmu_rand_lfsr & 3;
./tools/qemu-xen-traditional/target-cris/mmu.c:		f = compute_polynom(env->mmu_rand_lfsr);
./tools/qemu-xen-traditional/target-cris/mmu.c:		env->mmu_rand_lfsr >>= 1;
./tools/qemu-xen-traditional/target-cris/mmu.c:		env->mmu_rand_lfsr |= (f << 15);
./tools/qemu-xen-traditional/target-cris/mmu.c:		env->mmu_rand_lfsr &= 0xffff;
./tools/qemu-xen-traditional/target-cris/mmu.c:		env->sregs[SFR_RW_MM_TLB_SEL] = 0;
./tools/qemu-xen-traditional/target-cris/mmu.c:		set_field(&env->sregs[SFR_RW_MM_TLB_SEL], idx, 0, 4);
./tools/qemu-xen-traditional/target-cris/mmu.c:		set_field(&env->sregs[SFR_RW_MM_TLB_SEL], set, 4, 2);
./tools/qemu-xen-traditional/target-cris/mmu.c:		env->sregs[SFR_R_MM_CAUSE] = r_cause;
./tools/qemu-xen-traditional/target-cris/mmu.c:		D(printf("refill vaddr=%x pc=%x\n", vaddr, env->pc));
./tools/qemu-xen-traditional/target-cris/mmu.c:		  __func__, rw, match, env->pc,
./tools/qemu-xen-traditional/target-cris/mmu.c:		  env->sregs[SFR_RW_MM_TLB_SEL],
./tools/qemu-xen-traditional/target-cris/mmu.c:		  env->regs[R_SP], env->pregs[PR_USP], env->ksp));
./tools/qemu-xen-traditional/target-cris/mmu.c:				lo = env->tlbsets[mmu][set][idx].lo;
./tools/qemu-xen-traditional/target-cris/mmu.c:				hi = env->tlbsets[mmu][set][idx].hi;
./tools/qemu-xen-traditional/target-cris/mmu.c:	old_srs= env->pregs[PR_SRS];
./tools/qemu-xen-traditional/target-cris/mmu.c:	env->pregs[PR_SRS] = rw == 2 ? 1 : 2;
./tools/qemu-xen-traditional/target-cris/mmu.c:	if (!cris_mmu_enabled(env->sregs[SFR_RW_GC_CFG])) {
./tools/qemu-xen-traditional/target-cris/mmu.c:	if (cris_mmu_segmented_addr(seg, env->sregs[SFR_RW_MM_CFG]))
./tools/qemu-xen-traditional/target-cris/mmu.c:	env->pregs[PR_SRS] = old_srs;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	     env->pc, env->debug1, retaddr);
./tools/qemu-xen-traditional/target-cris/op_helper.c:	env->exception_index = index;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	if (pid != (env->pregs[PR_PID] & 0xff))
./tools/qemu-xen-traditional/target-cris/op_helper.c:		cris_mmu_flush_pid(env, env->pregs[PR_PID]);
./tools/qemu-xen-traditional/target-cris/op_helper.c:	tlb_flush_page(env, env->pregs[PR_SPC]);
./tools/qemu-xen-traditional/target-cris/op_helper.c:	srs = env->pregs[PR_SRS];
./tools/qemu-xen-traditional/target-cris/op_helper.c:	env->sregs[srs][sreg] = env->regs[reg];
./tools/qemu-xen-traditional/target-cris/op_helper.c:			env->sregs[SFR_RW_MM_TLB_HI] = env->regs[reg];
./tools/qemu-xen-traditional/target-cris/op_helper.c:			env->sregs[SFR_R_MM_CAUSE] = env->regs[reg];
./tools/qemu-xen-traditional/target-cris/op_helper.c:			idx = set = env->sregs[SFR_RW_MM_TLB_SEL];
./tools/qemu-xen-traditional/target-cris/op_helper.c:			lo = env->sregs[SFR_RW_MM_TLB_LO];
./tools/qemu-xen-traditional/target-cris/op_helper.c:			hi = env->sregs[SFR_R_MM_CAUSE];
./tools/qemu-xen-traditional/target-cris/op_helper.c:			vaddr = EXTRACT_FIELD(env->tlbsets[srs-1][set][idx].hi,
./tools/qemu-xen-traditional/target-cris/op_helper.c:			tlb_v = EXTRACT_FIELD(env->tlbsets[srs-1][set][idx].lo,
./tools/qemu-xen-traditional/target-cris/op_helper.c:			env->tlbsets[srs - 1][set][idx].lo = lo;
./tools/qemu-xen-traditional/target-cris/op_helper.c:			env->tlbsets[srs - 1][set][idx].hi = hi;
./tools/qemu-xen-traditional/target-cris/op_helper.c:				  vaddr, tlb_v, env->pc);
./tools/qemu-xen-traditional/target-cris/op_helper.c:	env->pregs[PR_SRS] &= 3;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	srs = env->pregs[PR_SRS];
./tools/qemu-xen-traditional/target-cris/op_helper.c:		idx = set = env->sregs[SFR_RW_MM_TLB_SEL];
./tools/qemu-xen-traditional/target-cris/op_helper.c:		hi = env->tlbsets[srs - 1][set][idx].hi;
./tools/qemu-xen-traditional/target-cris/op_helper.c:		lo = env->tlbsets[srs - 1][set][idx].lo;
./tools/qemu-xen-traditional/target-cris/op_helper.c:		env->sregs[SFR_RW_MM_TLB_HI] = hi;
./tools/qemu-xen-traditional/target-cris/op_helper.c:		env->sregs[SFR_RW_MM_TLB_LO] = lo;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	env->regs[reg] = env->sregs[srs][sreg];
./tools/qemu-xen-traditional/target-cris/op_helper.c:	ccs = env->pregs[PR_CCS];
./tools/qemu-xen-traditional/target-cris/op_helper.c:		env->ksp = env->regs[R_SP];
./tools/qemu-xen-traditional/target-cris/op_helper.c:		env->regs[R_SP] = env->pregs[PR_USP];
./tools/qemu-xen-traditional/target-cris/op_helper.c:	env->pregs[PR_CCS] = ccs;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	int rflag = env->pregs[PR_CCS] & R_FLAG;
./tools/qemu-xen-traditional/target-cris/op_helper.c:		 env->pregs[PR_ERP], env->pregs[PR_PID],
./tools/qemu-xen-traditional/target-cris/op_helper.c:		 env->pregs[PR_CCS],
./tools/qemu-xen-traditional/target-cris/op_helper.c:		 env->btarget);
./tools/qemu-xen-traditional/target-cris/op_helper.c:		env->pregs[PR_CCS] |= P_FLAG;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	int rflag = env->pregs[PR_CCS] & R_FLAG;
./tools/qemu-xen-traditional/target-cris/op_helper.c:		 env->pregs[PR_ERP], env->pregs[PR_PID],
./tools/qemu-xen-traditional/target-cris/op_helper.c:		 env->pregs[PR_CCS],
./tools/qemu-xen-traditional/target-cris/op_helper.c:		 env->btarget);
./tools/qemu-xen-traditional/target-cris/op_helper.c:		env->pregs[PR_CCS] |= P_FLAG;
./tools/qemu-xen-traditional/target-cris/op_helper.c:    env->pregs[PR_CCS] |= M_FLAG;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	x = env->cc_x;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	mask = env->cc_mask | X_FLAG;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	src = env->cc_src;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	dst = env->cc_dest;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	res = env->cc_result;
./tools/qemu-xen-traditional/target-cris/op_helper.c:	if (env->cc_op == CC_OP_SUB || env->cc_op == CC_OP_CMP)
./tools/qemu-xen-traditional/target-cris/op_helper.c:	switch (env->cc_size)
./tools/qemu-xen-traditional/target-cris/op_helper.c:	if (env->cc_op == CC_OP_SUB || env->cc_op == CC_OP_CMP)
./tools/qemu-xen-traditional/target-cris/op_helper.c:	env->pregs[PR_CCS] = evaluate_flags_writeback(flags, env->pregs[PR_CCS]);
./tools/qemu-xen-traditional/target-cris/op_helper.c:	switch (env->cc_op)
./tools/qemu-xen-traditional/target-cris/op_helper.c:			env->pregs[PR_CCS] = helper_evaluate_flags_mcp(
./tools/qemu-xen-traditional/target-cris/op_helper.c:					env->pregs[PR_CCS], env->cc_src,
./tools/qemu-xen-traditional/target-cris/op_helper.c:					env->cc_dest, env->cc_result);
./tools/qemu-xen-traditional/target-cris/op_helper.c:			env->pregs[PR_CCS] = helper_evaluate_flags_muls(
./tools/qemu-xen-traditional/target-cris/op_helper.c:					env->pregs[PR_CCS], env->cc_result,
./tools/qemu-xen-traditional/target-cris/op_helper.c:					env->pregs[PR_MOF]);
./tools/qemu-xen-traditional/target-cris/op_helper.c:			env->pregs[PR_CCS] = helper_evaluate_flags_mulu(
./tools/qemu-xen-traditional/target-cris/op_helper.c:					env->pregs[PR_CCS], env->cc_result,
./tools/qemu-xen-traditional/target-cris/op_helper.c:					env->pregs[PR_MOF]);
./tools/qemu-xen-traditional/target-cris/op_helper.c:		switch (env->cc_size)
./tools/qemu-xen-traditional/target-cris/op_helper.c:				env->pregs[PR_CCS] =
./tools/qemu-xen-traditional/target-cris/op_helper.c:							env->pregs[PR_CCS],
./tools/qemu-xen-traditional/target-cris/op_helper.c:							env->cc_result);
./tools/qemu-xen-traditional/target-cris/op_helper.c:				env->pregs[PR_CCS] =
./tools/qemu-xen-traditional/target-cris/op_helper.c:							env->pregs[PR_CCS],
./tools/qemu-xen-traditional/target-cris/op_helper.c:							env->cc_result);
./tools/qemu-xen-traditional/target-cris/op_helper.c:			if (env->cc_size == 4)
./tools/qemu-xen-traditional/target-cris/op_helper.c:				env->pregs[PR_CCS] =
./tools/qemu-xen-traditional/target-cris/op_helper.c:						env->pregs[PR_CCS],
./tools/qemu-xen-traditional/target-cris/op_helper.c:						env->cc_src, env->cc_dest,
./tools/qemu-xen-traditional/target-cris/op_helper.c:						env->cc_result);
./tools/qemu-xen-traditional/target-cris/op_helper.c:			switch (env->cc_size)
./tools/qemu-xen-traditional/target-cris/op_helper.c:				env->pregs[PR_CCS] =
./tools/qemu-xen-traditional/target-cris/op_helper.c:						env->pregs[PR_CCS],
./tools/qemu-xen-traditional/target-cris/op_helper.c:						env->cc_src, env->cc_dest,
./tools/qemu-xen-traditional/target-cris/op_helper.c:						env->cc_result);
./tools/qemu-xen-traditional/target-cris/helper.c:	env->exception_index = -1;
./tools/qemu-xen-traditional/target-cris/helper.c:	env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen-traditional/target-cris/helper.c:	env->exception_index = 0xaa;
./tools/qemu-xen-traditional/target-cris/helper.c:	env->pregs[PR_EDA] = address;
./tools/qemu-xen-traditional/target-cris/helper.c:	ccs = env->pregs[PR_CCS];
./tools/qemu-xen-traditional/target-cris/helper.c:	env->pregs[PR_CCS] = ccs;
./tools/qemu-xen-traditional/target-cris/helper.c:	D(printf ("%s addr=%x pc=%x rw=%x\n", __func__, address, env->pc, rw));
./tools/qemu-xen-traditional/target-cris/helper.c:		if (env->exception_index == EXCP_BUSFAULT)
./tools/qemu-xen-traditional/target-cris/helper.c:		env->exception_index = EXCP_BUSFAULT;
./tools/qemu-xen-traditional/target-cris/helper.c:		env->fault_vector = res.bf_vec;
./tools/qemu-xen-traditional/target-cris/helper.c:			  __func__, r, env->interrupt_request, 
./tools/qemu-xen-traditional/target-cris/helper.c:			  address, res.phy, is_softmmu, res.bf_vec, env->pc);
./tools/qemu-xen-traditional/target-cris/helper.c:		   env->exception_index,
./tools/qemu-xen-traditional/target-cris/helper.c:		   env->interrupt_request);
./tools/qemu-xen-traditional/target-cris/helper.c:	switch (env->exception_index)
./tools/qemu-xen-traditional/target-cris/helper.c:			ex_vec = env->trap_vector;
./tools/qemu-xen-traditional/target-cris/helper.c:			env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen-traditional/target-cris/helper.c:			env->pregs[PR_CCS] &= ~M_FLAG;
./tools/qemu-xen-traditional/target-cris/helper.c:			env->pregs[PR_NRP] = env->pc;
./tools/qemu-xen-traditional/target-cris/helper.c:			ex_vec = env->fault_vector;
./tools/qemu-xen-traditional/target-cris/helper.c:			env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen-traditional/target-cris/helper.c:			ex_vec = env->interrupt_vector;
./tools/qemu-xen-traditional/target-cris/helper.c:			   TB's.  env->pc is valid here.  */
./tools/qemu-xen-traditional/target-cris/helper.c:			env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen-traditional/target-cris/helper.c:	env->pregs[PR_EXS] = (ex_vec & 0xff) << 8;
./tools/qemu-xen-traditional/target-cris/helper.c:	if (env->dslot) {
./tools/qemu-xen-traditional/target-cris/helper.c:			  ex_vec, env->pc, env->dslot,
./tools/qemu-xen-traditional/target-cris/helper.c:			  env->regs[R_SP],
./tools/qemu-xen-traditional/target-cris/helper.c:			  env->pregs[PR_ERP], env->pregs[PR_PID],
./tools/qemu-xen-traditional/target-cris/helper.c:			  env->pregs[PR_CCS],
./tools/qemu-xen-traditional/target-cris/helper.c:			  env->cc_op, env->cc_mask);
./tools/qemu-xen-traditional/target-cris/helper.c:		env->pregs[PR_ERP] -= env->dslot;
./tools/qemu-xen-traditional/target-cris/helper.c:		env->dslot = 0;
./tools/qemu-xen-traditional/target-cris/helper.c:	env->pc = ldl_code(env->pregs[PR_EBP] + ex_vec * 4);
./tools/qemu-xen-traditional/target-cris/helper.c:	if (env->pregs[PR_CCS] & U_FLAG) {
./tools/qemu-xen-traditional/target-cris/helper.c:		env->pregs[PR_USP] = env->regs[R_SP];
./tools/qemu-xen-traditional/target-cris/helper.c:		env->regs[R_SP] = env->ksp;
./tools/qemu-xen-traditional/target-cris/helper.c:		   __func__, env->pc, ex_vec, 
./tools/qemu-xen-traditional/target-cris/helper.c:		   env->pregs[PR_CCS],
./tools/qemu-xen-traditional/target-cris/helper.c:		   env->pregs[PR_PID], 
./tools/qemu-xen-traditional/target-cris/helper.c:		   env->pregs[PR_ERP]);
./tools/qemu-xen-traditional/slirp/ip_input.c:	p->ipf_next = prev->ipf_next;
./tools/qemu-xen-traditional/slirp/ip_input.c:	((struct ipasfrag *)(prev->ipf_next))->ipf_prev = p;
./tools/qemu-xen-traditional/slirp/ip_input.c:	prev->ipf_next = p;
./tools/qemu-xen-traditional/slirp/if.c:	ifm->ifs_prev->ifs_next = ifm->ifs_next;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			memcpy(so_rcv->sb_wptr, m->m_data, m->m_len);
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			so_rcv->sb_wptr += m->m_len;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			so_rcv->sb_rptr += m->m_len;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:				if (sscanf(so_rcv->sb_data, "%u%*[ ,]%u", &n1, &n2) == 2) {
./tools/qemu-xen-traditional/slirp/tcp_subr.c:                                so_rcv->sb_cc = snprintf(so_rcv->sb_data,
./tools/qemu-xen-traditional/slirp/tcp_subr.c:                                                         so_rcv->sb_datalen,
./tools/qemu-xen-traditional/slirp/tcp_subr.c:				so_rcv->sb_rptr = so_rcv->sb_data;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:				so_rcv->sb_wptr = so_rcv->sb_data + so_rcv->sb_cc;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			    (m->m_len + so_rcv->sb_wptr) > (so_rcv->sb_data + so_rcv->sb_datalen)) {
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			memcpy(so_rcv->sb_wptr, m->m_data, m->m_len);
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			so_rcv->sb_wptr += m->m_len;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			so_rcv->sb_rptr += m->m_len;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			ptr = so_rcv->sb_data;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			while (ptr < so_rcv->sb_wptr) {
./tools/qemu-xen-traditional/slirp/tcp_subr.c:						i2 = so_rcv->sb_wptr - ptr;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			    (m->m_len + so_rcv->sb_wptr) > (so_rcv->sb_data + so_rcv->sb_datalen)) {
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			memcpy(so_rcv->sb_wptr, m->m_data, m->m_len);
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			so_rcv->sb_wptr += m->m_len;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			so_rcv->sb_rptr += m->m_len;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			ptr = so_rcv->sb_data;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:			while (ptr < so_rcv->sb_wptr) {
./tools/qemu-xen-traditional/slirp/tcp_subr.c:					*(so_rcv->sb_rptr + num) = 0;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:						if (sscanf(so_rcv->sb_rptr, "pass %256s", buff) == 1) {
./tools/qemu-xen-traditional/slirp/tcp_subr.c:					n = do_config(so_rcv->sb_rptr, so, PRN_SPRINTF);
./tools/qemu-xen-traditional/slirp/tcp_subr.c:					so_rcv->sb_cc = 0;
./tools/qemu-xen-traditional/slirp/tcp_subr.c:					so_rcv->sb_wptr = so_rcv->sb_rptr = so_rcv->sb_data;
./tools/qemu-xen-traditional/exec.c:    qemu_put_be32s(f, &env->halted);
./tools/qemu-xen-traditional/exec.c:    qemu_put_be32s(f, &env->interrupt_request);
./tools/qemu-xen-traditional/exec.c:    qemu_get_be32s(f, &env->halted);
./tools/qemu-xen-traditional/exec.c:    qemu_get_be32s(f, &env->interrupt_request);
./tools/qemu-xen-traditional/exec.c:    env->interrupt_request &= ~CPU_INTERRUPT_EXIT;
./tools/qemu-xen-traditional/exec.c:    env->next_cpu = NULL;
./tools/qemu-xen-traditional/exec.c:    env->cpu_index = cpu_index;
./tools/qemu-xen-traditional/exec.c:    TAILQ_INIT(&env->breakpoints);
./tools/qemu-xen-traditional/exec.c:    TAILQ_INIT(&env->watchpoints);
./tools/qemu-xen-traditional/exec.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/exec.c:        memset (env->tb_jmp_cache, 0, TB_JMP_CACHE_SIZE * sizeof (void *));
./tools/qemu-xen-traditional/exec.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/exec.c:        if (env->tb_jmp_cache[h] == tb)
./tools/qemu-xen-traditional/exec.c:            env->tb_jmp_cache[h] = NULL;
./tools/qemu-xen-traditional/exec.c:                if (env->mem_io_pc) {
./tools/qemu-xen-traditional/exec.c:                    current_tb = tb_find_pc(env->mem_io_pc);
./tools/qemu-xen-traditional/exec.c:                                  env->mem_io_pc, NULL);
./tools/qemu-xen-traditional/exec.c:                saved_tb = env->current_tb;
./tools/qemu-xen-traditional/exec.c:                env->current_tb = NULL;
./tools/qemu-xen-traditional/exec.c:                env->current_tb = saved_tb;
./tools/qemu-xen-traditional/exec.c:                if (env->interrupt_request && env->current_tb)
./tools/qemu-xen-traditional/exec.c:                    cpu_interrupt(env, env->interrupt_request);
./tools/qemu-xen-traditional/exec.c:            tlb_unprotect_code_phys(env, start, env->mem_io_vaddr);
./tools/qemu-xen-traditional/exec.c:        env->current_tb = NULL;
./tools/qemu-xen-traditional/exec.c:                  cpu_single_env->mem_io_vaddr, len,
./tools/qemu-xen-traditional/exec.c:                  cpu_single_env->eip,
./tools/qemu-xen-traditional/exec.c:                  cpu_single_env->eip + (long)cpu_single_env->segs[R_CS].base);
./tools/qemu-xen-traditional/exec.c:        env->current_tb = NULL;
./tools/qemu-xen-traditional/exec.c:        TAILQ_INSERT_HEAD(&env->watchpoints, wp, entry);
./tools/qemu-xen-traditional/exec.c:        TAILQ_INSERT_TAIL(&env->watchpoints, wp, entry);
./tools/qemu-xen-traditional/exec.c:    TAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen-traditional/exec.c:    TAILQ_REMOVE(&env->watchpoints, watchpoint, entry);
./tools/qemu-xen-traditional/exec.c:    TAILQ_FOREACH_SAFE(wp, &env->watchpoints, entry, next) {
./tools/qemu-xen-traditional/exec.c:        TAILQ_INSERT_HEAD(&env->breakpoints, bp, entry);
./tools/qemu-xen-traditional/exec.c:        TAILQ_INSERT_TAIL(&env->breakpoints, bp, entry);
./tools/qemu-xen-traditional/exec.c:    TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/exec.c:    TAILQ_REMOVE(&env->breakpoints, breakpoint, entry);
./tools/qemu-xen-traditional/exec.c:    TAILQ_FOREACH_SAFE(bp, &env->breakpoints, entry, next) {
./tools/qemu-xen-traditional/exec.c:    if (env->singlestep_enabled != enabled) {
./tools/qemu-xen-traditional/exec.c:        env->singlestep_enabled = enabled;
./tools/qemu-xen-traditional/exec.c:        env->exit_request = 1;
./tools/qemu-xen-traditional/exec.c:    old_mask = env->interrupt_request;
./tools/qemu-xen-traditional/exec.c:    env->interrupt_request |= mask;
./tools/qemu-xen-traditional/exec.c:        env->icount_decr.u16.high = 0xffff;
./tools/qemu-xen-traditional/exec.c:        tb = env->current_tb;
./tools/qemu-xen-traditional/exec.c:            env->current_tb = NULL;
./tools/qemu-xen-traditional/exec.c:    env->interrupt_request &= ~mask;
./tools/qemu-xen-traditional/exec.c:    CPUState *new_env = cpu_init(env->cpu_model_str);
./tools/qemu-xen-traditional/exec.c:    CPUState *next_cpu = new_env->next_cpu;
./tools/qemu-xen-traditional/exec.c:    int cpu_index = new_env->cpu_index;
./tools/qemu-xen-traditional/exec.c:    new_env->next_cpu = next_cpu;
./tools/qemu-xen-traditional/exec.c:    new_env->cpu_index = cpu_index;
./tools/qemu-xen-traditional/exec.c:    TAILQ_INIT(&env->breakpoints);
./tools/qemu-xen-traditional/exec.c:    TAILQ_INIT(&env->watchpoints);
./tools/qemu-xen-traditional/exec.c:    TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/exec.c:    TAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen-traditional/exec.c:    memset (&env->tb_jmp_cache[i], 0, 
./tools/qemu-xen-traditional/exec.c:    memset (&env->tb_jmp_cache[i], 0, 
./tools/qemu-xen-traditional/exec.c:    env->current_tb = NULL;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[0][i].addr_read = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[0][i].addr_write = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[0][i].addr_code = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[1][i].addr_read = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[1][i].addr_write = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[1][i].addr_code = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[2][i].addr_read = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[2][i].addr_write = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[2][i].addr_code = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[3][i].addr_read = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[3][i].addr_write = -1;
./tools/qemu-xen-traditional/exec.c:        env->tlb_table[3][i].addr_code = -1;
./tools/qemu-xen-traditional/exec.c:    memset (env->tb_jmp_cache, 0, TB_JMP_CACHE_SIZE * sizeof (void *));
./tools/qemu-xen-traditional/exec.c:    if (env->kqemu_enabled) {
./tools/qemu-xen-traditional/exec.c:    env->current_tb = NULL;
./tools/qemu-xen-traditional/exec.c:    tlb_flush_entry(&env->tlb_table[0][i], addr);
./tools/qemu-xen-traditional/exec.c:    tlb_flush_entry(&env->tlb_table[1][i], addr);
./tools/qemu-xen-traditional/exec.c:    tlb_flush_entry(&env->tlb_table[2][i], addr);
./tools/qemu-xen-traditional/exec.c:    tlb_flush_entry(&env->tlb_table[3][i], addr);
./tools/qemu-xen-traditional/exec.c:    if (env->kqemu_enabled) {
./tools/qemu-xen-traditional/exec.c:    if (env->kqemu_enabled) {
./tools/qemu-xen-traditional/exec.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/exec.c:            tlb_reset_dirty_range(&env->tlb_table[0][i], start1, length);
./tools/qemu-xen-traditional/exec.c:            tlb_reset_dirty_range(&env->tlb_table[1][i], start1, length);
./tools/qemu-xen-traditional/exec.c:            tlb_reset_dirty_range(&env->tlb_table[2][i], start1, length);
./tools/qemu-xen-traditional/exec.c:            tlb_reset_dirty_range(&env->tlb_table[3][i], start1, length);
./tools/qemu-xen-traditional/exec.c:        tlb_update_dirty(&env->tlb_table[0][i]);
./tools/qemu-xen-traditional/exec.c:        tlb_update_dirty(&env->tlb_table[1][i]);
./tools/qemu-xen-traditional/exec.c:        tlb_update_dirty(&env->tlb_table[2][i]);
./tools/qemu-xen-traditional/exec.c:        tlb_update_dirty(&env->tlb_table[3][i]);
./tools/qemu-xen-traditional/exec.c:    tlb_set_dirty1(&env->tlb_table[0][i], vaddr);
./tools/qemu-xen-traditional/exec.c:    tlb_set_dirty1(&env->tlb_table[1][i], vaddr);
./tools/qemu-xen-traditional/exec.c:    tlb_set_dirty1(&env->tlb_table[2][i], vaddr);
./tools/qemu-xen-traditional/exec.c:    tlb_set_dirty1(&env->tlb_table[3][i], vaddr);
./tools/qemu-xen-traditional/exec.c:    TAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen-traditional/exec.c:    env->iotlb[mmu_idx][index] = iotlb - vaddr;
./tools/qemu-xen-traditional/exec.c:    te = &env->tlb_table[mmu_idx][index];
./tools/qemu-xen-traditional/exec.c:    if (env->kqemu_enabled) {
./tools/qemu-xen-traditional/exec.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/exec.c:    if (cpu_single_env->kqemu_enabled &&
./tools/qemu-xen-traditional/exec.c:        tlb_set_dirty(cpu_single_env, cpu_single_env->mem_io_vaddr);
./tools/qemu-xen-traditional/exec.c:    if (cpu_single_env->kqemu_enabled &&
./tools/qemu-xen-traditional/exec.c:        tlb_set_dirty(cpu_single_env, cpu_single_env->mem_io_vaddr);
./tools/qemu-xen-traditional/exec.c:    if (cpu_single_env->kqemu_enabled &&
./tools/qemu-xen-traditional/exec.c:        tlb_set_dirty(cpu_single_env, cpu_single_env->mem_io_vaddr);
./tools/qemu-xen-traditional/exec.c:    if (env->watchpoint_hit) {
./tools/qemu-xen-traditional/exec.c:    vaddr = (env->mem_io_vaddr & TARGET_PAGE_MASK) + offset;
./tools/qemu-xen-traditional/exec.c:    TAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen-traditional/exec.c:            if (!env->watchpoint_hit) {
./tools/qemu-xen-traditional/exec.c:                env->watchpoint_hit = wp;
./tools/qemu-xen-traditional/exec.c:                tb = tb_find_pc(env->mem_io_pc);
./tools/qemu-xen-traditional/exec.c:                              "pc=%p", (void *)env->mem_io_pc);
./tools/qemu-xen-traditional/exec.c:                cpu_restore_state(tb, env, env->mem_io_pc, NULL);
./tools/qemu-xen-traditional/exec.c:                    env->exception_index = EXCP_DEBUG;
./tools/qemu-xen-traditional/exec.c:    n = env->icount_decr.u16.low + tb->icount;
./tools/qemu-xen-traditional/exec.c:    n = n - env->icount_decr.u16.low;
./tools/qemu-xen-traditional/exec.c:    if ((env->hflags & MIPS_HFLAG_BMASK) != 0 && n > 1) {
./tools/qemu-xen-traditional/exec.c:        env->active_tc.PC -= 4;
./tools/qemu-xen-traditional/exec.c:        env->icount_decr.u16.low++;
./tools/qemu-xen-traditional/exec.c:        env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen-traditional/exec.c:    if ((env->flags & ((DELAY_SLOT | DELAY_SLOT_CONDITIONAL))) != 0
./tools/qemu-xen-traditional/exec.c:        env->pc -= 2;
./tools/qemu-xen-traditional/exec.c:        env->icount_decr.u16.low++;
./tools/qemu-xen-traditional/exec.c:        env->flags &= ~(DELAY_SLOT | DELAY_SLOT_CONDITIONAL);
./tools/qemu-xen-traditional/exec.c:    /* TODO: If env->pc != tb->pc (i.e. the faulting instruction was not
./tools/qemu-xen-traditional/xenstore.c:    case 2: product = "gplpv-windows";      break; /* James Harper */
./tools/qemu-xen-traditional/xenstore.c:        if (!strcmp(image, drives_table[hd_index].bdrv->filename))
./tools/qemu-xen-traditional/xenstore.c:            if (!strcmp(image, drives_table[hd_index].bdrv->filename))
./tools/qemu-xen-traditional/xenstore.c:    drives_table[hd_index].bdrv->filename[0] = '\0';
./tools/qemu-xen-traditional/usb-linux.c:    dev->next = hostdev_list;
./tools/qemu-xen-traditional/usb-linux.c:            *prev = dev->next;
./tools/qemu-xen-traditional/usb-linux.c:        prev = &pdev->next;
./tools/qemu-xen-traditional/usb-linux.c:        pdev = pdev->next;
./tools/qemu-xen-traditional/usb-linux.c:    dev_descr_len = dev->descr[0];
./tools/qemu-xen-traditional/usb-linux.c:    if (dev_descr_len > dev->descr_len)
./tools/qemu-xen-traditional/usb-linux.c:    nb_configurations = dev->descr[17];
./tools/qemu-xen-traditional/usb-linux.c:    while (i < dev->descr_len) {
./tools/qemu-xen-traditional/usb-linux.c:        dprintf("husb: i is %d, descr_len is %d, dl %d, dt %d\n", i, dev->descr_len,
./tools/qemu-xen-traditional/usb-linux.c:               dev->descr[i], dev->descr[i+1]);
./tools/qemu-xen-traditional/usb-linux.c:        if (dev->descr[i+1] != USB_DT_CONFIG) {
./tools/qemu-xen-traditional/usb-linux.c:            i += dev->descr[i];
./tools/qemu-xen-traditional/usb-linux.c:        config_descr_len = dev->descr[i];
./tools/qemu-xen-traditional/usb-linux.c:	printf("husb: config #%d need %d\n", dev->descr[i + 5], configuration); 
./tools/qemu-xen-traditional/usb-linux.c:        if (configuration < 0 || configuration == dev->descr[i + 5]) {
./tools/qemu-xen-traditional/usb-linux.c:            configuration = dev->descr[i + 5];
./tools/qemu-xen-traditional/usb-linux.c:    if (i >= dev->descr_len) {
./tools/qemu-xen-traditional/usb-linux.c:    nb_interfaces = dev->descr[i + 4];
./tools/qemu-xen-traditional/usb-linux.c:            ret = ioctl(dev->fd, USBDEVFS_IOCTL, &ctrl);
./tools/qemu-xen-traditional/usb-linux.c:        ret = ioctl(dev->fd, USBDEVFS_CLAIMINTERFACE, &interface);
./tools/qemu-xen-traditional/usb-linux.c:    dev->ninterfaces   = nb_interfaces;
./tools/qemu-xen-traditional/usb-linux.c:    dev->configuration = configuration;
./tools/qemu-xen-traditional/usb-linux.c:    dev->bus_num = bus_num;
./tools/qemu-xen-traditional/usb-linux.c:    dev->addr = addr;
./tools/qemu-xen-traditional/usb-linux.c:    dev->descr_len = read(fd, dev->descr, sizeof(dev->descr));
./tools/qemu-xen-traditional/usb-linux.c:    if (dev->descr_len <= 0) {
./tools/qemu-xen-traditional/usb-linux.c:        for (x = 0; x < dev->descr_len; x++)
./tools/qemu-xen-traditional/usb-linux.c:            printf("%02x ", dev->descr[x]);
./tools/qemu-xen-traditional/usb-linux.c:    dev->fd = fd;
./tools/qemu-xen-traditional/usb-linux.c:        dev->dev.speed = USB_SPEED_LOW;
./tools/qemu-xen-traditional/usb-linux.c:        dev->dev.speed = USB_SPEED_HIGH;
./tools/qemu-xen-traditional/usb-linux.c:    dev->dev.handle_packet  = usb_host_handle_packet;
./tools/qemu-xen-traditional/usb-linux.c:    dev->dev.handle_reset   = usb_host_handle_reset;
./tools/qemu-xen-traditional/usb-linux.c:    dev->dev.handle_destroy = usb_host_handle_destroy;
./tools/qemu-xen-traditional/usb-linux.c:        snprintf(dev->dev.devname, sizeof(dev->dev.devname),
./tools/qemu-xen-traditional/usb-linux.c:        pstrcpy(dev->dev.devname, sizeof(dev->dev.devname),
./tools/qemu-xen-traditional/usb-linux.c:    qemu_set_fd_handler(dev->fd, NULL, async_complete, dev);
./tools/qemu-xen-traditional/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    } else if (s->env->macsr & MACSR_SU) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    if ((s->env->macsr & MACSR_OMC) != 0 && !dual) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI) {
./tools/qemu-xen-traditional/target-m68k/translate.c:        if (s->env->macsr & MACSR_SU)
./tools/qemu-xen-traditional/target-m68k/translate.c:    if ((s->env->macsr & MACSR_OMC) != 0 && dual) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI)
./tools/qemu-xen-traditional/target-m68k/translate.c:    else if (s->env->macsr & MACSR_SU)
./tools/qemu-xen-traditional/target-m68k/translate.c:        if ((s->env->macsr & MACSR_OMC) != 0) {
./tools/qemu-xen-traditional/target-m68k/translate.c:        if (s->env->macsr & MACSR_FI)
./tools/qemu-xen-traditional/target-m68k/translate.c:        else if (s->env->macsr & MACSR_SU)
./tools/qemu-xen-traditional/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    } else if ((s->env->macsr & MACSR_OMC) == 0) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    } else if (s->env->macsr & MACSR_SU) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI)
./tools/qemu-xen-traditional/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    } else if (s->env->macsr & MACSR_SU) {
./tools/qemu-xen-traditional/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI)
./tools/qemu-xen-traditional/target-m68k/translate.c:    else if (s->env->macsr & MACSR_SU)
./tools/qemu-xen-traditional/target-m68k/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen-traditional/target-m68k/translate.c:    dc->fpcr = env->fpcr;
./tools/qemu-xen-traditional/target-m68k/translate.c:    dc->user = (env->sr & SR_S) == 0;
./tools/qemu-xen-traditional/target-m68k/translate.c:        if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-m68k/translate.c:            TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-m68k/translate.c:             !env->singlestep_enabled &&
./tools/qemu-xen-traditional/target-m68k/translate.c:    if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen-traditional/target-m68k/translate.c:        u.d = env->fregs[i];
./tools/qemu-xen-traditional/target-m68k/translate.c:                     i, env->dregs[i], i, env->aregs[i],
./tools/qemu-xen-traditional/target-m68k/translate.c:    cpu_fprintf (f, "PC = %08x   ", env->pc);
./tools/qemu-xen-traditional/target-m68k/translate.c:    sr = env->sr;
./tools/qemu-xen-traditional/target-m68k/translate.c:    cpu_fprintf (f, "FPRESULT = %12g\n", *(double *)&env->fp_result);
./tools/qemu-xen-traditional/target-m68k/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->exception_index = -1;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    sp = env->aregs[7];
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->pc = ldl_kernel(sp + 4);
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->sr = fmt & 0xffff;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->aregs[7] = sp + 8;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    retaddr = env->pc;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:        switch (env->exception_index) {
./tools/qemu-xen-traditional/target-m68k/op_helper.c:                    && (env->sr & SR_S) != 0
./tools/qemu-xen-traditional/target-m68k/op_helper.c:                    && (env->pc & 3) == 0
./tools/qemu-xen-traditional/target-m68k/op_helper.c:                    && lduw_code(env->pc - 4) == 0x4e71
./tools/qemu-xen-traditional/target-m68k/op_helper.c:                    && ldl_code(env->pc) == 0x4e7bf000) {
./tools/qemu-xen-traditional/target-m68k/op_helper.c:                env->pc += 4;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:                do_m68k_semihosting(env, env->dregs[0]);
./tools/qemu-xen-traditional/target-m68k/op_helper.c:            env->halted = 1;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:            env->exception_index = EXCP_HLT;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:        if (env->exception_index >= EXCP_TRAP0
./tools/qemu-xen-traditional/target-m68k/op_helper.c:            && env->exception_index <= EXCP_TRAP15) {
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    vector = env->exception_index << 2;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    sp = env->aregs[7];
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    fmt |= env->sr;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->sr |= SR_S;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:        env->sr = (env->sr & ~SR_I) | (env->pending_level << SR_I_SHIFT);
./tools/qemu-xen-traditional/target-m68k/op_helper.c:        env->sr &= ~SR_M;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->aregs[7] = sp;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->pc = ldl_kernel(env->vbr + vector);
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->exception_index = tt;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    num = env->div1;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    den = env->div2;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->div1 = quot;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->div2 = rem;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->cc_dest = flags;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    num = env->div1;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    den = env->div2;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->div1 = quot;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->div2 = rem;
./tools/qemu-xen-traditional/target-m68k/op_helper.c:    env->cc_dest = flags;
./tools/qemu-xen-traditional/target-m68k/helper.c:        stfq_p(mem_buf, env->fregs[n]);
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->fregs[n] = ldfq_p(mem_buf);
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->features |= (1u << feature);
./tools/qemu-xen-traditional/target-m68k/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->sr = 0x2700;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->pc = 0;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen-traditional/target-m68k/helper.c:    src = env->cc_src;
./tools/qemu-xen-traditional/target-m68k/helper.c:    dest = env->cc_dest;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_dest = flags;
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cacr = val;
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->vbr = val;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if ((env->macsr ^ val) & (MACSR_FI | MACSR_SU)) {
./tools/qemu-xen-traditional/target-m68k/helper.c:            regval = env->macc[i];
./tools/qemu-xen-traditional/target-m68k/helper.c:            if (env->macsr & MACSR_FI) {
./tools/qemu-xen-traditional/target-m68k/helper.c:            if (env->macsr & MACSR_FI) {
./tools/qemu-xen-traditional/target-m68k/helper.c:            } else if (env->macsr & MACSR_SU) {
./tools/qemu-xen-traditional/target-m68k/helper.c:            env->macc[i] = regval;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macsr = val;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->sp[env->current_sp] = env->aregs[7];
./tools/qemu-xen-traditional/target-m68k/helper.c:    new_sp = (env->sr & SR_S && env->cacr & M68K_CACR_EUSP)
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->aregs[7] = env->sp[new_sp];
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->current_sp = new_sp;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->exception_index = EXCP_ACCESS;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->mmu.ar = address;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->pending_level = level;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->pending_vector = vector;
./tools/qemu-xen-traditional/target-m68k/helper.c:    old_flags = env->cc_dest;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->cc_x) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cc_x = (op1 <= op2);
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cc_op = CC_OP_SUBX;
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cc_x = (op1 < op2);
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cc_op = CC_OP_SUB;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_dest = res;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_src = op2;
./tools/qemu-xen-traditional/target-m68k/helper.c:    cpu_m68k_flush_flags(env, env->cc_op);
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_dest &= (old_flags | ~CCF_Z);
./tools/qemu-xen-traditional/target-m68k/helper.c:    old_flags = env->cc_dest;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->cc_x) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cc_x = (res <= op2);
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cc_op = CC_OP_ADDX;
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cc_x = (res < op2);
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->cc_op = CC_OP_ADD;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_dest = res;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_src = op2;
./tools/qemu-xen-traditional/target-m68k/helper.c:    cpu_m68k_flush_flags(env, env->cc_op);
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_dest &= (old_flags | ~CCF_Z);
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->sr = val & 0xffff;
./tools/qemu-xen-traditional/target-m68k/helper.c:        cf = env->cc_src & CCF_C;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_src = cf;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_x = (cf != 0);
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_dest = result;
./tools/qemu-xen-traditional/target-m68k/helper.c:        cf = env->cc_src & CCF_C;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_src = cf;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_x = (cf != 0);
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_dest = result;
./tools/qemu-xen-traditional/target-m68k/helper.c:        cf = (env->cc_src & CCF_C) != 0;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_src = cf;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_x = cf;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->cc_dest = result;
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_to_int32(val, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_to_float32(val, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return int32_to_float64(val, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float32_to_float64(val, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_round_to_int(val, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_trunc_to_int(val, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_sqrt(val, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_add(a, b, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_sub(a, b, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_mul(a, b, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_div(a, b, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    res = float64_sub(a, b, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:            if (float64_lt_quiet(a, res, &env->fp_status))
./tools/qemu-xen-traditional/target-m68k/helper.c:    return float64_compare_quiet(val, float64_zero, &env->fp_status);
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[dest] = env->macc[src];
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & (MACSR_PAV0 << src))
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= mask;
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr &= ~mask;
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen-traditional/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen-traditional/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & MACSR_RT) {
./tools/qemu-xen-traditional/target-m68k/helper.c:    tmp = env->macc[acc];
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & MACSR_V) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_PAV0 << acc;
./tools/qemu-xen-traditional/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc] = result;
./tools/qemu-xen-traditional/target-m68k/helper.c:    val = env->macc[acc];
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & MACSR_V) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_PAV0 << acc;
./tools/qemu-xen-traditional/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc] = val;
./tools/qemu-xen-traditional/target-m68k/helper.c:    sum = env->macc[acc];
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & MACSR_V) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_PAV0 << acc;
./tools/qemu-xen-traditional/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc] = result;
./tools/qemu-xen-traditional/target-m68k/helper.c:    val = env->macc[acc];
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_Z;
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_N;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & (MACSR_PAV0 << acc)) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & MACSR_FI) {
./tools/qemu-xen-traditional/target-m68k/helper.c:            env->macsr |= MACSR_EV;
./tools/qemu-xen-traditional/target-m68k/helper.c:    } else if (env->macsr & MACSR_SU) {
./tools/qemu-xen-traditional/target-m68k/helper.c:            env->macsr |= MACSR_EV;
./tools/qemu-xen-traditional/target-m68k/helper.c:            env->macsr |= MACSR_EV;
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & MACSR_SU) {
./tools/qemu-xen-traditional/target-m68k/helper.c:    } else if (env->macsr & MACSR_RT) {
./tools/qemu-xen-traditional/target-m68k/helper.c:    if (env->macsr & MACSR_OMC) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        if (env->macsr & MACSR_SU) {
./tools/qemu-xen-traditional/target-m68k/helper.c:        if (env->macsr & MACSR_SU) {
./tools/qemu-xen-traditional/target-m68k/helper.c:    val = env->macc[acc] & 0x00ff;
./tools/qemu-xen-traditional/target-m68k/helper.c:    val = (env->macc[acc] >> 32) & 0xff00;
./tools/qemu-xen-traditional/target-m68k/helper.c:    val |= (env->macc[acc + 1] << 16) & 0x00ff0000;
./tools/qemu-xen-traditional/target-m68k/helper.c:    val |= (env->macc[acc + 1] >> 16) & 0xff000000;
./tools/qemu-xen-traditional/target-m68k/helper.c:    val = (env->macc[acc] >> 32) & 0xffff;
./tools/qemu-xen-traditional/target-m68k/helper.c:    val |= (env->macc[acc + 1] >> 16) & 0xffff0000;
./tools/qemu-xen-traditional/target-m68k/helper.c:    res = env->macc[acc] & 0xffffffff00ull;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc] = res;
./tools/qemu-xen-traditional/target-m68k/helper.c:    res = env->macc[acc + 1] & 0xffffffff00ull;
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc + 1] = res;
./tools/qemu-xen-traditional/target-m68k/helper.c:    res = (uint32_t)env->macc[acc];
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc] = res;
./tools/qemu-xen-traditional/target-m68k/helper.c:    res = (uint32_t)env->macc[acc + 1];
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc + 1] = res;
./tools/qemu-xen-traditional/target-m68k/helper.c:    res = (uint32_t)env->macc[acc];
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc] = res;
./tools/qemu-xen-traditional/target-m68k/helper.c:    res = (uint32_t)env->macc[acc + 1];
./tools/qemu-xen-traditional/target-m68k/helper.c:    env->macc[acc + 1] = res;
./tools/qemu-xen-traditional/cpu-exec.c:    longjmp(env->jmp_env, 1);
./tools/qemu-xen-traditional/cpu-exec.c:    env->exception_index = -1;
./tools/qemu-xen-traditional/cpu-exec.c:    longjmp(env->jmp_env, 1);
./tools/qemu-xen-traditional/cpu-exec.c:    env->current_tb = tb;
./tools/qemu-xen-traditional/cpu-exec.c:    env->tb_jmp_cache[tb_jmp_cache_hash_func(pc)] = tb;
./tools/qemu-xen-traditional/cpu-exec.c:    tb = env->tb_jmp_cache[tb_jmp_cache_hash_func(pc)];
./tools/qemu-xen-traditional/cpu-exec.c:    if (!env->watchpoint_hit)
./tools/qemu-xen-traditional/cpu-exec.c:        TAILQ_FOREACH(wp, &env->watchpoints, entry)
./tools/qemu-xen-traditional/cpu-exec.c:    CC_SRC = env->eflags & (CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C);
./tools/qemu-xen-traditional/cpu-exec.c:    DF = 1 - (2 * ((env->eflags >> 10) & 1));
./tools/qemu-xen-traditional/cpu-exec.c:    env->eflags &= ~(DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C);
./tools/qemu-xen-traditional/cpu-exec.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen-traditional/cpu-exec.c:    env->cc_dest = env->sr & 0xf;
./tools/qemu-xen-traditional/cpu-exec.c:    env->cc_x = (env->sr >> 4) & 1;
./tools/qemu-xen-traditional/cpu-exec.c:    env->exception_index = -1;
./tools/qemu-xen-traditional/cpu-exec.c:        if (setjmp(env->jmp_env) == 0) {
./tools/qemu-xen-traditional/cpu-exec.c:            env->current_tb = NULL;
./tools/qemu-xen-traditional/cpu-exec.c:            if (env->exception_index >= 0) {
./tools/qemu-xen-traditional/cpu-exec.c:                if (env->exception_index >= EXCP_INTERRUPT) {
./tools/qemu-xen-traditional/cpu-exec.c:                    ret = env->exception_index;
./tools/qemu-xen-traditional/cpu-exec.c:                    do_interrupt_user(env->exception_index,
./tools/qemu-xen-traditional/cpu-exec.c:                                      env->exception_is_int,
./tools/qemu-xen-traditional/cpu-exec.c:                                      env->error_code,
./tools/qemu-xen-traditional/cpu-exec.c:                                      env->exception_next_eip);
./tools/qemu-xen-traditional/cpu-exec.c:                    env->old_exception = -1;
./tools/qemu-xen-traditional/cpu-exec.c:                    ret = env->exception_index;
./tools/qemu-xen-traditional/cpu-exec.c:                    do_interrupt(env->exception_index,
./tools/qemu-xen-traditional/cpu-exec.c:                                 env->exception_is_int,
./tools/qemu-xen-traditional/cpu-exec.c:                                 env->error_code,
./tools/qemu-xen-traditional/cpu-exec.c:                                 env->exception_next_eip, 0);
./tools/qemu-xen-traditional/cpu-exec.c:                    env->old_exception = -1;
./tools/qemu-xen-traditional/cpu-exec.c:                env->exception_index = -1;
./tools/qemu-xen-traditional/cpu-exec.c:            if (kqemu_is_ok(env) && env->interrupt_request == 0 && env->exit_request == 0) {
./tools/qemu-xen-traditional/cpu-exec.c:                env->eflags = env->eflags | helper_cc_compute_all(CC_OP) | (DF & DF_MASK);
./tools/qemu-xen-traditional/cpu-exec.c:                CC_SRC = env->eflags & (CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C);
./tools/qemu-xen-traditional/cpu-exec.c:                DF = 1 - (2 * ((env->eflags >> 10) & 1));
./tools/qemu-xen-traditional/cpu-exec.c:                env->eflags &= ~(DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C);
./tools/qemu-xen-traditional/cpu-exec.c:                    longjmp(env->jmp_env, 1);
./tools/qemu-xen-traditional/cpu-exec.c:                    if (env->interrupt_request != 0 || env->exit_request != 0) {
./tools/qemu-xen-traditional/cpu-exec.c:                        longjmp(env->jmp_env, 1);
./tools/qemu-xen-traditional/cpu-exec.c:                longjmp(env->jmp_env, 1);
./tools/qemu-xen-traditional/cpu-exec.c:                interrupt_request = env->interrupt_request;
./tools/qemu-xen-traditional/cpu-exec.c:                    if (unlikely(env->singlestep_enabled & SSTEP_NOIRQ)) {
./tools/qemu-xen-traditional/cpu-exec.c:                        env->interrupt_request &= ~CPU_INTERRUPT_DEBUG;
./tools/qemu-xen-traditional/cpu-exec.c:                        env->exception_index = EXCP_DEBUG;
./tools/qemu-xen-traditional/cpu-exec.c:                        env->interrupt_request &= ~CPU_INTERRUPT_HALT;
./tools/qemu-xen-traditional/cpu-exec.c:                        env->halted = 1;
./tools/qemu-xen-traditional/cpu-exec.c:                        env->exception_index = EXCP_HLT;
./tools/qemu-xen-traditional/cpu-exec.c:                    if (env->hflags2 & HF2_GIF_MASK) {
./tools/qemu-xen-traditional/cpu-exec.c:                            !(env->hflags & HF_SMM_MASK)) {
./tools/qemu-xen-traditional/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_SMI;
./tools/qemu-xen-traditional/cpu-exec.c:                                   !(env->hflags2 & HF2_NMI_MASK)) {
./tools/qemu-xen-traditional/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_NMI;
./tools/qemu-xen-traditional/cpu-exec.c:                            env->hflags2 |= HF2_NMI_MASK;
./tools/qemu-xen-traditional/cpu-exec.c:                                   (((env->hflags2 & HF2_VINTR_MASK) && 
./tools/qemu-xen-traditional/cpu-exec.c:                                     (env->hflags2 & HF2_HIF_MASK)) ||
./tools/qemu-xen-traditional/cpu-exec.c:                                    (!(env->hflags2 & HF2_VINTR_MASK) && 
./tools/qemu-xen-traditional/cpu-exec.c:                                     (env->eflags & IF_MASK && 
./tools/qemu-xen-traditional/cpu-exec.c:                                      !(env->hflags & HF_INHIBIT_IRQ_MASK))))) {
./tools/qemu-xen-traditional/cpu-exec.c:                            env->interrupt_request &= ~(CPU_INTERRUPT_HARD | CPU_INTERRUPT_VIRQ);
./tools/qemu-xen-traditional/cpu-exec.c:                                   (env->eflags & IF_MASK) && 
./tools/qemu-xen-traditional/cpu-exec.c:                                   !(env->hflags & HF_INHIBIT_IRQ_MASK)) {
./tools/qemu-xen-traditional/cpu-exec.c:                            intno = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_vector));
./tools/qemu-xen-traditional/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_VIRQ;
./tools/qemu-xen-traditional/cpu-exec.c:                        if (env->pending_interrupts == 0)
./tools/qemu-xen-traditional/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_HARD;
./tools/qemu-xen-traditional/cpu-exec.c:                        (env->CP0_Status & env->CP0_Cause & CP0Ca_IP_mask) &&
./tools/qemu-xen-traditional/cpu-exec.c:                        (env->CP0_Status & (1 << CP0St_IE)) &&
./tools/qemu-xen-traditional/cpu-exec.c:                        !(env->CP0_Status & (1 << CP0St_EXL)) &&
./tools/qemu-xen-traditional/cpu-exec.c:                        !(env->CP0_Status & (1 << CP0St_ERL)) &&
./tools/qemu-xen-traditional/cpu-exec.c:                        !(env->hflags & MIPS_HFLAG_DM)) {
./tools/qemu-xen-traditional/cpu-exec.c:                        env->exception_index = EXCP_EXT_INTERRUPT;
./tools/qemu-xen-traditional/cpu-exec.c:                        env->error_code = 0;
./tools/qemu-xen-traditional/cpu-exec.c:			(env->psret != 0)) {
./tools/qemu-xen-traditional/cpu-exec.c:			int pil = env->interrupt_index & 15;
./tools/qemu-xen-traditional/cpu-exec.c:			int type = env->interrupt_index & 0xf0;
./tools/qemu-xen-traditional/cpu-exec.c:			     (pil == 15 || pil > env->psrpil)) ||
./tools/qemu-xen-traditional/cpu-exec.c:			    env->interrupt_request &= ~CPU_INTERRUPT_HARD;
./tools/qemu-xen-traditional/cpu-exec.c:                            env->exception_index = env->interrupt_index;
./tools/qemu-xen-traditional/cpu-exec.c:			    env->interrupt_index = 0;
./tools/qemu-xen-traditional/cpu-exec.c:			env->interrupt_request &= ~CPU_INTERRUPT_TIMER;
./tools/qemu-xen-traditional/cpu-exec.c:                        && !(env->uncached_cpsr & CPSR_F)) {
./tools/qemu-xen-traditional/cpu-exec.c:                        env->exception_index = EXCP_FIQ;
./tools/qemu-xen-traditional/cpu-exec.c:                        && ((IS_M(env) && env->regs[15] < 0xfffffff0)
./tools/qemu-xen-traditional/cpu-exec.c:                            || !(env->uncached_cpsr & CPSR_I))) {
./tools/qemu-xen-traditional/cpu-exec.c:                        env->exception_index = EXCP_IRQ;
./tools/qemu-xen-traditional/cpu-exec.c:                        && (env->pregs[PR_CCS] & I_FLAG)) {
./tools/qemu-xen-traditional/cpu-exec.c:                        env->exception_index = EXCP_IRQ;
./tools/qemu-xen-traditional/cpu-exec.c:                        && (env->pregs[PR_CCS] & M_FLAG)) {
./tools/qemu-xen-traditional/cpu-exec.c:                        env->exception_index = EXCP_NMI;
./tools/qemu-xen-traditional/cpu-exec.c:                        && ((env->sr & SR_I) >> SR_I_SHIFT)
./tools/qemu-xen-traditional/cpu-exec.c:                            < env->pending_level) {
./tools/qemu-xen-traditional/cpu-exec.c:                        env->exception_index = env->pending_vector;
./tools/qemu-xen-traditional/cpu-exec.c:                    if (env->interrupt_request & CPU_INTERRUPT_EXITTB) {
./tools/qemu-xen-traditional/cpu-exec.c:                        env->interrupt_request &= ~CPU_INTERRUPT_EXITTB;
./tools/qemu-xen-traditional/cpu-exec.c:                if (unlikely(env->exit_request)) {
./tools/qemu-xen-traditional/cpu-exec.c:                    env->exit_request = 0;
./tools/qemu-xen-traditional/cpu-exec.c:                    env->exception_index = EXCP_INTERRUPT;
./tools/qemu-xen-traditional/cpu-exec.c:                    env->eflags = env->eflags | helper_cc_compute_all(CC_OP) | (DF & DF_MASK);
./tools/qemu-xen-traditional/cpu-exec.c:                    env->eflags &= ~(DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C);
./tools/qemu-xen-traditional/cpu-exec.c:                    cpu_m68k_flush_flags(env, env->cc_op);
./tools/qemu-xen-traditional/cpu-exec.c:                    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen-traditional/cpu-exec.c:                    env->sr = (env->sr & 0xffe0)
./tools/qemu-xen-traditional/cpu-exec.c:                              | env->cc_dest | (env->cc_x << 4);
./tools/qemu-xen-traditional/cpu-exec.c:                        (env->kqemu_enabled != 2) &&
./tools/qemu-xen-traditional/cpu-exec.c:                env->current_tb = tb;
./tools/qemu-xen-traditional/cpu-exec.c:                   infinite loop and becomes env->current_tb. Avoid
./tools/qemu-xen-traditional/cpu-exec.c:                if (unlikely (env->exit_request))
./tools/qemu-xen-traditional/cpu-exec.c:                    env->current_tb = NULL;
./tools/qemu-xen-traditional/cpu-exec.c:                while (env->current_tb) {
./tools/qemu-xen-traditional/cpu-exec.c:                    env->current_tb = NULL;
./tools/qemu-xen-traditional/cpu-exec.c:                        insns_left = env->icount_decr.u32;
./tools/qemu-xen-traditional/cpu-exec.c:                        if (env->icount_extra && insns_left >= 0) {
./tools/qemu-xen-traditional/cpu-exec.c:                            env->icount_extra += insns_left;
./tools/qemu-xen-traditional/cpu-exec.c:                            if (env->icount_extra > 0xffff) {
./tools/qemu-xen-traditional/cpu-exec.c:                                insns_left = env->icount_extra;
./tools/qemu-xen-traditional/cpu-exec.c:                            env->icount_extra -= insns_left;
./tools/qemu-xen-traditional/cpu-exec.c:                            env->icount_decr.u16.low = insns_left;
./tools/qemu-xen-traditional/cpu-exec.c:                            env->exception_index = EXCP_INTERRUPT;
./tools/qemu-xen-traditional/cpu-exec.c:                    (cpu_get_time_fast() - env->last_io_time) >= MIN_CYCLE_BEFORE_SWITCH) {
./tools/qemu-xen-traditional/cpu-exec.c:    env->eflags = env->eflags | helper_cc_compute_all(CC_OP) | (DF & DF_MASK);
./tools/qemu-xen-traditional/cpu-exec.c:    cpu_m68k_flush_flags(env, env->cc_op);
./tools/qemu-xen-traditional/cpu-exec.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen-traditional/cpu-exec.c:    env->sr = (env->sr & 0xffe0)
./tools/qemu-xen-traditional/cpu-exec.c:              | env->cc_dest | (env->cc_x << 4);
./tools/qemu-xen-traditional/cpu-exec.c:    if (!(env->cr[0] & CR0_PE_MASK) || (env->eflags & VM_MASK)) {
./tools/qemu-xen-traditional/cpu-exec.c:               env->eip, env->cr[2], env->error_code);
./tools/qemu-xen-traditional/cpu-exec.c:        raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen-traditional/cpu-exec.c:        env->hflags |= HF_SOFTMMU_MASK;
./tools/qemu-xen-traditional/cpu-exec.c:               env->nip, env->error_code, tb);
./tools/qemu-xen-traditional/cpu-exec.c:               env->PC, env->error_code, tb);
./tools/qemu-xen-traditional/cpu-exec.c:               env->nip, env->error_code, tb);
./tools/qemu-xen-traditional/cpu-exec.c:               env->nip, env->error_code, tb);
./tools/qemu-xen-traditional/hw/realview.c:            env->regs[15] = 0x80000000;
./tools/qemu-xen-traditional/hw/scsi-disk.c:    BlockInterfaceErrorAction action = drive_get_onerror(r->dev->bdrv);
./tools/qemu-xen-traditional/hw/scsi-disk.c:    if (bdrv_is_read_only(r->dev->bdrv)) {
./tools/qemu-xen-traditional/hw/r2d.c:          env->pc = (SDRAM_BASE + LINUX_LOAD_OFFSET) | 0xa0000000;
./tools/qemu-xen-traditional/hw/r2d.c:          env->pc = SDRAM_BASE | 0xa0000000; /* Start from P2 area */
./tools/qemu-xen-traditional/hw/etraxfs.c:    env->pc = bootstrap_pc;
./tools/qemu-xen-traditional/hw/etraxfs.c:            env->regs[9] = 0x40004000 + kernel_size;
./tools/qemu-xen-traditional/hw/etraxfs.c:        env->regs[8] = 0x56902387; /* RAM init magic.  */
./tools/qemu-xen-traditional/hw/etraxfs.c:            env->regs[10] = 0x87109563;
./tools/qemu-xen-traditional/hw/etraxfs.c:            env->regs[11] = high;
./tools/qemu-xen-traditional/hw/etraxfs.c:    env->pc = bootstrap_pc;
./tools/qemu-xen-traditional/hw/etraxfs.c:    printf ("pc =%x\n", env->pc);
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->pal_handler = pal_handler;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ipr[IPR_PAL_BASE] = -1ULL;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ir[0] = 1;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->pal_handler = NULL;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ipr[IPR_PAL_BASE] = palid;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->pc = env->ipr[IPR_PAL_BASE];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        if (!(env->ps >> 3)) {
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        palid = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        if (!(env->ps >> 3)) {
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        palid = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        if (!(env->ps >> 3)) {
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        palid = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        val = env->ir[16];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[0] = val;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:    pal_handler_t *pal_handler = env->pal_handler;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:    switch (env->exception_index) {
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        if (env->exception_index >= EXCP_CALL_PAL &&
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->exception_index < EXCP_CALL_PALP) {
./tools/qemu-xen-traditional/hw/alpha_palcode.c:                (env, (env->exception_index - EXCP_CALL_PAL) >> 6);
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        } else if (env->exception_index >= EXCP_CALL_PALP &&
./tools/qemu-xen-traditional/hw/alpha_palcode.c:                   env->exception_index < EXCP_CALL_PALE) {
./tools/qemu-xen-traditional/hw/alpha_palcode.c:                (env, ((env->exception_index - EXCP_CALL_PALP) >> 6) + 0x80);
./tools/qemu-xen-traditional/hw/alpha_palcode.c:    env->ipr[IPR_EXC_ADDR] &= ~1;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:    if ((env->features & FEATURE_VIRBND)) {
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->exception_index = EXCP_DFAULT;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ipr[IPR_EXC_ADDR] = address;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->exception_index = EXCP_ACCESS_VIOLATION;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ipr[IPR_EXC_ADDR] = address;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->exception_index = EXCP_FAULT_ON_READ;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ipr[IPR_EXC_ADDR] = address;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->exception_index = EXCP_FAULT_ON_EXECUTE;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ipr[IPR_EXC_ADDR] = address;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->exception_index = EXCP_FAULT_ON_WRITE;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ipr[IPR_EXC_ADDR] = address;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->exception_index = EXCP_MCHK;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ipr[IPR_EXC_ADDR] = address;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        qemu_log("CALLSYS n " TARGET_FMT_ld "\n", env->ir[0]);
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        ret = do_syscall(env, env->ir[IR_V0], env->ir[IR_A0], env->ir[IR_A1],
./tools/qemu-xen-traditional/hw/alpha_palcode.c:                         env->ir[IR_A2], env->ir[IR_A3], env->ir[IR_A4],
./tools/qemu-xen-traditional/hw/alpha_palcode.c:                         env->ir[IR_A5]);
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[IR_A3] = 0;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[IR_V0] = ret;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[IR_A3] = 1;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:            env->ir[IR_V0] = -ret;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->ir[IR_V0] = env->unique;
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        qemu_log("RDUNIQUE: " TARGET_FMT_lx "\n", env->unique);
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        env->unique = env->ir[IR_A0];
./tools/qemu-xen-traditional/hw/alpha_palcode.c:        qemu_log("WRUNIQUE: " TARGET_FMT_lx "\n", env->unique);
./tools/qemu-xen-traditional/hw/pci-hotplug.c:        qemu_system_device_hot_add(bus, PCI_SLOT(dev->devfn), 1);
./tools/qemu-xen-traditional/hw/pci-hotplug.c:                    0, pci_bus_num(dev->bus), PCI_SLOT(dev->devfn),
./tools/qemu-xen-traditional/hw/pci-hotplug.c:                    PCI_FUNC(dev->devfn));
./tools/qemu-xen-traditional/hw/xen_console.c:    if (!xendev->dev)
./tools/qemu-xen-traditional/hw/xen_console.c:        snprintf(con->console, sizeof(con->console), "%s/device/console/%d", dom, xendev->dev);
./tools/qemu-xen-traditional/hw/xen_console.c:    if (!xendev->dev)
./tools/qemu-xen-traditional/hw/xen_console.c:        con->sring = xc_gnttab_map_grant_ref(xendev->gnttabdev, con->xendev.dom,
./tools/qemu-xen-traditional/hw/xen_console.c:    if (!xendev->dev)
./tools/qemu-xen-traditional/hw/xen_console.c:        if (!xendev->gnttabdev)
./tools/qemu-xen-traditional/hw/xen_console.c:            xc_gnttab_munmap(xendev->gnttabdev, con->sring, 1);
./tools/qemu-xen-traditional/hw/mips_int.c:    if ((env->CP0_Status & (1 << CP0St_IE)) &&
./tools/qemu-xen-traditional/hw/mips_int.c:        !(env->CP0_Status & (1 << CP0St_EXL)) &&
./tools/qemu-xen-traditional/hw/mips_int.c:        !(env->CP0_Status & (1 << CP0St_ERL)) &&
./tools/qemu-xen-traditional/hw/mips_int.c:        !(env->hflags & MIPS_HFLAG_DM)) {
./tools/qemu-xen-traditional/hw/mips_int.c:        if ((env->CP0_Status & env->CP0_Cause & CP0Ca_IP_mask) &&
./tools/qemu-xen-traditional/hw/mips_int.c:            !(env->interrupt_request & CPU_INTERRUPT_HARD)) {
./tools/qemu-xen-traditional/hw/mips_int.c:        env->CP0_Cause |= 1 << (irq + CP0Ca_IP);
./tools/qemu-xen-traditional/hw/mips_int.c:        env->CP0_Cause &= ~(1 << (irq + CP0Ca_IP));
./tools/qemu-xen-traditional/hw/mips_int.c:        env->irq[i] = qi[i];
./tools/qemu-xen-traditional/hw/xen_backend.c:    return xenstore_write_str(xendev->be, node, val);
./tools/qemu-xen-traditional/hw/xen_backend.c:    return xenstore_write_int(xendev->be, node, ival);
./tools/qemu-xen-traditional/hw/xen_backend.c:    return xenstore_read_str(xendev->be, node);
./tools/qemu-xen-traditional/hw/xen_backend.c:    return xenstore_read_int(xendev->be, node, ival);
./tools/qemu-xen-traditional/hw/xen_backend.c:    return xenstore_read_str(xendev->fe, node);
./tools/qemu-xen-traditional/hw/xen_backend.c:    return xenstore_read_int(xendev->fe, node, ival);
./tools/qemu-xen-traditional/hw/xen_backend.c:		  xenbus_strstate(xendev->be_state), xenbus_strstate(state));
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->be_state = state;
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->dom != dom)
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->dev != dev)
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (strcmp(xendev->type, type) != 0)
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->type  = type;
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->dom   = dom;
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->dev   = dev;
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->ops   = ops;
./tools/qemu-xen-traditional/hw/xen_backend.c:    snprintf(xendev->be, sizeof(xendev->be), "%s/backend/%s/%d/%d",
./tools/qemu-xen-traditional/hw/xen_backend.c:	     dom0, xendev->type, xendev->dom, xendev->dev);
./tools/qemu-xen-traditional/hw/xen_backend.c:    snprintf(xendev->name, sizeof(xendev->name), "%s-%d",
./tools/qemu-xen-traditional/hw/xen_backend.c:	     xendev->type, xendev->dev);
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->debug      = debug;
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->local_port = -1;
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->evtchndev = xc_evtchn_open(NULL, 0);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->evtchndev == NULL) {
./tools/qemu-xen-traditional/hw/xen_backend.c:    fcntl(xc_evtchn_fd(xendev->evtchndev), F_SETFD, FD_CLOEXEC);
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->gnttabdev = xc_gnttab_open(NULL, 0);
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->gnttabdev == NULL) {
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xc_evtchn_close(xendev->evtchndev);
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->gnttabdev = NULL;
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->ops->alloc)
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->ops->alloc(xendev);
./tools/qemu-xen-traditional/hw/xen_backend.c:        xnext = xendev->next.tqe_next;
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->dom != dom)
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->dev != dev && dev != -1)
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->ops->free)
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xendev->ops->free(xendev);
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->fe) {
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xs_unwatch(xenstore, xendev->fe, token);
./tools/qemu-xen-traditional/hw/xen_backend.c:	    qemu_free(xendev->fe);
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->evtchndev != NULL)
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xc_evtchn_close(xendev->evtchndev);
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->gnttabdev != NULL)
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xc_gnttab_close(xendev->gnttabdev);
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xenstore_read_be_int(xendev, "online", &xendev->online) == -1)
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xendev->online = 0;
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->ops->backend_changed)
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xendev->ops->backend_changed(xendev, node);
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->fe_state != fe_state)
./tools/qemu-xen-traditional/hw/xen_backend.c:			  xenbus_strstate(xendev->fe_state),
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->fe_state = fe_state;
./tools/qemu-xen-traditional/hw/xen_backend.c:	qemu_free(xendev->protocol);
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->protocol = xenstore_read_fe_str(xendev, "protocol");
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->protocol)
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xen_be_printf(xendev, 1, "frontend protocol: %s\n", xendev->protocol);
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->ops->frontend_changed)
./tools/qemu-xen-traditional/hw/xen_backend.c:	    xendev->ops->frontend_changed(xendev, node);
./tools/qemu-xen-traditional/hw/xen_backend.c: * only affects the xendev->be_state variable as xenbus should
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->fe = xenstore_read_be_str(xendev, "frontend");
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->fe == NULL) {
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (!xs_watch(xenstore, xendev->fe, token)) {
./tools/qemu-xen-traditional/hw/xen_backend.c:		      xendev->fe);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (!xendev->online) {
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->ops->init)
./tools/qemu-xen-traditional/hw/xen_backend.c:	rc = xendev->ops->init(xendev);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->fe_state != XenbusStateInitialised  &&
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->fe_state != XenbusStateConnected) {
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->ops->flags & DEVOPS_FLAG_IGNORE_STATE) {
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->ops->initialise)
./tools/qemu-xen-traditional/hw/xen_backend.c:	rc = xendev->ops->initialise(xendev);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (!xendev->ops->connected)
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->fe_state != XenbusStateConnected) {
./tools/qemu-xen-traditional/hw/xen_backend.c:	if (xendev->ops->flags & DEVOPS_FLAG_IGNORE_STATE) {
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->ops->connected(xendev);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->be_state != XenbusStateClosing &&
./tools/qemu-xen-traditional/hw/xen_backend.c:        xendev->be_state != XenbusStateClosed  &&
./tools/qemu-xen-traditional/hw/xen_backend.c:        xendev->ops->disconnect)
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->ops->disconnect(xendev);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->be_state != state)
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->fe_state != XenbusStateInitialising)
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->fe_state == XenbusStateClosing ||
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->fe_state == XenbusStateClosed) {
./tools/qemu-xen-traditional/hw/xen_backend.c:	xen_be_disconnect(xendev, xendev->fe_state);
./tools/qemu-xen-traditional/hw/xen_backend.c:	switch (xendev->be_state) {
./tools/qemu-xen-traditional/hw/xen_backend.c:	    /* xendev->be_state doesn't change */
./tools/qemu-xen-traditional/hw/xen_backend.c:    len = strlen(xendev->fe);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (strncmp(xendev->fe, watch, len) != 0)
./tools/qemu-xen-traditional/hw/xen_backend.c:    port = xc_evtchn_pending(xendev->evtchndev);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (port != xendev->local_port) {
./tools/qemu-xen-traditional/hw/xen_backend.c:		      port, xendev->local_port);
./tools/qemu-xen-traditional/hw/xen_backend.c:    xc_evtchn_unmask(xendev->evtchndev, port);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->ops->event)
./tools/qemu-xen-traditional/hw/xen_backend.c:	xendev->ops->event(xendev);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->local_port != -1)
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->local_port = xc_evtchn_bind_interdomain
./tools/qemu-xen-traditional/hw/xen_backend.c:	(xendev->evtchndev, xendev->dom, xendev->remote_port);
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->local_port == -1) {
./tools/qemu-xen-traditional/hw/xen_backend.c:    xen_be_printf(xendev, 2, "bind evtchn port %d\n", xendev->local_port);
./tools/qemu-xen-traditional/hw/xen_backend.c:    qemu_set_fd_handler(xc_evtchn_fd(xendev->evtchndev),
./tools/qemu-xen-traditional/hw/xen_backend.c:    if (xendev->local_port == -1)
./tools/qemu-xen-traditional/hw/xen_backend.c:    qemu_set_fd_handler(xc_evtchn_fd(xendev->evtchndev), NULL, NULL, NULL);
./tools/qemu-xen-traditional/hw/xen_backend.c:    xc_evtchn_unbind(xendev->evtchndev, xendev->local_port);
./tools/qemu-xen-traditional/hw/xen_backend.c:    xen_be_printf(xendev, 2, "unbind evtchn port %d\n", xendev->local_port);
./tools/qemu-xen-traditional/hw/xen_backend.c:    xendev->local_port = -1;
./tools/qemu-xen-traditional/hw/xen_backend.c:    return xc_evtchn_notify(xendev->evtchndev, xendev->local_port);
./tools/qemu-xen-traditional/hw/xen_backend.c:        if (msg_level > xendev->debug)
./tools/qemu-xen-traditional/hw/xen_backend.c:        qemu_log("xen be: %s: ", xendev->name);
./tools/qemu-xen-traditional/hw/xen_backend.c:            fprintf(stderr, "xen be: %s: ", xendev->name);
./tools/qemu-xen-traditional/hw/nseries.c:    s->cpu->env->regs[15] = s->cpu->env->boot_info->loader_start;
./tools/qemu-xen-traditional/hw/nseries.c:    s->cpu->env->GE = 0x5;
./tools/qemu-xen-traditional/hw/nseries.c:    s->cpu->env->regs[15] = 0;
./tools/qemu-xen-traditional/hw/nseries.c:        s->cpu->env->regs[15] = OMAP2_Q2_BASE + 0x400000;
./tools/qemu-xen-traditional/hw/xenfb.c:        xendev->fe_state == XenbusStateConnected &&
./tools/qemu-xen-traditional/hw/xenfb.c:        xendev->be_state == XenbusStateConnected) {
./tools/qemu-xen-traditional/hw/ppce500_pci.c:    int devno = pci_dev->devfn >> 3, ret = 0;
./tools/qemu-xen-traditional/hw/ppce500_pci.c:           pci_dev->devfn, irq_num, ret, devno);
./tools/qemu-xen-traditional/hw/mips_mipssim.c:        env->active_tc.PC = entry;
./tools/qemu-xen-traditional/hw/mips_mipssim.c:        env->active_tc.PC = (target_long)(int32_t)0xbfc00000;
./tools/qemu-xen-traditional/hw/mips_mipssim.c:        serial_init(0x3f8, env->irq[4], 115200, serial_hds[0]);
./tools/qemu-xen-traditional/hw/mips_mipssim.c:        mipsnet_init(0x4200, env->irq[2], &nd_table[0]);
./tools/qemu-xen-traditional/hw/pxa2xx.c:            s->env->uncached_cpsr =
./tools/qemu-xen-traditional/hw/pxa2xx.c:            s->env->cp15.c1_sys = 0;
./tools/qemu-xen-traditional/hw/pxa2xx.c:            s->env->cp15.c1_coproc = 0;
./tools/qemu-xen-traditional/hw/pxa2xx.c:            s->env->cp15.c2_base0 = 0;
./tools/qemu-xen-traditional/hw/pxa2xx.c:            s->env->cp15.c3 = 0;
./tools/qemu-xen-traditional/hw/pxa2xx.c:            memset(s->env->regs, 0, 4 * 15);
./tools/qemu-xen-traditional/hw/pxa2xx.c:            s->env->regs[15] = s->pm_regs[PSPR >> 2];
./tools/qemu-xen-traditional/hw/lsi53c895a.c:        s->dma_buf = s->current_dev->get_buf(s->current_dev,
./tools/qemu-xen-traditional/hw/lsi53c895a.c:            s->current_dev->write_data(s->current_dev, s->current_tag);
./tools/qemu-xen-traditional/hw/lsi53c895a.c:            s->current_dev->read_data(s->current_dev, s->current_tag);
./tools/qemu-xen-traditional/hw/lsi53c895a.c:    n = s->current_dev->send_command(s->current_dev, s->current_tag, buf,
./tools/qemu-xen-traditional/hw/lsi53c895a.c:        s->current_dev->read_data(s->current_dev, s->current_tag);
./tools/qemu-xen-traditional/hw/lsi53c895a.c:        s->current_dev->write_data(s->current_dev, s->current_tag);
./tools/qemu-xen-traditional/hw/xen_blktap.c:				ret = ((map_new_dev(s, msg_dev->devnum) 
./tools/qemu-xen-traditional/hw/xen_blktap.c:					== msg_dev->devnum ? 0: -1));
./tools/qemu-xen-traditional/hw/mips_timer.c:        idx = lfsr % (env->tlb->nb_tlb - env->CP0_Wired) + env->CP0_Wired;
./tools/qemu-xen-traditional/hw/mips_timer.c:    if (env->CP0_Cause & (1 << CP0Ca_DC))
./tools/qemu-xen-traditional/hw/mips_timer.c:        return env->CP0_Count;
./tools/qemu-xen-traditional/hw/mips_timer.c:        return env->CP0_Count +
./tools/qemu-xen-traditional/hw/mips_timer.c:    wait = env->CP0_Compare - env->CP0_Count -
./tools/qemu-xen-traditional/hw/mips_timer.c:    qemu_mod_timer(env->timer, next);
./tools/qemu-xen-traditional/hw/mips_timer.c:    if (env->CP0_Cause & (1 << CP0Ca_DC))
./tools/qemu-xen-traditional/hw/mips_timer.c:        env->CP0_Count = count;
./tools/qemu-xen-traditional/hw/mips_timer.c:        env->CP0_Count =
./tools/qemu-xen-traditional/hw/mips_timer.c:    env->CP0_Compare = value;
./tools/qemu-xen-traditional/hw/mips_timer.c:    if (!(env->CP0_Cause & (1 << CP0Ca_DC)))
./tools/qemu-xen-traditional/hw/mips_timer.c:    if (env->insn_flags & ISA_MIPS32R2)
./tools/qemu-xen-traditional/hw/mips_timer.c:        env->CP0_Cause &= ~(1 << CP0Ca_TI);
./tools/qemu-xen-traditional/hw/mips_timer.c:    qemu_irq_lower(env->irq[(env->CP0_IntCtl >> CP0IntCtl_IPTI) & 0x7]);
./tools/qemu-xen-traditional/hw/mips_timer.c:    cpu_mips_store_count(env, env->CP0_Count);
./tools/qemu-xen-traditional/hw/mips_timer.c:    env->CP0_Count += (uint32_t)muldiv64(qemu_get_clock(vm_clock),
./tools/qemu-xen-traditional/hw/mips_timer.c:    if (env->CP0_Cause & (1 << CP0Ca_DC))
./tools/qemu-xen-traditional/hw/mips_timer.c:    env->CP0_Count++;
./tools/qemu-xen-traditional/hw/mips_timer.c:    env->CP0_Count--;
./tools/qemu-xen-traditional/hw/mips_timer.c:    if (env->insn_flags & ISA_MIPS32R2)
./tools/qemu-xen-traditional/hw/mips_timer.c:        env->CP0_Cause |= 1 << CP0Ca_TI;
./tools/qemu-xen-traditional/hw/mips_timer.c:    qemu_irq_raise(env->irq[(env->CP0_IntCtl >> CP0IntCtl_IPTI) & 0x7]);
./tools/qemu-xen-traditional/hw/mips_timer.c:    env->timer = qemu_new_timer(vm_clock, &mips_timer_cb, env);
./tools/qemu-xen-traditional/hw/mips_timer.c:    env->CP0_Compare = 0;
./tools/qemu-xen-traditional/hw/usb-net.c:                (dev->remote_wakeup << USB_DEVICE_REMOTE_WAKEUP);
./tools/qemu-xen-traditional/hw/usb-net.c:            dev->remote_wakeup = 0;
./tools/qemu-xen-traditional/hw/usb-net.c:            dev->remote_wakeup = 1;
./tools/qemu-xen-traditional/hw/usb-net.c:        dev->addr = value;
./tools/qemu-xen-traditional/hw/ppc440.c:    irqs[PPCUIC_OUTPUT_INT] = ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_INT];
./tools/qemu-xen-traditional/hw/ppc440.c:    irqs[PPCUIC_OUTPUT_CINT] = ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_CINT];
./tools/qemu-xen-traditional/hw/sun4u.c:    uint32_t pil = env->pil_in | (env->softint & ~SOFTINT_TIMER) |
./tools/qemu-xen-traditional/hw/sun4u.c:        ((env->softint & SOFTINT_TIMER) << 14);
./tools/qemu-xen-traditional/hw/sun4u.c:    if (pil && (env->interrupt_index == 0 ||
./tools/qemu-xen-traditional/hw/sun4u.c:                (env->interrupt_index & ~15) == TT_EXTINT)) {
./tools/qemu-xen-traditional/hw/sun4u.c:                int old_interrupt = env->interrupt_index;
./tools/qemu-xen-traditional/hw/sun4u.c:                env->interrupt_index = TT_EXTINT | i;
./tools/qemu-xen-traditional/hw/sun4u.c:                if (old_interrupt != env->interrupt_index) {
./tools/qemu-xen-traditional/hw/sun4u.c:    } else if (!pil && (env->interrupt_index & ~15) == TT_EXTINT) {
./tools/qemu-xen-traditional/hw/sun4u.c:        DPRINTF("Reset CPU IRQ %d\n", env->interrupt_index & 15);
./tools/qemu-xen-traditional/hw/sun4u.c:        env->interrupt_index = 0;
./tools/qemu-xen-traditional/hw/sun4u.c:        env->halted = 0;
./tools/qemu-xen-traditional/hw/sun4u.c:        env->pil_in |= 1 << irq;
./tools/qemu-xen-traditional/hw/sun4u.c:        env->pil_in &= ~(1 << irq);
./tools/qemu-xen-traditional/hw/sun4u.c:    env->tick_cmpr = TICK_INT_DIS | 0;
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_set_limit(env->tick, TICK_MAX, 1);
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_run(env->tick, 1);
./tools/qemu-xen-traditional/hw/sun4u.c:    env->stick_cmpr = TICK_INT_DIS | 0;
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_set_limit(env->stick, TICK_MAX, 1);
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_run(env->stick, 1);
./tools/qemu-xen-traditional/hw/sun4u.c:    env->hstick_cmpr = TICK_INT_DIS | 0;
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_set_limit(env->hstick, TICK_MAX, 1);
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_run(env->hstick, 1);
./tools/qemu-xen-traditional/hw/sun4u.c:    env->gregs[1] = 0; // Memory start
./tools/qemu-xen-traditional/hw/sun4u.c:    env->gregs[2] = ram_size; // Memory size
./tools/qemu-xen-traditional/hw/sun4u.c:    env->gregs[3] = 0; // Machine description XXX
./tools/qemu-xen-traditional/hw/sun4u.c:    env->pc = s->reset_addr;
./tools/qemu-xen-traditional/hw/sun4u.c:    env->npc = env->pc + 4;
./tools/qemu-xen-traditional/hw/sun4u.c:    if (!(env->tick_cmpr & TICK_INT_DIS)) {
./tools/qemu-xen-traditional/hw/sun4u.c:        env->softint |= SOFTINT_TIMER;
./tools/qemu-xen-traditional/hw/sun4u.c:    if (!(env->stick_cmpr & TICK_INT_DIS)) {
./tools/qemu-xen-traditional/hw/sun4u.c:        env->softint |= SOFTINT_STIMER;
./tools/qemu-xen-traditional/hw/sun4u.c:    if (!(env->hstick_cmpr & TICK_INT_DIS)) {
./tools/qemu-xen-traditional/hw/sun4u.c:    env->tick = ptimer_init(bh);
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_set_period(env->tick, 1ULL);
./tools/qemu-xen-traditional/hw/sun4u.c:    env->stick = ptimer_init(bh);
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_set_period(env->stick, 1ULL);
./tools/qemu-xen-traditional/hw/sun4u.c:    env->hstick = ptimer_init(bh);
./tools/qemu-xen-traditional/hw/sun4u.c:    ptimer_set_period(env->hstick, 1ULL);
./tools/qemu-xen-traditional/hw/sun4u.c:    env->pc = hwdef->prom_addr + 0x20ULL;
./tools/qemu-xen-traditional/hw/sun4u.c:    env->npc = env->pc + 4;
./tools/qemu-xen-traditional/hw/apic.c:    APICState *s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:        APICState *s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:    APICState *s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:        env->cpuid_features &= ~CPUID_APIC;
./tools/qemu-xen-traditional/hw/apic.c:    APICState *s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:    APICState *s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:    APICState *s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:        s->cpu_env->halted = 1;
./tools/qemu-xen-traditional/hw/apic.c:    if (!env->halted)
./tools/qemu-xen-traditional/hw/apic.c:    env->eip = 0;
./tools/qemu-xen-traditional/hw/apic.c:    env->halted = 0;
./tools/qemu-xen-traditional/hw/apic.c:    APICState *s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:    APICState *s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:    s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:    s = env->apic_state;
./tools/qemu-xen-traditional/hw/apic.c:    env->apic_state = s;
./tools/qemu-xen-traditional/hw/apic.c:    env->cpuid_apic_id = s->id;
./tools/qemu-xen-traditional/hw/vmmouse.c:    data[0] = env->regs[R_EAX]; data[1] = env->regs[R_EBX];
./tools/qemu-xen-traditional/hw/vmmouse.c:    data[2] = env->regs[R_ECX]; data[3] = env->regs[R_EDX];
./tools/qemu-xen-traditional/hw/vmmouse.c:    data[4] = env->regs[R_ESI]; data[5] = env->regs[R_EDI];
./tools/qemu-xen-traditional/hw/vmmouse.c:    env->regs[R_EAX] = data[0]; env->regs[R_EBX] = data[1];
./tools/qemu-xen-traditional/hw/vmmouse.c:    env->regs[R_ECX] = data[2]; env->regs[R_EDX] = data[3];
./tools/qemu-xen-traditional/hw/vmmouse.c:    env->regs[R_ESI] = data[4]; env->regs[R_EDI] = data[5];
./tools/qemu-xen-traditional/hw/usb-serial.c:            (dev->remote_wakeup << USB_DEVICE_REMOTE_WAKEUP);
./tools/qemu-xen-traditional/hw/usb-serial.c:            dev->remote_wakeup = 0;
./tools/qemu-xen-traditional/hw/usb-serial.c:            dev->remote_wakeup = 1;
./tools/qemu-xen-traditional/hw/usb-serial.c:        dev->addr = value;
./tools/qemu-xen-traditional/hw/ppc405_uc.c:    env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen-traditional/hw/ppc405_uc.c:    dbsr = env->spr[SPR_40x_DBSR];
./tools/qemu-xen-traditional/hw/ppc405_uc.c:    env->spr[SPR_40x_DBSR] = dbsr;
./tools/qemu-xen-traditional/hw/ppc405_uc.c:    env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen-traditional/hw/ppc405_uc.c:    dbsr = env->spr[SPR_40x_DBSR];
./tools/qemu-xen-traditional/hw/ppc405_uc.c:    env->spr[SPR_40x_DBSR] = dbsr;
./tools/qemu-xen-traditional/hw/ppc405_uc.c:        ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_INT];
./tools/qemu-xen-traditional/hw/ppc405_uc.c:        ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_CINT];
./tools/qemu-xen-traditional/hw/ppc405_uc.c:        ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_INT];
./tools/qemu-xen-traditional/hw/ppc405_uc.c:        ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_CINT];
./tools/qemu-xen-traditional/hw/usb-hub.c:        if (dev->speed == USB_SPEED_LOW)
./tools/qemu-xen-traditional/hw/usb-hub.c:            (dev->remote_wakeup << USB_DEVICE_REMOTE_WAKEUP);
./tools/qemu-xen-traditional/hw/usb-hub.c:            dev->remote_wakeup = 0;
./tools/qemu-xen-traditional/hw/usb-hub.c:            dev->remote_wakeup = 1;
./tools/qemu-xen-traditional/hw/usb-hub.c:        dev->addr = value;
./tools/qemu-xen-traditional/hw/usb-hub.c:            ret = dev->handle_packet(dev, p);
./tools/qemu-xen-traditional/hw/usb-hub.c:    if (dev->state == USB_STATE_DEFAULT &&
./tools/qemu-xen-traditional/hw/usb-hub.c:        dev->addr != 0 &&
./tools/qemu-xen-traditional/hw/usb-hub.c:        p->devaddr != dev->addr &&
./tools/qemu-xen-traditional/hw/usb-hid.c:            (dev->remote_wakeup << USB_DEVICE_REMOTE_WAKEUP);
./tools/qemu-xen-traditional/hw/usb-hid.c:            dev->remote_wakeup = 0;
./tools/qemu-xen-traditional/hw/usb-hid.c:            dev->remote_wakeup = 1;
./tools/qemu-xen-traditional/hw/usb-hid.c:        dev->addr = value;
./tools/qemu-xen-traditional/hw/virtio-blk.c:    BlockInterfaceErrorAction action = drive_get_onerror(req->dev->bs);
./tools/qemu-xen-traditional/hw/virtio-blk.c:    bdrv_aio_write(req->dev->bs, req->out->sector, req->buffer, req->size / 512,
./tools/qemu-xen-traditional/hw/palm.c:            cpu->env->regs[15] = 0x00000000;
./tools/qemu-xen-traditional/hw/palm.c:        cpu->env->regs[15] = palmte_binfo.loader_start;
./tools/qemu-xen-traditional/hw/esp.c:        s->current_dev->cancel_io(s->current_dev, 0);
./tools/qemu-xen-traditional/hw/esp.c:    datalen = s->current_dev->send_command(s->current_dev, 0, &buf[1], lun);
./tools/qemu-xen-traditional/hw/esp.c:            s->current_dev->read_data(s->current_dev, 0);
./tools/qemu-xen-traditional/hw/esp.c:            s->current_dev->write_data(s->current_dev, 0);
./tools/qemu-xen-traditional/hw/esp.c:            s->current_dev->write_data(s->current_dev, 0);
./tools/qemu-xen-traditional/hw/esp.c:            s->current_dev->read_data(s->current_dev, 0);
./tools/qemu-xen-traditional/hw/esp.c:        s->async_buf = s->current_dev->get_buf(s->current_dev, 0);
./tools/qemu-xen-traditional/hw/smbus.c:do { printf("smbus(%02x): " fmt , dev->i2c.address, ##args); } while (0)
./tools/qemu-xen-traditional/hw/smbus.c:    if (dev->quick_cmd)
./tools/qemu-xen-traditional/hw/smbus.c:        dev->quick_cmd(dev, recv);
./tools/qemu-xen-traditional/hw/smbus.c:    if (dev->data_len == 0) {
./tools/qemu-xen-traditional/hw/smbus.c:    } else if (dev->data_len == 1) {
./tools/qemu-xen-traditional/hw/smbus.c:        if (dev->send_byte) {
./tools/qemu-xen-traditional/hw/smbus.c:            dev->send_byte(dev, dev->data_buf[0]);
./tools/qemu-xen-traditional/hw/smbus.c:        dev->command = dev->data_buf[0];
./tools/qemu-xen-traditional/hw/smbus.c:        DPRINTF("Command %d len %d\n", dev->command, dev->data_len - 1);
./tools/qemu-xen-traditional/hw/smbus.c:        if (dev->write_data) {
./tools/qemu-xen-traditional/hw/smbus.c:            dev->write_data(dev, dev->command, dev->data_buf + 1,
./tools/qemu-xen-traditional/hw/smbus.c:                            dev->data_len - 1);
./tools/qemu-xen-traditional/hw/smbus.c:        switch (dev->mode) {
./tools/qemu-xen-traditional/hw/smbus.c:            dev->mode = SMBUS_WRITE_DATA;
./tools/qemu-xen-traditional/hw/smbus.c:            BADF("Unexpected send start condition in state %d\n", dev->mode);
./tools/qemu-xen-traditional/hw/smbus.c:            dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen-traditional/hw/smbus.c:        switch (dev->mode) {
./tools/qemu-xen-traditional/hw/smbus.c:            dev->mode = SMBUS_RECV_BYTE;
./tools/qemu-xen-traditional/hw/smbus.c:            if (dev->data_len == 0) {
./tools/qemu-xen-traditional/hw/smbus.c:                dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen-traditional/hw/smbus.c:                if (dev->data_len > 1) {
./tools/qemu-xen-traditional/hw/smbus.c:                    dev->command = dev->data_buf[0];
./tools/qemu-xen-traditional/hw/smbus.c:                    DPRINTF("%02x: Command %d\n", dev->i2c.address,
./tools/qemu-xen-traditional/hw/smbus.c:                            dev->command);
./tools/qemu-xen-traditional/hw/smbus.c:                dev->data_len = 0;
./tools/qemu-xen-traditional/hw/smbus.c:                dev->mode = SMBUS_READ_DATA;
./tools/qemu-xen-traditional/hw/smbus.c:            BADF("Unexpected recv start condition in state %d\n", dev->mode);
./tools/qemu-xen-traditional/hw/smbus.c:            dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen-traditional/hw/smbus.c:        switch (dev->mode) {
./tools/qemu-xen-traditional/hw/smbus.c:        dev->mode = SMBUS_IDLE;
./tools/qemu-xen-traditional/hw/smbus.c:        dev->data_len = 0;
./tools/qemu-xen-traditional/hw/smbus.c:        switch (dev->mode) {
./tools/qemu-xen-traditional/hw/smbus.c:            dev->mode = SMBUS_DONE;
./tools/qemu-xen-traditional/hw/smbus.c:            BADF("Unexpected NACK in state %d\n", dev->mode);
./tools/qemu-xen-traditional/hw/smbus.c:            dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen-traditional/hw/smbus.c:    switch (dev->mode) {
./tools/qemu-xen-traditional/hw/smbus.c:        if (dev->receive_byte) {
./tools/qemu-xen-traditional/hw/smbus.c:            ret = dev->receive_byte(dev);
./tools/qemu-xen-traditional/hw/smbus.c:        dev->mode = SMBUS_DONE;
./tools/qemu-xen-traditional/hw/smbus.c:        if (dev->read_data) {
./tools/qemu-xen-traditional/hw/smbus.c:            ret = dev->read_data(dev, dev->command, dev->data_len);
./tools/qemu-xen-traditional/hw/smbus.c:            dev->data_len++;
./tools/qemu-xen-traditional/hw/smbus.c:        BADF("Unexpected read in state %d\n", dev->mode);
./tools/qemu-xen-traditional/hw/smbus.c:        dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen-traditional/hw/smbus.c:    switch (dev->mode) {
./tools/qemu-xen-traditional/hw/smbus.c:        dev->data_buf[dev->data_len++] = data;
./tools/qemu-xen-traditional/hw/smbus.c:        BADF("Unexpected write in state %d\n", dev->mode);
./tools/qemu-xen-traditional/hw/smbus.c:    dev->i2c.event = smbus_i2c_event;
./tools/qemu-xen-traditional/hw/smbus.c:    dev->i2c.recv = smbus_i2c_recv;
./tools/qemu-xen-traditional/hw/smbus.c:    dev->i2c.send = smbus_i2c_send;
./tools/qemu-xen-traditional/hw/armv7m.c:	env->regs[13] = tswap32(*(uint32_t *)phys_ram_base);
./tools/qemu-xen-traditional/hw/armv7m.c:    env->thumb = pc & 1;
./tools/qemu-xen-traditional/hw/armv7m.c:    env->regs[15] = pc & ~1;
./tools/qemu-xen-traditional/hw/mainstone.c:    cpu->env->regs[15] = mainstone_binfo.loader_start;
./tools/qemu-xen-traditional/hw/bt-sdp.c:    /* TODO: extract from hid->usbdev->report_desc */
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:    switch(env->gpr[5]) {
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        if (env->gpr[6] != 1 || env->gpr[7] != 0)
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:            env->gpr[3] = 1;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:            env->gpr[3] = 0;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        if (env->gpr[6] != 0) {
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:            if (env->gpr[6] != 1 || env->gpr[7] != 0) {
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:                env->gpr[3] = 1;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[3] = 0;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[4] = (1 << 16) | 1; /* num_vmodes, cur_vmode */
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[5] = (1 << 16) | 0; /* num_depths, cur_depth_mode */
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[6] = (graphic_width << 16) | graphic_height; /* w, h */
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[7] = 85 << 16; /* refresh rate */
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[8] = (graphic_depth + 7) & ~7; /* depth (round to byte) */
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[9] = (linesize << 16) | 0; /* row_bytes, offset */
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[3] = 0;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        if (env->gpr[6] == 0 || env->gpr[6] == 1)
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:            vga_vbl_enabled = env->gpr[6];
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[3] = 0;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[3] = 0;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->gpr[3] = 0;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:        env->osi_call = vga_osi_call;
./tools/qemu-xen-traditional/hw/ppc_oldworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_INT];
./tools/qemu-xen-traditional/hw/pt-graphics.c:    host_opregion = pt_pci_host_read(real_dev->pci_dev, PCI_INTEL_OPREGION, 4);
./tools/qemu-xen-traditional/hw/pt-graphics.c:    assert(pci_dev->devfn == 0x00);
./tools/qemu-xen-traditional/hw/pt-graphics.c:    assert(pci_dev->devfn == 0x00);
./tools/qemu-xen-traditional/hw/pt-graphics.c:    if ( !gfx_passthru || real_device->pci_dev->device_class != 0x0300 )
./tools/qemu-xen-traditional/hw/pt-graphics.c:    if ( !gfx_passthru || real_device->pci_dev->device_class != 0x0300 )
./tools/qemu-xen-traditional/hw/pt-graphics.c:    if ( !gfx_passthru || real_device->pci_dev->device_class != 0x0300 )
./tools/qemu-xen-traditional/hw/i2c.c:    qemu_put_byte(f, bus->current_dev ? bus->current_dev->address : -1);
./tools/qemu-xen-traditional/hw/i2c.c:    dev->address = address;
./tools/qemu-xen-traditional/hw/i2c.c:    dev->next = bus->dev;
./tools/qemu-xen-traditional/hw/i2c.c:    dev->bus = bus;
./tools/qemu-xen-traditional/hw/i2c.c:    dev->address = address;
./tools/qemu-xen-traditional/hw/i2c.c:    for (dev = bus->dev; dev; dev = dev->next) {
./tools/qemu-xen-traditional/hw/i2c.c:        if (dev->address == address)
./tools/qemu-xen-traditional/hw/i2c.c:    dev->event(dev, recv ? I2C_START_RECV : I2C_START_SEND);
./tools/qemu-xen-traditional/hw/i2c.c:    dev->event(dev, I2C_FINISH);
./tools/qemu-xen-traditional/hw/i2c.c:    return dev->send(dev, data);
./tools/qemu-xen-traditional/hw/i2c.c:    return dev->recv(dev);
./tools/qemu-xen-traditional/hw/i2c.c:    dev->event(dev, I2C_NACK);
./tools/qemu-xen-traditional/hw/i2c.c:    qemu_put_byte(f, dev->address);
./tools/qemu-xen-traditional/hw/i2c.c:    dev->address = qemu_get_byte(f);
./tools/qemu-xen-traditional/hw/i2c.c:    if (dev->bus->saved_address == dev->address)
./tools/qemu-xen-traditional/hw/i2c.c:        dev->bus->current_dev = dev;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:            l2cap->dev->device.lmp_disconnect_slave(l2cap->link);
./tools/qemu-xen-traditional/hw/bt-l2cap.c:            l2cap->dev->device.lmp_disconnect_master(l2cap->link);
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    /* Always accept - we only get called if (dev->device->page_scan).  */
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    l2cap->link.slave = &dev->device;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    if (dev->device.reject_reason) {
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    bt_device_init(&dev->device, net);
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    dev->device.lmp_connection_request = l2cap_lmp_connection_request;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    dev->device.lmp_connection_complete = l2cap_lmp_connection_complete;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    dev->device.lmp_disconnect_master = l2cap_lmp_disconnect_host;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    dev->device.lmp_disconnect_slave = l2cap_lmp_disconnect_slave;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    dev->device.lmp_acl_data = l2cap_lmp_acl_data_slave;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    dev->device.lmp_acl_resp = l2cap_lmp_acl_data_host;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    dev->device.handle_destroy = l2cap_dummy_destroy;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    bt_device_done(&dev->device);
./tools/qemu-xen-traditional/hw/bt-l2cap.c:                        __FUNCTION__, psm, dev->device.lmp_name);
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    new_psm->next = dev->first_psm;
./tools/qemu-xen-traditional/hw/bt-l2cap.c:    dev->first_psm = new_psm;
./tools/qemu-xen-traditional/hw/etraxfs_pic.c:			env->interrupt_vector = vector;
./tools/qemu-xen-traditional/hw/etraxfs_pic.c:		env->interrupt_vector = 0;
./tools/qemu-xen-traditional/hw/smbus_eeprom.c:    printf("eeprom_quick_cmd: addr=0x%02x read=%d\n", dev->i2c.address, read);
./tools/qemu-xen-traditional/hw/smbus_eeprom.c:           dev->i2c.address, val);
./tools/qemu-xen-traditional/hw/smbus_eeprom.c:           dev->i2c.address, val);
./tools/qemu-xen-traditional/hw/smbus_eeprom.c:           dev->i2c.address, cmd, buf[0]);
./tools/qemu-xen-traditional/hw/omap_sx1.c:        cpu->env->regs[15] = sx1_binfo.loader_start;
./tools/qemu-xen-traditional/hw/omap_sx1.c:        cpu->env->regs[15] = 0x00000000;
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (LIST_EMPTY(&blkdev->freelist)) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	if (blkdev->requests_total >= max_requests)
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->requests_total++;
./tools/qemu-xen-traditional/hw/xen_disk.c:	ioreq = LIST_FIRST(&blkdev->freelist);
./tools/qemu-xen-traditional/hw/xen_disk.c:    LIST_INSERT_HEAD(&blkdev->inflight, ioreq, list);
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->requests_inflight++;
./tools/qemu-xen-traditional/hw/xen_disk.c:    LIST_INSERT_HEAD(&blkdev->finished, ioreq, list);
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->requests_inflight--;
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->requests_finished++;
./tools/qemu-xen-traditional/hw/xen_disk.c:    LIST_INSERT_HEAD(&blkdev->freelist, ioreq, list);
./tools/qemu-xen-traditional/hw/xen_disk.c:        blkdev->requests_finished--;
./tools/qemu-xen-traditional/hw/xen_disk.c:        blkdev->requests_inflight--;
./tools/qemu-xen-traditional/hw/xen_disk.c:    xen_be_printf(&blkdev->xendev, 3,
./tools/qemu-xen-traditional/hw/xen_disk.c:	xen_be_printf(&blkdev->xendev, 0, "error: unknown operation (%d)\n",
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (ioreq->req.operation != BLKIF_OP_READ && blkdev->mode[0] != 'w') {
./tools/qemu-xen-traditional/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 0, "error: write req for ro device\n");
./tools/qemu-xen-traditional/hw/xen_disk.c:    ioreq->start = ioreq->req.sector_number * blkdev->file_blk;
./tools/qemu-xen-traditional/hw/xen_disk.c:	    xen_be_printf(&blkdev->xendev, 0, "error: nr_segments too big\n");
./tools/qemu-xen-traditional/hw/xen_disk.c:	    xen_be_printf(&blkdev->xendev, 0, "error: first > last sector\n");
./tools/qemu-xen-traditional/hw/xen_disk.c:	    xen_be_printf(&blkdev->xendev, 0, "error: page crossing\n");
./tools/qemu-xen-traditional/hw/xen_disk.c:	ioreq->domids[i] = blkdev->xendev.dom;
./tools/qemu-xen-traditional/hw/xen_disk.c:	mem = ioreq->req.seg[i].first_sect * blkdev->file_blk;
./tools/qemu-xen-traditional/hw/xen_disk.c:	len = (ioreq->req.seg[i].last_sect - ioreq->req.seg[i].first_sect + 1) * blkdev->file_blk;
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (ioreq->start + ioreq->v.size > blkdev->file_size) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	xen_be_printf(&blkdev->xendev, 0, "error: access beyond end of file\n");
./tools/qemu-xen-traditional/hw/xen_disk.c:    xc_gnttab *gnt = ioreq->blkdev->xendev.gnttabdev;
./tools/qemu-xen-traditional/hw/xen_disk.c:	    xen_be_printf(&ioreq->blkdev->xendev, 0, "xc_gnttab_munmap failed: %s\n",
./tools/qemu-xen-traditional/hw/xen_disk.c:	ioreq->blkdev->cnt_map -= ioreq->v.niov;
./tools/qemu-xen-traditional/hw/xen_disk.c:		xen_be_printf(&ioreq->blkdev->xendev, 0, "xc_gnttab_munmap failed: %s\n",
./tools/qemu-xen-traditional/hw/xen_disk.c:	    ioreq->blkdev->cnt_map--;
./tools/qemu-xen-traditional/hw/xen_disk.c:    xc_gnttab *gnt = ioreq->blkdev->xendev.gnttabdev;
./tools/qemu-xen-traditional/hw/xen_disk.c:	    xen_be_printf(&ioreq->blkdev->xendev, 0,
./tools/qemu-xen-traditional/hw/xen_disk.c:			  ioreq->v.niov, strerror(errno), ioreq->blkdev->cnt_map);
./tools/qemu-xen-traditional/hw/xen_disk.c:	ioreq->blkdev->cnt_map += ioreq->v.niov;
./tools/qemu-xen-traditional/hw/xen_disk.c:		xen_be_printf(&ioreq->blkdev->xendev, 0,
./tools/qemu-xen-traditional/hw/xen_disk.c:			      ioreq->refs[i], strerror(errno), ioreq->blkdev->cnt_map);
./tools/qemu-xen-traditional/hw/xen_disk.c:	    ioreq->blkdev->cnt_map++;
./tools/qemu-xen-traditional/hw/xen_disk.c:	bdrv_flush(blkdev->bs);
./tools/qemu-xen-traditional/hw/xen_disk.c:	    rc = bdrv_read(blkdev->bs, pos / BLOCK_SIZE,
./tools/qemu-xen-traditional/hw/xen_disk.c:		xen_be_printf(&blkdev->xendev, 0, "rd I/O error (%p, len %zd)\n",
./tools/qemu-xen-traditional/hw/xen_disk.c:	    rc = bdrv_write(blkdev->bs, pos / BLOCK_SIZE,
./tools/qemu-xen-traditional/hw/xen_disk.c:		xen_be_printf(&blkdev->xendev, 0, "wr I/O error (%p, len %zd)\n",
./tools/qemu-xen-traditional/hw/xen_disk.c:	bdrv_flush(blkdev->bs);
./tools/qemu-xen-traditional/hw/xen_disk.c:        xen_be_printf(&ioreq->blkdev->xendev, 0, "%s I/O error\n",
./tools/qemu-xen-traditional/hw/xen_disk.c:	bdrv_flush(ioreq->blkdev->bs);
./tools/qemu-xen-traditional/hw/xen_disk.c:    qemu_bh_schedule(ioreq->blkdev->bh);
./tools/qemu-xen-traditional/hw/xen_disk.c:	bdrv_flush(blkdev->bs); /* FIXME: aio_flush() ??? */
./tools/qemu-xen-traditional/hw/xen_disk.c:        bdrv_aio_readv(blkdev->bs, ioreq->start / BLOCK_SIZE,
./tools/qemu-xen-traditional/hw/xen_disk.c:        bdrv_aio_writev(blkdev->bs, ioreq->start / BLOCK_SIZE,
./tools/qemu-xen-traditional/hw/xen_disk.c:    switch (blkdev->protocol) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	dst = RING_GET_RESPONSE(&blkdev->rings.native, blkdev->rings.native.rsp_prod_pvt);
./tools/qemu-xen-traditional/hw/xen_disk.c:	dst = RING_GET_RESPONSE(&blkdev->rings.x86_32, blkdev->rings.x86_32.rsp_prod_pvt);
./tools/qemu-xen-traditional/hw/xen_disk.c:	dst = RING_GET_RESPONSE(&blkdev->rings.x86_64, blkdev->rings.x86_64.rsp_prod_pvt);
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->rings.common.rsp_prod_pvt++;
./tools/qemu-xen-traditional/hw/xen_disk.c:    RING_PUSH_RESPONSES_AND_CHECK_NOTIFY(&blkdev->rings.common, send_notify);
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->rings.common.rsp_prod_pvt == blkdev->rings.common.req_cons) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	RING_FINAL_CHECK_FOR_REQUESTS(&blkdev->rings.common, have_requests);
./tools/qemu-xen-traditional/hw/xen_disk.c:    } else if (RING_HAS_UNCONSUMED_REQUESTS(&blkdev->rings.common)) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->more_work++;
./tools/qemu-xen-traditional/hw/xen_disk.c:    while (!LIST_EMPTY(&blkdev->finished)) {
./tools/qemu-xen-traditional/hw/xen_disk.c:        ioreq = LIST_FIRST(&blkdev->finished);
./tools/qemu-xen-traditional/hw/xen_disk.c:	xen_be_send_notify(&blkdev->xendev);
./tools/qemu-xen-traditional/hw/xen_disk.c:    switch (blkdev->protocol) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	memcpy(&ioreq->req, RING_GET_REQUEST(&blkdev->rings.native, rc),
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkif_get_x86_32_req(&ioreq->req, RING_GET_REQUEST(&blkdev->rings.x86_32, rc));
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkif_get_x86_64_req(&ioreq->req, RING_GET_REQUEST(&blkdev->rings.x86_64, rc));
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->more_work = 0;
./tools/qemu-xen-traditional/hw/xen_disk.c:    rc = blkdev->rings.common.req_cons;
./tools/qemu-xen-traditional/hw/xen_disk.c:    rp = blkdev->rings.common.sring->req_prod;
./tools/qemu-xen-traditional/hw/xen_disk.c:        if (RING_REQUEST_CONS_OVERFLOW(&blkdev->rings.common, rc))
./tools/qemu-xen-traditional/hw/xen_disk.c:            blkdev->more_work++;
./tools/qemu-xen-traditional/hw/xen_disk.c:        blkdev->rings.common.req_cons = ++rc;
./tools/qemu-xen-traditional/hw/xen_disk.c:                xen_be_send_notify(&blkdev->xendev);
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->more_work && blkdev->requests_inflight < max_requests)
./tools/qemu-xen-traditional/hw/xen_disk.c:        qemu_bh_schedule(blkdev->bh);
./tools/qemu-xen-traditional/hw/xen_disk.c:    LIST_INIT(&blkdev->inflight);
./tools/qemu-xen-traditional/hw/xen_disk.c:    LIST_INIT(&blkdev->finished);
./tools/qemu-xen-traditional/hw/xen_disk.c:    LIST_INIT(&blkdev->freelist);
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->bh = qemu_bh_new(blk_bh, blkdev);
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (xc_gnttab_set_max_grants(xendev->gnttabdev,
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->params == NULL) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->params = xenstore_read_be_str(&blkdev->xendev, "params");
./tools/qemu-xen-traditional/hw/xen_disk.c:        if (blkdev->params != NULL)
./tools/qemu-xen-traditional/hw/xen_disk.c:            h = strchr(blkdev->params, ':');
./tools/qemu-xen-traditional/hw/xen_disk.c:	    blkdev->fileproto = blkdev->params;
./tools/qemu-xen-traditional/hw/xen_disk.c:	    blkdev->filename  = h+1;
./tools/qemu-xen-traditional/hw/xen_disk.c:	    blkdev->fileproto = "<unset>";
./tools/qemu-xen-traditional/hw/xen_disk.c:	    blkdev->filename  = blkdev->params;
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (!strcmp("aio", blkdev->fileproto))
./tools/qemu-xen-traditional/hw/xen_disk.c:        blkdev->fileproto = "raw";
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->mode == NULL)
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->mode = xenstore_read_be_str(&blkdev->xendev, "mode");
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->type == NULL)
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->type = xenstore_read_be_str(&blkdev->xendev, "type");
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->dev == NULL)
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->dev = xenstore_read_be_str(&blkdev->xendev, "dev");
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->devtype == NULL)
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->devtype = xenstore_read_be_str(&blkdev->xendev, "device-type");
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->params == NULL ||
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->mode == NULL   ||
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->type == NULL   ||
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->dev == NULL)
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (strcmp(blkdev->mode, "w") == 0) {
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->devtype && !strcmp(blkdev->devtype, "cdrom"))
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->index = (blkdev->xendev.dev - 202 * 256) / 16;
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->index = drive_get_index(IF_XEN, 0, blkdev->index);
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->index == -1) {
./tools/qemu-xen-traditional/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 2, "create new bdrv (xenbus setup)\n");
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->bs = bdrv_new(blkdev->dev);
./tools/qemu-xen-traditional/hw/xen_disk.c:	if (blkdev->bs) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	    if (bdrv_open2(blkdev->bs, blkdev->filename, qflags,
./tools/qemu-xen-traditional/hw/xen_disk.c:                           bdrv_find_format(blkdev->fileproto)) != 0) {
./tools/qemu-xen-traditional/hw/xen_disk.c:		bdrv_delete(blkdev->bs);
./tools/qemu-xen-traditional/hw/xen_disk.c:		blkdev->bs = NULL;
./tools/qemu-xen-traditional/hw/xen_disk.c:	if (!blkdev->bs)
./tools/qemu-xen-traditional/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 2, "get configured bdrv (cmdline setup)\n");
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->bs = drives_table[blkdev->index].bdrv;
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->file_blk  = BLOCK_SIZE;
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->file_size = bdrv_getlength(blkdev->bs);
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->file_size < 0) {
./tools/qemu-xen-traditional/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 1, "bdrv_getlength: %d (%s) | drv %s\n",
./tools/qemu-xen-traditional/hw/xen_disk.c:                      (int)blkdev->file_size, strerror(-blkdev->file_size),
./tools/qemu-xen-traditional/hw/xen_disk.c:                      blkdev->bs->drv ? blkdev->bs->drv->format_name : "-");
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->file_size = 0;
./tools/qemu-xen-traditional/hw/xen_disk.c:    have_barriers = blkdev->bs->drv && blkdev->bs->drv->bdrv_flush ? 1 : 0;
./tools/qemu-xen-traditional/hw/xen_disk.c:		  blkdev->type, blkdev->fileproto, blkdev->filename,
./tools/qemu-xen-traditional/hw/xen_disk.c:		  blkdev->file_size, blkdev->file_size >> 20);
./tools/qemu-xen-traditional/hw/xen_disk.c:    xenstore_write_be_int(&blkdev->xendev, "feature-barrier", have_barriers);
./tools/qemu-xen-traditional/hw/xen_disk.c:    xenstore_write_be_int(&blkdev->xendev, "info",            info);
./tools/qemu-xen-traditional/hw/xen_disk.c:    xenstore_write_be_int(&blkdev->xendev, "sector-size",     blkdev->file_blk);
./tools/qemu-xen-traditional/hw/xen_disk.c:    xenstore_write_be_int(&blkdev->xendev, "sectors",
./tools/qemu-xen-traditional/hw/xen_disk.c:			  blkdev->file_size / blkdev->file_blk);
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (xenstore_read_fe_int(&blkdev->xendev, "ring-ref", &blkdev->ring_ref) == -1)
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (xenstore_read_fe_int(&blkdev->xendev, "event-channel",
./tools/qemu-xen-traditional/hw/xen_disk.c:                             &blkdev->xendev.remote_port) == -1)
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->protocol = BLKIF_PROTOCOL_NATIVE;
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->xendev.protocol) {
./tools/qemu-xen-traditional/hw/xen_disk.c:        if (strcmp(blkdev->xendev.protocol, XEN_IO_PROTO_ABI_X86_32) == 0)
./tools/qemu-xen-traditional/hw/xen_disk.c:            blkdev->protocol = BLKIF_PROTOCOL_X86_32;
./tools/qemu-xen-traditional/hw/xen_disk.c:        if (strcmp(blkdev->xendev.protocol, XEN_IO_PROTO_ABI_X86_64) == 0)
./tools/qemu-xen-traditional/hw/xen_disk.c:            blkdev->protocol = BLKIF_PROTOCOL_X86_64;
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->sring = xc_gnttab_map_grant_ref(blkdev->xendev.gnttabdev,
./tools/qemu-xen-traditional/hw/xen_disk.c:					    blkdev->xendev.dom,
./tools/qemu-xen-traditional/hw/xen_disk.c:					    blkdev->ring_ref,
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (!blkdev->sring)
./tools/qemu-xen-traditional/hw/xen_disk.c:    blkdev->cnt_map++;
./tools/qemu-xen-traditional/hw/xen_disk.c:    switch (blkdev->protocol) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkif_sring_t *sring_native = blkdev->sring;
./tools/qemu-xen-traditional/hw/xen_disk.c:	BACK_RING_INIT(&blkdev->rings.native, sring_native, XC_PAGE_SIZE);
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkif_x86_32_sring_t *sring_x86_32 = blkdev->sring;
./tools/qemu-xen-traditional/hw/xen_disk.c:	BACK_RING_INIT(&blkdev->rings.x86_32, sring_x86_32, XC_PAGE_SIZE);
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkif_x86_64_sring_t *sring_x86_64 = blkdev->sring;
./tools/qemu-xen-traditional/hw/xen_disk.c:	BACK_RING_INIT(&blkdev->rings.x86_64, sring_x86_64, XC_PAGE_SIZE);
./tools/qemu-xen-traditional/hw/xen_disk.c:    xen_be_bind_evtchn(&blkdev->xendev);
./tools/qemu-xen-traditional/hw/xen_disk.c:    xen_be_printf(&blkdev->xendev, 1, "ok: proto %s, ring-ref %d, "
./tools/qemu-xen-traditional/hw/xen_disk.c:		  blkdev->xendev.protocol, blkdev->ring_ref,
./tools/qemu-xen-traditional/hw/xen_disk.c:		  blkdev->xendev.remote_port, blkdev->xendev.local_port);
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->bs) {
./tools/qemu-xen-traditional/hw/xen_disk.c:        if (blkdev->index == -1) {
./tools/qemu-xen-traditional/hw/xen_disk.c:            bdrv_close(blkdev->bs);
./tools/qemu-xen-traditional/hw/xen_disk.c:            bdrv_delete(blkdev->bs);
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->bs = NULL;
./tools/qemu-xen-traditional/hw/xen_disk.c:    xen_be_unbind_evtchn(&blkdev->xendev);
./tools/qemu-xen-traditional/hw/xen_disk.c:    if (blkdev->sring) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	xc_gnttab_munmap(blkdev->xendev.gnttabdev, blkdev->sring, 1);
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->cnt_map--;
./tools/qemu-xen-traditional/hw/xen_disk.c:	blkdev->sring = NULL;
./tools/qemu-xen-traditional/hw/xen_disk.c:    while (!LIST_EMPTY(&blkdev->freelist)) {
./tools/qemu-xen-traditional/hw/xen_disk.c:	ioreq = LIST_FIRST(&blkdev->freelist);
./tools/qemu-xen-traditional/hw/xen_disk.c:    qemu_free(blkdev->params);
./tools/qemu-xen-traditional/hw/xen_disk.c:    qemu_free(blkdev->mode);
./tools/qemu-xen-traditional/hw/xen_disk.c:    qemu_free(blkdev->type);
./tools/qemu-xen-traditional/hw/xen_disk.c:    qemu_free(blkdev->dev);
./tools/qemu-xen-traditional/hw/xen_disk.c:    qemu_free(blkdev->devtype);
./tools/qemu-xen-traditional/hw/xen_disk.c:    qemu_bh_delete(blkdev->bh);
./tools/qemu-xen-traditional/hw/xen_disk.c:    qemu_bh_schedule(blkdev->bh);
./tools/qemu-xen-traditional/hw/pass-through.c: *       <ptdev->msi_trans_en is false>
./tools/qemu-xen-traditional/hw/pass-through.c: *       <ptdev->msi_trans_en is false>
./tools/qemu-xen-traditional/hw/pass-through.c: *             - Set dev->msi->pirq to '-1'.
./tools/qemu-xen-traditional/hw/pass-through.c: *       <ptdev->msi_trans_en is true>
./tools/qemu-xen-traditional/hw/pass-through.c: *       <ptdev->msi_trans_en is true>
./tools/qemu-xen-traditional/hw/pass-through.c: *         - Set dev->msi->pirq to '-1'.
./tools/qemu-xen-traditional/hw/pass-through.c:    return pci_read_byte(ptdev->pci_dev, PCI_INTERRUPT_PIN);
./tools/qemu-xen-traditional/hw/pass-through.c:    LIST_FOREACH(reg_grp_entry, &ptdev->reg_grp_tbl_head, entries)
./tools/qemu-xen-traditional/hw/pass-through.c:            dev->domain, dev->bus, dev->dev, dev->func);
./tools/qemu-xen-traditional/hw/pass-through.c:            dev->base_addr[i] |= flags;
./tools/qemu-xen-traditional/hw/pass-through.c:            dev->rom_base_addr |= flags;
./tools/qemu-xen-traditional/hw/pass-through.c:            dev->domain, dev->bus, dev->dev, dev->func);
./tools/qemu-xen-traditional/hw/pass-through.c:               dev->domain, dev->bus, dev->dev, dev->func);
./tools/qemu-xen-traditional/hw/pass-through.c:        if ( pt_pci_base_addr(pci_dev->base_addr[i]) )
./tools/qemu-xen-traditional/hw/pass-through.c:                    pt_pci_base_addr(pci_dev->base_addr[i]);
./tools/qemu-xen-traditional/hw/pass-through.c:                    pt_pci_base_addr(pci_dev->base_addr[i]);
./tools/qemu-xen-traditional/hw/pass-through.c:            if ( pci_dev->base_addr[i] & PCI_ADDRESS_SPACE_IO )
./tools/qemu-xen-traditional/hw/pass-through.c:                    (uint32_t)pci_dev->size[i], PCI_ADDRESS_SPACE_IO,
./tools/qemu-xen-traditional/hw/pass-through.c:            else if ( pci_dev->base_addr[i] & PCI_ADDRESS_SPACE_MEM_PREFETCH )
./tools/qemu-xen-traditional/hw/pass-through.c:                    (uint32_t)pci_dev->size[i], PCI_ADDRESS_SPACE_MEM_PREFETCH,
./tools/qemu-xen-traditional/hw/pass-through.c:                    (uint32_t)pci_dev->size[i], PCI_ADDRESS_SPACE_MEM,
./tools/qemu-xen-traditional/hw/pass-through.c:                (uint32_t)(pci_dev->size[i]),
./tools/qemu-xen-traditional/hw/pass-through.c:                (uint32_t)(pci_dev->base_addr[i]));
./tools/qemu-xen-traditional/hw/pass-through.c:    if ( (pci_dev->rom_base_addr & PCI_ROM_ADDRESS_MASK) && pci_dev->rom_size )
./tools/qemu-xen-traditional/hw/pass-through.c:            bar_data |= (pci_dev->rom_base_addr & PCI_ROM_ADDRESS_MASK);
./tools/qemu-xen-traditional/hw/pass-through.c:            pci_dev->rom_base_addr & PCI_ROM_ADDRESS_MASK;
./tools/qemu-xen-traditional/hw/pass-through.c:            pci_dev->rom_base_addr & PCI_ROM_ADDRESS_MASK;
./tools/qemu-xen-traditional/hw/pass-through.c:            pci_dev->rom_size, PCI_ADDRESS_SPACE_MEM_PREFETCH,
./tools/qemu-xen-traditional/hw/pass-through.c:            (uint32_t)(pci_dev->rom_size), (uint32_t)(pci_dev->rom_base_addr));
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:        ((ptdev->pci_dev->base_addr[index-1] & (PCI_BASE_ADDRESS_SPACE |
./tools/qemu-xen-traditional/hw/pass-through.c:        region = &ptdev->bases[index-1];
./tools/qemu-xen-traditional/hw/pass-through.c:    if ( ptdev->pci_dev->base_addr[index] & PCI_BASE_ADDRESS_SPACE_IO )
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *dev = (PCIDevice *)&ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    r = &dev->io_regions[bar];
./tools/qemu-xen-traditional/hw/pass-through.c:    base = &ptdev->bases[bar];
./tools/qemu-xen-traditional/hw/pass-through.c:    ret = pt_chk_bar_overlap(dev->bus, dev->devfn,
./tools/qemu-xen-traditional/hw/pass-through.c:    if (r_addr != ptdev->bases[bar].e_physbase)
./tools/qemu-xen-traditional/hw/pass-through.c:    struct pt_pm_info *pm_state = ptdev->pm_state;
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    read_val = pci_read_word(ptdev->pci_dev,
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    uint32_t aer_base = ptdev->pm_state->aer_base;
./tools/qemu-xen-traditional/hw/pass-through.c:        = pci_read_long(ptdev->pci_dev, (aer_base + offset));
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    uint32_t aer_base = ptdev->pm_state->aer_base;
./tools/qemu-xen-traditional/hw/pass-through.c:    pci_write_long(ptdev->pci_dev, (aer_base + offset), config);
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    e_device = PCI_SLOT(ptdev->dev.devfn);
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->msi_trans_en == 0 && ptdev->machine_irq)
./tools/qemu-xen-traditional/hw/pass-through.c:        if (xc_domain_unbind_pt_irq(xc_handle, domid, ptdev->machine_irq,
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->msi)
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->msix)
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    LIST_FOREACH(reg_grp_entry, &ptdev->reg_grp_tbl_head, entries)
./tools/qemu-xen-traditional/hw/pass-through.c:            ret = pci_read_block(ptdev->pci_dev, real_offset,
./tools/qemu-xen-traditional/hw/pass-through.c:            ret = pci_write_block(ptdev->pci_dev, real_offset,
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->pm_state->aer_base)
./tools/qemu-xen-traditional/hw/pass-through.c:    LIST_FOREACH(reg_grp_entry, &ptdev->reg_grp_tbl_head, entries)
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ret < 0 && ptdev->machine_irq != 0)
./tools/qemu-xen-traditional/hw/pass-through.c:        uint8_t e_device = PCI_SLOT(ptdev->dev.devfn);
./tools/qemu-xen-traditional/hw/pass-through.c:        ret = xc_domain_bind_pt_pci_irq(xc_handle, domid, ptdev->machine_irq,
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    struct pt_pm_info *pm_state = ptdev->pm_state;
./tools/qemu-xen-traditional/hw/pass-through.c:    struct pt_pm_info *pm_state = ptdev->pm_state;
./tools/qemu-xen-traditional/hw/pass-through.c:        if (dev->vendor_id == PCI_VENDOR_ID_INTEL &&
./tools/qemu-xen-traditional/hw/pass-through.c:                dev->device_id == PCI_DEVICE_ID_INTEL_82599_VF)
./tools/qemu-xen-traditional/hw/pass-through.c:    LIST_INIT(&ptdev->reg_grp_tbl_head);
./tools/qemu-xen-traditional/hw/pass-through.c:            if (pt_hide_dev_cap(ptdev->pci_dev, pt_emu_reg_grp_tbl[i].grp_id))
./tools/qemu-xen-traditional/hw/pass-through.c:            reg_grp_offset = (uint32_t)find_cap_offset(ptdev->pci_dev,
./tools/qemu-xen-traditional/hw/pass-through.c:        LIST_INSERT_HEAD(&ptdev->reg_grp_tbl_head, reg_grp_entry, entries);
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->msix)
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->msi)
./tools/qemu-xen-traditional/hw/pass-through.c:        free(ptdev->msi);
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->pm_state)
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ptdev->pm_state->pm_timer)
./tools/qemu-xen-traditional/hw/pass-through.c:            qemu_del_timer(ptdev->pm_state->pm_timer);
./tools/qemu-xen-traditional/hw/pass-through.c:            qemu_free_timer(ptdev->pm_state->pm_timer);
./tools/qemu-xen-traditional/hw/pass-through.c:            ptdev->pm_state->pm_timer = NULL;
./tools/qemu-xen-traditional/hw/pass-through.c:        free(ptdev->pm_state);
./tools/qemu-xen-traditional/hw/pass-through.c:    while((reg_grp_entry = LIST_FIRST(&ptdev->reg_grp_tbl_head)) != NULL)
./tools/qemu-xen-traditional/hw/pass-through.c:    return ptdev->pci_dev->vendor_id;
./tools/qemu-xen-traditional/hw/pass-through.c:    return ptdev->pci_dev->device_id;
./tools/qemu-xen-traditional/hw/pass-through.c:    uint32_t reg_field = (uint32_t)ptdev->dev.config[real_offset];
./tools/qemu-xen-traditional/hw/pass-through.c:            if (pt_hide_dev_cap(ptdev->pci_dev, pt_emu_reg_grp_tbl[i].grp_id))
./tools/qemu-xen-traditional/hw/pass-through.c:            if (pt_emu_reg_grp_tbl[i].grp_id == ptdev->dev.config[reg_field])
./tools/qemu-xen-traditional/hw/pass-through.c:        reg_field = (uint32_t)ptdev->dev.config[reg_field + 1];
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->bases[index].e_physbase = -1;
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->bases[index].bar_flag = pt_bar_reg_parse(ptdev, reg);
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->bases[index].bar_flag == PT_BAR_FLAG_UNUSED)
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->power_mgmt)
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->pm_state->pmc_field = *(uint16_t *)(d->config + real_offset);
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->power_mgmt)
./tools/qemu-xen-traditional/hw/pass-through.c:    cap_ver = ptdev->pm_state->pmc_field & PCI_PM_CAP_VER_MASK;
./tools/qemu-xen-traditional/hw/pass-through.c:        ptdev->pm_state->no_soft_reset = (*(uint8_t *)(d->config + real_offset)
./tools/qemu-xen-traditional/hw/pass-through.c:    switch ( pci_read_word(ptdev->pci_dev, real_offset) 
./tools/qemu-xen-traditional/hw/pass-through.c:        pci_write_word(ptdev->pci_dev, real_offset, 0);
./tools/qemu-xen-traditional/hw/pass-through.c:        pci_write_word(ptdev->pci_dev, real_offset, 0);
./tools/qemu-xen-traditional/hw/pass-through.c:        pci_write_word(ptdev->pci_dev, real_offset, 0);
./tools/qemu-xen-traditional/hw/pass-through.c:    cap_ver = (ptdev->dev.config[(real_offset - reg->offset) + PCI_EXP_FLAGS] &
./tools/qemu-xen-traditional/hw/pass-through.c:    dev_type = (ptdev->dev.config[(real_offset - reg->offset) + PCI_EXP_FLAGS] &
./tools/qemu-xen-traditional/hw/pass-through.c:    cap_ver = (ptdev->dev.config[(real_offset - reg->offset) + PCI_EXP_FLAGS] &
./tools/qemu-xen-traditional/hw/pass-through.c:    cap_ver = (ptdev->dev.config[(real_offset - reg->offset) + PCI_EXP_FLAGS] &
./tools/qemu-xen-traditional/hw/pass-through.c:         ptdev->dev.config[(real_offset - reg->offset) + PCI_EXP_LNKCAP]);
./tools/qemu-xen-traditional/hw/pass-through.c:    struct pci_dev *pdev = ptdev->pci_dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msi->flags |= (reg_field | MSI_FLAG_UNINIT);
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msi->ctrl_offset = real_offset;
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!(ptdev->msi->flags & PCI_MSI_FLAGS_64BIT))
./tools/qemu-xen-traditional/hw/pass-through.c:    uint32_t flags = ptdev->msi->flags;
./tools/qemu-xen-traditional/hw/pass-through.c:    struct pci_dev *pdev = ptdev->pci_dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msix->ctrl_offset = real_offset;
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->power_mgmt)
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->pm_state = qemu_mallocz(sizeof(struct pt_pm_info));
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->pm_state)
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->pm_state->pm_base = base_offset;
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->pm_state->aer_base = find_ext_cap_offset(ptdev->pci_dev,
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->pm_state->aer_base)
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msi = malloc(sizeof(struct pt_msi_info));
./tools/qemu-xen-traditional/hw/pass-through.c:    if ( !ptdev->msi )
./tools/qemu-xen-traditional/hw/pass-through.c:    memset(ptdev->msi, 0, sizeof(struct pt_msi_info));
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msi->pirq = -1;
./tools/qemu-xen-traditional/hw/pass-through.c:    return ptdev->dev.config[base_offset + 0x02];
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    if ( ptdev->is_virtfn )
./tools/qemu-xen-traditional/hw/pass-through.c:    *value = ptdev->pci_dev->base_addr[index];
./tools/qemu-xen-traditional/hw/pass-through.c:    switch (ptdev->bases[index].bar_flag)
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->power_mgmt)
./tools/qemu-xen-traditional/hw/pass-through.c:    if ( ptdev->is_virtfn )
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ptdev->msi_trans_en)
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ptdev->msi_trans_en)
./tools/qemu-xen-traditional/hw/pass-through.c:            if (ptdev->machine_irq)
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ioctl(ptdev->fd, PCI_IOMUL_DISABLE_IO))
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = (PCIDevice *)&ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    base = &ptdev->bases[index];
./tools/qemu-xen-traditional/hw/pass-through.c:    switch (ptdev->bases[index].bar_flag)
./tools/qemu-xen-traditional/hw/pass-through.c:    switch (ptdev->bases[index].bar_flag)
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = (PCIDevice *)&ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    base = &ptdev->bases[PCI_ROM_SLOT];
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    struct pt_pm_info *pm_state = ptdev->pm_state;
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->power_mgmt)
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->power_mgmt)
./tools/qemu-xen-traditional/hw/pass-through.c:        pci_write_word(ptdev->pci_dev,
./tools/qemu-xen-traditional/hw/pass-through.c:        *value = pci_read_word(ptdev->pci_dev,
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msi->flags |= cfg_entry->data &
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ptdev->msi->flags & MSI_FLAG_UNINIT)
./tools/qemu-xen-traditional/hw/pass-through.c:            if (ptdev->msi_trans_en) {
./tools/qemu-xen-traditional/hw/pass-through.c:            ptdev->msi->flags &= ~MSI_FLAG_UNINIT;
./tools/qemu-xen-traditional/hw/pass-through.c:            ptdev->msi->flags |= PT_MSI_MAPPED;
./tools/qemu-xen-traditional/hw/pass-through.c:        ptdev->msi->flags |= PCI_MSI_FLAGS_ENABLE;
./tools/qemu-xen-traditional/hw/pass-through.c:        ptdev->msi->flags &= ~PCI_MSI_FLAGS_ENABLE;
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->msi_trans_en) {
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msi->addr_lo = cfg_entry->data;
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ptdev->msi->flags & PT_MSI_MAPPED)
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!(ptdev->msi->flags & PCI_MSI_FLAGS_64BIT))
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msi->addr_hi = cfg_entry->data;
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ptdev->msi->flags & PT_MSI_MAPPED)
./tools/qemu-xen-traditional/hw/pass-through.c:    uint32_t flags = ptdev->msi->flags;
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msi->data = cfg_entry->data;
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ptdev->msi_trans_en) {
./tools/qemu-xen-traditional/hw/pass-through.c:    ptdev->msix->enabled = !!(*value & PCI_MSIX_ENABLE);
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    PCIDevice *d = &ptdev->dev;
./tools/qemu-xen-traditional/hw/pass-through.c:        if (ioctl(ptdev->fd, PCI_IOMUL_DISABLE_IO))
./tools/qemu-xen-traditional/hw/pass-through.c:    if (!ptdev->machine_irq)
./tools/qemu-xen-traditional/hw/pass-through.c:    if (ptdev->bases[index].bar_flag == PT_BAR_FLAG_UPPER)
./tools/qemu-xen-traditional/hw/pass-through.c:        *value = ptdev->pci_dev->base_addr[index-1] >> 32;
./tools/qemu-xen-traditional/hw/pass-through.c:        *value = ptdev->pci_dev->base_addr[index];
./tools/qemu-xen-traditional/hw/pass-through.c:    switch (ptdev->bases[index].bar_flag)
./tools/qemu-xen-traditional/hw/pass-through.c:    *value = PT_MERGE_VALUE(ptdev->pci_dev->rom_base_addr, dev_value, 
./tools/qemu-xen-traditional/hw/pass-through.c:         pci_dev = pci_dev->next)
./tools/qemu-xen-traditional/hw/pass-through.c:        if ((r_bus == pci_dev->bus) && (r_dev == pci_dev->dev)
./tools/qemu-xen-traditional/hw/pass-through.c:            && (r_func == pci_dev->func))
./tools/qemu-xen-traditional/hw/pass-through.c:        machine_irq = pci_dev->irq;
./tools/qemu-xen-traditional/hw/pass-through.c:    assigned_device = php_dev->pt_dev;
./tools/qemu-xen-traditional/hw/pass-through.c:    php_dev->valid = 0;
./tools/qemu-xen-traditional/hw/pass-through.c:    php_dev->pt_dev = NULL;
./tools/qemu-xen-traditional/hw/pass-through.c:            php_dev->r_bus,
./tools/qemu-xen-traditional/hw/pass-through.c:            php_dev->r_dev,
./tools/qemu-xen-traditional/hw/pass-through.c:            php_dev->r_func,
./tools/qemu-xen-traditional/hw/pass-through.c:            php_dev->opt);
./tools/qemu-xen-traditional/hw/pass-through.c:    php_dev->opt = NULL;
./tools/qemu-xen-traditional/hw/pc.c:    if (env->kqemu_enabled) {
./tools/qemu-xen-traditional/hw/pc.c:        i440fx_set_smm(i440fx_state, (env->hflags >> HF_SMM_SHIFT) & 1);
./tools/qemu-xen-traditional/hw/pc.c:    if (env->apic_state) {
./tools/qemu-xen-traditional/hw/pc.c:            env = env->next_cpu;
./tools/qemu-xen-traditional/hw/pc.c:            env->halted = 1;
./tools/qemu-xen-traditional/hw/pc.c:            env->cpuid_features |= CPUID_APIC;
./tools/qemu-xen-traditional/hw/usb-msd.c:            s->scsi_dev->read_data(s->scsi_dev, s->tag);
./tools/qemu-xen-traditional/hw/usb-msd.c:            s->scsi_dev->write_data(s->scsi_dev, s->tag);
./tools/qemu-xen-traditional/hw/usb-msd.c:    s->scsi_buf = s->scsi_dev->get_buf(s->scsi_dev, tag);
./tools/qemu-xen-traditional/hw/usb-msd.c:            (dev->remote_wakeup << USB_DEVICE_REMOTE_WAKEUP);
./tools/qemu-xen-traditional/hw/usb-msd.c:            dev->remote_wakeup = 0;
./tools/qemu-xen-traditional/hw/usb-msd.c:            dev->remote_wakeup = 1;
./tools/qemu-xen-traditional/hw/usb-msd.c:        dev->addr = value;
./tools/qemu-xen-traditional/hw/usb-msd.c:    s->scsi_dev->cancel_io(s->scsi_dev, s->tag);
./tools/qemu-xen-traditional/hw/usb-msd.c:            s->scsi_dev->send_command(s->scsi_dev, s->tag, cbw.cmd, 0);
./tools/qemu-xen-traditional/hw/usb-msd.c:                    s->scsi_dev->read_data(s->scsi_dev, s->tag);
./tools/qemu-xen-traditional/hw/usb-msd.c:                    s->scsi_dev->write_data(s->scsi_dev, s->tag);
./tools/qemu-xen-traditional/hw/usb-msd.c:    s->scsi_dev->destroy(s->scsi_dev);
./tools/qemu-xen-traditional/hw/apb_pci.c:    return ((pci_dev->devfn & 0x18) >> 1) + irq_num;
./tools/qemu-xen-traditional/hw/apb_pci.c:    if (pci_dev->devfn & 1)
./tools/qemu-xen-traditional/hw/tosa.c:    cpu->env->regs[15] = tosa_binfo.loader_start;
./tools/qemu-xen-traditional/hw/usb-musb.c:        if (s->port.dev->speed == USB_SPEED_LOW) {
./tools/qemu-xen-traditional/hw/usb-musb.c:        ret = s->port.dev->handle_packet(s->port.dev, &ep->packey[dir]);
./tools/qemu-xen-traditional/hw/usb-musb.c:                            s->port.dev->speed == USB_SPEED_HIGH)
./tools/qemu-xen-traditional/hw/es1370.c:    qemu_set_irq(s->pci_dev->irq[0], !!level);
./tools/qemu-xen-traditional/hw/es1370.c:    qemu_irq_lower(s->pci_dev->irq[0]);
./tools/qemu-xen-traditional/hw/mips_r4k.c:        env->active_tc.PC = entry;
./tools/qemu-xen-traditional/hw/mips_r4k.c:    i8259 = i8259_init(env->irq[2]);
./tools/qemu-xen-traditional/hw/gt64xxx.c:    slot = (pci_dev->devfn >> 3);
./tools/qemu-xen-traditional/hw/gt64xxx.c:    pic_irq = piix4_dev->config[0x60 + irq_num];
./tools/qemu-xen-traditional/hw/gt64xxx.c:            if (pic_irq == piix4_dev->config[0x60 + i])
./tools/qemu-xen-traditional/hw/ppc440_bamboo.c:        env->gpr[1] = (16<<20) - 8;
./tools/qemu-xen-traditional/hw/ppc440_bamboo.c:        env->gpr[3] = dt_base;
./tools/qemu-xen-traditional/hw/ppc440_bamboo.c:        env->nip = entry;
./tools/qemu-xen-traditional/hw/bt.c:    dev->inquiry_scan = 1;
./tools/qemu-xen-traditional/hw/bt.c:    dev->page_scan = 1;
./tools/qemu-xen-traditional/hw/bt.c:    dev->bd_addr.b[0] = bt_dev_idx & 0xff;
./tools/qemu-xen-traditional/hw/bt.c:    dev->bd_addr.b[1] = bt_dev_idx >> 8;
./tools/qemu-xen-traditional/hw/bt.c:    dev->bd_addr.b[2] = 0xd0;
./tools/qemu-xen-traditional/hw/bt.c:    dev->bd_addr.b[3] = 0xba;
./tools/qemu-xen-traditional/hw/bt.c:    dev->bd_addr.b[4] = 0xbe;
./tools/qemu-xen-traditional/hw/bt.c:    dev->bd_addr.b[5] = 0xba;
./tools/qemu-xen-traditional/hw/bt.c:    dev->lmp_connection_complete = bt_dummy_lmp_connection_complete;
./tools/qemu-xen-traditional/hw/bt.c:    dev->lmp_disconnect_master = bt_dummy_lmp_disconnect_master;
./tools/qemu-xen-traditional/hw/bt.c:    dev->lmp_acl_resp = bt_dummy_lmp_acl_resp;
./tools/qemu-xen-traditional/hw/bt.c:    dev->lmp_mode_change = bt_dummy_lmp_mode_change;
./tools/qemu-xen-traditional/hw/bt.c:    dev->lmp_connection_request = bt_dummy_lmp_connection_request;
./tools/qemu-xen-traditional/hw/bt.c:    dev->lmp_disconnect_slave = bt_dummy_lmp_disconnect_slave;
./tools/qemu-xen-traditional/hw/bt.c:    dev->handle_destroy = bt_dummy_destroy;
./tools/qemu-xen-traditional/hw/bt.c:    dev->net = net;
./tools/qemu-xen-traditional/hw/bt.c:    dev->next = net->slave;
./tools/qemu-xen-traditional/hw/bt.c:    struct bt_device_s **p = &dev->net->slave;
./tools/qemu-xen-traditional/hw/bt.c:                        dev->lmp_name ?: "(null)");
./tools/qemu-xen-traditional/hw/bt.c:    *p = dev->next;
./tools/qemu-xen-traditional/hw/an5206.c:    env->vbr = 0;
./tools/qemu-xen-traditional/hw/an5206.c:    env->mbar = AN5206_MBAR_ADDR | 1;
./tools/qemu-xen-traditional/hw/an5206.c:    env->rambar0 = AN5206_RAMBAR_ADDR | 1;
./tools/qemu-xen-traditional/hw/an5206.c:    env->pc = entry;
./tools/qemu-xen-traditional/hw/bt-hid.c:    s->usbdev->handle_reset(s->usbdev);
./tools/qemu-xen-traditional/hw/bt-hid.c:        s->dataout.len = s->usbdev->handle_data(s->usbdev, &p);
./tools/qemu-xen-traditional/hw/bt-hid.c:    s->datain.len = s->usbdev->handle_data(s->usbdev, &p);
./tools/qemu-xen-traditional/hw/bt-hid.c:        s->usbdev->handle_control(s->usbdev, SET_PROTOCOL, s->proto, 0, 0, 0);
./tools/qemu-xen-traditional/hw/bt-hid.c:        s->usbdev->handle_control(s->usbdev, GET_IDLE, 0, 0, 1,
./tools/qemu-xen-traditional/hw/bt-hid.c:        ret = s->usbdev->handle_control(s->usbdev,
./tools/qemu-xen-traditional/hw/bt-hid.c:        hid->usbdev->handle_reset(hid->usbdev);
./tools/qemu-xen-traditional/hw/bt-hid.c:    hid->usbdev->handle_destroy(hid->usbdev);
./tools/qemu-xen-traditional/hw/bt-hid.c:    s->btdev.device.lmp_name = s->usbdev->devname;
./tools/qemu-xen-traditional/hw/pxa2xx_pic.c:    if (s->cpu_env->halted) {
./tools/qemu-xen-traditional/hw/ppc_newworld.c:        env->osi_call = vga_osi_call;
./tools/qemu-xen-traditional/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_INT];
./tools/qemu-xen-traditional/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_INT];
./tools/qemu-xen-traditional/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_MCP];
./tools/qemu-xen-traditional/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_HRESET];
./tools/qemu-xen-traditional/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_INT];
./tools/qemu-xen-traditional/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_INT];
./tools/qemu-xen-traditional/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_MCP];
./tools/qemu-xen-traditional/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_HRESET];
./tools/qemu-xen-traditional/hw/pci.c:    bus->next = dev->bus->next;
./tools/qemu-xen-traditional/hw/pci.c:    dev->bus->next = bus;
./tools/qemu-xen-traditional/hw/pci.c:    id = (void*)(&pci_dev->config[PCI_SUBVENDOR_ID]);
./tools/qemu-xen-traditional/hw/pci.c:    pci_dev->bus = bus;
./tools/qemu-xen-traditional/hw/pci.c:    pci_dev->devfn = devfn;
./tools/qemu-xen-traditional/hw/pci.c:    pstrcpy(pci_dev->name, sizeof(pci_dev->name), name);
./tools/qemu-xen-traditional/hw/pci.c:    memset(pci_dev->irq_state, 0, sizeof(pci_dev->irq_state));
./tools/qemu-xen-traditional/hw/pci.c:    pci_dev->config_read = config_read;
./tools/qemu-xen-traditional/hw/pci.c:    pci_dev->config_write = config_write;
./tools/qemu-xen-traditional/hw/pci.c:    pci_dev->irq = qemu_allocate_irqs(pci_set_irq, pci_dev, 4);
./tools/qemu-xen-traditional/hw/pci.c:    PCIBus *bus = pci_dev->bus;
./tools/qemu-xen-traditional/hw/pci.c:    bus->devices[pci_dev->devfn] = NULL;
./tools/qemu-xen-traditional/hw/pci.c:        r = &pci_dev->io_regions[i];
./tools/qemu-xen-traditional/hw/pci.c:    if (pci_dev->unregister)
./tools/qemu-xen-traditional/hw/pci.c:        ret = pci_dev->unregister(pci_dev);
./tools/qemu-xen-traditional/hw/pci.c:    qemu_free_irqs(pci_dev->irq);
./tools/qemu-xen-traditional/hw/pci.c:    pci_dev->bus->devices[pci_dev->devfn] = NULL;
./tools/qemu-xen-traditional/hw/pci.c:    r = &pci_dev->io_regions[region_num];
./tools/qemu-xen-traditional/hw/pci.c:    *(uint32_t *)(pci_dev->config + addr) = cpu_to_le32(type);
./tools/qemu-xen-traditional/hw/pci.c:           pci_dev->name, config_addr, val, len);
./tools/qemu-xen-traditional/hw/pci.c:    pci_dev->config_write(pci_dev, config_addr, val, len);
./tools/qemu-xen-traditional/hw/pci.c:    val = pci_dev->config_read(pci_dev, config_addr, len);
./tools/qemu-xen-traditional/hw/pci.c:           pci_dev->name, config_addr, val, len);
./tools/qemu-xen-traditional/hw/pci.c:    change = level - pci_dev->irq_state[irq_num];
./tools/qemu-xen-traditional/hw/pci.c:    pci_dev->irq_state[irq_num] = level;
./tools/qemu-xen-traditional/hw/pci.c:        bus = pci_dev->bus;
./tools/qemu-xen-traditional/hw/pci.c:               dev->config[0xa] == 0 &&
./tools/qemu-xen-traditional/hw/pci.c:               dev->config[0xb] == 2
./tools/qemu-xen-traditional/hw/pci.c:                   region = &dev->io_regions[i];
./tools/qemu-xen-traditional/hw/mcf5208.c:    env->vbr = 0;
./tools/qemu-xen-traditional/hw/mcf5208.c:    env->pc = entry;
./tools/qemu-xen-traditional/hw/ppc405_boards.c:        env->gpr[3] = bdloc;
./tools/qemu-xen-traditional/hw/ppc405_boards.c:        env->gpr[4] = initrd_base;
./tools/qemu-xen-traditional/hw/ppc405_boards.c:        env->gpr[5] = initrd_size;
./tools/qemu-xen-traditional/hw/ppc405_boards.c:            env->gpr[6] = bdloc;
./tools/qemu-xen-traditional/hw/ppc405_boards.c:            env->gpr[7] = bdloc + len;
./tools/qemu-xen-traditional/hw/ppc405_boards.c:            env->gpr[6] = 0;
./tools/qemu-xen-traditional/hw/ppc405_boards.c:            env->gpr[7] = 0;
./tools/qemu-xen-traditional/hw/ppc405_boards.c:        env->nip = KERNEL_LOAD_ADDR;
./tools/qemu-xen-traditional/hw/usb.c:    dev->handle_packet(dev, &p);
./tools/qemu-xen-traditional/hw/arm_boot.c:    if (env->boot_info)
./tools/qemu-xen-traditional/hw/arm_boot.c:        arm_load_kernel(env, env->boot_info);
./tools/qemu-xen-traditional/hw/arm_boot.c:    if (!env->boot_info) {
./tools/qemu-xen-traditional/hw/arm_boot.c:        env->boot_info = info;
./tools/qemu-xen-traditional/hw/arm_boot.c:        env->regs[15] = entry & 0xfffffffe;
./tools/qemu-xen-traditional/hw/arm_boot.c:        env->thumb = entry & 1;
./tools/qemu-xen-traditional/hw/gumstix.c:    cpu->env->regs[15] = 0x00000000;
./tools/qemu-xen-traditional/hw/gumstix.c:    cpu->env->regs[15] = 0x00000000;
./tools/qemu-xen-traditional/hw/sh_pci.c:        cpu_to_le32w((uint32_t*)(pcic->dev->config + addr), val);
./tools/qemu-xen-traditional/hw/sh_pci.c:        return le32_to_cpup((uint32_t*)(pcic->dev->config + addr));
./tools/qemu-xen-traditional/hw/sh_pci.c:    pci_config_set_vendor_id(p->dev->config, PCI_VENDOR_ID_HITACHI);
./tools/qemu-xen-traditional/hw/sh_pci.c:    pci_config_set_device_id(p->dev->config, 0x350e); // SH7751R
./tools/qemu-xen-traditional/hw/sh_pci.c:    p->dev->config[0x04] = 0x80;
./tools/qemu-xen-traditional/hw/sh_pci.c:    p->dev->config[0x05] = 0x00;
./tools/qemu-xen-traditional/hw/sh_pci.c:    p->dev->config[0x06] = 0x90;
./tools/qemu-xen-traditional/hw/sh_pci.c:    p->dev->config[0x07] = 0x02;
./tools/qemu-xen-traditional/hw/ppc.c:        env->pending_interrupts |= 1 << n_IRQ;
./tools/qemu-xen-traditional/hw/ppc.c:        env->pending_interrupts &= ~(1 << n_IRQ);
./tools/qemu-xen-traditional/hw/ppc.c:        if (env->pending_interrupts == 0)
./tools/qemu-xen-traditional/hw/ppc.c:                env->pending_interrupts, env->interrupt_request);
./tools/qemu-xen-traditional/hw/ppc.c:    cur_level = (env->irq_input_state >> pin) & 1;
./tools/qemu-xen-traditional/hw/ppc.c:                env->halted = 1;
./tools/qemu-xen-traditional/hw/ppc.c:                env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen-traditional/hw/ppc.c:            env->irq_input_state |= 1 << pin;
./tools/qemu-xen-traditional/hw/ppc.c:            env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen-traditional/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&ppc6xx_set_irq, env,
./tools/qemu-xen-traditional/hw/ppc.c:    cur_level = (env->irq_input_state >> pin) & 1;
./tools/qemu-xen-traditional/hw/ppc.c:                env->halted = 1;
./tools/qemu-xen-traditional/hw/ppc.c:                env->halted = 0;
./tools/qemu-xen-traditional/hw/ppc.c:            env->irq_input_state |= 1 << pin;
./tools/qemu-xen-traditional/hw/ppc.c:            env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen-traditional/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&ppc970_set_irq, env,
./tools/qemu-xen-traditional/hw/ppc.c:    cur_level = (env->irq_input_state >> pin) & 1;
./tools/qemu-xen-traditional/hw/ppc.c:                env->halted = 1;
./tools/qemu-xen-traditional/hw/ppc.c:                env->halted = 0;
./tools/qemu-xen-traditional/hw/ppc.c:            env->irq_input_state |= 1 << pin;
./tools/qemu-xen-traditional/hw/ppc.c:            env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen-traditional/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&ppc40x_set_irq,
./tools/qemu-xen-traditional/hw/ppc.c:    cur_level = (env->irq_input_state >> pin) & 1;
./tools/qemu-xen-traditional/hw/ppc.c:            env->irq_input_state |= 1 << pin;
./tools/qemu-xen-traditional/hw/ppc.c:            env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen-traditional/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&ppce500_set_irq,
./tools/qemu-xen-traditional/hw/ppc.c:    return muldiv64(vmclk, tb_env->tb_freq, ticks_per_sec) + tb_offset;
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock(vm_clock), tb_env->tb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock(vm_clock), tb_env->tb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:    *tb_offsetp = value - muldiv64(vmclk, tb_env->tb_freq, ticks_per_sec);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock(vm_clock), tb_env->tb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:                     &tb_env->tb_offset, tb | (uint64_t)value);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock(vm_clock), tb_env->tb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:                     &tb_env->tb_offset, ((uint64_t)value << 32) | tb);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock(vm_clock), tb_env->atb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock(vm_clock), tb_env->atb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock(vm_clock), tb_env->atb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:                     &tb_env->atb_offset, tb | (uint64_t)value);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock(vm_clock), tb_env->atb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:                     &tb_env->atb_offset, ((uint64_t)value << 32) | tb);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    if (tb_env->tb_freq != 0) {
./tools/qemu-xen-traditional/hw/ppc.c:        tb = cpu_ppc_get_tb(tb_env, vmclk, tb_env->tb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:        atb = cpu_ppc_get_tb(tb_env, vmclk, tb_env->atb_offset);
./tools/qemu-xen-traditional/hw/ppc.c:        cpu_ppc_store_tb(tb_env, vmclk, &tb_env->tb_offset, tb);
./tools/qemu-xen-traditional/hw/ppc.c:        cpu_ppc_store_tb(tb_env, vmclk, &tb_env->atb_offset, atb);
./tools/qemu-xen-traditional/hw/ppc.c:        tb_env->tb_freq = 0;
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    if (tb_env->tb_freq == 0) {
./tools/qemu-xen-traditional/hw/ppc.c:        tb = tb_env->tb_offset;
./tools/qemu-xen-traditional/hw/ppc.c:        atb = tb_env->atb_offset;
./tools/qemu-xen-traditional/hw/ppc.c:        tb_env->tb_freq = tb_env->decr_freq;
./tools/qemu-xen-traditional/hw/ppc.c:        cpu_ppc_store_tb(tb_env, vmclk, &tb_env->tb_offset, tb);
./tools/qemu-xen-traditional/hw/ppc.c:        cpu_ppc_store_tb(tb_env, vmclk, &tb_env->atb_offset, atb);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    diff = tb_env->decr_next - qemu_get_clock(vm_clock);
./tools/qemu-xen-traditional/hw/ppc.c:        decr = muldiv64(diff, tb_env->decr_freq, ticks_per_sec);
./tools/qemu-xen-traditional/hw/ppc.c:        decr = -muldiv64(-diff, tb_env->decr_freq, ticks_per_sec);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    return _cpu_ppc_load_decr(env, &tb_env->decr_next);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    return _cpu_ppc_load_decr(env, &tb_env->hdecr_next);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    diff = qemu_get_clock(vm_clock) - tb_env->purr_start;
./tools/qemu-xen-traditional/hw/ppc.c:    return tb_env->purr_load + muldiv64(diff, tb_env->tb_freq, ticks_per_sec);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    next = now + muldiv64(value, ticks_per_sec, tb_env->decr_freq);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    __cpu_ppc_store_decr(env, &tb_env->decr_next, tb_env->decr_timer,
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    if (tb_env->hdecr_timer != NULL) {
./tools/qemu-xen-traditional/hw/ppc.c:        __cpu_ppc_store_decr(env, &tb_env->hdecr_next, tb_env->hdecr_timer,
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->purr_load = value;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->purr_start = qemu_get_clock(vm_clock);
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->tb_freq = freq;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->decr_freq = freq;
./tools/qemu-xen-traditional/hw/ppc.c:    env->tb_env = tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->decr_timer = qemu_new_timer(vm_clock, &cpu_ppc_decr_cb, env);
./tools/qemu-xen-traditional/hw/ppc.c:        tb_env->hdecr_timer = qemu_new_timer(vm_clock, &cpu_ppc_hdecr_cb, env);
./tools/qemu-xen-traditional/hw/ppc.c:        tb_env->hdecr_timer = NULL;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    ppcemb_timer = tb_env->opaque;
./tools/qemu-xen-traditional/hw/ppc.c:    switch ((env->spr[SPR_40x_TCR] >> 24) & 0x3) {
./tools/qemu-xen-traditional/hw/ppc.c:    next = now + muldiv64(next, ticks_per_sec, tb_env->tb_freq);
./tools/qemu-xen-traditional/hw/ppc.c:    env->spr[SPR_40x_TSR] |= 1 << 26;
./tools/qemu-xen-traditional/hw/ppc.c:    if ((env->spr[SPR_40x_TCR] >> 23) & 0x1)
./tools/qemu-xen-traditional/hw/ppc.c:                (int)((env->spr[SPR_40x_TCR] >> 23) & 0x1),
./tools/qemu-xen-traditional/hw/ppc.c:                env->spr[SPR_40x_TCR], env->spr[SPR_40x_TSR]);
./tools/qemu-xen-traditional/hw/ppc.c:    ppcemb_timer = tb_env->opaque;
./tools/qemu-xen-traditional/hw/ppc.c:        !((env->spr[SPR_40x_TCR] >> 26) & 0x1) ||
./tools/qemu-xen-traditional/hw/ppc.c:        (is_excp && !((env->spr[SPR_40x_TCR] >> 22) & 0x1))) {
./tools/qemu-xen-traditional/hw/ppc.c:        qemu_del_timer(tb_env->decr_timer);
./tools/qemu-xen-traditional/hw/ppc.c:                              ticks_per_sec, tb_env->decr_freq);
./tools/qemu-xen-traditional/hw/ppc.c:            next += tb_env->decr_next - now;
./tools/qemu-xen-traditional/hw/ppc.c:        qemu_mod_timer(tb_env->decr_timer, next);
./tools/qemu-xen-traditional/hw/ppc.c:        tb_env->decr_next = next;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    ppcemb_timer = tb_env->opaque;
./tools/qemu-xen-traditional/hw/ppc.c:    env->spr[SPR_40x_TSR] |= 1 << 27;
./tools/qemu-xen-traditional/hw/ppc.c:    if ((env->spr[SPR_40x_TCR] >> 26) & 0x1)
./tools/qemu-xen-traditional/hw/ppc.c:                (int)((env->spr[SPR_40x_TCR] >> 22) & 0x1),
./tools/qemu-xen-traditional/hw/ppc.c:                (int)((env->spr[SPR_40x_TCR] >> 26) & 0x1),
./tools/qemu-xen-traditional/hw/ppc.c:                env->spr[SPR_40x_TCR], env->spr[SPR_40x_TSR],
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    ppcemb_timer = tb_env->opaque;
./tools/qemu-xen-traditional/hw/ppc.c:    switch ((env->spr[SPR_40x_TCR] >> 30) & 0x3) {
./tools/qemu-xen-traditional/hw/ppc.c:    next = now + muldiv64(next, ticks_per_sec, tb_env->decr_freq);
./tools/qemu-xen-traditional/hw/ppc.c:                env->spr[SPR_40x_TCR], env->spr[SPR_40x_TSR]);
./tools/qemu-xen-traditional/hw/ppc.c:    switch ((env->spr[SPR_40x_TSR] >> 30) & 0x3) {
./tools/qemu-xen-traditional/hw/ppc.c:        env->spr[SPR_40x_TSR] |= 1 << 31;
./tools/qemu-xen-traditional/hw/ppc.c:        env->spr[SPR_40x_TSR] |= 1 << 30;
./tools/qemu-xen-traditional/hw/ppc.c:        if ((env->spr[SPR_40x_TCR] >> 27) & 0x1)
./tools/qemu-xen-traditional/hw/ppc.c:        env->spr[SPR_40x_TSR] &= ~0x30000000;
./tools/qemu-xen-traditional/hw/ppc.c:        env->spr[SPR_40x_TSR] |= env->spr[SPR_40x_TCR] & 0x30000000;
./tools/qemu-xen-traditional/hw/ppc.c:        switch ((env->spr[SPR_40x_TCR] >> 28) & 0x3) {
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    ppcemb_timer = tb_env->opaque;
./tools/qemu-xen-traditional/hw/ppc.c:    env->spr[SPR_40x_TSR] &= ~(val & 0xFC000000);
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    env->spr[SPR_40x_TCR] = val & 0xFFC00000;
./tools/qemu-xen-traditional/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->tb_freq = freq;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->decr_freq = freq;
./tools/qemu-xen-traditional/hw/ppc.c:    env->tb_env = tb_env;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->tb_freq = freq;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->decr_freq = freq;
./tools/qemu-xen-traditional/hw/ppc.c:    tb_env->opaque = ppcemb_timer;
./tools/qemu-xen-traditional/hw/ppc.c:        tb_env->decr_timer = qemu_new_timer(vm_clock, &cpu_4xx_pit_cb, env);
./tools/qemu-xen-traditional/hw/ppc.c:    dcr = &dcr_env->dcrn[dcrn];
./tools/qemu-xen-traditional/hw/ppc.c:    if (dcr_env->read_error != NULL)
./tools/qemu-xen-traditional/hw/ppc.c:        return (*dcr_env->read_error)(dcrn);
./tools/qemu-xen-traditional/hw/ppc.c:    dcr = &dcr_env->dcrn[dcrn];
./tools/qemu-xen-traditional/hw/ppc.c:    if (dcr_env->write_error != NULL)
./tools/qemu-xen-traditional/hw/ppc.c:        return (*dcr_env->write_error)(dcrn);
./tools/qemu-xen-traditional/hw/ppc.c:    dcr_env = env->dcr_env;
./tools/qemu-xen-traditional/hw/ppc.c:    dcr = &dcr_env->dcrn[dcrn];
./tools/qemu-xen-traditional/hw/ppc.c:    dcr_env->read_error = read_error;
./tools/qemu-xen-traditional/hw/ppc.c:    dcr_env->write_error = write_error;
./tools/qemu-xen-traditional/hw/ppc.c:    env->dcr_env = dcr_env;
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_set_irq(vdev->pci_dev.irq[0], vdev->isr & 1);
./tools/qemu-xen-traditional/hw/virtio.c:    if (vdev->reset)
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->reset(vdev);
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->features = 0;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->queue_sel = 0;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->status = 0;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->isr = 0;
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->vq[i].vring.desc = 0;
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->vq[i].vring.avail = 0;
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->vq[i].vring.used = 0;
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->vq[i].last_avail_idx = 0;
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->vq[i].pfn = 0;
./tools/qemu-xen-traditional/hw/virtio.c:    addr -= vdev->addr;
./tools/qemu-xen-traditional/hw/virtio.c:	    if (vdev->bad_features)
./tools/qemu-xen-traditional/hw/virtio.c:		val = vdev->bad_features(vdev);
./tools/qemu-xen-traditional/hw/virtio.c:        if (vdev->set_features)
./tools/qemu-xen-traditional/hw/virtio.c:            vdev->set_features(vdev, val);
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->features = val;
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->vq[vdev->queue_sel].pfn = val;
./tools/qemu-xen-traditional/hw/virtio.c:            virtqueue_init(&vdev->vq[vdev->queue_sel], pa);
./tools/qemu-xen-traditional/hw/virtio.c:            vdev->queue_sel = val;
./tools/qemu-xen-traditional/hw/virtio.c:        if (val < VIRTIO_PCI_QUEUE_MAX && vdev->vq[val].vring.desc)
./tools/qemu-xen-traditional/hw/virtio.c:            vdev->vq[val].handle_output(vdev, &vdev->vq[val]);
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->status = val & 0xFF;
./tools/qemu-xen-traditional/hw/virtio.c:        if (vdev->status == 0)
./tools/qemu-xen-traditional/hw/virtio.c:    addr -= vdev->addr;
./tools/qemu-xen-traditional/hw/virtio.c:        ret = vdev->get_features(vdev);
./tools/qemu-xen-traditional/hw/virtio.c:        ret = vdev->features;
./tools/qemu-xen-traditional/hw/virtio.c:        ret = vdev->vq[vdev->queue_sel].pfn;
./tools/qemu-xen-traditional/hw/virtio.c:        ret = vdev->vq[vdev->queue_sel].vring.num;
./tools/qemu-xen-traditional/hw/virtio.c:        ret = vdev->queue_sel;
./tools/qemu-xen-traditional/hw/virtio.c:        ret = vdev->status;
./tools/qemu-xen-traditional/hw/virtio.c:        ret = vdev->isr;
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->isr = 0;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->get_config(vdev, vdev->config);
./tools/qemu-xen-traditional/hw/virtio.c:    addr -= vdev->addr + VIRTIO_PCI_CONFIG;
./tools/qemu-xen-traditional/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen-traditional/hw/virtio.c:    memcpy(&val, vdev->config + addr, sizeof(val));
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->get_config(vdev, vdev->config);
./tools/qemu-xen-traditional/hw/virtio.c:    addr -= vdev->addr + VIRTIO_PCI_CONFIG;
./tools/qemu-xen-traditional/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen-traditional/hw/virtio.c:    memcpy(&val, vdev->config + addr, sizeof(val));
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->get_config(vdev, vdev->config);
./tools/qemu-xen-traditional/hw/virtio.c:    addr -= vdev->addr + VIRTIO_PCI_CONFIG;
./tools/qemu-xen-traditional/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen-traditional/hw/virtio.c:    memcpy(&val, vdev->config + addr, sizeof(val));
./tools/qemu-xen-traditional/hw/virtio.c:    addr -= vdev->addr + VIRTIO_PCI_CONFIG;
./tools/qemu-xen-traditional/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen-traditional/hw/virtio.c:    memcpy(vdev->config + addr, &val, sizeof(val));
./tools/qemu-xen-traditional/hw/virtio.c:    if (vdev->set_config)
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->set_config(vdev, vdev->config);
./tools/qemu-xen-traditional/hw/virtio.c:    addr -= vdev->addr + VIRTIO_PCI_CONFIG;
./tools/qemu-xen-traditional/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen-traditional/hw/virtio.c:    memcpy(vdev->config + addr, &val, sizeof(val));
./tools/qemu-xen-traditional/hw/virtio.c:    if (vdev->set_config)
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->set_config(vdev, vdev->config);
./tools/qemu-xen-traditional/hw/virtio.c:    addr -= vdev->addr + VIRTIO_PCI_CONFIG;
./tools/qemu-xen-traditional/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen-traditional/hw/virtio.c:    memcpy(vdev->config + addr, &val, sizeof(val));
./tools/qemu-xen-traditional/hw/virtio.c:    if (vdev->set_config)
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->set_config(vdev, vdev->config);
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->addr = addr;
./tools/qemu-xen-traditional/hw/virtio.c:    if (vdev->config_len) {
./tools/qemu-xen-traditional/hw/virtio.c:        register_ioport_write(addr + 20, vdev->config_len, 1,
./tools/qemu-xen-traditional/hw/virtio.c:        register_ioport_write(addr + 20, vdev->config_len, 2,
./tools/qemu-xen-traditional/hw/virtio.c:        register_ioport_write(addr + 20, vdev->config_len, 4,
./tools/qemu-xen-traditional/hw/virtio.c:        register_ioport_read(addr + 20, vdev->config_len, 1,
./tools/qemu-xen-traditional/hw/virtio.c:        register_ioport_read(addr + 20, vdev->config_len, 2,
./tools/qemu-xen-traditional/hw/virtio.c:        register_ioport_read(addr + 20, vdev->config_len, 4,
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->get_config(vdev, vdev->config);
./tools/qemu-xen-traditional/hw/virtio.c:        if (vdev->vq[i].vring.num == 0)
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->vq[i].vring.num = queue_size;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->vq[i].handle_output = handle_output;
./tools/qemu-xen-traditional/hw/virtio.c:    return &vdev->vq[i];
./tools/qemu-xen-traditional/hw/virtio.c:        (!(vdev->features & (1 << VIRTIO_F_NOTIFY_ON_EMPTY)) ||
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->isr |= 0x01;
./tools/qemu-xen-traditional/hw/virtio.c:    if (!(vdev->status & VIRTIO_CONFIG_S_DRIVER_OK))
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->isr |= 0x03;
./tools/qemu-xen-traditional/hw/virtio.c:    pci_device_save(&vdev->pci_dev, f);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_put_be32s(f, &vdev->addr);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_put_8s(f, &vdev->status);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_put_8s(f, &vdev->isr);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_put_be16s(f, &vdev->queue_sel);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_put_be32s(f, &vdev->features);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_put_be32(f, vdev->config_len);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_put_buffer(f, vdev->config, vdev->config_len);
./tools/qemu-xen-traditional/hw/virtio.c:        if (vdev->vq[i].vring.num == 0)
./tools/qemu-xen-traditional/hw/virtio.c:        if (vdev->vq[i].vring.num == 0)
./tools/qemu-xen-traditional/hw/virtio.c:        qemu_put_be32(f, vdev->vq[i].vring.num);
./tools/qemu-xen-traditional/hw/virtio.c:        qemu_put_be32s(f, &vdev->vq[i].pfn);
./tools/qemu-xen-traditional/hw/virtio.c:        qemu_put_be16s(f, &vdev->vq[i].last_avail_idx);
./tools/qemu-xen-traditional/hw/virtio.c:    pci_device_load(&vdev->pci_dev, f);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_get_be32s(f, &vdev->addr);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_get_8s(f, &vdev->status);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_get_8s(f, &vdev->isr);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_get_be16s(f, &vdev->queue_sel);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_get_be32s(f, &vdev->features);
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->config_len = qemu_get_be32(f);
./tools/qemu-xen-traditional/hw/virtio.c:    qemu_get_buffer(f, vdev->config, vdev->config_len);
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->vq[i].vring.num = qemu_get_be32(f);
./tools/qemu-xen-traditional/hw/virtio.c:        qemu_get_be32s(f, &vdev->vq[i].pfn);
./tools/qemu-xen-traditional/hw/virtio.c:        qemu_get_be16s(f, &vdev->vq[i].last_avail_idx);
./tools/qemu-xen-traditional/hw/virtio.c:        if (vdev->vq[i].pfn) {
./tools/qemu-xen-traditional/hw/virtio.c:            pa = (ram_addr_t)vdev->vq[i].pfn << VIRTIO_PCI_QUEUE_ADDR_SHIFT;
./tools/qemu-xen-traditional/hw/virtio.c:            virtqueue_init(&vdev->vq[i], pa);
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->status = 0;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->isr = 0;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->queue_sel = 0;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->vq = qemu_mallocz(sizeof(VirtQueue) * VIRTIO_PCI_QUEUE_MAX);
./tools/qemu-xen-traditional/hw/virtio.c:    config = pci_dev->config;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->name = name;
./tools/qemu-xen-traditional/hw/virtio.c:    vdev->config_len = config_size;
./tools/qemu-xen-traditional/hw/virtio.c:    if (vdev->config_len)
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->config = qemu_mallocz(config_size);
./tools/qemu-xen-traditional/hw/virtio.c:        vdev->config = NULL;
./tools/qemu-xen-traditional/hw/mips_jazz.c:    rc4030 = rc4030_init(env->irq[6], env->irq[3],
./tools/qemu-xen-traditional/hw/mips_jazz.c:    i8259 = i8259_init(env->irq[4]);
./tools/qemu-xen-traditional/hw/dummy_m68k.c:    env->vbr = 0;
./tools/qemu-xen-traditional/hw/dummy_m68k.c:    env->pc = entry;
./tools/qemu-xen-traditional/hw/usb-ohci.c:        if (dev->speed == USB_SPEED_LOW)
./tools/qemu-xen-traditional/hw/usb-ohci.c:            ret = dev->handle_packet(dev, &ohci->usb_packet);
./tools/qemu-xen-traditional/hw/usb-ohci.c:            ret = dev->handle_packet(dev, &ohci->usb_packet);
./tools/qemu-xen-traditional/hw/scsi-generic.c:    r->io_header.mx_sb_len = sizeof(r->dev->sensebuf);
./tools/qemu-xen-traditional/hw/scsi-generic.c:    r->io_header.sbp = r->dev->sensebuf;
./tools/qemu-xen-traditional/hw/scsi-generic.c:        r->dev->type == TYPE_TAPE) {
./tools/qemu-xen-traditional/hw/scsi-generic.c:        r->dev->blocksize = (r->buf[9] << 16) | (r->buf[10] << 8) | r->buf[11];
./tools/qemu-xen-traditional/hw/scsi-generic.c:        DPRINTF("block size %d\n", r->dev->blocksize);
./tools/qemu-xen-traditional/hw/usb-uhci.c:        if (dev->speed == USB_SPEED_LOW)
./tools/qemu-xen-traditional/hw/usb-uhci.c:            ret = dev->handle_packet(dev, p);
./tools/qemu-xen-traditional/hw/vmport.c:    eax = env->regs[R_EAX];
./tools/qemu-xen-traditional/hw/vmport.c:    command = env->regs[R_ECX];
./tools/qemu-xen-traditional/hw/vmport.c:    env->regs[R_EAX] = vmport_ioport_read(opaque, addr);
./tools/qemu-xen-traditional/hw/vmport.c:    env->regs[R_EBX] = VMPORT_MAGIC;
./tools/qemu-xen-traditional/hw/vmport.c:    env->regs[R_EBX] = 0x1177;
./tools/qemu-xen-traditional/hw/ppc4xx_pci.c:    int slot = pci_dev->devfn >> 3;
./tools/qemu-xen-traditional/hw/ppc4xx_pci.c:            pci_dev->devfn, irq_num, slot);
./tools/qemu-xen-traditional/hw/ppc4xx_pci.c:    pci_conf = controller->pci_dev->config;
./tools/qemu-xen-traditional/hw/piix_pci.c:    slot_addend = (pci_dev->devfn >> 3) - 1;
./tools/qemu-xen-traditional/hw/piix_pci.c:    return irq_num + ((pci_dev->devfn >> 3) << 2);
./tools/qemu-xen-traditional/hw/piix_pci.c:    pic_irq = piix3_dev->config[0x60 + irq_num];
./tools/qemu-xen-traditional/hw/piix_pci.c:            if (pic_irq == piix3_dev->config[0x60 + i])
./tools/qemu-xen-traditional/hw/usb-bt.c:    struct USBBtState *s = (struct USBBtState *) dev->opaque;
./tools/qemu-xen-traditional/hw/usb-bt.c:    struct USBBtState *s = (struct USBBtState *) dev->opaque;
./tools/qemu-xen-traditional/hw/usb-bt.c:            (dev->remote_wakeup << USB_DEVICE_REMOTE_WAKEUP);
./tools/qemu-xen-traditional/hw/usb-bt.c:            dev->remote_wakeup = 0;
./tools/qemu-xen-traditional/hw/usb-bt.c:            dev->remote_wakeup = 1;
./tools/qemu-xen-traditional/hw/usb-bt.c:        dev->addr = value;
./tools/qemu-xen-traditional/hw/usb-bt.c:    struct USBBtState *s = (struct USBBtState *) dev->opaque;
./tools/qemu-xen-traditional/hw/usb-bt.c:    struct USBBtState *s = (struct USBBtState *) dev->opaque;
./tools/qemu-xen-traditional/hw/ac97.c:        qemu_set_irq(s->pci_dev->irq[0], 1);
./tools/qemu-xen-traditional/hw/ac97.c:        qemu_set_irq(s->pci_dev->irq[0], 0);
./tools/qemu-xen-traditional/hw/mpcore.c:  return cpu_single_env->cpu_index;
./tools/qemu-xen-traditional/hw/usb-wacom.c:            (dev->remote_wakeup << USB_DEVICE_REMOTE_WAKEUP);
./tools/qemu-xen-traditional/hw/usb-wacom.c:            dev->remote_wakeup = 0;
./tools/qemu-xen-traditional/hw/usb-wacom.c:            dev->remote_wakeup = 1;
./tools/qemu-xen-traditional/hw/usb-wacom.c:        dev->addr = value;
./tools/qemu-xen-traditional/hw/spitz.c:    cpu->env->regs[15] = spitz_binfo.loader_start;
./tools/qemu-xen-traditional/hw/sun4m.c:    if (env->pil_in && (env->interrupt_index == 0 ||
./tools/qemu-xen-traditional/hw/sun4m.c:                        (env->interrupt_index & ~15) == TT_EXTINT)) {
./tools/qemu-xen-traditional/hw/sun4m.c:            if (env->pil_in & (1 << i)) {
./tools/qemu-xen-traditional/hw/sun4m.c:                int old_interrupt = env->interrupt_index;
./tools/qemu-xen-traditional/hw/sun4m.c:                env->interrupt_index = TT_EXTINT | i;
./tools/qemu-xen-traditional/hw/sun4m.c:                if (old_interrupt != env->interrupt_index) {
./tools/qemu-xen-traditional/hw/sun4m.c:    } else if (!env->pil_in && (env->interrupt_index & ~15) == TT_EXTINT) {
./tools/qemu-xen-traditional/hw/sun4m.c:        DPRINTF("Reset CPU IRQ %d\n", env->interrupt_index & 15);
./tools/qemu-xen-traditional/hw/sun4m.c:        env->interrupt_index = 0;
./tools/qemu-xen-traditional/hw/sun4m.c:        env->halted = 0;
./tools/qemu-xen-traditional/hw/sun4m.c:        env->pil_in |= 1 << irq;
./tools/qemu-xen-traditional/hw/sun4m.c:        env->pil_in &= ~(1 << irq);
./tools/qemu-xen-traditional/hw/sun4m.c:    env->halted = 0;
./tools/qemu-xen-traditional/hw/sun4m.c:    env->halted = 1;
./tools/qemu-xen-traditional/hw/sun4m.c:            env->halted = 1;
./tools/qemu-xen-traditional/hw/sun4m.c:        env->prom_addr = hwdef->slavio_base;
./tools/qemu-xen-traditional/hw/sun4m.c:            env->halted = 1;
./tools/qemu-xen-traditional/hw/sun4m.c:        env->prom_addr = hwdef->slavio_base;
./tools/qemu-xen-traditional/hw/sun4m.c:    env->prom_addr = hwdef->slavio_base;
./tools/qemu-xen-traditional/hw/mips_malta.c:        env->CP0_Status &= ~((1 << CP0St_BEV) | (1 << CP0St_ERL));
./tools/qemu-xen-traditional/hw/mips_malta.c:    malta_fpga = malta_fpga_init(0x1f000000LL, env->irq[2], serial_hds[2]);
./tools/qemu-xen-traditional/hw/mips_malta.c:        env->CP0_Status &= ~((1 << CP0St_BEV) | (1 << CP0St_ERL));
./tools/qemu-xen-traditional/hw/mips_malta.c:    i8259 = i8259_init(env->irq[2]);
./tools/qemu-xen-traditional/hw/fdc.c:    drv->bs = bs;
./tools/qemu-xen-traditional/hw/fdc.c:    drv->drive = FDRIVE_DRV_NONE;
./tools/qemu-xen-traditional/hw/fdc.c:    drv->perpendicular = 0;
./tools/qemu-xen-traditional/hw/fdc.c:    drv->last_sect = 0;
./tools/qemu-xen-traditional/hw/fdc.c:    drv->max_track = 0;
./tools/qemu-xen-traditional/hw/fdc.c:    return _fd_sector(drv->head, drv->track, drv->sect, drv->last_sect);
./tools/qemu-xen-traditional/hw/fdc.c:    if (track > drv->max_track ||
./tools/qemu-xen-traditional/hw/fdc.c:        (head != 0 && (drv->flags & FDISK_DBL_SIDES) == 0)) {
./tools/qemu-xen-traditional/hw/fdc.c:                       (drv->flags & FDISK_DBL_SIDES) == 0 ? 0 : 1,
./tools/qemu-xen-traditional/hw/fdc.c:                       drv->max_track, drv->last_sect);
./tools/qemu-xen-traditional/hw/fdc.c:    if (sect > drv->last_sect) {
./tools/qemu-xen-traditional/hw/fdc.c:                       (drv->flags & FDISK_DBL_SIDES) == 0 ? 0 : 1,
./tools/qemu-xen-traditional/hw/fdc.c:                       drv->max_track, drv->last_sect);
./tools/qemu-xen-traditional/hw/fdc.c:    sector = _fd_sector(head, track, sect, drv->last_sect);
./tools/qemu-xen-traditional/hw/fdc.c:                         head, track, sect, 1, drv->max_track, drv->last_sect);
./tools/qemu-xen-traditional/hw/fdc.c:        drv->head = head;
./tools/qemu-xen-traditional/hw/fdc.c:        if (drv->track != track)
./tools/qemu-xen-traditional/hw/fdc.c:        drv->track = track;
./tools/qemu-xen-traditional/hw/fdc.c:        drv->sect = sect;
./tools/qemu-xen-traditional/hw/fdc.c:    drv->head = 0;
./tools/qemu-xen-traditional/hw/fdc.c:    drv->track = 0;
./tools/qemu-xen-traditional/hw/fdc.c:    drv->sect = 1;
./tools/qemu-xen-traditional/hw/fdc.c:    if (drv->bs != NULL && bdrv_is_inserted(drv->bs)) {
./tools/qemu-xen-traditional/hw/fdc.c:        ro = bdrv_is_read_only(drv->bs);
./tools/qemu-xen-traditional/hw/fdc.c:        bdrv_get_geometry_hint(drv->bs, &nb_heads, &max_track, &last_sect);
./tools/qemu-xen-traditional/hw/fdc.c:            bdrv_get_geometry(drv->bs, &nb_sectors);
./tools/qemu-xen-traditional/hw/fdc.c:                if (drv->drive == parse->drive ||
./tools/qemu-xen-traditional/hw/fdc.c:                    drv->drive == FDRIVE_DRV_NONE) {
./tools/qemu-xen-traditional/hw/fdc.c:            drv->drive = parse->drive;
./tools/qemu-xen-traditional/hw/fdc.c:            drv->flags &= ~FDISK_DBL_SIDES;
./tools/qemu-xen-traditional/hw/fdc.c:            drv->flags |= FDISK_DBL_SIDES;
./tools/qemu-xen-traditional/hw/fdc.c:        drv->max_track = max_track;
./tools/qemu-xen-traditional/hw/fdc.c:        drv->last_sect = last_sect;
./tools/qemu-xen-traditional/hw/fdc.c:        drv->ro = ro;
./tools/qemu-xen-traditional/hw/fdc.c:        drv->last_sect = 0;
./tools/qemu-xen-traditional/hw/fdc.c:        drv->max_track = 0;
./tools/qemu-xen-traditional/hw/fdc.c:        drv->flags &= ~FDISK_DBL_SIDES;
./tools/qemu-xen-traditional/hw/fdc.c:    if (!drv->bs)
./tools/qemu-xen-traditional/hw/fdc.c:    ret = bdrv_media_changed(drv->bs);
./tools/qemu-xen-traditional/hw/fdc.c:                   cur_drv->head, cur_drv->track, cur_drv->sect,
./tools/qemu-xen-traditional/hw/fdc.c:    /* XXX: cur_drv->sect >= cur_drv->last_sect should be an
./tools/qemu-xen-traditional/hw/fdc.c:    if (cur_drv->sect >= cur_drv->last_sect ||
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->sect == fdctrl->eot) {
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->sect = 1;
./tools/qemu-xen-traditional/hw/fdc.c:            if (cur_drv->head == 0 &&
./tools/qemu-xen-traditional/hw/fdc.c:                (cur_drv->flags & FDISK_DBL_SIDES) != 0) {
./tools/qemu-xen-traditional/hw/fdc.c:                cur_drv->head = 1;
./tools/qemu-xen-traditional/hw/fdc.c:                cur_drv->head = 0;
./tools/qemu-xen-traditional/hw/fdc.c:                cur_drv->track++;
./tools/qemu-xen-traditional/hw/fdc.c:                if ((cur_drv->flags & FDISK_DBL_SIDES) == 0)
./tools/qemu-xen-traditional/hw/fdc.c:            cur_drv->track++;
./tools/qemu-xen-traditional/hw/fdc.c:                       cur_drv->head, cur_drv->track,
./tools/qemu-xen-traditional/hw/fdc.c:                       cur_drv->sect, fd_sector(cur_drv));
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->sect++;
./tools/qemu-xen-traditional/hw/fdc.c:                   status0 | (cur_drv->head << 2) | GET_CUR_DRV(fdctrl));
./tools/qemu-xen-traditional/hw/fdc.c:    fdctrl->fifo[0] = status0 | (cur_drv->head << 2) | GET_CUR_DRV(fdctrl);
./tools/qemu-xen-traditional/hw/fdc.c:    fdctrl->fifo[3] = cur_drv->track;
./tools/qemu-xen-traditional/hw/fdc.c:    fdctrl->fifo[4] = cur_drv->head;
./tools/qemu-xen-traditional/hw/fdc.c:    fdctrl->fifo[5] = cur_drv->sect;
./tools/qemu-xen-traditional/hw/fdc.c:                   _fd_sector(kh, kt, ks, cur_drv->last_sect));
./tools/qemu-xen-traditional/hw/fdc.c:                       (cur_drv->last_sect - ks + 1), fdctrl->data_len);
./tools/qemu-xen-traditional/hw/fdc.c:    if (cur_drv->bs == NULL) {
./tools/qemu-xen-traditional/hw/fdc.c:                       fdctrl->data_len, GET_CUR_DRV(fdctrl), cur_drv->head,
./tools/qemu-xen-traditional/hw/fdc.c:                       cur_drv->track, cur_drv->sect, fd_sector(cur_drv),
./tools/qemu-xen-traditional/hw/fdc.c:            if (bdrv_read(cur_drv->bs, fd_sector(cur_drv),
./tools/qemu-xen-traditional/hw/fdc.c:            if (bdrv_write(cur_drv->bs, fd_sector(cur_drv),
./tools/qemu-xen-traditional/hw/fdc.c:            if (bdrv_read(cur_drv->bs, fd_sector(cur_drv), fdctrl->fifo, 1) < 0) {
./tools/qemu-xen-traditional/hw/fdc.c:                   _fd_sector(kh, kt, ks, cur_drv->last_sect));
./tools/qemu-xen-traditional/hw/fdc.c:    if (cur_drv->bs == NULL ||
./tools/qemu-xen-traditional/hw/fdc.c:        bdrv_write(cur_drv->bs, fd_sector(cur_drv), fdctrl->fifo, 1) < 0) {
./tools/qemu-xen-traditional/hw/fdc.c:        if (cur_drv->sect == cur_drv->last_sect) {
./tools/qemu-xen-traditional/hw/fdc.c:    fdctrl->fifo[6] = cur_drv->last_sect;
./tools/qemu-xen-traditional/hw/fdc.c:        (cur_drv->perpendicular << 2);
./tools/qemu-xen-traditional/hw/fdc.c:    cur_drv->last_sect = fdctrl->fifo[9];
./tools/qemu-xen-traditional/hw/fdc.c:    cur_drv->perpendicular = (fdctrl->fifo[10] >> 2) & 0xF;
./tools/qemu-xen-traditional/hw/fdc.c:    fdctrl->fifo[8] = cur_drv->last_sect;
./tools/qemu-xen-traditional/hw/fdc.c:        (cur_drv->perpendicular << 2);
./tools/qemu-xen-traditional/hw/fdc.c:    cur_drv->head = (fdctrl->fifo[1] >> 2) & 1;
./tools/qemu-xen-traditional/hw/fdc.c:    cur_drv->bps =
./tools/qemu-xen-traditional/hw/fdc.c:    cur_drv->last_sect =
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->flags & FDISK_DBL_SIDES ? fdctrl->fifo[3] :
./tools/qemu-xen-traditional/hw/fdc.c:    cur_drv->last_sect = fdctrl->fifo[3];
./tools/qemu-xen-traditional/hw/fdc.c:    cur_drv->head = (fdctrl->fifo[1] >> 2) & 1;
./tools/qemu-xen-traditional/hw/fdc.c:    fdctrl->fifo[0] = (cur_drv->ro << 6) |
./tools/qemu-xen-traditional/hw/fdc.c:        (cur_drv->track == 0 ? 0x10 : 0x00) |
./tools/qemu-xen-traditional/hw/fdc.c:        (cur_drv->head << 2) |
./tools/qemu-xen-traditional/hw/fdc.c:            FD_SR0_SEEK | (cur_drv->head << 2) | GET_CUR_DRV(fdctrl);
./tools/qemu-xen-traditional/hw/fdc.c:    fdctrl->fifo[1] = cur_drv->track;
./tools/qemu-xen-traditional/hw/fdc.c:    if (fdctrl->fifo[2] > cur_drv->max_track) {
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->track = fdctrl->fifo[2];
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->perpendicular = fdctrl->fifo[1] & 0x7;
./tools/qemu-xen-traditional/hw/fdc.c:            (cur_drv->head << 2) | GET_CUR_DRV(fdctrl);
./tools/qemu-xen-traditional/hw/fdc.c:    if (fdctrl->fifo[2] + cur_drv->track >= cur_drv->max_track) {
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->track = cur_drv->max_track - 1;
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->track += fdctrl->fifo[2];
./tools/qemu-xen-traditional/hw/fdc.c:    if (fdctrl->fifo[2] > cur_drv->track) {
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->track = 0;
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->track -= fdctrl->fifo[2];
./tools/qemu-xen-traditional/hw/fdc.c:            if (bdrv_write(cur_drv->bs, fd_sector(cur_drv), fdctrl->fifo, 1) < 0) {
./tools/qemu-xen-traditional/hw/fdc.c:    if (cur_drv->last_sect != 0) {
./tools/qemu-xen-traditional/hw/fdc.c:        cur_drv->sect = (cur_drv->sect % cur_drv->last_sect) + 1;
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (!dev->msi)
./tools/qemu-xen-traditional/hw/pt-msi.c:    address = dev->msi->ctrl_offset;
./tools/qemu-xen-traditional/hw/pt-msi.c:    val = pci_read_word(dev->pci_dev, address);
./tools/qemu-xen-traditional/hw/pt-msi.c:    pci_write_word(dev->pci_dev, address, val);
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (!dev->msix)
./tools/qemu-xen-traditional/hw/pt-msi.c:    address = dev->msix->ctrl_offset;
./tools/qemu-xen-traditional/hw/pt-msi.c:    val = pci_read_word(dev->pci_dev, address);
./tools/qemu-xen-traditional/hw/pt-msi.c:    pci_write_word(dev->pci_dev, address, val);
./tools/qemu-xen-traditional/hw/pt-msi.c:    if ( !(dev->msi->flags & MSI_FLAG_UNINIT) )
./tools/qemu-xen-traditional/hw/pt-msi.c:    gvec = dev->msi->data & 0xFF;
./tools/qemu-xen-traditional/hw/pt-msi.c:        pirq = (dev->msi->addr_hi & 0xffffff00) |
./tools/qemu-xen-traditional/hw/pt-msi.c:               ((dev->msi->addr_lo >> MSI_TARGET_CPU_SHIFT) & 0xff);
./tools/qemu-xen-traditional/hw/pt-msi.c:                                 PCI_DEVFN(dev->pci_dev->dev,
./tools/qemu-xen-traditional/hw/pt-msi.c:                                           dev->pci_dev->func),
./tools/qemu-xen-traditional/hw/pt-msi.c:                                 dev->pci_dev->bus, 0, 0) )
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msi->pirq = pirq;
./tools/qemu-xen-traditional/hw/pt-msi.c:    PCIDevice *d = &dev->dev;
./tools/qemu-xen-traditional/hw/pt-msi.c:    e_device = PCI_SLOT(dev->dev.devfn);
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (dev->msi_trans_en)
./tools/qemu-xen-traditional/hw/pt-msi.c:        if (xc_domain_unbind_pt_irq(xc_handle, domid, dev->msi->pirq,
./tools/qemu-xen-traditional/hw/pt-msi.c:    else if (!(dev->msi->flags & MSI_FLAG_UNINIT))
./tools/qemu-xen-traditional/hw/pt-msi.c:        gvec = dev->msi->data & 0xFF;
./tools/qemu-xen-traditional/hw/pt-msi.c:        addr = (uint64_t)dev->msi->addr_hi << 32 | dev->msi->addr_lo;
./tools/qemu-xen-traditional/hw/pt-msi.c:        gflags = __get_msi_gflags(dev->msi->data, addr);
./tools/qemu-xen-traditional/hw/pt-msi.c:                dev->msi->pirq, gvec);
./tools/qemu-xen-traditional/hw/pt-msi.c:                                        dev->msi->pirq, gflags))
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (dev->msi->pirq != -1)
./tools/qemu-xen-traditional/hw/pt-msi.c:        PT_LOG("Unmap msi with pirq %x\n", dev->msi->pirq);
./tools/qemu-xen-traditional/hw/pt-msi.c:        if (xc_physdev_unmap_pirq(xc_handle, domid, dev->msi->pirq))
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msi->flags = 0;
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msi->pirq = -1;
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msi_trans_en = 0;
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (!(dev->msi && dev->msi_trans_cap))
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msi_trans_en = 0;
./tools/qemu-xen-traditional/hw/pt-msi.c:    e_device = PCI_SLOT(dev->dev.devfn);
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (xc_domain_bind_pt_irq(xc_handle, domid, dev->msi->pirq,
./tools/qemu-xen-traditional/hw/pt-msi.c:        if (xc_physdev_unmap_pirq(xc_handle, domid, dev->msi->pirq))
./tools/qemu-xen-traditional/hw/pt-msi.c:        dev->msi->pirq = -1;
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msi_trans_en = 1;
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msi->flags |= MSI_FLAG_UNINIT;
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (dev->machine_irq)
./tools/qemu-xen-traditional/hw/pt-msi.c:        if (xc_domain_bind_pt_pci_irq(xc_handle, domid, dev->machine_irq,
./tools/qemu-xen-traditional/hw/pt-msi.c:    struct msix_entry_info *entry = &dev->msix->msix_entry[entry_nr];
./tools/qemu-xen-traditional/hw/pt-msi.c:                                PCI_DEVFN(dev->pci_dev->dev,
./tools/qemu-xen-traditional/hw/pt-msi.c:                                          dev->pci_dev->func),
./tools/qemu-xen-traditional/hw/pt-msi.c:                                dev->pci_dev->bus, entry_nr,
./tools/qemu-xen-traditional/hw/pt-msi.c:                                dev->msix->table_base);
./tools/qemu-xen-traditional/hw/pt-msi.c:                                   dev->msix->mmio_base_addr);
./tools/qemu-xen-traditional/hw/pt-msi.c:    struct pt_msix_info *msix = dev->msix;
./tools/qemu-xen-traditional/hw/pt-msi.c:    PCIDevice *d = &dev->dev;
./tools/qemu-xen-traditional/hw/pt-msi.c:    for ( i = 0; i < dev->msix->total_entries; i++ )
./tools/qemu-xen-traditional/hw/pt-msi.c:        entry = &dev->msix->msix_entry[i];
./tools/qemu-xen-traditional/hw/pt-msi.c:    if ( !(dev->msix && dev->msix->bar_index == bar_index) )
./tools/qemu-xen-traditional/hw/pt-msi.c:    for ( i = 0; i < dev->msix->total_entries; i++ )
./tools/qemu-xen-traditional/hw/pt-msi.c:        entry = &dev->msix->msix_entry[i];
./tools/qemu-xen-traditional/hw/pt-msi.c:    struct pt_msix_info *msix = dev->msix;
./tools/qemu-xen-traditional/hw/pt-msi.c:    struct pt_msix_info *msix = dev->msix;
./tools/qemu-xen-traditional/hw/pt-msi.c:    if ( !(dev->msix && dev->msix->bar_index == bar_index) )
./tools/qemu-xen-traditional/hw/pt-msi.c:    struct pci_dev *pd = dev->pci_dev;
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix = malloc(sizeof(struct pt_msix_info)
./tools/qemu-xen-traditional/hw/pt-msi.c:    if ( !dev->msix )
./tools/qemu-xen-traditional/hw/pt-msi.c:    memset(dev->msix, 0, sizeof(struct pt_msix_info)
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix->total_entries = total_entries;
./tools/qemu-xen-traditional/hw/pt-msi.c:        dev->msix->msix_entry[i].pirq = -1;
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix->mmio_index =
./tools/qemu-xen-traditional/hw/pt-msi.c:    bar_index = dev->msix->bar_index = table_off & PCI_MSIX_BIR;
./tools/qemu-xen-traditional/hw/pt-msi.c:    table_off = dev->msix->table_off = table_off & ~PCI_MSIX_BIR;
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix->table_base = pt_pci_base_addr(dev->pci_dev->base_addr[bar_index]);
./tools/qemu-xen-traditional/hw/pt-msi.c:           (unsigned long long)dev->msix->table_base);
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix->table_offset_adjust = table_off & 0x0fff;
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix->phys_iomem_base = mmap(0, total_entries * 16 + dev->msix->table_offset_adjust,
./tools/qemu-xen-traditional/hw/pt-msi.c:                          fd, dev->msix->table_base + table_off - dev->msix->table_offset_adjust);
./tools/qemu-xen-traditional/hw/pt-msi.c:    if ( dev->msix->phys_iomem_base == MAP_FAILED )
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix->phys_iomem_base += dev->msix->table_offset_adjust;
./tools/qemu-xen-traditional/hw/pt-msi.c:           (unsigned long)dev->msix->phys_iomem_base);
./tools/qemu-xen-traditional/hw/pt-msi.c:    free(dev->msix);
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix = NULL;
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (dev->msix->phys_iomem_base)
./tools/qemu-xen-traditional/hw/pt-msi.c:           (unsigned long)dev->msix->phys_iomem_base);
./tools/qemu-xen-traditional/hw/pt-msi.c:        munmap(dev->msix->phys_iomem_base, dev->msix->total_entries * 16 + 
./tools/qemu-xen-traditional/hw/pt-msi.c:           dev->msix->table_offset_adjust);
./tools/qemu-xen-traditional/hw/pt-msi.c:    if (dev->msix->mmio_index > 0)
./tools/qemu-xen-traditional/hw/pt-msi.c:        cpu_unregister_io_memory(dev->msix->mmio_index);
./tools/qemu-xen-traditional/hw/pt-msi.c:    free(dev->msix);
./tools/qemu-xen-traditional/hw/pt-msi.c:    dev->msix = NULL;
./tools/qemu-xen-traditional/hw/armv7m_nvic.c:        return cpu_single_env->cp15.c0_cpuid;
./tools/qemu-xen-traditional/hw/armv7m_nvic.c:        return cpu_single_env->v7m.vecbase;
./tools/qemu-xen-traditional/hw/armv7m_nvic.c:        cpu_single_env->v7m.vecbase = value & 0xffffff80;
./tools/qemu-xen-traditional/hw/armv7m_nvic.c:    if (env->v7m.nvic)
./tools/qemu-xen-traditional/hw/armv7m_nvic.c:    env->v7m.nvic = s;
./tools/qemu-xen-traditional/hw/prep_pci.c:    return (irq_num + (pci_dev->devfn >> 3)) & 1;
./tools/qemu-xen-traditional/hw/tc58128.c:    dev->state = WAIT;
./tools/qemu-xen-traditional/hw/tc58128.c:    dev->flash_contents = qemu_mallocz(FLASH_SIZE);
./tools/qemu-xen-traditional/hw/tc58128.c:    memset(dev->flash_contents, 0xff, FLASH_SIZE);
./tools/qemu-xen-traditional/hw/tc58128.c:    if (!dev->flash_contents) {
./tools/qemu-xen-traditional/hw/tc58128.c:	ret = load_image(filename, dev->flash_contents + 528 * 32);
./tools/qemu-xen-traditional/hw/tc58128.c:	    dev->flash_contents[0] = blocks & 0xff;
./tools/qemu-xen-traditional/hw/tc58128.c:	    dev->flash_contents[1] = (blocks >> 8) & 0xff;
./tools/qemu-xen-traditional/hw/tc58128.c:	    dev->flash_contents[2] = (blocks >> 16) & 0xff;
./tools/qemu-xen-traditional/hw/tc58128.c:	    dev->flash_contents[3] = (blocks >> 24) & 0xff;
./tools/qemu-xen-traditional/hw/tc58128.c:	dev->state = WAIT;
./tools/qemu-xen-traditional/hw/tc58128.c:	dev->state = READ1;
./tools/qemu-xen-traditional/hw/tc58128.c:	dev->address_cycle = 0;
./tools/qemu-xen-traditional/hw/tc58128.c:	dev->state = READ2;
./tools/qemu-xen-traditional/hw/tc58128.c:	dev->address_cycle = 0;
./tools/qemu-xen-traditional/hw/tc58128.c:	dev->state = READ3;
./tools/qemu-xen-traditional/hw/tc58128.c:	dev->address_cycle = 0;
./tools/qemu-xen-traditional/hw/tc58128.c:    switch (dev->state) {
./tools/qemu-xen-traditional/hw/tc58128.c:	switch (dev->address_cycle) {
./tools/qemu-xen-traditional/hw/tc58128.c:	    dev->address = data;
./tools/qemu-xen-traditional/hw/tc58128.c:	    if (dev->state == READ2)
./tools/qemu-xen-traditional/hw/tc58128.c:		dev->address |= 0x100;
./tools/qemu-xen-traditional/hw/tc58128.c:	    else if (dev->state == READ3)
./tools/qemu-xen-traditional/hw/tc58128.c:		dev->address |= 0x200;
./tools/qemu-xen-traditional/hw/tc58128.c:	    dev->address += data * 528 * 0x100;
./tools/qemu-xen-traditional/hw/tc58128.c:	    dev->address += data * 528;
./tools/qemu-xen-traditional/hw/tc58128.c:		    dev->address);
./tools/qemu-xen-traditional/hw/tc58128.c:	dev->address_cycle++;
./tools/qemu-xen-traditional/hw/tc58128.c:    if (dev->address % 0x100000 == 0)
./tools/qemu-xen-traditional/hw/tc58128.c:	fprintf(stderr, "reading flash at address 0x%08x\n", dev->address);
./tools/qemu-xen-traditional/hw/tc58128.c:    return dev->flash_contents[dev->address++];
./tools/qemu-xen-traditional/hw/virtio-balloon.c:    config.num_pages = cpu_to_le32(dev->num_pages);
./tools/qemu-xen-traditional/hw/virtio-balloon.c:    config.actual = cpu_to_le32(dev->actual);
./tools/qemu-xen-traditional/hw/virtio-balloon.c:    dev->actual = config.actual;
./tools/qemu-xen-traditional/hw/virtio-balloon.c:        dev->num_pages = (ram_size - target) >> VIRTIO_BALLOON_PFN_SHIFT;
./tools/qemu-xen-traditional/hw/virtio-balloon.c:        virtio_notify_config(&dev->vdev);
./tools/qemu-xen-traditional/hw/virtio-balloon.c:    return ram_size - (dev->actual << VIRTIO_BALLOON_PFN_SHIFT);
./tools/qemu-xen-traditional/hw/omap1.c:                (s->env->halted << 6);	/* Quite useless... */
./tools/qemu-xen-traditional/hw/omap1.c:    if (mpu->env->halted)
./tools/qemu-xen-traditional/hw/ide.c:        if (pci_dev->type == IDE_TYPE_CMD646) {
./tools/qemu-xen-traditional/hw/ide.c:            val = pci_dev->dev.config[MRDMODE];
./tools/qemu-xen-traditional/hw/ide.c:        if (pci_dev->type == IDE_TYPE_CMD646) {
./tools/qemu-xen-traditional/hw/ide.c:            if (bm == &pci_dev->bmdma[0])
./tools/qemu-xen-traditional/hw/ide.c:                val = pci_dev->dev.config[UDIDETCR0];
./tools/qemu-xen-traditional/hw/ide.c:                val = pci_dev->dev.config[UDIDETCR1];
./tools/qemu-xen-traditional/hw/ide.c:        if (pci_dev->type == IDE_TYPE_CMD646) {
./tools/qemu-xen-traditional/hw/ide.c:            pci_dev->dev.config[MRDMODE] =
./tools/qemu-xen-traditional/hw/ide.c:                (pci_dev->dev.config[MRDMODE] & ~0x30) | (val & 0x30);
./tools/qemu-xen-traditional/hw/ide.c:        if (pci_dev->type == IDE_TYPE_CMD646) {
./tools/qemu-xen-traditional/hw/ide.c:            if (bm == &pci_dev->bmdma[0])
./tools/qemu-xen-traditional/hw/ide.c:                pci_dev->dev.config[UDIDETCR0] = val;
./tools/qemu-xen-traditional/hw/ide.c:                pci_dev->dev.config[UDIDETCR1] = val;
./tools/qemu-xen-traditional/hw/eepro100.c:        qemu_irq_lower(s->pci_dev->irq[0]);
./tools/qemu-xen-traditional/hw/eepro100.c:        qemu_irq_raise(s->pci_dev->irq[0]);
./tools/qemu-xen-traditional/hw/eepro100.c:    uint8_t *pci_conf = s->pci_dev->config;
./tools/qemu-xen-traditional/hw/unin_pci.c:    return (irq_num + (pci_dev->devfn >> 3)) & 3;
./tools/qemu-xen-traditional/hw/rtl8139.c:    qemu_set_irq(s->pci_dev->irq[0], (isr != 0));
./tools/qemu-xen-traditional/hw/rtl8139.c:    instance = pci_bus_num(bus) << 8 | s->pci_dev->devfn;
./tools/qemu-xen-traditional/hw/xen_machine_pv.c:    env->halted = 1;
./tools/qemu-xen-traditional/hw/ppce500_mpc8544ds.c:    irqs[OPENPIC_OUTPUT_INT] = ((qemu_irq *)env->irq_inputs)[PPCE500_INPUT_INT];
./tools/qemu-xen-traditional/hw/ppce500_mpc8544ds.c:    irqs[OPENPIC_OUTPUT_CINT] = ((qemu_irq *)env->irq_inputs)[PPCE500_INPUT_CINT];
./tools/qemu-xen-traditional/hw/ppce500_mpc8544ds.c:        env->gpr[1] = (16<<20) - 8;
./tools/qemu-xen-traditional/hw/ppce500_mpc8544ds.c:        env->gpr[3] = dt_base;
./tools/qemu-xen-traditional/hw/ppce500_mpc8544ds.c:        env->nip = entry;
./tools/qemu-xen-traditional/hw/axis_dev88.c:    env->pc = bootstrap_pc;
./tools/qemu-xen-traditional/hw/axis_dev88.c:            env->regs[9] = 0x40004000 + kernel_size;
./tools/qemu-xen-traditional/hw/axis_dev88.c:        env->regs[8] = 0x56902387; /* RAM init magic.  */
./tools/qemu-xen-traditional/hw/axis_dev88.c:            env->regs[10] = 0x87109563;
./tools/qemu-xen-traditional/hw/axis_dev88.c:            env->regs[11] = high;
./tools/qemu-xen-traditional/hw/axis_dev88.c:    env->pc = bootstrap_pc;
./tools/qemu-xen-traditional/hw/axis_dev88.c:    printf ("pc =%x\n", env->pc);
./tools/qemu-xen-traditional/hw/ppc_prep.c:        if (env->flags & POWERPC_FLAG_RTC_CLK) {
./tools/qemu-xen-traditional/hw/ppc_prep.c:    if (env->nip < 0xFFF80000 && bios_size < 0x00100000) {
./tools/qemu-xen-traditional/hw/pxa2xx_gpio.c:    if (s->cpu_env->halted && (mask & ~s->dir[bank] & pxa2xx_gpio_wake[bank]))
./tools/qemu-xen-traditional/hw/grackle_pci.c:    return (irq_num + (pci_dev->devfn >> 3)) & 3;
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->regs[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->spsr);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->banked_spsr[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->banked_r13[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->banked_r14[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->usr_regs[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->fiq_regs[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c0_cpuid);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c0_cachetype);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c1_sys);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c1_coproc);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c1_xscaleauxcr);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_base0);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_base1);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_mask);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_data);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_insn);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c3);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c5_insn);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c5_data);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->cp15.c6_region[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c6_insn);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c6_data);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_insn);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_data);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_fcse);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_context);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_tls1);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_tls2);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_tls3);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c15_cpar);
./tools/qemu-xen-traditional/target-arm/machine.c:    qemu_put_be32(f, env->features);
./tools/qemu-xen-traditional/target-arm/machine.c:            u.d = env->vfp.regs[i];
./tools/qemu-xen-traditional/target-arm/machine.c:            qemu_put_be32(f, env->vfp.xregs[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->vfp.vec_len);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->vfp.vec_stride);
./tools/qemu-xen-traditional/target-arm/machine.c:                u.d = env->vfp.regs[i];
./tools/qemu-xen-traditional/target-arm/machine.c:            qemu_put_be64(f, env->iwmmxt.regs[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:            qemu_put_be32(f, env->iwmmxt.cregs[i]);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->v7m.other_sp);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->v7m.vecbase);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->v7m.basepri);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->v7m.control);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->v7m.current_sp);
./tools/qemu-xen-traditional/target-arm/machine.c:        qemu_put_be32(f, env->v7m.exception);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->regs[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->spsr = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->banked_spsr[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->banked_r13[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->banked_r14[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->usr_regs[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->fiq_regs[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c0_cpuid = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c0_cachetype = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c1_sys = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c1_coproc = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c1_xscaleauxcr = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c2_base0 = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c2_base1 = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c2_mask = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c2_data = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c2_insn = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c3 = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c5_insn = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c5_data = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->cp15.c6_region[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c6_insn = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c6_data = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c9_insn = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c9_data = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c13_fcse = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c13_context = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c13_tls1 = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c13_tls2 = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c13_tls3 = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->cp15.c15_cpar = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:    env->features = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:            env->vfp.regs[i] = u.d;
./tools/qemu-xen-traditional/target-arm/machine.c:            env->vfp.xregs[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->vfp.vec_len = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->vfp.vec_stride = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:                env->vfp.regs[i] = u.d;
./tools/qemu-xen-traditional/target-arm/machine.c:            env->iwmmxt.regs[i] = qemu_get_be64(f);
./tools/qemu-xen-traditional/target-arm/machine.c:            env->iwmmxt.cregs[i] = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->v7m.other_sp = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->v7m.vecbase = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->v7m.basepri = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->v7m.control = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->v7m.current_sp = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/machine.c:        env->v7m.exception = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-arm/translate.c:        if (!env->cp[cp].cp_read)
./tools/qemu-xen-traditional/target-arm/translate.c:        if (!env->cp[cp].cp_write)
./tools/qemu-xen-traditional/target-arm/translate.c:    return ((env->vfp.xregs[ARM_VFP_FPEXC] & (1 << 30)) != 0);
./tools/qemu-xen-traditional/target-arm/translate.c:            veclen = env->vfp.vec_len;
./tools/qemu-xen-traditional/target-arm/translate.c:                        delta_d = (env->vfp.vec_stride >> 1) + 1;
./tools/qemu-xen-traditional/target-arm/translate.c:                        delta_d = env->vfp.vec_stride + 1;
./tools/qemu-xen-traditional/target-arm/translate.c:            if (IS_USER(s) && (env->teecr & 1))
./tools/qemu-xen-traditional/target-arm/translate.c:            if (IS_USER(s) && (env->teecr & 1))
./tools/qemu-xen-traditional/target-arm/translate.c:	    && ((env->cp15.c15_cpar ^ 0x3fff) & (1 << cpnum)))
./tools/qemu-xen-traditional/target-arm/translate.c:            if (op1 == (env->uncached_cpsr & CPSR_M)) {
./tools/qemu-xen-traditional/target-arm/translate.c:                if (op1 == (env->uncached_cpsr & CPSR_M)) {
./tools/qemu-xen-traditional/target-arm/translate.c:                if (env->cp15.c15_cpar & (1 << 1))
./tools/qemu-xen-traditional/target-arm/translate.c:                    if (op == (env->uncached_cpsr & CPSR_M)) {
./tools/qemu-xen-traditional/target-arm/translate.c:                        if (op == (env->uncached_cpsr & CPSR_M)) {
./tools/qemu-xen-traditional/target-arm/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen-traditional/target-arm/translate.c:    dc->thumb = env->thumb;
./tools/qemu-xen-traditional/target-arm/translate.c:    dc->condexec_mask = (env->condexec_bits & 0xf) << 1;
./tools/qemu-xen-traditional/target-arm/translate.c:    dc->condexec_cond = env->condexec_bits >> 4;
./tools/qemu-xen-traditional/target-arm/translate.c:        dc->user = ((env->v7m.exception == 0) && (env->v7m.control & 1));
./tools/qemu-xen-traditional/target-arm/translate.c:        dc->user = (env->uncached_cpsr & 0x1f) == ARM_CPU_MODE_USR;
./tools/qemu-xen-traditional/target-arm/translate.c:    if (env->condexec_bits)
./tools/qemu-xen-traditional/target-arm/translate.c:        if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-arm/translate.c:            TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-arm/translate.c:        if (env->thumb) {
./tools/qemu-xen-traditional/target-arm/translate.c:             !env->singlestep_enabled &&
./tools/qemu-xen-traditional/target-arm/translate.c:    if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen-traditional/target-arm/translate.c:        log_target_disas(pc_start, dc->pc - pc_start, env->thumb);
./tools/qemu-xen-traditional/target-arm/translate.c:        cpu_fprintf(f, "R%02d=%08x", i, env->regs[i]);
./tools/qemu-xen-traditional/target-arm/translate.c:        d.d = env->vfp.regs[i];
./tools/qemu-xen-traditional/target-arm/translate.c:    cpu_fprintf(f, "FPSCR: %08x\n", (int)env->vfp.xregs[ARM_VFP_FPSCR]);
./tools/qemu-xen-traditional/target-arm/translate.c:    env->regs[15] = gen_opc_pc[pc_pos];
./tools/qemu-xen-traditional/target-arm/neon_helper.c:#define SET_QC() env->vfp.xregs[ARM_VFP_FPSCR] = CPSR_Q
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->exception_index = tt;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    table = (uint64_t *)&env->vfp.regs[rn];
./tools/qemu-xen-traditional/target-arm/op_helper.c:        raise_exception(env->exception_index);
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->exception_index = EXCP_HLT;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->halted = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->exception_index = excp;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        val = env->banked_r13[0];
./tools/qemu-xen-traditional/target-arm/op_helper.c:        val = env->banked_r14[0];
./tools/qemu-xen-traditional/target-arm/op_helper.c:               && (env->uncached_cpsr & 0x1f) == ARM_CPU_MODE_FIQ) {
./tools/qemu-xen-traditional/target-arm/op_helper.c:        val = env->usr_regs[regno - 8];
./tools/qemu-xen-traditional/target-arm/op_helper.c:        val = env->regs[regno];
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->banked_r13[0] = val;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->banked_r14[0] = val;
./tools/qemu-xen-traditional/target-arm/op_helper.c:               && (env->uncached_cpsr & 0x1f) == ARM_CPU_MODE_FIQ) {
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->usr_regs[regno - 8] = val;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->regs[regno] = val;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->CF = result < a;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->VF = (a ^ b ^ -1) & (a ^ result);
./tools/qemu-xen-traditional/target-arm/op_helper.c:    if (!env->CF) {
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = result < a;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = result <= a;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->VF = (a ^ b ^ -1) & (a ^ result);
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->CF = a >= b;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->VF = (a ^ b) & (a ^ result);
./tools/qemu-xen-traditional/target-arm/op_helper.c:    if (!env->CF) {
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = a > b;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = a >= b;
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->VF = (a ^ b) & (a ^ result);
./tools/qemu-xen-traditional/target-arm/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen-traditional/target-arm/op_helper.c:            env->CF = x & 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:            env->CF = 0;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = (x >> (32 - shift)) & 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:            env->CF = (x >> 31) & 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:            env->CF = 0;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = (x >> 31) & 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:            env->CF = (x >> 31) & 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x >> 0);	\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x >> 0);	\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =                                 \
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =                               \
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x);
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x);
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x);
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x);
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen-traditional/target-arm/helper.c:    env->features |= 1u << feature;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->cp15.c0_cpuid = id;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x41011090;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c1_sys = 0x00090078;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0x0f004006;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c1_sys = 0x00000078;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410110a0;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c1_sys = 0x00090078;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410120b4;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR0] = 0x11111111;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR1] = 0x00000000;
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy(env->cp15.c0_c1, arm1136_cp15_c0_c1, 8 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy(env->cp15.c0_c2, arm1136_cp15_c0_c2, 8 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410120b4;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR0] = 0x11111111;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR1] = 0x00000000;
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy(env->cp15.c0_c1, mpcore_cp15_c0_c1, 8 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy(env->cp15.c0_c2, mpcore_cp15_c0_c2, 8 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410330c0;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR0] = 0x11110222;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR1] = 0x00011100;
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy(env->cp15.c0_c1, cortexa8_cp15_c0_c1, 8 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy(env->cp15.c0_c2, cortexa8_cp15_c0_c2, 8 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0x82048004;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_clid = (1 << 27) | (2 << 24) | 3;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_ccsid[0] = 0xe007e01a; /* 16k L1 dcache. */
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_ccsid[1] = 0x2007e01a; /* 16k L1 icache. */
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_ccsid[2] = 0xf0000000; /* No L2 icache. */
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cpuid = ARM_CPUID_TI925T; /* Depends on wiring.  */
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0x5109149;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c1_sys = 0x00000070;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c15_i_max = 0x000;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c15_i_min = 0xff0;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0xd172172;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c1_sys = 0x00000078;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->iwmmxt.cregs[ARM_IWMMXT_wCID] = 0x69051000 | 'Q';
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c0_cachetype = 0xd172172;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c1_sys = 0x00000078;
./tools/qemu-xen-traditional/target-arm/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen-traditional/target-arm/helper.c:    id = env->cp15.c0_cpuid;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->uncached_cpsr = ARM_CPU_MODE_USR;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPEXC] = 1 << 30;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->uncached_cpsr = ARM_CPU_MODE_SVC | CPSR_A | CPSR_F | CPSR_I;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->uncached_cpsr &= ~CPSR_I;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPEXC] = 0;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->cp15.c2_base_mask = 0xffffc000u;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[15] = 0;
./tools/qemu-xen-traditional/target-arm/helper.c:        stfq_le_p(buf, env->vfp.regs[reg]);
./tools/qemu-xen-traditional/target-arm/helper.c:            stfq_le_p(buf, env->vfp.regs[(reg - 32) * 2]);
./tools/qemu-xen-traditional/target-arm/helper.c:            stfq_le_p(buf + 8, env->vfp.regs[(reg - 32) * 2 + 1]);
./tools/qemu-xen-traditional/target-arm/helper.c:    case 0: stl_p(buf, env->vfp.xregs[ARM_VFP_FPSID]); return 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    case 1: stl_p(buf, env->vfp.xregs[ARM_VFP_FPSCR]); return 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    case 2: stl_p(buf, env->vfp.xregs[ARM_VFP_FPEXC]); return 4;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->vfp.regs[reg] = ldfq_le_p(buf);
./tools/qemu-xen-traditional/target-arm/helper.c:            env->vfp.regs[(reg - 32) * 2] = ldfq_le_p(buf);
./tools/qemu-xen-traditional/target-arm/helper.c:            env->vfp.regs[(reg - 32) * 2 + 1] = ldfq_le_p(buf + 8);
./tools/qemu-xen-traditional/target-arm/helper.c:    case 0: env->vfp.xregs[ARM_VFP_FPSID] = ldl_p(buf); return 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    case 1: env->vfp.xregs[ARM_VFP_FPSCR] = ldl_p(buf); return 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    case 2: env->vfp.xregs[ARM_VFP_FPEXC] = ldl_p(buf); return 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->cp15.c0_cpuid = id;
./tools/qemu-xen-traditional/target-arm/helper.c:    ZF = (env->ZF == 0);
./tools/qemu-xen-traditional/target-arm/helper.c:    return env->uncached_cpsr | (env->NF & 0x80000000) | (ZF << 30) |
./tools/qemu-xen-traditional/target-arm/helper.c:        (env->CF << 29) | ((env->VF & 0x80000000) >> 3) | (env->QF << 27)
./tools/qemu-xen-traditional/target-arm/helper.c:        | (env->thumb << 5) | ((env->condexec_bits & 3) << 25)
./tools/qemu-xen-traditional/target-arm/helper.c:        | ((env->condexec_bits & 0xfc) << 8)
./tools/qemu-xen-traditional/target-arm/helper.c:        | (env->GE << 16);
./tools/qemu-xen-traditional/target-arm/helper.c:        env->ZF = (~val) & CPSR_Z;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->NF = val;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->CF = (val >> 29) & 1;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->VF = (val << 3) & 0x80000000;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->QF = ((val & CPSR_Q) != 0);
./tools/qemu-xen-traditional/target-arm/helper.c:        env->thumb = ((val & CPSR_T) != 0);
./tools/qemu-xen-traditional/target-arm/helper.c:        env->condexec_bits &= ~3;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->condexec_bits |= (val >> 25) & 3;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->condexec_bits &= 3;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->condexec_bits |= (val >> 8) & 0xfc;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->GE = (val >> 16) & 0xf;
./tools/qemu-xen-traditional/target-arm/helper.c:    if ((env->uncached_cpsr ^ val) & mask & CPSR_M) {
./tools/qemu-xen-traditional/target-arm/helper.c:    env->uncached_cpsr = (env->uncached_cpsr & ~mask) | (val & mask);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->exception_index = -1;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->exception_index = EXCP_PREFETCH_ABORT;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c6_insn = address;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->exception_index = EXCP_DATA_ABORT;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c6_data = address;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->mmon_entry = malloc(sizeof (mmon_state));
./tools/qemu-xen-traditional/target-arm/helper.c:    memset (env->mmon_entry, 0, sizeof (mmon_state));
./tools/qemu-xen-traditional/target-arm/helper.c:    env->mmon_entry->cpu_env = env;
./tools/qemu-xen-traditional/target-arm/helper.c:    mmon_head = env->mmon_entry;
./tools/qemu-xen-traditional/target-arm/helper.c:    if (!env->mmon_entry)
./tools/qemu-xen-traditional/target-arm/helper.c:    env->mmon_entry->addr = addr;
./tools/qemu-xen-traditional/target-arm/helper.c:    if (!env->mmon_entry)
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->mmon_entry->addr == addr)
./tools/qemu-xen-traditional/target-arm/helper.c:    if (!(env->mmon_entry && env->mmon_entry->addr))
./tools/qemu-xen-traditional/target-arm/helper.c:    flush_mmon(env->mmon_entry->addr);
./tools/qemu-xen-traditional/target-arm/helper.c:    old_mode = env->uncached_cpsr & CPSR_M;
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy (env->fiq_regs, env->regs + 8, 5 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy (env->regs + 8, env->usr_regs, 5 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy (env->usr_regs, env->regs + 8, 5 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:        memcpy (env->regs + 8, env->fiq_regs, 5 * sizeof(uint32_t));
./tools/qemu-xen-traditional/target-arm/helper.c:    env->banked_r13[i] = env->regs[13];
./tools/qemu-xen-traditional/target-arm/helper.c:    env->banked_r14[i] = env->regs[14];
./tools/qemu-xen-traditional/target-arm/helper.c:    env->banked_spsr[i] = env->spsr;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[13] = env->banked_r13[i];
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[14] = env->banked_r14[i];
./tools/qemu-xen-traditional/target-arm/helper.c:    env->spsr = env->banked_spsr[i];
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[13] -= 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    stl_phys(env->regs[13], val);
./tools/qemu-xen-traditional/target-arm/helper.c:    val = ldl_phys(env->regs[13]);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[13] += 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->v7m.current_sp != process) {
./tools/qemu-xen-traditional/target-arm/helper.c:        tmp = env->v7m.other_sp;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->v7m.other_sp = env->regs[13];
./tools/qemu-xen-traditional/target-arm/helper.c:        env->regs[13] = tmp;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->v7m.current_sp = process;
./tools/qemu-xen-traditional/target-arm/helper.c:    type = env->regs[15];
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->v7m.exception != 0)
./tools/qemu-xen-traditional/target-arm/helper.c:        armv7m_nvic_complete_irq(env->v7m.nvic, env->v7m.exception);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[0] = v7m_pop(env);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[1] = v7m_pop(env);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[2] = v7m_pop(env);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[3] = v7m_pop(env);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[12] = v7m_pop(env);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[14] = v7m_pop(env);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[15] = v7m_pop(env);
./tools/qemu-xen-traditional/target-arm/helper.c:        env->regs[13] |= 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->v7m.current_sp)
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->v7m.exception == 0)
./tools/qemu-xen-traditional/target-arm/helper.c:    switch (env->exception_index) {
./tools/qemu-xen-traditional/target-arm/helper.c:        armv7m_nvic_set_pending(env->v7m.nvic, ARMV7M_EXCP_USAGE);
./tools/qemu-xen-traditional/target-arm/helper.c:        env->regs[15] += 2;
./tools/qemu-xen-traditional/target-arm/helper.c:        armv7m_nvic_set_pending(env->v7m.nvic, ARMV7M_EXCP_SVC);
./tools/qemu-xen-traditional/target-arm/helper.c:        armv7m_nvic_set_pending(env->v7m.nvic, ARMV7M_EXCP_MEM);
./tools/qemu-xen-traditional/target-arm/helper.c:            nr = lduw_code(env->regs[15]) & 0xff;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->regs[15] += 2;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->regs[0] = do_arm_semihosting(env);
./tools/qemu-xen-traditional/target-arm/helper.c:        armv7m_nvic_set_pending(env->v7m.nvic, ARMV7M_EXCP_DEBUG);
./tools/qemu-xen-traditional/target-arm/helper.c:        env->v7m.exception = armv7m_nvic_acknowledge_irq(env->v7m.nvic);
./tools/qemu-xen-traditional/target-arm/helper.c:        cpu_abort(env, "Unhandled exception 0x%x\n", env->exception_index);
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->regs[13] & 4) {
./tools/qemu-xen-traditional/target-arm/helper.c:        env->regs[13] -= 4;
./tools/qemu-xen-traditional/target-arm/helper.c:    v7m_push(env, env->regs[15]);
./tools/qemu-xen-traditional/target-arm/helper.c:    v7m_push(env, env->regs[14]);
./tools/qemu-xen-traditional/target-arm/helper.c:    v7m_push(env, env->regs[12]);
./tools/qemu-xen-traditional/target-arm/helper.c:    v7m_push(env, env->regs[3]);
./tools/qemu-xen-traditional/target-arm/helper.c:    v7m_push(env, env->regs[2]);
./tools/qemu-xen-traditional/target-arm/helper.c:    v7m_push(env, env->regs[1]);
./tools/qemu-xen-traditional/target-arm/helper.c:    v7m_push(env, env->regs[0]);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->uncached_cpsr &= ~CPSR_IT;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[14] = lr;
./tools/qemu-xen-traditional/target-arm/helper.c:    addr = ldl_phys(env->v7m.vecbase + env->v7m.exception * 4);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[15] = addr & 0xfffffffe;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->thumb = addr & 1;
./tools/qemu-xen-traditional/target-arm/helper.c:    switch (env->exception_index) {
./tools/qemu-xen-traditional/target-arm/helper.c:        if (env->thumb)
./tools/qemu-xen-traditional/target-arm/helper.c:            if (env->thumb) {
./tools/qemu-xen-traditional/target-arm/helper.c:                mask = lduw_code(env->regs[15] - 2) & 0xff;
./tools/qemu-xen-traditional/target-arm/helper.c:                mask = ldl_code(env->regs[15] - 4) & 0xffffff;
./tools/qemu-xen-traditional/target-arm/helper.c:            if (((mask == 0x123456 && !env->thumb)
./tools/qemu-xen-traditional/target-arm/helper.c:                    || (mask == 0xab && env->thumb))
./tools/qemu-xen-traditional/target-arm/helper.c:                  && (env->uncached_cpsr & CPSR_M) != ARM_CPU_MODE_USR) {
./tools/qemu-xen-traditional/target-arm/helper.c:                env->regs[0] = do_arm_semihosting(env);
./tools/qemu-xen-traditional/target-arm/helper.c:        if (env->thumb && semihosting_enabled) {
./tools/qemu-xen-traditional/target-arm/helper.c:            mask = lduw_code(env->regs[15]) & 0xff;
./tools/qemu-xen-traditional/target-arm/helper.c:                  && (env->uncached_cpsr & CPSR_M) != ARM_CPU_MODE_USR) {
./tools/qemu-xen-traditional/target-arm/helper.c:                env->regs[15] += 2;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->regs[0] = do_arm_semihosting(env);
./tools/qemu-xen-traditional/target-arm/helper.c:        cpu_abort(env, "Unhandled exception 0x%x\n", env->exception_index);
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->cp15.c1_sys & (1 << 13)) {
./tools/qemu-xen-traditional/target-arm/helper.c:    env->spsr = cpsr_read(env);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->condexec_bits = 0;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->uncached_cpsr = (env->uncached_cpsr & ~CPSR_M) | new_mode;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->uncached_cpsr |= mask;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->thumb = 0;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[14] = env->regs[15] + offset;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->regs[15] = addr;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen-traditional/target-arm/helper.c:      switch ((env->cp15.c1_sys >> 8) & 3) {
./tools/qemu-xen-traditional/target-arm/helper.c:    if (address & env->cp15.c2_mask)
./tools/qemu-xen-traditional/target-arm/helper.c:        table = env->cp15.c2_base1 & 0xffffc000;
./tools/qemu-xen-traditional/target-arm/helper.c:        table = env->cp15.c2_base0 & env->cp15.c2_base_mask;
./tools/qemu-xen-traditional/target-arm/helper.c:    domain = (env->cp15.c3 >> ((desc >> 4) & 0x1e)) & 3;
./tools/qemu-xen-traditional/target-arm/helper.c:    domain = (env->cp15.c3 >> domain) & 3;
./tools/qemu-xen-traditional/target-arm/helper.c:    if ((env->cp15.c1_sys & (1 << 29)) && (ap & 1) == 0) {
./tools/qemu-xen-traditional/target-arm/helper.c:	base = env->cp15.c6_region[n];
./tools/qemu-xen-traditional/target-arm/helper.c:	mask = env->cp15.c5_insn;
./tools/qemu-xen-traditional/target-arm/helper.c:	mask = env->cp15.c5_data;
./tools/qemu-xen-traditional/target-arm/helper.c:        address += env->cp15.c13_fcse;
./tools/qemu-xen-traditional/target-arm/helper.c:    if ((env->cp15.c1_sys & 1) == 0) {
./tools/qemu-xen-traditional/target-arm/helper.c:    } else if (env->cp15.c1_sys & (1 << 23)) {
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c5_insn = ret;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c6_insn = address;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->exception_index = EXCP_PREFETCH_ABORT;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c5_data = ret;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c5_data |= (1 << 11);
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c6_data = address;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->exception_index = EXCP_DATA_ABORT;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->mmon_addr = addr;
./tools/qemu-xen-traditional/target-arm/helper.c:    return (env->mmon_addr != addr);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->mmon_addr = -1;
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->cp[cp_num].cp_write)
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp[cp_num].cp_write(env->cp[cp_num].opaque,
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->cp[cp_num].cp_read)
./tools/qemu-xen-traditional/target-arm/helper.c:        return env->cp[cp_num].cp_read(env->cp[cp_num].opaque,
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c0_cssel = val & 0xf;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c1_sys = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c1_xscaleauxcr = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            if (env->cp15.c1_coproc != val) {
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c1_coproc = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c2_data = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c2_insn = val;
./tools/qemu-xen-traditional/target-arm/helper.c:		env->cp15.c2_base0 = val;
./tools/qemu-xen-traditional/target-arm/helper.c:		env->cp15.c2_base1 = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c2_control = val;
./tools/qemu-xen-traditional/target-arm/helper.c:		env->cp15.c2_mask = ~(((uint32_t)0xffffffffu) >> val);
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c2_base_mask = ~((uint32_t)0x3fffu >> val);
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c3 = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c5_data = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c5_insn = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c5_data = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c5_insn = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c6_region[crm] = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c6_data = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c6_insn = val;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c15_i_max = 0x000;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->cp15.c15_i_min = 0xff0;
./tools/qemu-xen-traditional/target-arm/helper.c:		    env->cp15.c9_data = val;
./tools/qemu-xen-traditional/target-arm/helper.c:		    env->cp15.c9_insn = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            if (env->cp15.c13_fcse != val)
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c13_fcse = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            if (env->cp15.c13_context != val
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c13_context = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c13_tls1 = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c13_tls2 = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->cp15.c13_tls3 = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                if (env->cp15.c15_cpar != (val & 0x3fff)) {
./tools/qemu-xen-traditional/target-arm/helper.c:                    env->cp15.c15_cpar = val & 0x3fff;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c15_ticonfig = val & 0xe7;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c0_cpuid = (val & (1 << 5)) ? /* OS_TYPE bit */
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c15_i_max = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c15_i_min = val;
./tools/qemu-xen-traditional/target-arm/helper.c:                env->cp15.c15_threadid = val & 0xffff;
./tools/qemu-xen-traditional/target-arm/helper.c:                    return env->cp15.c0_cpuid;
./tools/qemu-xen-traditional/target-arm/helper.c:		    return env->cp15.c0_cachetype;
./tools/qemu-xen-traditional/target-arm/helper.c:                    return env->cpu_index;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c0_c1[op2];
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c0_c2[op2];
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c0_ccsid[env->cp15.c0_cssel];
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c0_clid;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c0_cssel;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c1_sys;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c1_xscaleauxcr;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c1_coproc;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c2_data;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c2_insn;
./tools/qemu-xen-traditional/target-arm/helper.c:		return env->cp15.c2_base0;
./tools/qemu-xen-traditional/target-arm/helper.c:		return env->cp15.c2_base1;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c2_control;
./tools/qemu-xen-traditional/target-arm/helper.c:        return env->cp15.c3;
./tools/qemu-xen-traditional/target-arm/helper.c:                return simple_mpu_ap_bits(env->cp15.c5_data);
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c5_data;
./tools/qemu-xen-traditional/target-arm/helper.c:                return simple_mpu_ap_bits(env->cp15.c5_data);
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c5_insn;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c5_data;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c5_insn;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c6_region[crm];
./tools/qemu-xen-traditional/target-arm/helper.c:		return env->cp15.c6_data;
./tools/qemu-xen-traditional/target-arm/helper.c:		    return env->cp15.c6_insn;
./tools/qemu-xen-traditional/target-arm/helper.c:		    return env->cp15.c6_insn;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->ZF = 0;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c9_data;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c9_insn;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c13_fcse;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c13_context;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c13_tls1;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c13_tls2;
./tools/qemu-xen-traditional/target-arm/helper.c:            return env->cp15.c13_tls3;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c15_cpar;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c15_ticonfig;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c15_i_max;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c15_i_min;
./tools/qemu-xen-traditional/target-arm/helper.c:                return env->cp15.c15_threadid;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->banked_r13[bank_number(mode)] = val;
./tools/qemu-xen-traditional/target-arm/helper.c:    return env->banked_r13[bank_number(mode)];
./tools/qemu-xen-traditional/target-arm/helper.c:        return env->v7m.current_sp ? env->v7m.other_sp : env->regs[13];
./tools/qemu-xen-traditional/target-arm/helper.c:        return env->v7m.current_sp ? env->regs[13] : env->v7m.other_sp;
./tools/qemu-xen-traditional/target-arm/helper.c:        return (env->uncached_cpsr & CPSR_I) != 0;
./tools/qemu-xen-traditional/target-arm/helper.c:        return (env->uncached_cpsr & CPSR_F) != 0;
./tools/qemu-xen-traditional/target-arm/helper.c:        return env->v7m.basepri;
./tools/qemu-xen-traditional/target-arm/helper.c:        return env->v7m.control;
./tools/qemu-xen-traditional/target-arm/helper.c:        if (env->v7m.current_sp)
./tools/qemu-xen-traditional/target-arm/helper.c:            env->v7m.other_sp = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->regs[13] = val;
./tools/qemu-xen-traditional/target-arm/helper.c:        if (env->v7m.current_sp)
./tools/qemu-xen-traditional/target-arm/helper.c:            env->regs[13] = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->v7m.other_sp = val;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->uncached_cpsr |= CPSR_I;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->uncached_cpsr &= ~CPSR_I;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->uncached_cpsr |= CPSR_F;
./tools/qemu-xen-traditional/target-arm/helper.c:            env->uncached_cpsr &= ~CPSR_F;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->v7m.basepri = val & 0xff;
./tools/qemu-xen-traditional/target-arm/helper.c:        if (val != 0 && (val < env->v7m.basepri || env->v7m.basepri == 0))
./tools/qemu-xen-traditional/target-arm/helper.c:            env->v7m.basepri = val;
./tools/qemu-xen-traditional/target-arm/helper.c:        env->v7m.control = val & 3;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->cp[cpnum].cp_read = cp_read;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->cp[cpnum].cp_write = cp_write;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->cp[cpnum].opaque = opaque;
./tools/qemu-xen-traditional/target-arm/helper.c:    fpscr = (env->vfp.xregs[ARM_VFP_FPSCR] & 0xffc8ffff)
./tools/qemu-xen-traditional/target-arm/helper.c:            | (env->vfp.vec_len << 16)
./tools/qemu-xen-traditional/target-arm/helper.c:            | (env->vfp.vec_stride << 20);
./tools/qemu-xen-traditional/target-arm/helper.c:    i = get_float_exception_flags(&env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    changed = env->vfp.xregs[ARM_VFP_FPSCR];
./tools/qemu-xen-traditional/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPSCR] = (val & 0xffc8ffff);
./tools/qemu-xen-traditional/target-arm/helper.c:    env->vfp.vec_len = (val >> 16) & 7;
./tools/qemu-xen-traditional/target-arm/helper.c:    env->vfp.vec_stride = (val >> 20) & 3;
./tools/qemu-xen-traditional/target-arm/helper.c:        set_float_rounding_mode(i, &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:        set_flush_to_zero((val & (1 << 24)) != 0, &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:        set_default_nan_mode((val & (1 << 25)) != 0, &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    set_float_exception_flags(i, &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    return float32_ ## name (a, b, &env->vfp.fp_status); \
./tools/qemu-xen-traditional/target-arm/helper.c:    return float64_ ## name (a, b, &env->vfp.fp_status); \
./tools/qemu-xen-traditional/target-arm/helper.c:    return float32_sqrt(a, &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    return float64_sqrt(a, &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    switch(type ## _compare_quiet(a, b, &env->vfp.fp_status)) { \
./tools/qemu-xen-traditional/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPSCR] = (flags << 28) \
./tools/qemu-xen-traditional/target-arm/helper.c:        | (env->vfp.xregs[ARM_VFP_FPSCR] & 0x0fffffff); \
./tools/qemu-xen-traditional/target-arm/helper.c:    switch(type ## _compare(a, b, &env->vfp.fp_status)) { \
./tools/qemu-xen-traditional/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPSCR] = (flags << 28) \
./tools/qemu-xen-traditional/target-arm/helper.c:        | (env->vfp.xregs[ARM_VFP_FPSCR] & 0x0fffffff); \
./tools/qemu-xen-traditional/target-arm/helper.c:    return uint32_to_float32(vfp_stoi(x), &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    return uint32_to_float64(vfp_stoi(x), &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    return int32_to_float32(vfp_stoi(x), &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    return int32_to_float64(vfp_stoi(x), &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    return vfp_itos(float32_to_uint32(x, &env->vfp.fp_status));
./tools/qemu-xen-traditional/target-arm/helper.c:    return vfp_itos(float64_to_uint32(x, &env->vfp.fp_status));
./tools/qemu-xen-traditional/target-arm/helper.c:    return vfp_itos(float32_to_int32(x, &env->vfp.fp_status));
./tools/qemu-xen-traditional/target-arm/helper.c:    return vfp_itos(float64_to_int32(x, &env->vfp.fp_status));
./tools/qemu-xen-traditional/target-arm/helper.c:    return vfp_itos(float32_to_uint32_round_to_zero(x, &env->vfp.fp_status));
./tools/qemu-xen-traditional/target-arm/helper.c:    return vfp_itos(float64_to_uint32_round_to_zero(x, &env->vfp.fp_status));
./tools/qemu-xen-traditional/target-arm/helper.c:    return vfp_itos(float32_to_int32_round_to_zero(x, &env->vfp.fp_status));
./tools/qemu-xen-traditional/target-arm/helper.c:    return vfp_itos(float64_to_int32_round_to_zero(x, &env->vfp.fp_status));
./tools/qemu-xen-traditional/target-arm/helper.c:    return float32_to_float64(x, &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:    return float64_to_float32(x, &env->vfp.fp_status);
./tools/qemu-xen-traditional/target-arm/helper.c:                                  &env->vfp.fp_status); \
./tools/qemu-xen-traditional/target-arm/helper.c:    return ftype##_scalbn(tmp, -(int)shift, &env->vfp.fp_status); \
./tools/qemu-xen-traditional/target-arm/helper.c:    tmp = ftype##_scalbn(x, shift, &env->vfp.fp_status); \
./tools/qemu-xen-traditional/target-arm/helper.c:        &env->vfp.fp_status)); \
./tools/qemu-xen-traditional/target-arm/helper.c:    float_status *s = &env->vfp.fp_status;
./tools/qemu-xen-traditional/target-arm/helper.c:    float_status *s = &env->vfp.fp_status;
./tools/qemu-xen-traditional/target-arm/helper.c:    float_status *s = &env->vfp.fp_status;
./tools/qemu-xen-traditional/target-arm/helper.c:    float_status *s = &env->vfp.fp_status;
./tools/qemu-xen-traditional/target-arm/helper.c:    float_status *s = &env->vfp.fp_status;
./tools/qemu-xen-traditional/target-arm/helper.c:    float_status *s = &env->vfp.fp_status;
./tools/qemu-xen-traditional/target-arm/helper.c:    if (env->teecr != val) {
./tools/qemu-xen-traditional/target-arm/helper.c:        env->teecr = val;
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_put_betls(f, &env->regs[i]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_betls(f, &env->eip);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_betls(f, &env->eflags);
./tools/qemu-xen-traditional/target-i386/machine.c:    hflags = env->hflags; /* XXX: suppress most of the redundant hflags */
./tools/qemu-xen-traditional/target-i386/machine.c:    fpuc = env->fpuc;
./tools/qemu-xen-traditional/target-i386/machine.c:    fpus = (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen-traditional/target-i386/machine.c:        fptag |= ((!env->fptags[i]) << i);
./tools/qemu-xen-traditional/target-i386/machine.c:            cpu_get_fp80(&mant, &exp, env->fpregs[i].d);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_put_be64(f, env->fpregs[i].mmx.MMX_Q(0));
./tools/qemu-xen-traditional/target-i386/machine.c:        cpu_put_seg(f, &env->segs[i]);
./tools/qemu-xen-traditional/target-i386/machine.c:    cpu_put_seg(f, &env->ldt);
./tools/qemu-xen-traditional/target-i386/machine.c:    cpu_put_seg(f, &env->tr);
./tools/qemu-xen-traditional/target-i386/machine.c:    cpu_put_seg(f, &env->gdt);
./tools/qemu-xen-traditional/target-i386/machine.c:    cpu_put_seg(f, &env->idt);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be32s(f, &env->sysenter_cs);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_betls(f, &env->sysenter_esp);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_betls(f, &env->sysenter_eip);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_betls(f, &env->cr[0]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_betls(f, &env->cr[2]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_betls(f, &env->cr[3]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_betls(f, &env->cr[4]);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_put_betls(f, &env->dr[i]);
./tools/qemu-xen-traditional/target-i386/machine.c:    a20_mask = (int32_t) env->a20_mask;
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be32s(f, &env->mxcsr);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_put_be64s(f, &env->xmm_regs[i].XMM_Q(0));
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_put_be64s(f, &env->xmm_regs[i].XMM_Q(1));
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->efer);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->star);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->lstar);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->cstar);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->fmask);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->kernelgsbase);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be32s(f, &env->smbase);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->pat);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be32s(f, &env->hflags2);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->vm_hsave);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->vm_vmcb);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->tsc_offset);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->intercept);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be16s(f, &env->intercept_cr_read);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be16s(f, &env->intercept_cr_write);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be16s(f, &env->intercept_dr_read);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be16s(f, &env->intercept_dr_write);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be32s(f, &env->intercept_exceptions);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_8s(f, &env->v_tpr);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_put_be64s(f, &env->mtrr_fixed[i]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_put_be64s(f, &env->mtrr_deftype);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_put_be64s(f, &env->mtrr_var[i].base);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_put_be64s(f, &env->mtrr_var[i].mask);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_betls(f, &env->regs[i]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_betls(f, &env->eip);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_betls(f, &env->eflags);
./tools/qemu-xen-traditional/target-i386/machine.c:            env->fpregs[i].d = cpu_set_fp80(mant, exp);
./tools/qemu-xen-traditional/target-i386/machine.c:                env->fpregs[i].mmx.MMX_Q(0) = mant;
./tools/qemu-xen-traditional/target-i386/machine.c:                env->fpregs[i].d = cpu_set_fp80(mant, exp);
./tools/qemu-xen-traditional/target-i386/machine.c:                p = (void *)&env->fpregs[i];
./tools/qemu-xen-traditional/target-i386/machine.c:            env->fpregs[i].mmx.MMX_Q(0) = mant;
./tools/qemu-xen-traditional/target-i386/machine.c:    env->fpuc = fpuc;
./tools/qemu-xen-traditional/target-i386/machine.c:    env->fpstt = (fpus >> 11) & 7;
./tools/qemu-xen-traditional/target-i386/machine.c:    env->fpus = fpus & ~0x3800;
./tools/qemu-xen-traditional/target-i386/machine.c:        env->fptags[i] = (fptag >> i) & 1;
./tools/qemu-xen-traditional/target-i386/machine.c:        cpu_get_seg(f, &env->segs[i]);
./tools/qemu-xen-traditional/target-i386/machine.c:    cpu_get_seg(f, &env->ldt);
./tools/qemu-xen-traditional/target-i386/machine.c:    cpu_get_seg(f, &env->tr);
./tools/qemu-xen-traditional/target-i386/machine.c:    cpu_get_seg(f, &env->gdt);
./tools/qemu-xen-traditional/target-i386/machine.c:    cpu_get_seg(f, &env->idt);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_be32s(f, &env->sysenter_cs);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_betls(f, &env->sysenter_esp);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_betls(f, &env->sysenter_eip);
./tools/qemu-xen-traditional/target-i386/machine.c:        env->sysenter_esp = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-i386/machine.c:        env->sysenter_eip = qemu_get_be32(f);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_betls(f, &env->cr[0]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_betls(f, &env->cr[2]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_betls(f, &env->cr[3]);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_betls(f, &env->cr[4]);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_betls(f, &env->dr[i]);
./tools/qemu-xen-traditional/target-i386/machine.c:    env->a20_mask = a20_mask;
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_be32s(f, &env->mxcsr);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be64s(f, &env->xmm_regs[i].XMM_Q(0));
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be64s(f, &env->xmm_regs[i].XMM_Q(1));
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_be64s(f, &env->efer);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_be64s(f, &env->star);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_be64s(f, &env->lstar);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_be64s(f, &env->cstar);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_be64s(f, &env->fmask);
./tools/qemu-xen-traditional/target-i386/machine.c:    qemu_get_be64s(f, &env->kernelgsbase);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be32s(f, &env->smbase);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be64s(f, &env->pat);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be32s(f, &env->hflags2);
./tools/qemu-xen-traditional/target-i386/machine.c:            qemu_get_be32s(f, &env->halted);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be64s(f, &env->vm_hsave);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be64s(f, &env->vm_vmcb);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be64s(f, &env->tsc_offset);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be64s(f, &env->intercept);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be16s(f, &env->intercept_cr_read);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be16s(f, &env->intercept_cr_write);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be16s(f, &env->intercept_dr_read);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be16s(f, &env->intercept_dr_write);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be32s(f, &env->intercept_exceptions);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_8s(f, &env->v_tpr);
./tools/qemu-xen-traditional/target-i386/machine.c:            qemu_get_be64s(f, &env->mtrr_fixed[i]);
./tools/qemu-xen-traditional/target-i386/machine.c:        qemu_get_be64s(f, &env->mtrr_deftype);
./tools/qemu-xen-traditional/target-i386/machine.c:            qemu_get_be64s(f, &env->mtrr_var[i].base);
./tools/qemu-xen-traditional/target-i386/machine.c:            qemu_get_be64s(f, &env->mtrr_var[i].mask);
./tools/qemu-xen-traditional/target-i386/machine.c:    env->hflags = hflags;
./tools/qemu-xen-traditional/target-i386/translate.c:        if (CODE64(s) && cpu_single_env->cpuid_vendor1 != CPUID_VENDOR_INTEL_1)
./tools/qemu-xen-traditional/target-i386/translate.c:        if (CODE64(s) && cpu_single_env->cpuid_vendor1 != CPUID_VENDOR_INTEL_1)
./tools/qemu-xen-traditional/target-i386/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen-traditional/target-i386/translate.c:    dc->cpuid_features = env->cpuid_features;
./tools/qemu-xen-traditional/target-i386/translate.c:    dc->cpuid_ext_features = env->cpuid_ext_features;
./tools/qemu-xen-traditional/target-i386/translate.c:    dc->cpuid_ext2_features = env->cpuid_ext2_features;
./tools/qemu-xen-traditional/target-i386/translate.c:    dc->cpuid_ext3_features = env->cpuid_ext3_features;
./tools/qemu-xen-traditional/target-i386/translate.c:    dc->jmp_opt = !(dc->tf || env->singlestep_enabled ||
./tools/qemu-xen-traditional/target-i386/translate.c:        if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-i386/translate.c:            TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-i386/translate.c:    env->eip = gen_opc_pc[pc_pos] - tb->cs_base;
./tools/qemu-xen-traditional/target-i386/translate.c:        env->cc_op = cc_op;
./tools/qemu-xen-traditional/target-i386/kvm.c:        ret = kvm_ioctl(env->kvm_state, KVM_GET_MSR_INDEX_LIST, &msr_list);
./tools/qemu-xen-traditional/target-i386/kvm.c:        ret = kvm_ioctl(env->kvm_state, KVM_GET_MSR_INDEX_LIST, kvm_msr_list);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rax, &env->regs[R_EAX], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rbx, &env->regs[R_EBX], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rcx, &env->regs[R_ECX], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rdx, &env->regs[R_EDX], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rsi, &env->regs[R_ESI], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rdi, &env->regs[R_EDI], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rsp, &env->regs[R_ESP], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rbp, &env->regs[R_EBP], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.r8, &env->regs[8], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.r9, &env->regs[9], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.r10, &env->regs[10], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.r11, &env->regs[11], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.r12, &env->regs[12], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.r13, &env->regs[13], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.r14, &env->regs[14], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.r15, &env->regs[15], set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rflags, &env->eflags, set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_getput_reg(&regs.rip, &env->eip, set);
./tools/qemu-xen-traditional/target-i386/kvm.c:    fpu.fsw = env->fpus & ~(7 << 11);
./tools/qemu-xen-traditional/target-i386/kvm.c:    fpu.fsw |= (env->fpstt & 7) << 11;
./tools/qemu-xen-traditional/target-i386/kvm.c:    fpu.fcw = env->fpuc;
./tools/qemu-xen-traditional/target-i386/kvm.c:	fpu.ftwx |= (!env->fptags[i]) << i;
./tools/qemu-xen-traditional/target-i386/kvm.c:    memcpy(fpu.fpr, env->fpregs, sizeof env->fpregs);
./tools/qemu-xen-traditional/target-i386/kvm.c:    memcpy(fpu.xmm, env->xmm_regs, sizeof env->xmm_regs);
./tools/qemu-xen-traditional/target-i386/kvm.c:    fpu.mxcsr = env->mxcsr;
./tools/qemu-xen-traditional/target-i386/kvm.c:           env->interrupt_bitmap,
./tools/qemu-xen-traditional/target-i386/kvm.c:    if ((env->eflags & VM_MASK)) {
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_v8086_seg(&sregs.cs, &env->segs[R_CS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_v8086_seg(&sregs.ds, &env->segs[R_DS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_v8086_seg(&sregs.es, &env->segs[R_ES]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_v8086_seg(&sregs.fs, &env->segs[R_FS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_v8086_seg(&sregs.gs, &env->segs[R_GS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_v8086_seg(&sregs.ss, &env->segs[R_SS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_seg(&sregs.cs, &env->segs[R_CS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_seg(&sregs.ds, &env->segs[R_DS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_seg(&sregs.es, &env->segs[R_ES]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_seg(&sregs.fs, &env->segs[R_FS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_seg(&sregs.gs, &env->segs[R_GS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    set_seg(&sregs.ss, &env->segs[R_SS]);
./tools/qemu-xen-traditional/target-i386/kvm.c:	    if (env->cr[0] & CR0_PE_MASK) {
./tools/qemu-xen-traditional/target-i386/kvm.c:    set_seg(&sregs.tr, &env->tr);
./tools/qemu-xen-traditional/target-i386/kvm.c:    set_seg(&sregs.ldt, &env->ldt);
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.idt.limit = env->idt.limit;
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.idt.base = env->idt.base;
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.gdt.limit = env->gdt.limit;
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.gdt.base = env->gdt.base;
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.cr0 = env->cr[0];
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.cr2 = env->cr[2];
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.cr3 = env->cr[3];
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.cr4 = env->cr[4];
./tools/qemu-xen-traditional/target-i386/kvm.c:    sregs.efer = env->efer;
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_IA32_SYSENTER_CS, env->sysenter_cs);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_IA32_SYSENTER_ESP, env->sysenter_esp);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_IA32_SYSENTER_EIP, env->sysenter_eip);
./tools/qemu-xen-traditional/target-i386/kvm.c:	kvm_msr_entry_set(&msrs[n++], MSR_STAR, env->star);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_IA32_TSC, env->tsc);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_CSTAR, env->cstar);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_KERNELGSBASE, env->kernelgsbase);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_FMASK, env->fmask);
./tools/qemu-xen-traditional/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_LSTAR, env->lstar);
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->fpstt = (fpu.fsw >> 11) & 7;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->fpus = fpu.fsw;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->fpuc = fpu.fcw;
./tools/qemu-xen-traditional/target-i386/kvm.c:	env->fptags[i] = !((fpu.ftwx >> i) & 1);
./tools/qemu-xen-traditional/target-i386/kvm.c:    memcpy(env->fpregs, fpu.fpr, sizeof env->fpregs);
./tools/qemu-xen-traditional/target-i386/kvm.c:    memcpy(env->xmm_regs, fpu.xmm, sizeof env->xmm_regs);
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->mxcsr = fpu.mxcsr;
./tools/qemu-xen-traditional/target-i386/kvm.c:    memcpy(env->interrupt_bitmap, 
./tools/qemu-xen-traditional/target-i386/kvm.c:    get_seg(&env->segs[R_CS], &sregs.cs);
./tools/qemu-xen-traditional/target-i386/kvm.c:    get_seg(&env->segs[R_DS], &sregs.ds);
./tools/qemu-xen-traditional/target-i386/kvm.c:    get_seg(&env->segs[R_ES], &sregs.es);
./tools/qemu-xen-traditional/target-i386/kvm.c:    get_seg(&env->segs[R_FS], &sregs.fs);
./tools/qemu-xen-traditional/target-i386/kvm.c:    get_seg(&env->segs[R_GS], &sregs.gs);
./tools/qemu-xen-traditional/target-i386/kvm.c:    get_seg(&env->segs[R_SS], &sregs.ss);
./tools/qemu-xen-traditional/target-i386/kvm.c:    get_seg(&env->tr, &sregs.tr);
./tools/qemu-xen-traditional/target-i386/kvm.c:    get_seg(&env->ldt, &sregs.ldt);
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->idt.limit = sregs.idt.limit;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->idt.base = sregs.idt.base;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->gdt.limit = sregs.gdt.limit;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->gdt.base = sregs.gdt.base;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->cr[0] = sregs.cr0;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->cr[2] = sregs.cr2;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->cr[3] = sregs.cr3;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->cr[4] = sregs.cr4;
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->efer = sregs.efer;
./tools/qemu-xen-traditional/target-i386/kvm.c:    hflags = (env->segs[R_CS].flags >> DESC_DPL_SHIFT) & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/kvm.c:    hflags |= (env->cr[0] & CR0_PE_MASK) << (HF_PE_SHIFT - CR0_PE_SHIFT);
./tools/qemu-xen-traditional/target-i386/kvm.c:    hflags |= (env->cr[0] << (HF_MP_SHIFT - CR0_MP_SHIFT)) &
./tools/qemu-xen-traditional/target-i386/kvm.c:    hflags |= (env->eflags & (HF_TF_MASK | HF_VM_MASK | HF_IOPL_MASK));
./tools/qemu-xen-traditional/target-i386/kvm.c:    hflags |= (env->cr[4] & CR4_OSFXSR_MASK) <<
./tools/qemu-xen-traditional/target-i386/kvm.c:    if (env->efer & MSR_EFER_LMA) {
./tools/qemu-xen-traditional/target-i386/kvm.c:    if ((hflags & HF_LMA_MASK) && (env->segs[R_CS].flags & DESC_L_MASK)) {
./tools/qemu-xen-traditional/target-i386/kvm.c:        hflags |= (env->segs[R_CS].flags & DESC_B_MASK) >>
./tools/qemu-xen-traditional/target-i386/kvm.c:        hflags |= (env->segs[R_SS].flags & DESC_B_MASK) >>
./tools/qemu-xen-traditional/target-i386/kvm.c:        if (!(env->cr[0] & CR0_PE_MASK) ||
./tools/qemu-xen-traditional/target-i386/kvm.c:                   (env->eflags & VM_MASK) ||
./tools/qemu-xen-traditional/target-i386/kvm.c:                hflags |= ((env->segs[R_DS].base |
./tools/qemu-xen-traditional/target-i386/kvm.c:                                env->segs[R_ES].base |
./tools/qemu-xen-traditional/target-i386/kvm.c:                                env->segs[R_SS].base) != 0) <<
./tools/qemu-xen-traditional/target-i386/kvm.c:    env->hflags = (env->hflags & HFLAG_COPY_MASK) | hflags;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->sysenter_cs = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->sysenter_esp = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->sysenter_eip = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->star = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->cstar = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->kernelgsbase = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->fmask = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->lstar = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:            env->tsc = msrs[i].data;
./tools/qemu-xen-traditional/target-i386/kvm.c:        (env->interrupt_request & CPU_INTERRUPT_HARD) &&
./tools/qemu-xen-traditional/target-i386/kvm.c:        (env->eflags & IF_MASK)) {
./tools/qemu-xen-traditional/target-i386/kvm.c:        env->interrupt_request &= ~CPU_INTERRUPT_HARD;
./tools/qemu-xen-traditional/target-i386/kvm.c:    if ((env->interrupt_request & CPU_INTERRUPT_HARD))
./tools/qemu-xen-traditional/target-i386/kvm.c:        env->eflags |= IF_MASK;
./tools/qemu-xen-traditional/target-i386/kvm.c:        env->eflags &= ~IF_MASK;
./tools/qemu-xen-traditional/target-i386/kvm.c:    if (!((env->interrupt_request & CPU_INTERRUPT_HARD) &&
./tools/qemu-xen-traditional/target-i386/kvm.c:          (env->eflags & IF_MASK)) &&
./tools/qemu-xen-traditional/target-i386/kvm.c:        !(env->interrupt_request & CPU_INTERRUPT_NMI)) {
./tools/qemu-xen-traditional/target-i386/kvm.c:        env->halted = 1;
./tools/qemu-xen-traditional/target-i386/kvm.c:        env->exception_index = EXCP_HLT;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    eflags |= env->eflags & ~(VM_MASK | RF_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        dt = &env->ldt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        dt = &env->gdt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        printf("TR: base=%p limit=%x\n", env->tr.base, env->tr.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        for(i=0;i<env->tr.limit;i++) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            printf("%02x ", env->tr.base[i]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (!(env->tr.flags & DESC_P_MASK))
./tools/qemu-xen-traditional/target-i386/op_helper.c:    type = (env->tr.flags >> DESC_TYPE_SHIFT) & 0xf;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (index + (4 << shift) - 1 > env->tr.limit)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        raise_exception_err(EXCP0A_TSS, env->tr.selector & 0xfffc);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        *esp_ptr = lduw_kernel(env->tr.base + index);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        *ss_ptr = lduw_kernel(env->tr.base + index + 2);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        *esp_ptr = ldl_kernel(env->tr.base + index);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        *ss_ptr = lduw_kernel(env->tr.base + index + 4);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    old_type = (env->tr.flags >> DESC_TYPE_SHIFT) & 0xf;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    v1 = ldub_kernel(env->tr.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    v2 = ldub_kernel(env->tr.base + old_tss_limit_max);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stb_kernel(env->tr.base, v1);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stb_kernel(env->tr.base + old_tss_limit_max, v2);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        ptr = env->gdt.base + (env->tr.selector & ~7);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + 0x20, next_eip);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + 0x24, old_eflags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 0 * 4), EAX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 1 * 4), ECX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 2 * 4), EDX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 3 * 4), EBX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 4 * 4), ESP);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 5 * 4), EBP);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 6 * 4), ESI);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 7 * 4), EDI);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            stw_kernel(env->tr.base + (0x48 + i * 4), env->segs[i].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + 0x0e, next_eip);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + 0x10, old_eflags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 0 * 2), EAX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 1 * 2), ECX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 2 * 2), EDX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 3 * 2), EBX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 4 * 2), ESP);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 5 * 2), EBP);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 6 * 2), ESI);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 7 * 2), EDI);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            stw_kernel(env->tr.base + (0x22 + i * 4), env->segs[i].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw_kernel(tss_base, env->tr.selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        ptr = env->gdt.base + (tss_selector & ~7);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->cr[0] |= CR0_TS_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags |= HF_TS_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.selector = tss_selector;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.base = tss_base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.limit = tss_limit;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.flags = e2 & ~DESC_TSS_BUSY_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if ((type & 8) && (env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = new_eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.selector = new_ldt & ~4;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.base = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.limit = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.flags = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        dt = &env->gdt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        load_seg_cache_raw_dt(&env->ldt, e1, e2);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (new_eip > env->segs[R_CS].limit) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->dr[7] & 0x55) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (hw_breakpoint_enabled(env->dr[7], i) == 0x1)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->dr[7] &= ~0x55;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (!(env->tr.flags & DESC_P_MASK) ||
./tools/qemu-xen-traditional/target-i386/op_helper.c:        ((env->tr.flags >> DESC_TYPE_SHIFT) & 0xf) != 9 ||
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->tr.limit < 103)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    io_offset = lduw_kernel(env->tr.base + 0x66);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if ((io_offset + 1) > env->tr.limit)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = lduw_kernel(env->tr.base + io_offset);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        old_eip = env->eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    dt = &env->idt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            type = (env->tr.flags >> DESC_TYPE_SHIFT) & 0xf;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->segs[R_SS].flags & DESC_B_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            ssp = env->segs[R_SS].base + esp;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->eflags & VM_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->eflags & VM_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHL(ssp, esp, sp_mask, env->segs[R_GS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHL(ssp, esp, sp_mask, env->segs[R_FS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHL(ssp, esp, sp_mask, env->segs[R_DS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHL(ssp, esp, sp_mask, env->segs[R_ES].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            PUSHL(ssp, esp, sp_mask, env->segs[R_SS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        PUSHL(ssp, esp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHW(ssp, esp, sp_mask, env->segs[R_GS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHW(ssp, esp, sp_mask, env->segs[R_FS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHW(ssp, esp, sp_mask, env->segs[R_DS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHW(ssp, esp, sp_mask, env->segs[R_ES].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            PUSHW(ssp, esp, sp_mask, env->segs[R_SS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        PUSHW(ssp, esp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->eflags & VM_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = offset;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->eflags &= ~IF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags &= ~(TF_MASK | VM_MASK | RF_MASK | NT_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:           env->tr.base, env->tr.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (!(env->tr.flags & DESC_P_MASK))
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if ((index + 7) > env->tr.limit)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        raise_exception_err(EXCP0A_TSS, env->tr.selector & 0xfffc);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    return ldq_kernel(env->tr.base + index);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        old_eip = env->eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    dt = &env->idt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->eflags & VM_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    PUSHQ(esp, env->segs[R_SS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    PUSHQ(esp, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = offset;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->eflags &= ~IF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags &= ~(TF_MASK | VM_MASK | RF_MASK | NT_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->exception_index = EXCP_SYSCALL;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->exception_next_eip = env->eip + next_eip_addend;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (!(env->efer & MSR_EFER_SCE)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    selector = (env->star >> 32) & 0xffff;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        ECX = env->eip + next_eip_addend;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->regs[11] = compute_eflags();
./tools/qemu-xen-traditional/target-i386/op_helper.c:        code64 = env->hflags & HF_CS64_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->eflags &= ~env->fmask;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        load_eflags(env->eflags, 0);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->eip = env->lstar;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->eip = env->cstar;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        ECX = (uint32_t)(env->eip + next_eip_addend);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->eflags &= ~(IF_MASK | RF_MASK | VM_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->eip = (uint32_t)env->star;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (!(env->efer & MSR_EFER_SCE)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (!(env->cr[0] & CR0_PE_MASK) || cpl != 0) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    selector = (env->star >> 48) & 0xffff;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->eip = ECX;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->eip = (uint32_t)ECX;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        load_eflags((uint32_t)(env->regs[11]), TF_MASK | AC_MASK | ID_MASK |
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->eip = (uint32_t)ECX;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->eflags |= IF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->exception_index = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    dt = &env->idt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        old_eip = env->eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    old_cs = env->segs[R_CS].selector;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = offset;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->segs[R_CS].selector = selector;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->segs[R_CS].base = (selector << 4);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags &= ~(IF_MASK | TF_MASK | AC_MASK | RF_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    dt = &env->idt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if ((env->cr[0] & CR0_PE_MASK)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:                    env->hflags & HF_CPL_MASK,
./tools/qemu-xen-traditional/target-i386/op_helper.c:                    env->segs[R_CS].selector, EIP,
./tools/qemu-xen-traditional/target-i386/op_helper.c:                    (int)env->segs[R_CS].base + EIP,
./tools/qemu-xen-traditional/target-i386/op_helper.c:                    env->segs[R_SS].selector, ESP);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                qemu_log(" CR2=" TARGET_FMT_lx, env->cr[2]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                ptr = env->segs[R_CS].base + env->eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->cr[0] & CR0_PE_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    int first_contributory = env->old_exception == 0 ||
./tools/qemu-xen-traditional/target-i386/op_helper.c:                              (env->old_exception >= 10 &&
./tools/qemu-xen-traditional/target-i386/op_helper.c:                               env->old_exception <= 13);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->old_exception, intno);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->old_exception == EXCP08_DBLE) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_SVMI_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        || (env->old_exception == EXCP0E_PAGE &&
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->old_exception = intno;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->exception_index = intno;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->error_code = error_code;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->exception_is_int = is_int;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->exception_next_eip = env->eip + next_eip_addend;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags |= HF_SMM_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    sm_state = env->smbase + 0x8000;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        dt = &env->segs[i];
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(sm_state + 0x7e68, env->gdt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7e64, env->gdt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stw_phys(sm_state + 0x7e70, env->ldt.selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(sm_state + 0x7e78, env->ldt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7e74, env->ldt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stw_phys(sm_state + 0x7e72, (env->ldt.flags >> 8) & 0xf0ff);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(sm_state + 0x7e88, env->idt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7e84, env->idt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stw_phys(sm_state + 0x7e90, env->tr.selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(sm_state + 0x7e98, env->tr.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7e94, env->tr.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stw_phys(sm_state + 0x7e92, (env->tr.flags >> 8) & 0xf0ff);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(sm_state + 0x7ed0, env->efer);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stq_phys(sm_state + 0x7ff8 - i * 8, env->regs[i]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(sm_state + 0x7f78, env->eip);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f68, env->dr[6]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f60, env->dr[7]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f48, env->cr[4]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f50, env->cr[3]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f58, env->cr[0]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f00, env->smbase);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7ffc, env->cr[0]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7ff8, env->cr[3]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7ff0, env->eip);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7fcc, env->dr[6]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7fc8, env->dr[7]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7fc4, env->tr.selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f64, env->tr.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f60, env->tr.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f5c, (env->tr.flags >> 8) & 0xf0ff);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7fc0, env->ldt.selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f80, env->ldt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f7c, env->ldt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f78, (env->ldt.flags >> 8) & 0xf0ff);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f74, env->gdt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f70, env->gdt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f58, env->idt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f54, env->idt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        dt = &env->segs[i];
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f14, env->cr[4]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(sm_state + 0x7ef8, env->smbase);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = 0x00008000;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_load_seg_cache(env, R_CS, (env->smbase >> 4) & 0xffff, env->smbase,
./tools/qemu-xen-traditional/target-i386/op_helper.c:                       env->cr[0] & ~(CR0_PE_MASK | CR0_EM_MASK | CR0_TS_MASK | CR0_PG_MASK));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[7] = 0x00000400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    sm_state = env->smbase + 0x8000;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->gdt.base = ldq_phys(sm_state + 0x7e68);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->gdt.limit = ldl_phys(sm_state + 0x7e64);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.selector = lduw_phys(sm_state + 0x7e70);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.base = ldq_phys(sm_state + 0x7e78);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.limit = ldl_phys(sm_state + 0x7e74);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.flags = (lduw_phys(sm_state + 0x7e72) & 0xf0ff) << 8;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->idt.base = ldq_phys(sm_state + 0x7e88);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->idt.limit = ldl_phys(sm_state + 0x7e84);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.selector = lduw_phys(sm_state + 0x7e90);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.base = ldq_phys(sm_state + 0x7e98);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.limit = ldl_phys(sm_state + 0x7e94);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.flags = (lduw_phys(sm_state + 0x7e92) & 0xf0ff) << 8;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->regs[i] = ldq_phys(sm_state + 0x7ff8 - i * 8);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = ldq_phys(sm_state + 0x7f78);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[6] = ldl_phys(sm_state + 0x7f68);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[7] = ldl_phys(sm_state + 0x7f60);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->smbase = ldl_phys(sm_state + 0x7f00) & ~0x7fff;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = ldl_phys(sm_state + 0x7ff0);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[6] = ldl_phys(sm_state + 0x7fcc);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[7] = ldl_phys(sm_state + 0x7fc8);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.selector = ldl_phys(sm_state + 0x7fc4) & 0xffff;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.base = ldl_phys(sm_state + 0x7f64);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.limit = ldl_phys(sm_state + 0x7f60);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.flags = (ldl_phys(sm_state + 0x7f5c) & 0xf0ff) << 8;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.selector = ldl_phys(sm_state + 0x7fc0) & 0xffff;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.base = ldl_phys(sm_state + 0x7f80);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.limit = ldl_phys(sm_state + 0x7f7c);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.flags = (ldl_phys(sm_state + 0x7f78) & 0xf0ff) << 8;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->gdt.base = ldl_phys(sm_state + 0x7f74);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->gdt.limit = ldl_phys(sm_state + 0x7f70);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->idt.base = ldl_phys(sm_state + 0x7f58);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->idt.limit = ldl_phys(sm_state + 0x7f54);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->smbase = ldl_phys(sm_state + 0x7ef8) & ~0x7fff;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags &= ~HF_SMM_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[6] |= DR6_BS;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    esp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->ldt.base = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->ldt.limit = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        dt = &env->gdt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            load_seg_cache_raw_dt(&env->ldt, e1, e2);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->ldt.base |= (target_ulong)e3 << 32;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            load_seg_cache_raw_dt(&env->ldt, e1, e2);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->ldt.selector = selector;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->tr.base = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->tr.limit = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->tr.flags = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        dt = &env->gdt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            load_seg_cache_raw_dt(&env->tr, e1, e2);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->tr.base |= (target_ulong)e3 << 32;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            load_seg_cache_raw_dt(&env->tr, e1, e2);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tr.selector = selector;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            && (!(env->hflags & HF_CS64_MASK) || cpl == 3)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            dt = &env->ldt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            dt = &env->gdt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            !(env->hflags & HF_LMA_MASK) && !(e2 & DESC_L_MASK))
./tools/qemu-xen-traditional/target-i386/op_helper.c:        cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            next_eip = env->eip + next_eip_addend;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    esp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        PUSHL(ssp, esp, esp_mask, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        PUSHW(ssp, esp, esp_mask, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = new_eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->segs[R_CS].selector = new_cs;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->segs[R_CS].base = (new_cs << 4);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    next_eip = env->eip + next_eip_addend;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            PUSHQ(rsp, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHL(ssp, sp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHW(ssp, sp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            old_sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            old_ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHL(ssp, sp, sp_mask, env->segs[R_SS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                PUSHW(ssp, sp, sp_mask, env->segs[R_SS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            PUSHL(ssp, sp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:            PUSHW(ssp, sp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->exception_index = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->segs[R_CS].selector = new_cs;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->segs[R_CS].base = (new_cs << 4);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = new_eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->eflags & VM_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags2 &= ~HF2_NMI_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        (env->segs[seg_reg].selector & 0xfffc) == 0)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    e2 = env->segs[seg_reg].flags;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (rpl == cpl && (!(env->hflags & HF_CS64_MASK) ||
./tools/qemu-xen-traditional/target-i386/op_helper.c:                       ((env->hflags & HF_CS64_MASK) && !is_iret))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if ((env->hflags & HF_LMA_MASK) && rpl != 3) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_CS64_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = new_eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        iopl = (env->eflags >> IOPL_SHIFT) & 3;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = new_eip & 0xffff;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->eflags & NT_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        tss_selector = lduw_kernel(env->tr.base + 0);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags2 &= ~HF2_NMI_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->exception_index = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->exception_index = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->sysenter_cs == 0) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags &= ~(VM_MASK | IF_MASK | RF_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_CS, env->sysenter_cs & 0xfffc,
./tools/qemu-xen-traditional/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_CS, env->sysenter_cs & 0xfffc,
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_load_seg_cache(env, R_SS, (env->sysenter_cs + 8) & 0xfffc,
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ESP = env->sysenter_esp;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    EIP = env->sysenter_eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->sysenter_cs == 0 || cpl != 0) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_CS, ((env->sysenter_cs + 32) & 0xfffc) | 3,
./tools/qemu-xen-traditional/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_SS, ((env->sysenter_cs + 40) & 0xfffc) | 3,
./tools/qemu-xen-traditional/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_CS, ((env->sysenter_cs + 16) & 0xfffc) | 3,
./tools/qemu-xen-traditional/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_SS, ((env->sysenter_cs + 24) & 0xfffc) | 3,
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->exception_index = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->cr[reg];
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (!(env->hflags2 & HF2_VINTR_MASK)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            val = env->v_tpr;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (!(env->hflags2 & HF2_VINTR_MASK)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->v_tpr = t0 & 0x0f;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->cr[reg] = t0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->dr[reg] = t0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->dr[7] = t0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->dr[reg] = t0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    t0 = (env->cr[0] & ~0xe) | (t0 & 0xf);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->cr[0] &= ~CR0_TS_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags &= ~HF_TS_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if ((env->cr[4] & CR4_TSD_MASK) && ((env->hflags & HF_CPL_MASK) != 0)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = cpu_get_tsc(env) + env->tsc_offset;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if ((env->cr[4] & CR4_PCE_MASK) && ((env->hflags & HF_CPL_MASK) != 0)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->sysenter_cs = val & 0xffff;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->sysenter_esp = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->sysenter_eip = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_SYSCALL)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_LM)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_FFXSR)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_NX)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->cpuid_ext3_features & CPUID_EXT3_SVM)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_FFXSR)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            cpu_load_efer(env, (env->efer & ~update_mask) |
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->star = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->pat = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->vm_hsave = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->lstar = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->cstar = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fmask = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->segs[R_FS].base = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->segs[R_GS].base = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->kernelgsbase = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->mtrr_var[((uint32_t)ECX - MSR_MTRRphysBase(0)) / 2].base = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->mtrr_var[((uint32_t)ECX - MSR_MTRRphysMask(0)) / 2].mask = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix64K_00000] = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix16K_80000 + 1] = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix4K_C0000 + 3] = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->mtrr_deftype = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->sysenter_cs;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->sysenter_esp;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->sysenter_eip;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->efer;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->star;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->pat;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->vm_hsave;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->lstar;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->cstar;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->fmask;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->segs[R_FS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->segs[R_GS].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->kernelgsbase;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->kqemu_enabled) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->mtrr_var[((uint32_t)ECX - MSR_MTRRphysBase(0)) / 2].base;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->mtrr_var[((uint32_t)ECX - MSR_MTRRphysMask(0)) / 2].mask;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->mtrr_fixed[0];
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix16K_80000 + 1];
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix4K_C0000 + 3];
./tools/qemu-xen-traditional/target-i386/op_helper.c:        val = env->mtrr_deftype;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->cpuid_features & CPUID_MTRR)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus |= mask;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->fpus & (~env->fpuc & FPUC_EM))
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= FPUS_SE | FPUS_B;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->cr[0] & CR0_NE_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    FT0 = float32_to_floatx(u.f, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    FT0 = float64_to_floatx(u.f, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    FT0 = int32_to_floatx(val, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = float32_to_floatx(u.f, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen-traditional/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = float64_to_floatx(u.f, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen-traditional/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = int32_to_floatx(val, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen-traditional/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = int64_to_floatx(val, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen-traditional/target-i386/op_helper.c:    u.f = floatx_to_float32(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    u.f = floatx_to_float64(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = floatx_to_int32(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = floatx_to_int32(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = floatx_to_int64(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = floatx_to_int32_round_to_zero(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = floatx_to_int32_round_to_zero(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = floatx_to_int64_round_to_zero(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = helper_fldt(ptr);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus &= (~0x4700);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = (env->fpstt + 1) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus &= (~0x4700);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[(env->fpstt + st_index) & 7] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ret = floatx_compare(ST0, FT0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus = (env->fpus & ~0x4500) | fcom_ccval[ret + 1];
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ret = floatx_compare_quiet(ST0, FT0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus = (env->fpus & ~0x4500) | fcom_ccval[ret+ 1];
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ret = floatx_compare(ST0, FT0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ret = floatx_compare_quiet(ST0, FT0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    return (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    return env->fpuc;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    switch(env->fpuc & RC_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    set_float_rounding_mode(rnd_type, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    switch((env->fpuc >> 8) & 3) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    set_floatx80_rounding_precision(rnd_type, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpuc = val;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus &= 0x7f00;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->fpus & FPUS_SE)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpuc = 0x37f;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[0] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[1] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[2] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[3] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[4] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[5] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[6] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[7] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    val = floatx_to_int64(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x4700);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x400);  /* C2 <-- 0 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= (q & 0x4) << (8 - 2);  /* (C0) <-- q2 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= (q & 0x2) << (14 - 1); /* (C3) <-- q1 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= (q & 0x1) << (9 - 0);  /* (C1) <-- q0 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;  /* C2 <-- 1 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:       env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= (q & 0x4) << (8 - 2);  /* (C0) <-- q2 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= (q & 0x2) << (14 - 1); /* (C3) <-- q1 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= (q & 0x1) << (9 - 0);  /* (C1) <-- q0 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;  /* C2 <-- 1 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x4700);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x4700);  /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x400);  /* C2 <-- 0 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ST0 = floatx_round_to_int(ST0, &env->fp_status);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x400);  /* C2 <-- 0 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus &= (~0x400);  /* C2 <-- 0 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus &= (~0x4700);  /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x200; /* C1 <-- 1 */
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->fpus |=  0x500 /*Infinity*/;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->fpus |=  0x100 /*NaN*/;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->fpus |=  0x4000 /*Zero*/;
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->fpus |= 0x4400 /*Denormal*/;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    fpus = (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen-traditional/target-i386/op_helper.c:	if (env->fptags[i]) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            tmp.d = env->fpregs[i].d;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl(ptr, env->fpuc);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stw(ptr, env->fpuc);
./tools/qemu-xen-traditional/target-i386/op_helper.c:	env->fpuc = lduw(ptr);
./tools/qemu-xen-traditional/target-i386/op_helper.c:	env->fpuc = lduw(ptr);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = (fpus >> 11) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus = fpus & ~0x3800;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fptags[i] = ((fptag & 3) == 3);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpuc = 0x37f;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[0] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[1] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[2] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[3] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[4] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[5] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[6] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fptags[7] = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    fpus = (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        fptag |= (env->fptags[i] << i);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stw(ptr, env->fpuc);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->cr[4] & CR4_OSFXSR_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl(ptr + 0x18, env->mxcsr); /* mxcsr */
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_CS64_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (!(env->efer & MSR_EFER_FFXSR)
./tools/qemu-xen-traditional/target-i386/op_helper.c:          || (env->hflags & HF_CPL_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:          || !(env->hflags & HF_LMA_MASK)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:                stq(addr, env->xmm_regs[i].XMM_Q(0));
./tools/qemu-xen-traditional/target-i386/op_helper.c:                stq(addr + 8, env->xmm_regs[i].XMM_Q(1));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpuc = lduw(ptr);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = (fpus >> 11) & 7;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpus = fpus & ~0x3800;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->fptags[i] = ((fptag >> i) & 1);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->cr[4] & CR4_OSFXSR_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->mxcsr = ldl(ptr + 0x18);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->hflags & HF_CS64_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (!(env->efer & MSR_EFER_FFXSR)
./tools/qemu-xen-traditional/target-i386/op_helper.c:          || (env->hflags & HF_CPL_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:          || !(env->hflags & HF_LMA_MASK)) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->xmm_regs[i].XMM_Q(0) = ldq(addr);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->xmm_regs[i].XMM_Q(1) = ldq(addr + 8);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags &= ~HF_INHIBIT_IRQ_MASK; /* needed if sti is just before */
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->halted = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->exception_index = EXCP_HLT;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->cpu_index != 0 || env->next_cpu != NULL) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->exception_index = EXCP_DEBUG;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags &= ~IF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags |= IF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags &= ~VIF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags |= VIF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->eflags & VIP_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags |= HF_INHIBIT_IRQ_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags &= ~HF_INHIBIT_IRQ_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->vm_vmcb = addr;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.gdtr.base), env->gdt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(env->vm_hsave + offsetof(struct vmcb, save.gdtr.limit), env->gdt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.idtr.base), env->idt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(env->vm_hsave + offsetof(struct vmcb, save.idtr.limit), env->idt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr0), env->cr[0]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr2), env->cr[2]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr3), env->cr[3]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr4), env->cr[4]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.dr6), env->dr[6]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.dr7), env->dr[7]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.efer), env->efer);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.rflags), compute_eflags());
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_save_seg(env->vm_hsave + offsetof(struct vmcb, save.es), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                  &env->segs[R_ES]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_save_seg(env->vm_hsave + offsetof(struct vmcb, save.cs), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_CS]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_save_seg(env->vm_hsave + offsetof(struct vmcb, save.ss), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_SS]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_save_seg(env->vm_hsave + offsetof(struct vmcb, save.ds), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_DS]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.rip),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.rsp), ESP);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.rax), EAX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->intercept            = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->intercept_cr_read    = lduw_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_cr_read));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->intercept_cr_write   = lduw_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_cr_write));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->intercept_dr_read    = lduw_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_dr_read));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->intercept_dr_write   = lduw_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_dr_write));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->intercept_exceptions = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_exceptions));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags |= HF_SVMI_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tsc_offset = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.tsc_offset));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->gdt.base  = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.gdtr.base));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->gdt.limit = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, save.gdtr.limit));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->idt.base  = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.idtr.base));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->idt.limit = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, save.idtr.limit));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_2), 0);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_update_cr0(env, ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr0)));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_update_cr4(env, ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr4)));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_update_cr3(env, ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr3)));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->cr[2] = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr2));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    int_ctl = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_ctl));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags2 &= ~(HF2_HIF_MASK | HF2_VINTR_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->v_tpr = int_ctl & V_TPR_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->hflags2 |= HF2_VINTR_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->eflags & IF_MASK)
./tools/qemu-xen-traditional/target-i386/op_helper.c:            env->hflags2 |= HF2_HIF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                  ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.efer)));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    load_eflags(ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rflags)),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_vmcb + offsetof(struct vmcb, save.es),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_vmcb + offsetof(struct vmcb, save.cs),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_vmcb + offsetof(struct vmcb, save.ss),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_vmcb + offsetof(struct vmcb, save.ds),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    EIP = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rip));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eip = EIP;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ESP = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rsp));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    EAX = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rax));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[7] = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.dr7));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[6] = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.dr6));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_set_cpl(env, ldub_phys(env->vm_vmcb + offsetof(struct vmcb, save.cpl)));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    switch(ldub_phys(env->vm_vmcb + offsetof(struct vmcb, control.tlb_ctl))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags2 |= HF2_GIF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->interrupt_request |= CPU_INTERRUPT_VIRQ;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    event_inj = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj));
./tools/qemu-xen-traditional/target-i386/op_helper.c:        uint32_t event_inj_err = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj_err));
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj), event_inj & ~SVM_EVTINJ_VALID);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_index = vector;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->error_code = event_inj_err;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_is_int = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_next_eip = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_index = EXCP02_NMI;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->error_code = event_inj_err;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_is_int = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_next_eip = EIP;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_index = vector;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->error_code = event_inj_err;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_is_int = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_next_eip = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_index = vector;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->error_code = event_inj_err;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_is_int = 1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->exception_next_eip = EIP;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        qemu_log_mask(CPU_LOG_TB_IN_ASM, " %#x %#x\n", env->exception_index, env->error_code);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->segs[R_FS].base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->tr);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->ldt);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->kernelgsbase = ldq_phys(addr + offsetof(struct vmcb, save.kernel_gs_base));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->lstar = ldq_phys(addr + offsetof(struct vmcb, save.lstar));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->cstar = ldq_phys(addr + offsetof(struct vmcb, save.cstar));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fmask = ldq_phys(addr + offsetof(struct vmcb, save.sfmask));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->star = ldq_phys(addr + offsetof(struct vmcb, save.star));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->sysenter_cs = ldq_phys(addr + offsetof(struct vmcb, save.sysenter_cs));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->sysenter_esp = ldq_phys(addr + offsetof(struct vmcb, save.sysenter_esp));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->sysenter_eip = ldq_phys(addr + offsetof(struct vmcb, save.sysenter_eip));
./tools/qemu-xen-traditional/target-i386/op_helper.c:                env->segs[R_FS].base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_FS]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_GS]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->tr);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->ldt);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.kernel_gs_base), env->kernelgsbase);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.lstar), env->lstar);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.cstar), env->cstar);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.sfmask), env->fmask);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.star), env->star);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.sysenter_cs), env->sysenter_cs);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.sysenter_esp), env->sysenter_esp);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.sysenter_eip), env->sysenter_eip);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags2 |= HF2_GIF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags2 &= ~HF2_GIF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (likely(!(env->hflags & HF_SVMI_MASK)))
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->intercept_cr_read & (1 << (type - SVM_EXIT_READ_CR0))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->intercept_cr_write & (1 << (type - SVM_EXIT_WRITE_CR0))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->intercept_dr_read & (1 << (type - SVM_EXIT_READ_DR0))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->intercept_dr_write & (1 << (type - SVM_EXIT_WRITE_DR0))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->intercept_exceptions & (1 << (type - SVM_EXIT_EXCP_BASE))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->intercept & (1ULL << (SVM_EXIT_MSR - SVM_EXIT_INTR))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:            uint64_t addr = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.msrpm_base_pa));
./tools/qemu-xen-traditional/target-i386/op_helper.c:        if (env->intercept & (1ULL << (type - SVM_EXIT_INTR))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->intercept & (1ULL << (SVM_EXIT_IOIO - SVM_EXIT_INTR))) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        uint64_t addr = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.iopm_base_pa));
./tools/qemu-xen-traditional/target-i386/op_helper.c:            stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_2), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                     env->eip + next_eip_addend);
./tools/qemu-xen-traditional/target-i386/op_helper.c:                ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_2)),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if(env->hflags & HF_INHIBIT_IRQ_MASK) {
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_state), SVM_INTERRUPT_SHADOW_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:        env->hflags &= ~HF_INHIBIT_IRQ_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:        stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_state), 0);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_save_seg(env->vm_vmcb + offsetof(struct vmcb, save.es), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_ES]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_save_seg(env->vm_vmcb + offsetof(struct vmcb, save.cs), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_CS]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_save_seg(env->vm_vmcb + offsetof(struct vmcb, save.ss), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_SS]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_save_seg(env->vm_vmcb + offsetof(struct vmcb, save.ds), 
./tools/qemu-xen-traditional/target-i386/op_helper.c:                 &env->segs[R_DS]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.gdtr.base), env->gdt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, save.gdtr.limit), env->gdt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.idtr.base), env->idt.base);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, save.idtr.limit), env->idt.limit);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.efer), env->efer);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr0), env->cr[0]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr2), env->cr[2]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr3), env->cr[3]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr4), env->cr[4]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    int_ctl = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_ctl));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    int_ctl |= env->v_tpr & V_TPR_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    if (env->interrupt_request & CPU_INTERRUPT_VIRQ)
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_ctl), int_ctl);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rflags), compute_eflags());
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rip), env->eip);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rsp), ESP);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rax), EAX);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.dr7), env->dr[7]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.dr6), env->dr[6]);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stb_phys(env->vm_vmcb + offsetof(struct vmcb, save.cpl), env->hflags & HF_CPL_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags2 &= ~(HF2_HIF_MASK | HF2_VINTR_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags &= ~HF_SVMI_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->intercept = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->intercept_exceptions = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->interrupt_request &= ~CPU_INTERRUPT_VIRQ;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->tsc_offset = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->gdt.base  = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.gdtr.base));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->gdt.limit = ldl_phys(env->vm_hsave + offsetof(struct vmcb, save.gdtr.limit));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->idt.base  = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.idtr.base));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->idt.limit = ldl_phys(env->vm_hsave + offsetof(struct vmcb, save.idtr.limit));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_update_cr0(env, ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr0)) | CR0_PE_MASK);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_update_cr4(env, ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr4)));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    cpu_x86_update_cr3(env, ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr3)));
./tools/qemu-xen-traditional/target-i386/op_helper.c:                  ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.efer)));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    load_eflags(ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.rflags)),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_hsave + offsetof(struct vmcb, save.es),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_hsave + offsetof(struct vmcb, save.cs),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_hsave + offsetof(struct vmcb, save.ss),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_hsave + offsetof(struct vmcb, save.ds),
./tools/qemu-xen-traditional/target-i386/op_helper.c:    EIP = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.rip));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    ESP = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.rsp));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    EAX = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.rax));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[6] = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.dr6));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->dr[7] = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.dr7));
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_code), exit_code);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_1), exit_info_1);
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->hflags2 &= ~HF2_GIF_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->cr[0] |= CR0_PE_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->eflags &= ~VM_MASK;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->exception_index = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->error_code = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->old_exception = -1;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    env->fpstt = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    *(uint32_t *)(env->fptags) = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    *(uint32_t *)(env->fptags + 4) = 0;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    *(uint32_t *)(env->fptags) = 0x01010101;
./tools/qemu-xen-traditional/target-i386/op_helper.c:    *(uint32_t *)(env->fptags + 4) = 0x01010101;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpuid_vendor1 = def->vendor1;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpuid_vendor2 = def->vendor2;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpuid_vendor3 = def->vendor3;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpuid_vendor1 = CPUID_VENDOR_INTEL_1;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpuid_vendor2 = CPUID_VENDOR_INTEL_2;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpuid_vendor3 = CPUID_VENDOR_INTEL_3;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpuid_level = def->level;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpuid_version = 0xf00 | ((def->family - 0x0f) << 20);
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpuid_version = def->family << 8;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpuid_version |= ((def->model & 0xf) << 4) | ((def->model >> 4) << 16);
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpuid_version |= def->stepping;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpuid_features = def->features;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->pat = 0x0007040600070406ULL;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpuid_ext_features = def->ext_features;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpuid_ext2_features = def->ext2_features;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpuid_xlevel = def->xlevel;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpuid_ext3_features = def->ext3_features;
./tools/qemu-xen-traditional/target-i386/helper.c:            env->cpuid_model[i >> 2] |= c << (8 * (i & 3));
./tools/qemu-xen-traditional/target-i386/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen-traditional/target-i386/helper.c:    env->old_exception = -1;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->hflags |= HF_SOFTMMU_MASK;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->hflags2 |= HF2_GIF_MASK;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->a20_mask = ~0x0;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->smbase = 0x30000;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->idt.limit = 0xffff;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->gdt.limit = 0xffff;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->ldt.limit = 0xffff;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->ldt.flags = DESC_P_MASK | (2 << DESC_TYPE_SHIFT);
./tools/qemu-xen-traditional/target-i386/helper.c:    env->tr.limit = 0xffff;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->tr.flags = DESC_P_MASK | (11 << DESC_TYPE_SHIFT);
./tools/qemu-xen-traditional/target-i386/helper.c:    env->eip = 0xfff0;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->regs[R_EDX] = env->cpuid_version;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->eflags = 0x2;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->fptags[i] = 1;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->fpuc = 0x37f;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->mxcsr = 0x1f80;
./tools/qemu-xen-traditional/target-i386/helper.c:    memset(env->dr, 0, sizeof(env->dr));
./tools/qemu-xen-traditional/target-i386/helper.c:    env->dr[6] = DR6_FIXED_1;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->dr[7] = DR7_FIXED_1;
./tools/qemu-xen-traditional/target-i386/helper.c:    eflags = env->eflags;
./tools/qemu-xen-traditional/target-i386/helper.c:    if (env->hflags & HF_CS64_MASK) {
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[R_EAX],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[R_EBX],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[R_ECX],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[R_EDX],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[R_ESI],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[R_EDI],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[R_EBP],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[R_ESP],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[8],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[9],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[10],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[11],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[12],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[13],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[14],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->regs[15],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->eip, eflags,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->hflags & HF_CPL_MASK,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (env->hflags >> HF_INHIBIT_IRQ_SHIFT) & 1,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (int)(env->a20_mask >> 20) & 1,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (env->hflags >> HF_SMM_SHIFT) & 1,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->halted);
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->regs[R_EAX],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->regs[R_EBX],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->regs[R_ECX],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->regs[R_EDX],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->regs[R_ESI],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->regs[R_EDI],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->regs[R_EBP],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->regs[R_ESP],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->eip, eflags,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->hflags & HF_CPL_MASK,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (env->hflags >> HF_INHIBIT_IRQ_SHIFT) & 1,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (int)(env->a20_mask >> 20) & 1,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (env->hflags >> HF_SMM_SHIFT) & 1,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->halted);
./tools/qemu-xen-traditional/target-i386/helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/helper.c:            SegmentCache *sc = &env->segs[i];
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->ldt.selector,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->ldt.base,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->ldt.limit,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->ldt.flags);
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->tr.selector,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->tr.base,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->tr.limit,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->tr.flags);
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->gdt.base, env->gdt.limit);
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->idt.base, env->idt.limit);
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->cr[0],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->cr[2],
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->cr[3],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->cr[4]);
./tools/qemu-xen-traditional/target-i386/helper.c:            cpu_fprintf(f, "DR%d=%016" PRIx64 " ", i, env->dr[i]);
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->dr[6], env->dr[7]);
./tools/qemu-xen-traditional/target-i386/helper.c:            SegmentCache *sc = &env->segs[i];
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->ldt.selector,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->ldt.base,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->ldt.limit,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->ldt.flags);
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->tr.selector,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->tr.base,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->tr.limit,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->tr.flags);
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->gdt.base, env->gdt.limit);
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->idt.base, env->idt.limit);
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->cr[0],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->cr[2],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->cr[3],
./tools/qemu-xen-traditional/target-i386/helper.c:                    (uint32_t)env->cr[4]);
./tools/qemu-xen-traditional/target-i386/helper.c:            cpu_fprintf(f, "DR%d=%08x ", i, env->dr[i]);
./tools/qemu-xen-traditional/target-i386/helper.c:        cpu_fprintf(f, "\nDR6=%08x DR7=%08x\n", env->dr[6], env->dr[7]);
./tools/qemu-xen-traditional/target-i386/helper.c:        if ((unsigned)env->cc_op < CC_OP_NB)
./tools/qemu-xen-traditional/target-i386/helper.c:            snprintf(cc_op_name, sizeof(cc_op_name), "%s", cc_op_str[env->cc_op]);
./tools/qemu-xen-traditional/target-i386/helper.c:            snprintf(cc_op_name, sizeof(cc_op_name), "[%d]", env->cc_op);
./tools/qemu-xen-traditional/target-i386/helper.c:        if (env->hflags & HF_CS64_MASK) {
./tools/qemu-xen-traditional/target-i386/helper.c:                        env->cc_src, env->cc_dst,
./tools/qemu-xen-traditional/target-i386/helper.c:                        (uint32_t)env->cc_src, (uint32_t)env->cc_dst,
./tools/qemu-xen-traditional/target-i386/helper.c:            fptag |= ((!env->fptags[i]) << i);
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->fpuc,
./tools/qemu-xen-traditional/target-i386/helper.c:                    (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->fpstt,
./tools/qemu-xen-traditional/target-i386/helper.c:                    env->mxcsr);
./tools/qemu-xen-traditional/target-i386/helper.c:            tmp.d = env->fpregs[i].d;
./tools/qemu-xen-traditional/target-i386/helper.c:                        i, env->fpregs[i].mmx.q);
./tools/qemu-xen-traditional/target-i386/helper.c:        if (env->hflags & HF_CS64_MASK)
./tools/qemu-xen-traditional/target-i386/helper.c:                        env->xmm_regs[i].XMM_L(3),
./tools/qemu-xen-traditional/target-i386/helper.c:                        env->xmm_regs[i].XMM_L(2),
./tools/qemu-xen-traditional/target-i386/helper.c:                        env->xmm_regs[i].XMM_L(1),
./tools/qemu-xen-traditional/target-i386/helper.c:                        env->xmm_regs[i].XMM_L(0));
./tools/qemu-xen-traditional/target-i386/helper.c:    if (a20_state != ((env->a20_mask >> 20) & 1)) {
./tools/qemu-xen-traditional/target-i386/helper.c:        env->a20_mask = (~0x100000) | (a20_state << 20);
./tools/qemu-xen-traditional/target-i386/helper.c:        (env->cr[0] & (CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK))) {
./tools/qemu-xen-traditional/target-i386/helper.c:    if (!(env->cr[0] & CR0_PG_MASK) && (new_cr0 & CR0_PG_MASK) &&
./tools/qemu-xen-traditional/target-i386/helper.c:        (env->efer & MSR_EFER_LME)) {
./tools/qemu-xen-traditional/target-i386/helper.c:        if (!(env->cr[4] & CR4_PAE_MASK))
./tools/qemu-xen-traditional/target-i386/helper.c:        env->efer |= MSR_EFER_LMA;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->hflags |= HF_LMA_MASK;
./tools/qemu-xen-traditional/target-i386/helper.c:    } else if ((env->cr[0] & CR0_PG_MASK) && !(new_cr0 & CR0_PG_MASK) &&
./tools/qemu-xen-traditional/target-i386/helper.c:               (env->efer & MSR_EFER_LMA)) {
./tools/qemu-xen-traditional/target-i386/helper.c:        env->efer &= ~MSR_EFER_LMA;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->hflags &= ~(HF_LMA_MASK | HF_CS64_MASK);
./tools/qemu-xen-traditional/target-i386/helper.c:        env->eip &= 0xffffffff;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cr[0] = new_cr0 | CR0_ET_MASK;
./tools/qemu-xen-traditional/target-i386/helper.c:    pe_state = (env->cr[0] & CR0_PE_MASK);
./tools/qemu-xen-traditional/target-i386/helper.c:    env->hflags = (env->hflags & ~HF_PE_MASK) | (pe_state << HF_PE_SHIFT);
./tools/qemu-xen-traditional/target-i386/helper.c:    env->hflags |= ((pe_state ^ 1) << HF_ADDSEG_SHIFT);
./tools/qemu-xen-traditional/target-i386/helper.c:    env->hflags = (env->hflags & ~(HF_MP_MASK | HF_EM_MASK | HF_TS_MASK)) |
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cr[3] = new_cr3;
./tools/qemu-xen-traditional/target-i386/helper.c:    if (env->cr[0] & CR0_PG_MASK) {
./tools/qemu-xen-traditional/target-i386/helper.c:    printf("CR4 update: CR4=%08x\n", (uint32_t)env->cr[4]);
./tools/qemu-xen-traditional/target-i386/helper.c:        (env->cr[4] & (CR4_PGE_MASK | CR4_PAE_MASK | CR4_PSE_MASK))) {
./tools/qemu-xen-traditional/target-i386/helper.c:    if (!(env->cpuid_features & CPUID_SSE))
./tools/qemu-xen-traditional/target-i386/helper.c:        env->hflags |= HF_OSFXSR_MASK;
./tools/qemu-xen-traditional/target-i386/helper.c:        env->hflags &= ~HF_OSFXSR_MASK;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cr[4] = new_cr4;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cr[2] = addr;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->error_code = (is_write << PG_ERROR_W_BIT);
./tools/qemu-xen-traditional/target-i386/helper.c:    env->error_code |= PG_ERROR_U_MASK;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->exception_index = EXCP0E_PAGE;
./tools/qemu-xen-traditional/target-i386/helper.c:           addr, is_write1, is_user, env->eip);
./tools/qemu-xen-traditional/target-i386/helper.c:    if (!(env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen-traditional/target-i386/helper.c:    if (env->cr[4] & CR4_PAE_MASK) {
./tools/qemu-xen-traditional/target-i386/helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/helper.c:                env->error_code = 0;
./tools/qemu-xen-traditional/target-i386/helper.c:                env->exception_index = EXCP0D_GPF;
./tools/qemu-xen-traditional/target-i386/helper.c:            pml4e_addr = ((env->cr[3] & ~0xfff) + (((addr >> 39) & 0x1ff) << 3)) &
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:            if (!(env->efer & MSR_EFER_NXE) && (pml4e & PG_NX_MASK)) {
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:            if (!(env->efer & MSR_EFER_NXE) && (pdpe & PG_NX_MASK)) {
./tools/qemu-xen-traditional/target-i386/helper.c:            pdpe_addr = ((env->cr[3] & ~0x1f) + ((addr >> 27) & 0x18)) &
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:            env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:        if (!(env->efer & MSR_EFER_NXE) && (pde & PG_NX_MASK)) {
./tools/qemu-xen-traditional/target-i386/helper.c:                if ((env->cr[0] & CR0_WP_MASK) &&
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:            if (!(env->efer & MSR_EFER_NXE) && (pte & PG_NX_MASK)) {
./tools/qemu-xen-traditional/target-i386/helper.c:                if ((env->cr[0] & CR0_WP_MASK) &&
./tools/qemu-xen-traditional/target-i386/helper.c:        pde_addr = ((env->cr[3] & ~0xfff) + ((addr >> 20) & 0xffc)) &
./tools/qemu-xen-traditional/target-i386/helper.c:            env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:        if ((pde & PG_PSE_MASK) && (env->cr[4] & CR4_PSE_MASK)) {
./tools/qemu-xen-traditional/target-i386/helper.c:                if ((env->cr[0] & CR0_WP_MASK) &&
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:                if ((env->cr[0] & CR0_WP_MASK) &&
./tools/qemu-xen-traditional/target-i386/helper.c:            if (!(env->cr[0] & CR0_WP_MASK) ||
./tools/qemu-xen-traditional/target-i386/helper.c:    pte = pte & env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:        (env->efer & MSR_EFER_NXE) &&
./tools/qemu-xen-traditional/target-i386/helper.c:        (env->cr[4] & CR4_PAE_MASK))
./tools/qemu-xen-traditional/target-i386/helper.c:    if (env->intercept_exceptions & (1 << EXCP0E_PAGE)) {
./tools/qemu-xen-traditional/target-i386/helper.c:        stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_2), 
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cr[2] = addr;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->error_code = error_code;
./tools/qemu-xen-traditional/target-i386/helper.c:    env->exception_index = EXCP0E_PAGE;
./tools/qemu-xen-traditional/target-i386/helper.c:    if (env->cr[4] & CR4_PAE_MASK) {
./tools/qemu-xen-traditional/target-i386/helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/target-i386/helper.c:            pml4e_addr = ((env->cr[3] & ~0xfff) + (((addr >> 39) & 0x1ff) << 3)) &
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:            pdpe_addr = ((env->cr[3] & ~0x1f) + ((addr >> 27) & 0x18)) &
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:            env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:        if (!(env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen-traditional/target-i386/helper.c:            pde_addr = ((env->cr[3] & ~0xfff) + ((addr >> 20) & 0xffc)) & env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:            if ((pde & PG_PSE_MASK) && (env->cr[4] & CR4_PSE_MASK)) {
./tools/qemu-xen-traditional/target-i386/helper.c:                pte_addr = ((pde & ~0xfff) + ((addr >> 10) & 0xffc)) & env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:        pte = pte & env->a20_mask;
./tools/qemu-xen-traditional/target-i386/helper.c:    switch (hw_breakpoint_type(env->dr[7], index)) {
./tools/qemu-xen-traditional/target-i386/helper.c:        if (hw_breakpoint_enabled(env->dr[7], index))
./tools/qemu-xen-traditional/target-i386/helper.c:            err = cpu_breakpoint_insert(env, env->dr[index], BP_CPU,
./tools/qemu-xen-traditional/target-i386/helper.c:                                        &env->cpu_breakpoint[index]);
./tools/qemu-xen-traditional/target-i386/helper.c:        err = cpu_watchpoint_insert(env, env->dr[index],
./tools/qemu-xen-traditional/target-i386/helper.c:                                    hw_breakpoint_len(env->dr[7], index),
./tools/qemu-xen-traditional/target-i386/helper.c:                                    type, &env->cpu_watchpoint[index]);
./tools/qemu-xen-traditional/target-i386/helper.c:        env->cpu_breakpoint[index] = NULL;
./tools/qemu-xen-traditional/target-i386/helper.c:    if (!env->cpu_breakpoint[index])
./tools/qemu-xen-traditional/target-i386/helper.c:    switch (hw_breakpoint_type(env->dr[7], index)) {
./tools/qemu-xen-traditional/target-i386/helper.c:        if (hw_breakpoint_enabled(env->dr[7], index))
./tools/qemu-xen-traditional/target-i386/helper.c:            cpu_breakpoint_remove_by_ref(env, env->cpu_breakpoint[index]);
./tools/qemu-xen-traditional/target-i386/helper.c:        cpu_watchpoint_remove_by_ref(env, env->cpu_watchpoint[index]);
./tools/qemu-xen-traditional/target-i386/helper.c:    dr6 = env->dr[6] & ~0xf;
./tools/qemu-xen-traditional/target-i386/helper.c:        type = hw_breakpoint_type(env->dr[7], reg);
./tools/qemu-xen-traditional/target-i386/helper.c:        if ((type == 0 && env->dr[reg] == env->eip) ||
./tools/qemu-xen-traditional/target-i386/helper.c:            ((type & 1) && env->cpu_watchpoint[reg] &&
./tools/qemu-xen-traditional/target-i386/helper.c:             (env->cpu_watchpoint[reg]->flags & BP_WATCHPOINT_HIT))) {
./tools/qemu-xen-traditional/target-i386/helper.c:            if (hw_breakpoint_enabled(env->dr[7], reg))
./tools/qemu-xen-traditional/target-i386/helper.c:        env->dr[6] = dr6;
./tools/qemu-xen-traditional/target-i386/helper.c:    if (env->watchpoint_hit) {
./tools/qemu-xen-traditional/target-i386/helper.c:        if (env->watchpoint_hit->flags & BP_CPU) {
./tools/qemu-xen-traditional/target-i386/helper.c:            env->watchpoint_hit = NULL;
./tools/qemu-xen-traditional/target-i386/helper.c:        TAILQ_FOREACH(bp, &env->breakpoints, entry)
./tools/qemu-xen-traditional/target-i386/helper.c:            if (bp->pc == env->eip) {
./tools/qemu-xen-traditional/target-i386/helper.c:        if (index > env->cpuid_xlevel)
./tools/qemu-xen-traditional/target-i386/helper.c:            index = env->cpuid_level;
./tools/qemu-xen-traditional/target-i386/helper.c:        if (index > env->cpuid_level)
./tools/qemu-xen-traditional/target-i386/helper.c:            index = env->cpuid_level;
./tools/qemu-xen-traditional/target-i386/helper.c:        *eax = env->cpuid_level;
./tools/qemu-xen-traditional/target-i386/helper.c:        *ebx = env->cpuid_vendor1;
./tools/qemu-xen-traditional/target-i386/helper.c:        *edx = env->cpuid_vendor2;
./tools/qemu-xen-traditional/target-i386/helper.c:        *ecx = env->cpuid_vendor3;
./tools/qemu-xen-traditional/target-i386/helper.c:        *eax = env->cpuid_version;
./tools/qemu-xen-traditional/target-i386/helper.c:        *ebx = (env->cpuid_apic_id << 24) | 8 << 8; /* CLFLUSH size in quad words, Linux wants it. */
./tools/qemu-xen-traditional/target-i386/helper.c:        *ecx = env->cpuid_ext_features;
./tools/qemu-xen-traditional/target-i386/helper.c:        *edx = env->cpuid_features;
./tools/qemu-xen-traditional/target-i386/helper.c:        *eax = env->cpuid_xlevel;
./tools/qemu-xen-traditional/target-i386/helper.c:        *ebx = env->cpuid_vendor1;
./tools/qemu-xen-traditional/target-i386/helper.c:        *edx = env->cpuid_vendor2;
./tools/qemu-xen-traditional/target-i386/helper.c:        *ecx = env->cpuid_vendor3;
./tools/qemu-xen-traditional/target-i386/helper.c:        *eax = env->cpuid_features;
./tools/qemu-xen-traditional/target-i386/helper.c:        *ecx = env->cpuid_ext3_features;
./tools/qemu-xen-traditional/target-i386/helper.c:        *edx = env->cpuid_ext2_features;
./tools/qemu-xen-traditional/target-i386/helper.c:        *eax = env->cpuid_model[(index - 0x80000002) * 4 + 0];
./tools/qemu-xen-traditional/target-i386/helper.c:        *ebx = env->cpuid_model[(index - 0x80000002) * 4 + 1];
./tools/qemu-xen-traditional/target-i386/helper.c:        *ecx = env->cpuid_model[(index - 0x80000002) * 4 + 2];
./tools/qemu-xen-traditional/target-i386/helper.c:        *edx = env->cpuid_model[(index - 0x80000002) * 4 + 3];
./tools/qemu-xen-traditional/target-i386/helper.c:        if (env->cpuid_ext2_features & CPUID_EXT2_LM) {
./tools/qemu-xen-traditional/target-i386/helper.c:            if (env->cpuid_features & CPUID_PSE36)
./tools/qemu-xen-traditional/target-i386/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen-traditional/block.c:    if (!bdrv->bdrv_aio_read) {
./tools/qemu-xen-traditional/block.c:        bdrv->bdrv_aio_read = bdrv_aio_read_em;
./tools/qemu-xen-traditional/block.c:        bdrv->bdrv_aio_write = bdrv_aio_write_em;
./tools/qemu-xen-traditional/block.c:        bdrv->bdrv_aio_cancel = bdrv_aio_cancel_em;
./tools/qemu-xen-traditional/block.c:        bdrv->aiocb_size = sizeof(BlockDriverAIOCBSync);
./tools/qemu-xen-traditional/block.c:    } else if (!bdrv->bdrv_read && !bdrv->bdrv_pread) {
./tools/qemu-xen-traditional/block.c:        bdrv->bdrv_read = bdrv_read_em;
./tools/qemu-xen-traditional/block.c:        bdrv->bdrv_write = bdrv_write_em;
./tools/qemu-xen-traditional/block.c:    if (!bdrv->bdrv_aio_flush)
./tools/qemu-xen-traditional/block.c:        bdrv->bdrv_aio_flush = bdrv_aio_flush_em;
./tools/qemu-xen-traditional/block.c:    aio_pool_init(&bdrv->aio_pool, bdrv->aiocb_size, bdrv->bdrv_aio_cancel);
./tools/qemu-xen-traditional/block.c:    bdrv->next = first_drv;
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_create)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_create(filename, size_in_sectors, backing_file, flags);
./tools/qemu-xen-traditional/block.c:        if (bs1->drv && bs1->drv->protocol_name)
./tools/qemu-xen-traditional/block.c:    bs->opaque = qemu_mallocz(drv->instance_size);
./tools/qemu-xen-traditional/block.c:    ret = drv->bdrv_open(bs, filename, open_flags);
./tools/qemu-xen-traditional/block.c:        ret = drv->bdrv_open(bs, filename, open_flags & ~BDRV_O_RDWR);
./tools/qemu-xen-traditional/block.c:    if (drv->bdrv_getlength) {
./tools/qemu-xen-traditional/block.c:        bs->drv->bdrv_close(bs);
./tools/qemu-xen-traditional/block.c:        if (drv->bdrv_is_allocated(bs, i, 65536, &n)) {
./tools/qemu-xen-traditional/block.c:    if (drv->bdrv_make_empty)
./tools/qemu-xen-traditional/block.c:	return drv->bdrv_make_empty(bs);
./tools/qemu-xen-traditional/block.c:    if (drv->bdrv_pread) {
./tools/qemu-xen-traditional/block.c:        ret = drv->bdrv_pread(bs, sector_num * 512, buf, len);
./tools/qemu-xen-traditional/block.c:        return drv->bdrv_read(bs, sector_num, buf, nb_sectors);
./tools/qemu-xen-traditional/block.c:    if (drv->bdrv_pwrite) {
./tools/qemu-xen-traditional/block.c:            ret = drv->bdrv_pwrite(bs, sector_num * 512, buf, len - count);
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_write(bs, sector_num, buf, nb_sectors);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_pread)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_pread(bs, offset, buf1, count1);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_pwrite)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_pwrite(bs, offset, buf1, count1);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_truncate)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_truncate(bs, offset);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_getlength) {
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_getlength(bs);
./tools/qemu-xen-traditional/block.c:    if (!bs->encrypted || !bs->drv || !bs->drv->bdrv_set_key)
./tools/qemu-xen-traditional/block.c:    ret = bs->drv->bdrv_set_key(bs, key);
./tools/qemu-xen-traditional/block.c:        pstrcpy(buf, buf_size, bs->drv->format_name);
./tools/qemu-xen-traditional/block.c:    for (drv = first_drv; drv != NULL; drv = drv->next) {
./tools/qemu-xen-traditional/block.c:        it(opaque, drv->format_name);
./tools/qemu-xen-traditional/block.c:    if (bs->drv->bdrv_flush)
./tools/qemu-xen-traditional/block.c:        ret = bs->drv->bdrv_flush(bs);
./tools/qemu-xen-traditional/block.c:    if (!bs->drv->bdrv_is_allocated) {
./tools/qemu-xen-traditional/block.c:    return bs->drv->bdrv_is_allocated(bs, sector_num, nb_sectors, pnum);
./tools/qemu-xen-traditional/block.c:            term_printf(" drv=%s", bs->drv->format_name);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_write_compressed)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_write_compressed(bs, sector_num, buf, nb_sectors);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_get_info)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_get_info(bs, bdi);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_put_buffer)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_put_buffer(bs, buf, pos, size);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_get_buffer)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_get_buffer(bs, buf, pos, size);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_snapshot_create)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_snapshot_create(bs, sn_info);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_snapshot_goto)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_snapshot_goto(bs, snapshot_id);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_snapshot_delete)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_snapshot_delete(bs, snapshot_id);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_snapshot_list)
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_snapshot_list(bs, psn_info);
./tools/qemu-xen-traditional/block.c:        qemu_iovec_from_buffer(s->iov, s->bounce, s->iov->size);
./tools/qemu-xen-traditional/block.c:    ret = drv->bdrv_aio_read(bs, sector_num, buf, nb_sectors, cb, opaque);
./tools/qemu-xen-traditional/block.c:    ret = drv->bdrv_aio_write(bs, sector_num, buf, nb_sectors, cb, opaque);
./tools/qemu-xen-traditional/block.c:    return drv->bdrv_aio_flush(bs, cb, opaque);
./tools/qemu-xen-traditional/block.c:    return qemu_aio_get_pool(&bs->drv->aio_pool, bs, cb, opaque);
./tools/qemu-xen-traditional/block.c:    if (!drv->bdrv_is_inserted)
./tools/qemu-xen-traditional/block.c:    ret = drv->bdrv_is_inserted(bs);
./tools/qemu-xen-traditional/block.c:    if (!drv || !drv->bdrv_media_changed)
./tools/qemu-xen-traditional/block.c:        ret = drv->bdrv_media_changed(bs);
./tools/qemu-xen-traditional/block.c:    if (!drv || !drv->bdrv_eject) {
./tools/qemu-xen-traditional/block.c:        ret = drv->bdrv_eject(bs, eject_flag);
./tools/qemu-xen-traditional/block.c:    if (drv && drv->bdrv_set_locked) {
./tools/qemu-xen-traditional/block.c:        drv->bdrv_set_locked(bs, locked);
./tools/qemu-xen-traditional/block.c:    if (drv && drv->bdrv_ioctl)
./tools/qemu-xen-traditional/block.c:        return drv->bdrv_ioctl(bs, req, buf);
./tools/qemu-xen-traditional/m68k-semi.c:    args = env->dregs[1];
./tools/qemu-xen-traditional/m68k-semi.c:    args = env->dregs[1];
./tools/qemu-xen-traditional/m68k-semi.c:        exit(env->dregs[0]);
./tools/qemu-xen-traditional/m68k-semi.c:        TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/m68k-semi.c:        env->dregs[1] = ts->heap_limit;
./tools/qemu-xen-traditional/m68k-semi.c:        env->aregs[7] = ts->stack_base;
./tools/qemu-xen-traditional/m68k-semi.c:        env->dregs[1] = ram_size;
./tools/qemu-xen-traditional/m68k-semi.c:        env->aregs[7] = ram_size;
./tools/qemu-xen-traditional/i386-dis.c:  bfd_vma start = priv->insn_start + (priv->max_fetched - priv->the_buffer);
./tools/qemu-xen-traditional/i386-dis.c:				      priv->max_fetched,
./tools/qemu-xen-traditional/i386-dis.c:				      addr - priv->max_fetched,
./tools/qemu-xen-traditional/i386-dis.c:      if (priv->max_fetched == priv->the_buffer)
./tools/qemu-xen-traditional/i386-dis.c:      longjmp (priv->bailout, 1);
./tools/qemu-xen-traditional/i386-dis.c:    priv->max_fetched = addr;
./tools/qemu-xen-traditional/m68k-dis.c:  bfd_vma start = priv->insn_start + (priv->max_fetched - priv->the_buffer);
./tools/qemu-xen-traditional/m68k-dis.c:				      priv->max_fetched,
./tools/qemu-xen-traditional/m68k-dis.c:				      addr - priv->max_fetched,
./tools/qemu-xen-traditional/m68k-dis.c:      longjmp (priv->bailout, 1);
./tools/qemu-xen-traditional/m68k-dis.c:    priv->max_fetched = addr;
./tools/qemu-xen-traditional/m68k-dis.c:  bfd_byte *buffer = priv->the_buffer;
./tools/qemu-xen-traditional/kqemu.c:    env->cpuid_features = (env->cpuid_features & ~critical_features_mask) |
./tools/qemu-xen-traditional/kqemu.c:    env->cpuid_ext_features = (env->cpuid_ext_features & ~ext_features_mask) |
./tools/qemu-xen-traditional/kqemu.c:    env->kqemu_enabled = kqemu_allowed;
./tools/qemu-xen-traditional/kqemu.c:    fp->fpuc = env->fpuc;
./tools/qemu-xen-traditional/kqemu.c:    fp->fpus = (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen-traditional/kqemu.c:	if (env->fptags[i]) {
./tools/qemu-xen-traditional/kqemu.c:    j = env->fpstt;
./tools/qemu-xen-traditional/kqemu.c:        memcpy(&fp->fpregs1[i * 10], &env->fpregs[j].d, 10);
./tools/qemu-xen-traditional/kqemu.c:    env->fpuc = fp->fpuc;
./tools/qemu-xen-traditional/kqemu.c:    env->fpstt = (fp->fpus >> 11) & 7;
./tools/qemu-xen-traditional/kqemu.c:    env->fpus = fp->fpus & ~0x3800;
./tools/qemu-xen-traditional/kqemu.c:        env->fptags[i] = ((fptag & 3) == 3);
./tools/qemu-xen-traditional/kqemu.c:    j = env->fpstt;
./tools/qemu-xen-traditional/kqemu.c:        memcpy(&env->fpregs[j].d, &fp->fpregs1[i * 10], 10);
./tools/qemu-xen-traditional/kqemu.c:    fpuc = 0x037f | (env->fpuc & (3 << 10));
./tools/qemu-xen-traditional/kqemu.c:    fp->fpuc = env->fpuc;
./tools/qemu-xen-traditional/kqemu.c:    fp->fpus = (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen-traditional/kqemu.c:        fptag |= (env->fptags[i] << i);
./tools/qemu-xen-traditional/kqemu.c:    j = env->fpstt;
./tools/qemu-xen-traditional/kqemu.c:        memcpy(&fp->fpregs1[i * 16], &env->fpregs[j].d, 10);
./tools/qemu-xen-traditional/kqemu.c:    if (env->cpuid_features & CPUID_SSE) {
./tools/qemu-xen-traditional/kqemu.c:        fp->mxcsr = env->mxcsr;
./tools/qemu-xen-traditional/kqemu.c:        memcpy(fp->xmm_regs, env->xmm_regs, CPU_NB_REGS * 16);
./tools/qemu-xen-traditional/kqemu.c:    env->fpuc = fp->fpuc;
./tools/qemu-xen-traditional/kqemu.c:    env->fpstt = (fp->fpus >> 11) & 7;
./tools/qemu-xen-traditional/kqemu.c:    env->fpus = fp->fpus & ~0x3800;
./tools/qemu-xen-traditional/kqemu.c:        env->fptags[i] = (fptag >> i) & 1;
./tools/qemu-xen-traditional/kqemu.c:    j = env->fpstt;
./tools/qemu-xen-traditional/kqemu.c:        memcpy(&env->fpregs[j].d, &fp->fpregs1[i * 16], 10);
./tools/qemu-xen-traditional/kqemu.c:    if (env->cpuid_features & CPUID_SSE) {
./tools/qemu-xen-traditional/kqemu.c:        env->mxcsr = fp->mxcsr;
./tools/qemu-xen-traditional/kqemu.c:        memcpy(env->xmm_regs, fp->xmm_regs, CPU_NB_REGS * 16);
./tools/qemu-xen-traditional/kqemu.c:    fpuc = 0x037f | (env->fpuc & (3 << 10));
./tools/qemu-xen-traditional/kqemu.c:    selector = (env->star >> 32) & 0xffff;
./tools/qemu-xen-traditional/kqemu.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen-traditional/kqemu.c:        env->regs[R_ECX] = kenv->next_eip;
./tools/qemu-xen-traditional/kqemu.c:        env->regs[11] = env->eflags;
./tools/qemu-xen-traditional/kqemu.c:        code64 = env->hflags & HF_CS64_MASK;
./tools/qemu-xen-traditional/kqemu.c:        env->eflags &= ~env->fmask;
./tools/qemu-xen-traditional/kqemu.c:            env->eip = env->lstar;
./tools/qemu-xen-traditional/kqemu.c:            env->eip = env->cstar;
./tools/qemu-xen-traditional/kqemu.c:        env->regs[R_ECX] = (uint32_t)kenv->next_eip;
./tools/qemu-xen-traditional/kqemu.c:        env->eflags &= ~(IF_MASK | RF_MASK | VM_MASK);
./tools/qemu-xen-traditional/kqemu.c:        env->eip = (uint32_t)env->star;
./tools/qemu-xen-traditional/kqemu.c:        kenv->regs[i] = env->regs[i];
./tools/qemu-xen-traditional/kqemu.c:    kenv->eip = env->eip;
./tools/qemu-xen-traditional/kqemu.c:    kenv->eflags = env->eflags;
./tools/qemu-xen-traditional/kqemu.c:        kqemu_load_seg(&kenv->segs[i], &env->segs[i]);
./tools/qemu-xen-traditional/kqemu.c:    kqemu_load_seg(&kenv->ldt, &env->ldt);
./tools/qemu-xen-traditional/kqemu.c:    kqemu_load_seg(&kenv->tr, &env->tr);
./tools/qemu-xen-traditional/kqemu.c:    kqemu_load_seg(&kenv->gdt, &env->gdt);
./tools/qemu-xen-traditional/kqemu.c:    kqemu_load_seg(&kenv->idt, &env->idt);
./tools/qemu-xen-traditional/kqemu.c:    kenv->cr0 = env->cr[0];
./tools/qemu-xen-traditional/kqemu.c:    kenv->cr2 = env->cr[2];
./tools/qemu-xen-traditional/kqemu.c:    kenv->cr3 = env->cr[3];
./tools/qemu-xen-traditional/kqemu.c:    kenv->cr4 = env->cr[4];
./tools/qemu-xen-traditional/kqemu.c:    kenv->a20_mask = env->a20_mask;
./tools/qemu-xen-traditional/kqemu.c:    kenv->efer = env->efer;
./tools/qemu-xen-traditional/kqemu.c:    kenv->tsc_offset = 0;
./tools/qemu-xen-traditional/kqemu.c:    kenv->star = env->star;
./tools/qemu-xen-traditional/kqemu.c:    kenv->sysenter_cs = env->sysenter_cs;
./tools/qemu-xen-traditional/kqemu.c:    kenv->sysenter_esp = env->sysenter_esp;
./tools/qemu-xen-traditional/kqemu.c:    kenv->sysenter_eip = env->sysenter_eip;
./tools/qemu-xen-traditional/kqemu.c:    kenv->lstar = env->lstar;
./tools/qemu-xen-traditional/kqemu.c:    kenv->cstar = env->cstar;
./tools/qemu-xen-traditional/kqemu.c:    kenv->fmask = env->fmask;
./tools/qemu-xen-traditional/kqemu.c:    kenv->kernelgsbase = env->kernelgsbase;
./tools/qemu-xen-traditional/kqemu.c:    if (env->dr[7] & 0xff) {
./tools/qemu-xen-traditional/kqemu.c:        kenv->dr7 = env->dr[7];
./tools/qemu-xen-traditional/kqemu.c:        kenv->dr0 = env->dr[0];
./tools/qemu-xen-traditional/kqemu.c:        kenv->dr1 = env->dr[1];
./tools/qemu-xen-traditional/kqemu.c:        kenv->dr2 = env->dr[2];
./tools/qemu-xen-traditional/kqemu.c:        kenv->dr3 = env->dr[3];
./tools/qemu-xen-traditional/kqemu.c:        kenv->dr7 = 0;
./tools/qemu-xen-traditional/kqemu.c:    kenv->dr6 = env->dr[6];
./tools/qemu-xen-traditional/kqemu.c:    cpl = (env->hflags & HF_CPL_MASK);
./tools/qemu-xen-traditional/kqemu.c:    kenv->cpl = cpl;
./tools/qemu-xen-traditional/kqemu.c:    kenv->nb_pages_to_flush = nb_pages_to_flush;
./tools/qemu-xen-traditional/kqemu.c:    kenv->user_only = (env->kqemu_enabled == 1);
./tools/qemu-xen-traditional/kqemu.c:    kenv->nb_ram_pages_to_update = nb_ram_pages_to_update;
./tools/qemu-xen-traditional/kqemu.c:    kenv->nb_modified_ram_pages = nb_modified_ram_pages;
./tools/qemu-xen-traditional/kqemu.c:    if (env->cpuid_features & CPUID_FXSR)
./tools/qemu-xen-traditional/kqemu.c:        ret = kenv->retval;
./tools/qemu-xen-traditional/kqemu.c:    ret = kenv->retval;
./tools/qemu-xen-traditional/kqemu.c:    if (env->cpuid_features & CPUID_FXSR)
./tools/qemu-xen-traditional/kqemu.c:        env->regs[i] = kenv->regs[i];
./tools/qemu-xen-traditional/kqemu.c:    env->eip = kenv->eip;
./tools/qemu-xen-traditional/kqemu.c:    env->eflags = kenv->eflags;
./tools/qemu-xen-traditional/kqemu.c:        kqemu_save_seg(&env->segs[i], &kenv->segs[i]);
./tools/qemu-xen-traditional/kqemu.c:    cpu_x86_set_cpl(env, kenv->cpl);
./tools/qemu-xen-traditional/kqemu.c:    kqemu_save_seg(&env->ldt, &kenv->ldt);
./tools/qemu-xen-traditional/kqemu.c:    env->cr[0] = kenv->cr0;
./tools/qemu-xen-traditional/kqemu.c:    env->cr[4] = kenv->cr4;
./tools/qemu-xen-traditional/kqemu.c:    env->cr[3] = kenv->cr3;
./tools/qemu-xen-traditional/kqemu.c:    env->cr[2] = kenv->cr2;
./tools/qemu-xen-traditional/kqemu.c:    env->dr[6] = kenv->dr6;
./tools/qemu-xen-traditional/kqemu.c:    env->kernelgsbase = kenv->kernelgsbase;
./tools/qemu-xen-traditional/kqemu.c:    if (kenv->nb_pages_to_flush >= KQEMU_FLUSH_ALL) {
./tools/qemu-xen-traditional/kqemu.c:        for(i = 0; i < kenv->nb_pages_to_flush; i++) {
./tools/qemu-xen-traditional/kqemu.c:    if (kenv->nb_ram_pages_to_update > 0) {
./tools/qemu-xen-traditional/kqemu.c:    if (kenv->nb_modified_ram_pages > 0) {
./tools/qemu-xen-traditional/kqemu.c:        for(i = 0; i < kenv->nb_modified_ram_pages; i++) {
./tools/qemu-xen-traditional/kqemu.c:        if ((env->hflags & HF_LMA_MASK) &&
./tools/qemu-xen-traditional/kqemu.c:            (env->segs[R_CS].flags & DESC_L_MASK)) {
./tools/qemu-xen-traditional/kqemu.c:            new_hflags = (env->segs[R_CS].flags & DESC_B_MASK)
./tools/qemu-xen-traditional/kqemu.c:            new_hflags |= (env->segs[R_SS].flags & DESC_B_MASK)
./tools/qemu-xen-traditional/kqemu.c:            if (!(env->cr[0] & CR0_PE_MASK) ||
./tools/qemu-xen-traditional/kqemu.c:                   (env->eflags & VM_MASK) ||
./tools/qemu-xen-traditional/kqemu.c:                   !(env->hflags & HF_CS32_MASK)) {
./tools/qemu-xen-traditional/kqemu.c:                new_hflags |= ((env->segs[R_DS].base |
./tools/qemu-xen-traditional/kqemu.c:                                env->segs[R_ES].base |
./tools/qemu-xen-traditional/kqemu.c:                                env->segs[R_SS].base) != 0) <<
./tools/qemu-xen-traditional/kqemu.c:        env->hflags = (env->hflags &
./tools/qemu-xen-traditional/kqemu.c:    env->hflags = (env->hflags & ~(HF_MP_MASK | HF_EM_MASK | HF_TS_MASK)) |
./tools/qemu-xen-traditional/kqemu.c:        ((env->cr[0] << (HF_MP_SHIFT - 1)) & (HF_MP_MASK | HF_EM_MASK | HF_TS_MASK));
./tools/qemu-xen-traditional/kqemu.c:    if (env->cr[4] & CR4_OSFXSR_MASK)
./tools/qemu-xen-traditional/kqemu.c:        env->hflags |= HF_OSFXSR_MASK;
./tools/qemu-xen-traditional/kqemu.c:        env->hflags &= ~HF_OSFXSR_MASK;
./tools/qemu-xen-traditional/kqemu.c:        env->exception_index = ret & 0xff;
./tools/qemu-xen-traditional/kqemu.c:        env->error_code = 0;
./tools/qemu-xen-traditional/kqemu.c:        env->exception_is_int = 1;
./tools/qemu-xen-traditional/kqemu.c:        env->exception_next_eip = kenv->next_eip;
./tools/qemu-xen-traditional/kqemu.c:        LOG_INT("kqemu: interrupt v=%02x:\n", env->exception_index);
./tools/qemu-xen-traditional/kqemu.c:        env->exception_index = ret & 0xff;
./tools/qemu-xen-traditional/kqemu.c:        env->error_code = kenv->error_code;
./tools/qemu-xen-traditional/kqemu.c:        env->exception_is_int = 0;
./tools/qemu-xen-traditional/kqemu.c:        env->exception_next_eip = 0;
./tools/qemu-xen-traditional/kqemu.c:                    env->exception_index, env->error_code);
./tools/qemu-xen-traditional/kqemu.c:            unsigned long pc = env->eip + env->segs[R_CS].base;
./tools/qemu-xen-traditional/kqemu.c:    return env->eflags & (IF_MASK | IOPL_MASK);
./tools/qemu-xen-traditional/kqemu.c:    env->eflags = (env->eflags & ~(IF_MASK | IOPL_MASK)) | 
./tools/qemu-xen-traditional/target-sparc/machine.c:    // if env->cwp == env->nwindows - 1, this will set the ins of the last
./tools/qemu-xen-traditional/target-sparc/machine.c:    cpu_set_cwp(env, env->cwp);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_betls(f, &env->gregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->nwindows);
./tools/qemu-xen-traditional/target-sparc/machine.c:    for(i = 0; i < env->nwindows * 16; i++)
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_betls(f, &env->regbase[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        u.f = env->fpr[i];
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_betls(f, &env->pc);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_betls(f, &env->npc);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_betls(f, &env->y);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_betls(f, &env->fsr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_betls(f, &env->tbr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    tmp = env->interrupt_index;
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->pil_in);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->wim);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be32s(f, &env->mmuregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->lsu);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->immuregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->dmmuregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->itlb_tag[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->itlb_tte[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->dtlb_tag[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->dtlb_tte[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->mmu_version);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->ts[i].tpc);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->ts[i].tnpc);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->ts[i].tstate);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be32s(f, &env->ts[i].tt);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->xcc);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->asi);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->pstate);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->tl);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->cansave);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->canrestore);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->otherwin);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->wstate);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->cleanwin);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->agregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->bgregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->igregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->mgregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->fprs);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->tick_cmpr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->stick_cmpr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_ptimer(f, env->tick);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_ptimer(f, env->stick);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->gsr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be32s(f, &env->gl);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->hpstate);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_put_be64s(f, &env->htstate[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->hintp);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->htba);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->hver);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->hstick_cmpr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_be64s(f, &env->ssr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_put_ptimer(f, env->hstick);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_betls(f, &env->gregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->nwindows);
./tools/qemu-xen-traditional/target-sparc/machine.c:    for(i = 0; i < env->nwindows * 16; i++)
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_betls(f, &env->regbase[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        env->fpr[i] = u.f;
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_betls(f, &env->pc);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_betls(f, &env->npc);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_betls(f, &env->y);
./tools/qemu-xen-traditional/target-sparc/machine.c:    env->cwp = 0; /* needed to ensure that the wrapping registers are
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_betls(f, &env->fsr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_betls(f, &env->tbr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    env->interrupt_index = tmp;
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->pil_in);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->wim);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be32s(f, &env->mmuregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->lsu);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->immuregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->dmmuregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->itlb_tag[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->itlb_tte[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->dtlb_tag[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->dtlb_tte[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->mmu_version);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->ts[i].tpc);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->ts[i].tnpc);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->ts[i].tstate);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be32s(f, &env->ts[i].tt);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->xcc);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->asi);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->pstate);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->tl);
./tools/qemu-xen-traditional/target-sparc/machine.c:    env->tsptr = &env->ts[env->tl & MAXTL_MASK];
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->cansave);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->canrestore);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->otherwin);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->wstate);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->cleanwin);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->agregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->bgregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->igregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->mgregs[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->fprs);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->tick_cmpr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->stick_cmpr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_ptimer(f, env->tick);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_ptimer(f, env->stick);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->gsr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be32s(f, &env->gl);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->hpstate);
./tools/qemu-xen-traditional/target-sparc/machine.c:        qemu_get_be64s(f, &env->htstate[i]);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->hintp);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->htba);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->hver);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->hstick_cmpr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_be64s(f, &env->ssr);
./tools/qemu-xen-traditional/target-sparc/machine.c:    qemu_get_ptimer(f, env->hstick);
./tools/qemu-xen-traditional/target-sparc/translate.c:        env->psr |= PSR_ZERO;
./tools/qemu-xen-traditional/target-sparc/translate.c:        env->psr |= PSR_NEG;
./tools/qemu-xen-traditional/target-sparc/translate.c:        env->psr |= PSR_CARRY;
./tools/qemu-xen-traditional/target-sparc/translate.c:        env->psr |= PSR_OVF;
./tools/qemu-xen-traditional/target-sparc/translate.c:        env->psr |= PSR_CARRY;
./tools/qemu-xen-traditional/target-sparc/translate.c:        env->psr |= PSR_OVF;
./tools/qemu-xen-traditional/target-sparc/translate.c:    if (!(env->y & 1))
./tools/qemu-xen-traditional/target-sparc/translate.c:    // env->y = (b2 << 31) | (env->y >> 1);
./tools/qemu-xen-traditional/target-sparc/translate.c:    dc->def = env->def;
./tools/qemu-xen-traditional/target-sparc/translate.c:    dc->address_mask_32bit = env->pstate & PS_AM;
./tools/qemu-xen-traditional/target-sparc/translate.c:        if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-sparc/translate.c:            TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-sparc/translate.c:        if (env->singlestep_enabled) {
./tools/qemu-xen-traditional/target-sparc/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen-traditional/target-sparc/translate.c:            env->npc = gen_opc_jump_pc[0];
./tools/qemu-xen-traditional/target-sparc/translate.c:            env->npc = gen_opc_jump_pc[1];
./tools/qemu-xen-traditional/target-sparc/translate.c:        env->npc = npc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->exception_index = tt;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           "\n", addr, env->pc);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        return float32_ ## name (src1, src2, &env->fp_status);  \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        DT0 = float64_ ## name (DT0, DT1, &env->fp_status);     \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        QT0 = float128_ ## name (QT0, QT1, &env->fp_status);    \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    DT0 = float64_mul(float32_to_float64(src1, &env->fp_status),
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                      float32_to_float64(src2, &env->fp_status),
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                      &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    QT0 = float128_mul(float64_to_float128(DT0, &env->fp_status),
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                       float64_to_float128(DT1, &env->fp_status),
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                       &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    return int32_to_float32(src, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    DT0 = int32_to_float64(src, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    QT0 = int32_to_float128(src, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    return int64_to_float32(*((int64_t *)&DT1), &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    DT0 = int64_to_float64(*((int64_t *)&DT1), &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    QT0 = int64_to_float128(*((int64_t *)&DT1), &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    return float64_to_float32(DT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    DT0 = float32_to_float64(src, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    return float128_to_float32(QT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    QT0 = float32_to_float128(src, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    DT0 = float128_to_float64(QT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    QT0 = float64_to_float128(DT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    return float32_to_int32_round_to_zero(src, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    return float64_to_int32_round_to_zero(DT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    return float128_to_int32_round_to_zero(QT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    *((int64_t *)&DT0) = float32_to_int64_round_to_zero(src, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    *((int64_t *)&DT0) = float64_to_int64_round_to_zero(DT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    *((int64_t *)&DT0) = float128_to_int64_round_to_zero(QT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    tmp = (*((uint64_t *)&DT0)) << ((env->gsr & 7) * 8);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if ((env->gsr & 7) != 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        tmp |= (*((uint64_t *)&DT1)) >> (64 - (env->gsr & 7) * 8);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    status = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->fsr |= FSR_NVC;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->fsr |= FSR_OFC;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->fsr |= FSR_UFC;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->fsr |= FSR_DZC;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->fsr |= FSR_NXC;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        if ((env->fsr & FSR_CEXC_MASK) & ((env->fsr & FSR_TEM_MASK) >> 23)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->fsr |= FSR_FTT_IEEE_EXCP;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->fsr |= (env->fsr & FSR_CEXC_MASK) << 5;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    return float32_sqrt(src, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    DT0 = float64_sqrt(DT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    QT0 = float128_sqrt(QT1, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);                     \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        switch (glue(size, _compare) (reg1, reg2, &env->fp_status)) {   \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            if ((env->fsr & FSR_NVM) || TRAP) {                         \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->fsr |= new_fsr;                                    \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->fsr |= FSR_NVC;                                    \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->fsr |= FSR_FTT_IEEE_EXCP;                          \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->fsr |= FSR_NVA;                                    \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->fsr |= new_fsr;                                            \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);                     \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        switch (glue(size, _compare) (src1, src2, &env->fp_status)) {   \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            if ((env->fsr & FSR_NVM) || TRAP) {                         \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->fsr |= new_fsr;                                    \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->fsr |= FSR_NVC;                                    \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->fsr |= FSR_FTT_IEEE_EXCP;                          \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->fsr |= FSR_NVA;                                    \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->fsr |= new_fsr;                                            \
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           env->mxccdata[0], env->mxccdata[1],
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           env->mxccdata[2], env->mxccdata[3]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           env->mxccregs[0], env->mxccregs[1],
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           env->mxccregs[2], env->mxccregs[3],
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           env->mxccregs[4], env->mxccregs[5],
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           env->mxccregs[6], env->mxccregs[7]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mxccregs[3];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mxccregs[3];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mxccregs[5];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mxccregs[7];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ret = env->mmuregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmuregs[3] = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mmuregs[3];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mmuregs[4];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mmubpregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mmubpregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mmubpregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                ret = env->mmubpregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmubpregs[reg] = 0ULL;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccdata[0] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccdata[1] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccdata[2] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccdata[3] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccregs[0] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->mxccdata[0] = ldq_phys((env->mxccregs[0] & 0xffffffffULL) +
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->mxccdata[1] = ldq_phys((env->mxccregs[0] & 0xffffffffULL) +
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->mxccdata[2] = ldq_phys((env->mxccregs[0] & 0xffffffffULL) +
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->mxccdata[3] = ldq_phys((env->mxccregs[0] & 0xffffffffULL) +
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccregs[1] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            stq_phys((env->mxccregs[1] & 0xffffffffULL) +  0,
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                     env->mxccdata[0]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            stq_phys((env->mxccregs[1] & 0xffffffffULL) +  8,
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                     env->mxccdata[1]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            stq_phys((env->mxccregs[1] & 0xffffffffULL) + 16,
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                     env->mxccdata[2]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            stq_phys((env->mxccregs[1] & 0xffffffffULL) + 24,
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                     env->mxccdata[3]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccregs[3] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccregs[3] = (env->mxccregs[3] & 0xffffffff00000000ULL)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccregs[6] &= ~val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mxccregs[7] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            oldreg = env->mmuregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmuregs[reg] = (env->mmuregs[reg] & 0xff000000) |
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                if ((oldreg & (MMU_E | MMU_NF | env->def->mmu_bm)) !=
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    (env->mmuregs[reg] & (MMU_E | MMU_NF | env->def->mmu_bm)))
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmuregs[reg] = val & env->def->mmu_ctpr_mask;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmuregs[reg] = val & env->def->mmu_cxr_mask;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                if (oldreg != env->mmuregs[reg]) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmuregs[reg] = val & env->def->mmu_trcr_mask;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmuregs[3] = val & env->def->mmu_sfsr_mask;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmuregs[4] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmuregs[reg] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            if (oldreg != env->mmuregs[reg]) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                            reg, oldreg, env->mmuregs[reg]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmubpregs[reg] = (val & 0xfffffffffULL);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmubpregs[reg] = (val & 0xfffffffffULL);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmubpregs[reg] = (val & 0x7fULL);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->mmubpregs[reg] = (val & 0xfULL);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                        env->mmuregs[reg]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if ((asi < 0x80 && (env->pstate & PS_PRIV) == 0)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        || ((env->def->features & CPU_FEATURE_HYPV)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            && !(env->hpstate & HS_PRIV)))
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        if ((asi & 0x80) && (env->pstate & PS_PRIV)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            if ((env->def->features & CPU_FEATURE_HYPV)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                && env->hpstate & HS_PRIV) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        ret = env->lsu;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ret = env->immuregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ret = env->itlb_tte[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ret = env->itlb_tag[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ret = env->dmmuregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ret = env->dtlb_tte[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ret = env->dtlb_tag[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if ((asi < 0x80 && (env->pstate & PS_PRIV) == 0)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        || ((env->def->features & CPU_FEATURE_HYPV)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            && !(env->hpstate & HS_PRIV)))
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        if ((asi & 0x80) && (env->pstate & PS_PRIV)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            if ((env->def->features & CPU_FEATURE_HYPV)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                && env->hpstate & HS_PRIV) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            oldreg = env->lsu;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->lsu = val & (DMMU_E | IMMU_E);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            if (oldreg != env->lsu) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                            oldreg, env->lsu);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            oldreg = env->immuregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->immuregs[reg] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            if (oldreg != env->immuregs[reg]) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                            PRIx64 "\n", reg, oldreg, env->immuregs[reg]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                if ((env->itlb_tte[i] & 0x8000000000000000ULL) == 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->itlb_tag[i] = env->immuregs[6];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->itlb_tte[i] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                if ((env->itlb_tte[i] & 0x40) == 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->itlb_tag[i] = env->immuregs[6];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->itlb_tte[i] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->itlb_tag[i] = env->immuregs[6];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->itlb_tte[i] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                if ((env->itlb_tte[i] & 0x8000000000000000ULL) != 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    mask <<= 3 * ((env->itlb_tte[i] >> 61) & 3);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    if ((val & mask) == (env->itlb_tag[i] & mask)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                        env->itlb_tag[i] = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                        env->itlb_tte[i] = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            oldreg = env->dmmuregs[reg];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->dmmuregs[4] = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->dmmuregs[reg] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->dmmuregs[reg] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            if (oldreg != env->dmmuregs[reg]) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                            PRIx64 "\n", reg, oldreg, env->dmmuregs[reg]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                if ((env->dtlb_tte[i] & 0x8000000000000000ULL) == 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->dtlb_tag[i] = env->dmmuregs[6];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->dtlb_tte[i] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                if ((env->dtlb_tte[i] & 0x40) == 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->dtlb_tag[i] = env->dmmuregs[6];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    env->dtlb_tte[i] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->dtlb_tag[i] = env->dmmuregs[6];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->dtlb_tte[i] = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                if ((env->dtlb_tte[i] & 0x8000000000000000ULL) != 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    mask <<= 3 * ((env->dtlb_tte[i] >> 61) & 3);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                    if ((val & mask) == (env->dtlb_tag[i] & mask)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                        env->dtlb_tag[i] = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                        env->dtlb_tte[i] = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if ((asi < 0x80 && (env->pstate & PS_PRIV) == 0)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        || ((env->def->features & CPU_FEATURE_HYPV)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            && !(env->hpstate & HS_PRIV)))
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->gregs[1] = ldq_kernel(addr + 8);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                bswap64s(&env->gregs[1]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->gregs[rd] = ldq_kernel(addr);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->gregs[rd + 1] = ldq_kernel(addr + 8);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                bswap64s(&env->gregs[rd]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                bswap64s(&env->gregs[rd + 1]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->regwptr[rd] = ldq_kernel(addr);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->regwptr[rd + 1] = ldq_kernel(addr + 8);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                bswap64s(&env->regwptr[rd]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                bswap64s(&env->regwptr[rd + 1]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->gregs[1] = helper_ld_asi(addr + 4, asi, 4, 0);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->gregs[rd] = helper_ld_asi(addr, asi, 4, 0);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->gregs[rd + 1] = helper_ld_asi(addr + 4, asi, 4, 0);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->regwptr[rd] = helper_ld_asi(addr, asi, 4, 0);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->regwptr[rd + 1] = helper_ld_asi(addr + 4, asi, 4, 0);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            *(uint32_t *)&env->fpr[rd++] = helper_ld_asi(addr, asi & 0x8f, 4,
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        *((uint32_t *)&env->fpr[rd]) = val;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            val = *(uint32_t *)&env->fpr[rd++];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        val = *((uint32_t *)&env->fpr[rd]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->psret == 1)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->psret = 1;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    cwp = cpu_cwp_inc(env, env->cwp + 1) ;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->wim & (1 << cwp)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->psrs = env->psrps;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    x0 = (a & 0xffffffff) | ((int64_t) (env->y) << 32);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->cc_src2 = 1;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->cc_src2 = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    x0 = (a & 0xffffffff) | ((int64_t) (env->y) << 32);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->cc_src2 = 1;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->cc_src2 = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    switch (env->fsr & FSR_RD_MASK) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    set_float_rounding_mode(rnd_mode, &env->fp_status);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->fsr = (new_fsr & FSR_LDFSR_MASK) | (env->fsr & FSR_LDFSR_OLDMASK);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->fsr = (new_fsr & FSR_LDXFSR_MASK) | (env->fsr & FSR_LDXFSR_OLDMASK);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->exception_index = EXCP_DEBUG;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    cwp = cpu_cwp_dec(env, env->cwp - 1);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->wim & (1 << cwp)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    cwp = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->wim & (1 << cwp)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if ((new_psr & PSR_CWP) >= env->nwindows)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    cwp = cpu_cwp_dec(env, env->cwp - 1);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->cansave == 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        raise_exception(TT_SPILL | (env->otherwin != 0 ?
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                                    (TT_WOTHER | ((env->wstate & 0x38) >> 1)):
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                                    ((env->wstate & 0x7) << 2)));
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        if (env->cleanwin - env->canrestore == 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->cansave--;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->canrestore++;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    cwp = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->canrestore == 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        raise_exception(TT_FILL | (env->otherwin != 0 ?
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                                   (TT_WOTHER | ((env->wstate & 0x38) >> 1)):
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                                   ((env->wstate & 0x7) << 2)));
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->cansave++;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->canrestore--;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->cansave != env->nwindows - 2) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        raise_exception(TT_SPILL | (env->otherwin != 0 ?
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                                    (TT_WOTHER | ((env->wstate & 0x38) >> 1)):
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                                    ((env->wstate & 0x7) << 2)));
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->cansave++;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->otherwin == 0)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->canrestore--;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->otherwin--;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->canrestore++;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->cleanwin < env->nwindows - 1)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->cleanwin++;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->otherwin == 0)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->cansave--;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->otherwin--;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->gsr &= ~7ULL;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->gsr |= tmp & 7ULL;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        return env->bgregs;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        return env->agregs;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        return env->mgregs;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        return env->igregs;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    pstate_regs = env->pstate & 0xc01;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        memcpy32(dst, env->gregs);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        memcpy32(env->gregs, src);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->pstate = new_pstate;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (!(env->def->features & CPU_FEATURE_GL))
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->pc = env->tsptr->tpc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->npc = env->tsptr->tnpc + 4;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    PUT_CCR(env, env->tsptr->tstate >> 32);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->asi = (env->tsptr->tstate >> 24) & 0xff;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    change_pstate((env->tsptr->tstate >> 8) & 0xf3f);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    PUT_CWP64(env, env->tsptr->tstate & 0xff);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tl--;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tsptr = &env->ts[env->tl & MAXTL_MASK];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->pc = env->tsptr->tpc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->npc = env->tsptr->tnpc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    PUT_CCR(env, env->tsptr->tstate >> 32);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->asi = (env->tsptr->tstate >> 24) & 0xff;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    change_pstate((env->tsptr->tstate >> 8) & 0xf3f);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    PUT_CWP64(env, env->tsptr->tstate & 0xff);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tl--;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tsptr = &env->ts[env->tl & MAXTL_MASK];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->softint |= (uint32_t)value;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->softint &= (uint32_t)~value;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->softint = (uint32_t)value;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    int intno = env->exception_index;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->pc,
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->npc, env->regwptr[6]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ptr = (uint8_t *)env->pc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->tl >= env->maxtl) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                  " Error state", env->exception_index, env->tl, env->maxtl);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->tl < env->maxtl - 1) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->tl++;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->pstate |= PS_RED;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        if (env->tl < env->maxtl)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            env->tl++;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tsptr = &env->ts[env->tl & MAXTL_MASK];
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tsptr->tstate = ((uint64_t)GET_CCR(env) << 32) |
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        ((env->asi & 0xff) << 24) | ((env->pstate & 0xf3f) << 8) |
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tsptr->tpc = env->pc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tsptr->tnpc = env->npc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tsptr->tt = intno;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (!(env->def->features & CPU_FEATURE_GL)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        cpu_set_cwp(env, cpu_cwp_dec(env, env->cwp - 1));
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        cpu_set_cwp(env, cpu_cwp_dec(env, env->cwp - env->cansave - 2));
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        cpu_set_cwp(env, cpu_cwp_inc(env, env->cwp + 1));
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tbr &= ~0x7fffULL;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tbr |= ((env->tl > 1) ? 1 << 14 : 0) | (intno << 5);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->pc = env->tbr;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->npc = env->pc + 4;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->exception_index = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    int cwp, intno = env->exception_index;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->pc,
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                env->npc, env->regwptr[6]);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            ptr = (uint8_t *)env->pc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->psret == 0) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:                  env->exception_index);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->psret = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    cwp = cpu_cwp_dec(env, env->cwp - 1);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->regwptr[9] = env->pc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->regwptr[10] = env->npc;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->psrps = env->psrs;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->psrs = 1;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->tbr = (env->tbr & TBR_BASE_MASK) | (intno << 4);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->pc = env->tbr;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->npc = env->pc + 4;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->exception_index = 0;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:            cpu_restore_state(tb, env, pc, (void *)(long)env->cond);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           "\n", addr, env->pc);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:               size == 1 ? "" : "s", addr, is_asi, env->pc);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:               size == 1 ? "" : "s", addr, env->pc);
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->mmuregs[3]) /* Fault status register */
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->mmuregs[3] = 1; /* overflow (not read before another fault) */
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->mmuregs[3] |= 1 << 16;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if (env->psrs)
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->mmuregs[3] |= 1 << 5;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->mmuregs[3] |= 1 << 6;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:        env->mmuregs[3] |= 1 << 7;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->mmuregs[3] |= (5 << 2) | 2;
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    env->mmuregs[4] = addr; /* Fault address register */
./tools/qemu-xen-traditional/target-sparc/op_helper.c:    if ((env->mmuregs[0] & MMU_E) && !(env->mmuregs[0] & MMU_NF)) {
./tools/qemu-xen-traditional/target-sparc/op_helper.c:           "\n", addr, env->pc);
./tools/qemu-xen-traditional/target-sparc/helper.c:    if ((env->mmuregs[0] & MMU_E) == 0) { /* MMU disabled */
./tools/qemu-xen-traditional/target-sparc/helper.c:        if (rw == 2 && (env->mmuregs[0] & env->def->mmu_bm)) {
./tools/qemu-xen-traditional/target-sparc/helper.c:            *physical = env->prom_addr | (address & 0x7ffffULL);
./tools/qemu-xen-traditional/target-sparc/helper.c:    pde_ptr = (env->mmuregs[1] << 4) + (env->mmuregs[2] << 2);
./tools/qemu-xen-traditional/target-sparc/helper.c:    if (error_code && !((env->mmuregs[0] & MMU_NF) && is_user))
./tools/qemu-xen-traditional/target-sparc/helper.c:    if (env->mmuregs[3]) /* Fault status register */
./tools/qemu-xen-traditional/target-sparc/helper.c:        env->mmuregs[3] = 1; /* overflow (not read before another fault) */
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->mmuregs[3] |= (access_index << 5) | error_code | 2;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->mmuregs[4] = address; /* Fault address register */
./tools/qemu-xen-traditional/target-sparc/helper.c:    if ((env->mmuregs[0] & MMU_NF) || env->psret == 0)  {
./tools/qemu-xen-traditional/target-sparc/helper.c:            env->exception_index = TT_TFAULT;
./tools/qemu-xen-traditional/target-sparc/helper.c:            env->exception_index = TT_DFAULT;
./tools/qemu-xen-traditional/target-sparc/helper.c:    pde_ptr = (target_phys_addr_t)(env->mmuregs[1] << 4) +
./tools/qemu-xen-traditional/target-sparc/helper.c:        (env->mmuregs[2] << 2);
./tools/qemu-xen-traditional/target-sparc/helper.c:    pde_ptr = (env->mmuregs[1] << 4) + (env->mmuregs[2] << 2);
./tools/qemu-xen-traditional/target-sparc/helper.c:           (target_phys_addr_t)env->mmuregs[1] << 4, env->mmuregs[2]);
./tools/qemu-xen-traditional/target-sparc/helper.c:    if ((env->lsu & DMMU_E) == 0) { /* DMMU disabled */
./tools/qemu-xen-traditional/target-sparc/helper.c:        switch ((env->dtlb_tte[i] >> 61) & 3) {
./tools/qemu-xen-traditional/target-sparc/helper.c:        if (env->dmmuregs[1] == (env->dtlb_tag[i] & 0x1fff) &&
./tools/qemu-xen-traditional/target-sparc/helper.c:            (address & mask) == (env->dtlb_tag[i] & ~0x1fffULL) &&
./tools/qemu-xen-traditional/target-sparc/helper.c:            (env->dtlb_tte[i] & 0x8000000000000000ULL)) {
./tools/qemu-xen-traditional/target-sparc/helper.c:            if (((env->dtlb_tte[i] & 0x4) && is_user) ||
./tools/qemu-xen-traditional/target-sparc/helper.c:                (!(env->dtlb_tte[i] & 0x2) && (rw == 1))) {
./tools/qemu-xen-traditional/target-sparc/helper.c:                if (env->dmmuregs[3]) /* Fault status register */
./tools/qemu-xen-traditional/target-sparc/helper.c:                    env->dmmuregs[3] = 2; /* overflow (not read before
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->dmmuregs[3] |= (is_user << 3) | ((rw == 1) << 2) | 1;
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->dmmuregs[4] = address; /* Fault address register */
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->exception_index = TT_DFAULT;
./tools/qemu-xen-traditional/target-sparc/helper.c:            *physical = (env->dtlb_tte[i] & mask & 0x1fffffff000ULL) +
./tools/qemu-xen-traditional/target-sparc/helper.c:            if (env->dtlb_tte[i] & 0x2)
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->dmmuregs[6] = (address & ~0x1fffULL) | (env->dmmuregs[1] & 0x1fff);
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->exception_index = TT_DMISS;
./tools/qemu-xen-traditional/target-sparc/helper.c:    if ((env->lsu & IMMU_E) == 0) { /* IMMU disabled */
./tools/qemu-xen-traditional/target-sparc/helper.c:        switch ((env->itlb_tte[i] >> 61) & 3) {
./tools/qemu-xen-traditional/target-sparc/helper.c:        if (env->dmmuregs[1] == (env->itlb_tag[i] & 0x1fff) &&
./tools/qemu-xen-traditional/target-sparc/helper.c:            (address & mask) == (env->itlb_tag[i] & ~0x1fffULL) &&
./tools/qemu-xen-traditional/target-sparc/helper.c:            (env->itlb_tte[i] & 0x8000000000000000ULL)) {
./tools/qemu-xen-traditional/target-sparc/helper.c:            if ((env->itlb_tte[i] & 0x4) && is_user) {
./tools/qemu-xen-traditional/target-sparc/helper.c:                if (env->immuregs[3]) /* Fault status register */
./tools/qemu-xen-traditional/target-sparc/helper.c:                    env->immuregs[3] = 2; /* overflow (not read before
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->immuregs[3] |= (is_user << 3) | 1;
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->exception_index = TT_TFAULT;
./tools/qemu-xen-traditional/target-sparc/helper.c:            *physical = (env->itlb_tte[i] & mask & 0x1fffffff000ULL) +
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->immuregs[6] = (address & ~0x1fffULL) | (env->dmmuregs[1] & 0x1fff);
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->exception_index = TT_TMISS;
./tools/qemu-xen-traditional/target-sparc/helper.c:           env->dmmuregs[1], env->dmmuregs[2]);
./tools/qemu-xen-traditional/target-sparc/helper.c:    if ((env->lsu & DMMU_E) == 0) {
./tools/qemu-xen-traditional/target-sparc/helper.c:            switch ((env->dtlb_tte[i] >> 61) & 3) {
./tools/qemu-xen-traditional/target-sparc/helper.c:            if ((env->dtlb_tte[i] & 0x8000000000000000ULL) != 0) {
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->dtlb_tag[i] & ~0x1fffULL,
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->dtlb_tte[i] & 0x1ffffffe000ULL,
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->dtlb_tte[i] & 0x4? "priv": "user",
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->dtlb_tte[i] & 0x2? "RW": "RO",
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->dtlb_tte[i] & 0x40? "locked": "unlocked",
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->dtlb_tag[i] & 0x1fffULL);
./tools/qemu-xen-traditional/target-sparc/helper.c:    if ((env->lsu & IMMU_E) == 0) {
./tools/qemu-xen-traditional/target-sparc/helper.c:            switch ((env->itlb_tte[i] >> 61) & 3) {
./tools/qemu-xen-traditional/target-sparc/helper.c:            if ((env->itlb_tte[i] & 0x8000000000000000ULL) != 0) {
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->itlb_tag[i] & ~0x1fffULL,
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->itlb_tte[i] & 0x1ffffffe000ULL,
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->itlb_tte[i] & 0x4? "priv": "user",
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->itlb_tte[i] & 0x40? "locked": "unlocked",
./tools/qemu-xen-traditional/target-sparc/helper.c:                       env->itlb_tag[i] & 0x1fffULL);
./tools/qemu-xen-traditional/target-sparc/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->cwp = 0;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->wim = 1;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->regwptr = env->regbase + (env->cwp * 16);
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->cleanwin = env->nwindows - 2;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->cansave = env->nwindows - 2;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->pstate = PS_RMO | PS_PEF | PS_IE;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->asi = 0x82; // Primary no-fault
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->psret = 0;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->psrs = 1;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->psrps = 1;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->pstate = PS_PRIV;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->hpstate = HS_PRIV;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->tsptr = &env->ts[env->tl & MAXTL_MASK];
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->lsu = 0;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->mmuregs[0] &= ~(MMU_E | MMU_NF);
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->mmuregs[0] |= env->def->mmu_bm;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->pc = 0;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->npc = env->pc + 4;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->def = qemu_mallocz(sizeof(*def));
./tools/qemu-xen-traditional/target-sparc/helper.c:    memcpy(env->def, def, sizeof(*def));
./tools/qemu-xen-traditional/target-sparc/helper.c:    if ((env->def->features & CPU_FEATURE_FLOAT))
./tools/qemu-xen-traditional/target-sparc/helper.c:        env->def->features |= CPU_FEATURE_FLOAT128;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->version = def->iu_version;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->fsr = def->fpu_version;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->nwindows = def->nwindows;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->mmuregs[0] |= def->mmu_version;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->mxccregs[7] |= def->mxcc_version;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->mmu_version = def->mmu_version;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->maxtl = def->maxtl;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->version |= def->maxtl << 8;
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->version |= def->nwindows - 1;
./tools/qemu-xen-traditional/target-sparc/helper.c:    free(env->def);
./tools/qemu-xen-traditional/target-sparc/helper.c:    env->mxccregs[7] = ((cpu + 8) & 0xf) << 24;
./tools/qemu-xen-traditional/target-sparc/helper.c:#define GET_FLAG(a,b) ((env->psr & a)?b:'-')
./tools/qemu-xen-traditional/target-sparc/helper.c:    cpu_fprintf(f, "pc: " TARGET_FMT_lx "  npc: " TARGET_FMT_lx "\n", env->pc,
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->npc);
./tools/qemu-xen-traditional/target-sparc/helper.c:        cpu_fprintf(f, "%%g%c: " TARGET_FMT_lx "\t", i + '0', env->gregs[i]);
./tools/qemu-xen-traditional/target-sparc/helper.c:        cpu_fprintf(f, "%%g%c: " TARGET_FMT_lx "\t", i + '0', env->gregs[i]);
./tools/qemu-xen-traditional/target-sparc/helper.c:                    env->regwptr[i + x * 8]);
./tools/qemu-xen-traditional/target-sparc/helper.c:                    env->regwptr[i + x * 8]);
./tools/qemu-xen-traditional/target-sparc/helper.c:        cpu_fprintf(f, " %016f", *(float *)&env->fpr[i]);
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->pstate, GET_CCR(env), env->asi, env->tl, env->fprs);
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->cansave, env->canrestore, env->otherwin, env->wstate,
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->cleanwin, env->nwindows - 1 - env->cwp);
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->psrs?'S':'-', env->psrps?'P':'-',
./tools/qemu-xen-traditional/target-sparc/helper.c:                env->psret?'E':'-', env->wim);
./tools/qemu-xen-traditional/target-sparc/helper.c:    cpu_fprintf(f, "fsr: 0x%08x\n", env->fsr);
./tools/qemu-xen-traditional/darwin-user/main.c:                      env->spr[SPR_DAR]);
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)env->nip;
./tools/qemu-xen-traditional/darwin-user/main.c:                      env->spr[SPR_DAR]);
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen-traditional/darwin-user/main.c:            switch (env->error_code & ~0xF) {
./tools/qemu-xen-traditional/darwin-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen-traditional/darwin-user/main.c:                              env->error_code);
./tools/qemu-xen-traditional/darwin-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen-traditional/darwin-user/main.c:                              env->error_code & 0xF);
./tools/qemu-xen-traditional/darwin-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen-traditional/darwin-user/main.c:                              env->error_code & 0xF);
./tools/qemu-xen-traditional/darwin-user/main.c:                          env->error_code);
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen-traditional/darwin-user/main.c:            if(((int)env->gpr[0]) <= SYS_MAXSYSCALL && ((int)env->gpr[0])>0)
./tools/qemu-xen-traditional/darwin-user/main.c:                ret = do_unix_syscall(env, env->gpr[0]/*, env->gpr[3], env->gpr[4],
./tools/qemu-xen-traditional/darwin-user/main.c:                                      env->gpr[5], env->gpr[6], env->gpr[7],
./tools/qemu-xen-traditional/darwin-user/main.c:                                      env->gpr[8], env->gpr[9], env->gpr[10]*/);
./tools/qemu-xen-traditional/darwin-user/main.c:            else if(((int)env->gpr[0])<0)
./tools/qemu-xen-traditional/darwin-user/main.c:                ret = do_mach_syscall(env, env->gpr[0], env->gpr[3], env->gpr[4],
./tools/qemu-xen-traditional/darwin-user/main.c:                                      env->gpr[5], env->gpr[6], env->gpr[7],
./tools/qemu-xen-traditional/darwin-user/main.c:                                      env->gpr[8], env->gpr[9], env->gpr[10]);
./tools/qemu-xen-traditional/darwin-user/main.c:                ret = do_thread_syscall(env, env->gpr[0], env->gpr[3], env->gpr[4],
./tools/qemu-xen-traditional/darwin-user/main.c:                                        env->gpr[5], env->gpr[6], env->gpr[7],
./tools/qemu-xen-traditional/darwin-user/main.c:                                        env->gpr[8], env->gpr[9], env->gpr[10]);
./tools/qemu-xen-traditional/darwin-user/main.c:            if(((int)env->gpr[0]) <= SYS_MAXSYSCALL && ((int)env->gpr[0])>0)
./tools/qemu-xen-traditional/darwin-user/main.c:                    env->nip += 0;
./tools/qemu-xen-traditional/darwin-user/main.c:                    env->nip += 4;
./tools/qemu-xen-traditional/darwin-user/main.c:            env->gpr[3] = ret;
./tools/qemu-xen-traditional/darwin-user/main.c:        env->eflags = env->eflags | 0x1;
./tools/qemu-xen-traditional/darwin-user/main.c:        env->eflags &= ~0x1;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_EAX] = ret;
./tools/qemu-xen-traditional/darwin-user/main.c:        uint32_t *params = (uint32_t *)env->regs[R_ESP];
./tools/qemu-xen-traditional/darwin-user/main.c:            do_commpage(env,  env->eip,   *(params + 1), *(params + 2),
./tools/qemu-xen-traditional/darwin-user/main.c:            ret = do_mach_syscall(env,  env->regs[R_EAX],
./tools/qemu-xen-traditional/darwin-user/main.c:            int saved_stack = env->regs[R_ESP];
./tools/qemu-xen-traditional/darwin-user/main.c:            env->regs[R_ESP] = env->regs[R_ECX];
./tools/qemu-xen-traditional/darwin-user/main.c:            ret = do_unix_syscall(env, env->regs[R_EAX]);
./tools/qemu-xen-traditional/darwin-user/main.c:            env->regs[R_ECX] = env->regs[R_ESP];
./tools/qemu-xen-traditional/darwin-user/main.c:            env->regs[R_ESP] = saved_stack;
./tools/qemu-xen-traditional/darwin-user/main.c:            ret = do_unix_syscall(env, env->regs[R_EAX]/*,
./tools/qemu-xen-traditional/darwin-user/main.c:            ret = do_thread_syscall(env,  env->regs[R_EAX],
./tools/qemu-xen-traditional/darwin-user/main.c:            if (!(env->error_code & 1))
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)env->cr[2];
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)env->eip;
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)env->eip;
./tools/qemu-xen-traditional/darwin-user/main.c:            info.si_addr = (void*)env->eip;
./tools/qemu-xen-traditional/darwin-user/main.c:            pc = (void*)(env->segs[R_CS].base + env->eip);
./tools/qemu-xen-traditional/darwin-user/main.c:    env->opaque = ts;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->cr[0] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->hflags |= HF_PE_MASK;
./tools/qemu-xen-traditional/darwin-user/main.c:    if (env->cpuid_features & CPUID_SSE) {
./tools/qemu-xen-traditional/darwin-user/main.c:        env->cr[4] |= CR4_OSFXSR_MASK;
./tools/qemu-xen-traditional/darwin-user/main.c:        env->hflags |= HF_OSFXSR_MASK;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->eflags |= IF_MASK;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_EAX] = regs->eax;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_EBX] = regs->ebx;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_ECX] = regs->ecx;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_EDX] = regs->edx;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_ESI] = regs->esi;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_EDI] = regs->edi;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_EBP] = regs->ebp;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->regs[R_ESP] = regs->esp;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->eip = regs->eip;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->ldt.base = (uint32_t) ldt_table;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->ldt.limit = sizeof(ldt_table) - 1;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->gdt.base = (uint32_t)gdt_table;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->gdt.limit = sizeof(gdt_table) - 1;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->sysenter_cs = 0x1; //XXX
./tools/qemu-xen-traditional/darwin-user/main.c:    env->sysenter_eip = (int)syscallbackdoor;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->sysenter_esp = (int)malloc(64);
./tools/qemu-xen-traditional/darwin-user/main.c:    env->tr.base = (uint32_t) tss;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->tr.limit = sizeof(tss) - 1;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->tr.flags = DESC_P_MASK | (0x9 << DESC_TYPE_SHIFT);
./tools/qemu-xen-traditional/darwin-user/main.c:    env->idt.base = (uint32_t) idt_table;
./tools/qemu-xen-traditional/darwin-user/main.c:    env->idt.limit = sizeof(idt_table) - 1;
./tools/qemu-xen-traditional/darwin-user/main.c:        env->msr &= ~((target_ulong)1 << MSR_SF);
./tools/qemu-xen-traditional/darwin-user/main.c:        env->msr |= (target_ulong)1 << MSR_SF;
./tools/qemu-xen-traditional/darwin-user/main.c:        env->nip = regs->nip;
./tools/qemu-xen-traditional/darwin-user/main.c:            env->gpr[i] = regs->gpr[i];
./tools/qemu-xen-traditional/darwin-user/signal.c:        esp = env->regs[R_ESP];
./tools/qemu-xen-traditional/darwin-user/signal.c:	env->regs[R_ESP] = (unsigned long) frame;
./tools/qemu-xen-traditional/darwin-user/signal.c:	env->eip = (unsigned long) ka->sa.sa_handler;
./tools/qemu-xen-traditional/darwin-user/signal.c:	env->eflags &= ~TF_MASK;
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->regs[R_EAX] = tswapl(scp->sc_eax);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->regs[R_EBX] = tswapl(scp->sc_ebx);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->regs[R_ECX] = tswapl(scp->sc_ecx);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->regs[R_EDX] = tswapl(scp->sc_edx);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->regs[R_EDI] = tswapl(scp->sc_edi);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->regs[R_ESI] = tswapl(scp->sc_esi);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->regs[R_EBP] = tswapl(scp->sc_ebp);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->regs[R_ESP] = tswapl(scp->sc_esp);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->segs[R_SS].selector = (void*)tswapl(scp->sc_ss);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->eflags = tswapl(scp->sc_eflags);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->eip = tswapl(scp->sc_eip);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->segs[R_CS].selector = (void*)tswapl(scp->sc_cs);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->segs[R_DS].selector = (void*)tswapl(scp->sc_ds);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->segs[R_ES].selector = (void*)tswapl(scp->sc_es);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->segs[R_FS].selector = (void*)tswapl(scp->sc_fs);
./tools/qemu-xen-traditional/darwin-user/signal.c:    env->segs[R_GS].selector = (void*)tswapl(scp->sc_gs);
./tools/qemu-xen-traditional/darwin-user/signal.c:    return env->regs[R_EAX];
./tools/qemu-xen-traditional/block-vvfat.c:	    if (s->qcow->drv->bdrv_is_allocated(s->qcow,
./tools/qemu-xen-traditional/block-vvfat.c:		if (s->qcow->drv->bdrv_read(s->qcow, sector_num, buf+i*0x200, n))
./tools/qemu-xen-traditional/block-vvfat.c:	was_modified = s->qcow->drv->bdrv_is_allocated(s->qcow,
./tools/qemu-xen-traditional/block-vvfat.c:		    if (!s->qcow->drv->bdrv_is_allocated(s->qcow,
./tools/qemu-xen-traditional/block-vvfat.c:			if (s->qcow->drv->bdrv_write(s->qcow,
./tools/qemu-xen-traditional/block-vvfat.c:    s->qcow->drv->bdrv_make_empty(s->qcow);
./tools/qemu-xen-traditional/block-vvfat.c:    ret = s->qcow->drv->bdrv_write(s->qcow, sector_num, buf, nb_sectors);
./tools/qemu-xen-traditional/block-vvfat.c:    assert(((mapping_t*)array_get(&(vvv->mapping), 0))->end == 2);
./tools/qemu-xen-traditional/block-vvfat.c:    assert(!vvv->current_mapping || vvv->current_fd || (vvv->current_mapping->mode & MODE_DIRECTORY));
./tools/qemu-xen-traditional/block-vvfat.c:    if (((direntry_t*)vvv->directory.pointer)[1].attributes != 0xf)
./tools/qemu-xen-traditional/block-vvfat.c:    assert(vvv->mapping.size >= vvv->mapping.item_size * vvv->mapping.next);
./tools/qemu-xen-traditional/block-vvfat.c:    assert(vvv->directory.size >= vvv->directory.item_size * vvv->directory.next);
./tools/qemu-xen-traditional/block-vvfat.c:    if (vvv->mapping.next<47)
./tools/qemu-xen-traditional/block-vvfat.c:    assert((mapping = array_get(&(vvv->mapping), 47)));
./tools/qemu-xen-traditional/block-vvfat.c:    assert(mapping->dir_index < vvv->directory.next);
./tools/qemu-xen-traditional/block-vvfat.c:    direntry = array_get(&(vvv->directory), mapping->dir_index);
./tools/qemu-xen-traditional/tests/qruncom.c:    env->regs[R_ESP] = (env->regs[R_ESP] & ~0xffff) | ((env->regs[R_ESP] - 2) & 0xffff);
./tools/qemu-xen-traditional/tests/qruncom.c:    *(uint16_t *)seg_to_linear(env->segs[R_SS].selector, env->regs[R_ESP]) = val;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->cr[0] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->hflags |= HF_PE_MASK | VM_MASK;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->eflags |= IF_MASK | VM_MASK;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->eip = 0x100;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->regs[R_ESP] = 0xfffe;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->idt.base = (unsigned long)idt_table;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->idt.limit = sizeof(idt_table) - 1;
./tools/qemu-xen-traditional/tests/qruncom.c:    *seg_to_linear(env->segs[R_CS].selector, 0) = 0xb4; /* mov ah, $0 */
./tools/qemu-xen-traditional/tests/qruncom.c:    *seg_to_linear(env->segs[R_CS].selector, 1) = 0x00;
./tools/qemu-xen-traditional/tests/qruncom.c:    *seg_to_linear(env->segs[R_CS].selector, 2) = 0xcd; /* int $0x21 */
./tools/qemu-xen-traditional/tests/qruncom.c:    *seg_to_linear(env->segs[R_CS].selector, 3) = 0x21;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->regs[R_ESI] = 0x100;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->regs[R_ECX] = 0xff;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->regs[R_EBP] = 0x0900;
./tools/qemu-xen-traditional/tests/qruncom.c:    env->regs[R_EDI] = 0xfffe;
./tools/qemu-xen-traditional/tests/qruncom.c:                int_num = *(uint8_t *)(env->segs[R_CS].base + env->eip + 1);
./tools/qemu-xen-traditional/tests/qruncom.c:                ah = (env->regs[R_EAX] >> 8) & 0xff;
./tools/qemu-xen-traditional/tests/qruncom.c:                        uint8_t c = env->regs[R_EDX];
./tools/qemu-xen-traditional/tests/qruncom.c:                            c = *seg_to_linear(env->segs[R_DS].selector, env->regs[R_EAX]);
./tools/qemu-xen-traditional/tests/qruncom.c:                        env->regs[R_EAX] = (env->regs[R_EAX] & ~0xff) | '$';
./tools/qemu-xen-traditional/tests/qruncom.c:                env->eip += 2;
./tools/qemu-xen-traditional/vl.c:        env->last_io_time = cpu_get_time_fast();
./tools/qemu-xen-traditional/vl.c:        env->last_io_time = cpu_get_time_fast();
./tools/qemu-xen-traditional/vl.c:        env->last_io_time = cpu_get_time_fast();
./tools/qemu-xen-traditional/vl.c:        env->last_io_time = cpu_get_time_fast();
./tools/qemu-xen-traditional/vl.c:        env->last_io_time = cpu_get_time_fast();
./tools/qemu-xen-traditional/vl.c:        env->last_io_time = cpu_get_time_fast();
./tools/qemu-xen-traditional/vl.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/vl.c:        fprintf(stderr, "CPU #%d:\n", env->cpu_index);
./tools/qemu-xen-traditional/vl.c:    prev->next = entry->next;
./tools/qemu-xen-traditional/vl.c:        icount -= (env->icount_decr.u16.low + env->icount_extra);
./tools/qemu-xen-traditional/vl.c:            if (env->kqemu_enabled) {
./tools/qemu-xen-traditional/vl.c:                dev->handle_destroy(dev);
./tools/qemu-xen-traditional/vl.c:    while (port && port->dev->addr != addr) {
./tools/qemu-xen-traditional/vl.c:    dev->handle_destroy(dev);
./tools/qemu-xen-traditional/vl.c:        switch(dev->speed) {
./tools/qemu-xen-traditional/vl.c:                    0, dev->addr, speed_str, dev->devname);
./tools/qemu-xen-traditional/vl.c:        if (env->kqemu_enabled) {
./tools/qemu-xen-traditional/vl.c:                    qemu_icount -= (env->icount_decr.u16.low + env->icount_extra);
./tools/qemu-xen-traditional/vl.c:                    env->icount_decr.u16.low = 0;
./tools/qemu-xen-traditional/vl.c:                    env->icount_extra = 0;
./tools/qemu-xen-traditional/vl.c:                    env->icount_decr.u16.low = decr;
./tools/qemu-xen-traditional/vl.c:                    env->icount_extra = count;
./tools/qemu-xen-traditional/vl.c:                    qemu_icount -= (env->icount_decr.u16.low
./tools/qemu-xen-traditional/vl.c:                                    + env->icount_extra);
./tools/qemu-xen-traditional/vl.c:                    env->icount_decr.u32 = 0;
./tools/qemu-xen-traditional/vl.c:                    env->icount_extra = 0;
./tools/qemu-xen-traditional/vl.c:                next_cpu = env->next_cpu ?: first_cpu;
./tools/qemu-xen-traditional/usb-bsd.c:    if (dev->ep_fd[ep] < 0) {
./tools/qemu-xen-traditional/usb-bsd.c:        snprintf(buf, sizeof(buf) - 1, "%s.%d", dev->devpath, ep);
./tools/qemu-xen-traditional/usb-bsd.c:        snprintf(buf, sizeof(buf) - 1, "%s.%02d", dev->devpath, ep);
./tools/qemu-xen-traditional/usb-bsd.c:        dev->ep_fd[ep] = fd;
./tools/qemu-xen-traditional/usb-bsd.c:    return dev->ep_fd[ep];
./tools/qemu-xen-traditional/usb-bsd.c:        if (dev->ep_fd[epnum] >= 0) {
./tools/qemu-xen-traditional/usb-bsd.c:            close(dev->ep_fd[epnum]);
./tools/qemu-xen-traditional/usb-bsd.c:            dev->ep_fd[epnum] = -1;
./tools/qemu-xen-traditional/usb-bsd.c:        dev->addr = value;
./tools/qemu-xen-traditional/usb-bsd.c:        dev->devfd = dfd;
./tools/qemu-xen-traditional/usb-bsd.c:            dev->dev.speed = USB_SPEED_LOW - 1;
./tools/qemu-xen-traditional/usb-bsd.c:            dev->dev.speed = USB_SPEED_FULL - 1;
./tools/qemu-xen-traditional/usb-bsd.c:        dev->dev.handle_packet = usb_generic_handle_packet;
./tools/qemu-xen-traditional/usb-bsd.c:        dev->dev.handle_reset = usb_host_handle_reset;
./tools/qemu-xen-traditional/usb-bsd.c:        dev->dev.handle_control = usb_host_handle_control;
./tools/qemu-xen-traditional/usb-bsd.c:        dev->dev.handle_data = usb_host_handle_data;
./tools/qemu-xen-traditional/usb-bsd.c:        dev->dev.handle_destroy = usb_host_handle_destroy;
./tools/qemu-xen-traditional/usb-bsd.c:            pstrcpy(dev->dev.devname, sizeof(dev->dev.devname),
./tools/qemu-xen-traditional/usb-bsd.c:            snprintf(dev->dev.devname, sizeof(dev->dev.devname),
./tools/qemu-xen-traditional/usb-bsd.c:        pstrcpy(dev->devpath, sizeof(dev->devpath), "/dev/");
./tools/qemu-xen-traditional/usb-bsd.c:        pstrcat(dev->devpath, sizeof(dev->devpath), dev_info.udi_devnames[0]);
./tools/qemu-xen-traditional/usb-bsd.c:           dev->ep_fd[i] = -1;
./tools/qemu-xen-traditional/block-dmg.c:	return bs->drv->bdrv_open(bs, filename, flags);
./tools/qemu-xen-traditional/sdl.c:    keysym = ev->keysym.sym;
./tools/qemu-xen-traditional/sdl.c:    if (keysym == 0 && ev->keysym.scancode == 113)
./tools/qemu-xen-traditional/sdl.c:    if (keysym == 92 && ev->keysym.scancode == 133) {
./tools/qemu-xen-traditional/sdl.c:    return ev->keysym.scancode;
./tools/qemu-xen-traditional/sdl.c:    keycode = ev->keysym.scancode;
./tools/qemu-xen-traditional/sdl.c:    if (ev->keysym.sym == SDLK_PAUSE) {
./tools/qemu-xen-traditional/sdl.c:        if (ev->type == SDL_KEYUP)
./tools/qemu-xen-traditional/sdl.c:        if (ev->type == SDL_KEYUP)
./tools/qemu-xen-traditional/sdl.c:    if (ev->type == SDL_KEYUP)
./tools/qemu-xen-traditional/sdl.c:        switch (ev->type) {
./tools/qemu-xen-traditional/sdl.c:            if (ev->type == SDL_KEYDOWN) {
./tools/qemu-xen-traditional/sdl.c:                    keycode = sdl_keyevent_to_keycode(&ev->key);
./tools/qemu-xen-traditional/sdl.c:                    if (ev->key.keysym.mod & (KMOD_LCTRL | KMOD_RCTRL)) {
./tools/qemu-xen-traditional/sdl.c:                        switch(ev->key.keysym.sym) {
./tools/qemu-xen-traditional/sdl.c:                        switch(ev->key.keysym.sym) {
./tools/qemu-xen-traditional/sdl.c:                    } else if (ev->key.keysym.unicode != 0) {
./tools/qemu-xen-traditional/sdl.c:                        kbd_put_keysym(ev->key.keysym.unicode);
./tools/qemu-xen-traditional/sdl.c:            } else if (ev->type == SDL_KEYUP) {
./tools/qemu-xen-traditional/sdl.c:		    mod_state = (ev->key.keysym.mod & gui_grab_code);
./tools/qemu-xen-traditional/sdl.c:                    mod_state = (ev->key.keysym.mod &
./tools/qemu-xen-traditional/sdl.c:                sdl_process_key(&ev->key);
./tools/qemu-xen-traditional/sdl.c:                SDL_MouseButtonEvent *bev = &ev->button;
./tools/qemu-xen-traditional/sdl.c:                    if (ev->type == SDL_MOUSEBUTTONDOWN &&
./tools/qemu-xen-traditional/sdl.c:                        (bev->button == SDL_BUTTON_LEFT)) {
./tools/qemu-xen-traditional/sdl.c:                    if (ev->type == SDL_MOUSEBUTTONDOWN) {
./tools/qemu-xen-traditional/sdl.c:                        state |= SDL_BUTTON(bev->button);
./tools/qemu-xen-traditional/sdl.c:                        state &= ~SDL_BUTTON(bev->button);
./tools/qemu-xen-traditional/sdl.c:                    if (bev->button == SDL_BUTTON_WHEELUP && ev->type == SDL_MOUSEBUTTONDOWN) {
./tools/qemu-xen-traditional/sdl.c:                    } else if (bev->button == SDL_BUTTON_WHEELDOWN && ev->type == SDL_MOUSEBUTTONDOWN) {
./tools/qemu-xen-traditional/sdl.c:            if (gui_grab && ev->active.state == SDL_APPINPUTFOCUS &&
./tools/qemu-xen-traditional/sdl.c:                !ev->active.gain && !gui_fullscreen_initial_grab) {
./tools/qemu-xen-traditional/sdl.c:	    if (ev->active.state & SDL_APPACTIVE) {
./tools/qemu-xen-traditional/sdl.c:		if (ev->active.gain) {
./tools/qemu-xen-traditional/sdl.c:                SDL_ResizeEvent *rev = &ev->resize;
./tools/qemu-xen-traditional/sdl.c:                real_screen = SDL_SetVideoMode(rev->w, rev->h, 0, SDL_OPENGL|SDL_RESIZABLE);
./tools/qemu-xen-traditional/monitor.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/monitor.c:        if (env->cpu_index == cpu_index) {
./tools/qemu-xen-traditional/monitor.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen-traditional/monitor.c:                    env->cpu_index);
./tools/qemu-xen-traditional/monitor.c:        term_printf(" pc=0x" TARGET_FMT_lx, env->eip + env->segs[R_CS].base);
./tools/qemu-xen-traditional/monitor.c:        term_printf(" nip=0x" TARGET_FMT_lx, env->nip);
./tools/qemu-xen-traditional/monitor.c:        term_printf(" pc=0x" TARGET_FMT_lx " npc=0x" TARGET_FMT_lx, env->pc, env->npc);
./tools/qemu-xen-traditional/monitor.c:        term_printf(" PC=0x" TARGET_FMT_lx, env->active_tc.PC);
./tools/qemu-xen-traditional/monitor.c:        if (env->halted)
./tools/qemu-xen-traditional/monitor.c:                if ((env->efer & MSR_EFER_LMA) &&
./tools/qemu-xen-traditional/monitor.c:                    (env->segs[R_CS].flags & DESC_L_MASK))
./tools/qemu-xen-traditional/monitor.c:                if (!(env->segs[R_CS].flags & DESC_B_MASK))
./tools/qemu-xen-traditional/monitor.c:    if (!(env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen-traditional/monitor.c:    pgd = env->cr[3] & ~0xfff;
./tools/qemu-xen-traditional/monitor.c:            if ((pde & PG_PSE_MASK) && (env->cr[4] & CR4_PSE_MASK)) {
./tools/qemu-xen-traditional/monitor.c:    if (!(env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen-traditional/monitor.c:    pgd = env->cr[3] & ~0xfff;
./tools/qemu-xen-traditional/monitor.c:            if ((pde & PG_PSE_MASK) && (env->cr[4] & CR4_PSE_MASK)) {
./tools/qemu-xen-traditional/monitor.c:        print_tlb (i, &env->itlb[i]);
./tools/qemu-xen-traditional/monitor.c:        print_tlb (i, &env->utlb[i]);
./tools/qemu-xen-traditional/monitor.c:    val = env->kqemu_enabled;
./tools/qemu-xen-traditional/monitor.c:    for (env = first_cpu; env != NULL; env = env->next_cpu)
./tools/qemu-xen-traditional/monitor.c:        if (env->cpu_index == cpu_index) {
./tools/qemu-xen-traditional/monitor.c:    return env->eip + env->segs[R_CS].base;
./tools/qemu-xen-traditional/monitor.c:	u |= env->crf[i] << (32 - (4 * i));
./tools/qemu-xen-traditional/monitor.c:    return env->msr;
./tools/qemu-xen-traditional/monitor.c:    return env->xer;
./tools/qemu-xen-traditional/monitor.c:    return env->regwptr[val];
./tools/qemu-xen-traditional/target-mips/machine.c:    save_tc(f, &env->active_tc);
./tools/qemu-xen-traditional/target-mips/machine.c:    save_fpu(f, &env->active_fpu);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->mvp->CP0_MVPControl);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->mvp->CP0_MVPConf0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->mvp->CP0_MVPConf1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_be32s(f, &env->tlb->nb_tlb);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_be32s(f, &env->tlb->tlb_in_use);
./tools/qemu-xen-traditional/target-mips/machine.c:        uint16_t flags = ((env->tlb->mmu.r4k.tlb[i].G << 10) |
./tools/qemu-xen-traditional/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].C0 << 7) |
./tools/qemu-xen-traditional/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].C1 << 4) |
./tools/qemu-xen-traditional/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].V0 << 3) |
./tools/qemu-xen-traditional/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].V1 << 2) |
./tools/qemu-xen-traditional/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].D0 << 1) |
./tools/qemu-xen-traditional/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].D1 << 0));
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_put_betls(f, &env->tlb->mmu.r4k.tlb[i].VPN);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_put_be32s(f, &env->tlb->mmu.r4k.tlb[i].PageMask);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_put_8s(f, &env->tlb->mmu.r4k.tlb[i].ASID);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_put_betls(f, &env->tlb->mmu.r4k.tlb[i].PFN[0]);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_put_betls(f, &env->tlb->mmu.r4k.tlb[i].PFN[1]);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_be32s(f, &env->current_tc);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_be32s(f, &env->current_fpu);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->error_code);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_be32s(f, &env->hflags);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->btarget);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->bcond);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Index);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Random);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_VPEControl);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_VPEConf0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_VPEConf1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_YQMask);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_VPESchedule);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_VPEScheFBack);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_VPEOpt);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_EntryLo0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_EntryLo1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_Context);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_PageMask);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_PageGrain);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Wired);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf2);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf3);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf4);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_HWREna);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_BadVAddr);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Count);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_EntryHi);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Compare);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Status);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_IntCtl);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSCtl);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSMap);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Cause);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_EPC);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_PRid);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_EBase);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config2);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config3);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config6);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config7);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_LLAddr);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_put_betls(f, &env->CP0_WatchLo[i]);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_put_sbe32s(f, &env->CP0_WatchHi[i]);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_XContext);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Framemask);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Debug);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_DEPC);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Performance0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_TagLo);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_DataLo);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_TagHi);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_DataHi);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_ErrorEPC);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_DESAVE);
./tools/qemu-xen-traditional/target-mips/machine.c:        save_tc(f, &env->tcs[i]);
./tools/qemu-xen-traditional/target-mips/machine.c:        save_fpu(f, &env->fpus[i]);
./tools/qemu-xen-traditional/target-mips/machine.c:    load_tc(f, &env->active_tc);
./tools/qemu-xen-traditional/target-mips/machine.c:    load_fpu(f, &env->active_fpu);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->mvp->CP0_MVPControl);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->mvp->CP0_MVPConf0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->mvp->CP0_MVPConf1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_be32s(f, &env->tlb->nb_tlb);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_be32s(f, &env->tlb->tlb_in_use);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_get_betls(f, &env->tlb->mmu.r4k.tlb[i].VPN);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_get_be32s(f, &env->tlb->mmu.r4k.tlb[i].PageMask);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_get_8s(f, &env->tlb->mmu.r4k.tlb[i].ASID);
./tools/qemu-xen-traditional/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].G = (flags >> 10) & 1;
./tools/qemu-xen-traditional/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].C0 = (flags >> 7) & 3;
./tools/qemu-xen-traditional/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].C1 = (flags >> 4) & 3;
./tools/qemu-xen-traditional/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].V0 = (flags >> 3) & 1;
./tools/qemu-xen-traditional/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].V1 = (flags >> 2) & 1;
./tools/qemu-xen-traditional/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].D0 = (flags >> 1) & 1;
./tools/qemu-xen-traditional/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].D1 = (flags >> 0) & 1;
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_get_betls(f, &env->tlb->mmu.r4k.tlb[i].PFN[0]);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_get_betls(f, &env->tlb->mmu.r4k.tlb[i].PFN[1]);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_be32s(f, &env->current_tc);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_be32s(f, &env->current_fpu);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->error_code);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_be32s(f, &env->hflags);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->btarget);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->bcond);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Index);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Random);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_VPEControl);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_VPEConf0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_VPEConf1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_YQMask);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_VPESchedule);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_VPEScheFBack);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_VPEOpt);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_EntryLo0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_EntryLo1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_Context);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_PageMask);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_PageGrain);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Wired);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf2);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf3);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf4);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_HWREna);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_BadVAddr);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Count);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_EntryHi);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Compare);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Status);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_IntCtl);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSCtl);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSMap);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Cause);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_EPC);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_PRid);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_EBase);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config1);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config2);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config3);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config6);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config7);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_LLAddr);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_get_betls(f, &env->CP0_WatchLo[i]);
./tools/qemu-xen-traditional/target-mips/machine.c:        qemu_get_sbe32s(f, &env->CP0_WatchHi[i]);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_XContext);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Framemask);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Debug);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_DEPC);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Performance0);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_TagLo);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_DataLo);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_TagHi);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_DataHi);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_ErrorEPC);
./tools/qemu-xen-traditional/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_DESAVE);
./tools/qemu-xen-traditional/target-mips/machine.c:        load_tc(f, &env->tcs[i]);
./tools/qemu-xen-traditional/target-mips/machine.c:        load_fpu(f, &env->fpus[i]);
./tools/qemu-xen-traditional/target-mips/translate.c:        ctx->btarget = env->btarget;
./tools/qemu-xen-traditional/target-mips/translate.c:    if (unlikely(!(env->insn_flags & flags)))
./tools/qemu-xen-traditional/target-mips/translate.c:            if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen-traditional/target-mips/translate.c:            if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen-traditional/target-mips/translate.c:            if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen-traditional/target-mips/translate.c:            if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen-traditional/target-mips/translate.c:            if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen-traditional/target-mips/translate.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/translate.c:    if ((env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP)) == 0 &&
./tools/qemu-xen-traditional/target-mips/translate.c:        ((env->tcs[other_tc].CP0_TCBind & (0xf << CP0TCBd_CurVPE)) !=
./tools/qemu-xen-traditional/target-mips/translate.c:         (env->active_tc.CP0_TCBind & (0xf << CP0TCBd_CurVPE))))
./tools/qemu-xen-traditional/target-mips/translate.c:    else if ((env->CP0_VPEControl & (0xff << CP0VPECo_TargTC)) >
./tools/qemu-xen-traditional/target-mips/translate.c:             (env->mvp->CP0_MVPConf0 & (0xff << CP0MVPC0_PTC)))
./tools/qemu-xen-traditional/target-mips/translate.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/translate.c:    if ((env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP)) == 0 &&
./tools/qemu-xen-traditional/target-mips/translate.c:        ((env->tcs[other_tc].CP0_TCBind & (0xf << CP0TCBd_CurVPE)) !=
./tools/qemu-xen-traditional/target-mips/translate.c:         (env->active_tc.CP0_TCBind & (0xf << CP0TCBd_CurVPE))))
./tools/qemu-xen-traditional/target-mips/translate.c:    else if ((env->CP0_VPEControl & (0xff << CP0VPECo_TargTC)) >
./tools/qemu-xen-traditional/target-mips/translate.c:             (env->mvp->CP0_MVPConf0 & (0xff << CP0MVPC0_PTC)))
./tools/qemu-xen-traditional/target-mips/translate.c:        if (!env->tlb->do_tlbwi)
./tools/qemu-xen-traditional/target-mips/translate.c:        if (!env->tlb->do_tlbwr)
./tools/qemu-xen-traditional/target-mips/translate.c:        if (!env->tlb->do_tlbp)
./tools/qemu-xen-traditional/target-mips/translate.c:        if (!env->tlb->do_tlbr)
./tools/qemu-xen-traditional/target-mips/translate.c:        env->CP0_BadVAddr = ctx->pc;
./tools/qemu-xen-traditional/target-mips/translate.c:            if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen-traditional/target-mips/translate.c:        if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen-traditional/target-mips/translate.c:        if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen-traditional/target-mips/translate.c:        if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen-traditional/target-mips/translate.c:        if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-mips/translate.c:            TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-mips/translate.c:        if (env->singlestep_enabled)
./tools/qemu-xen-traditional/target-mips/translate.c:    if (env->singlestep_enabled) {
./tools/qemu-xen-traditional/target-mips/translate.c:    int is_fpu64 = !!(env->hflags & MIPS_HFLAG_F64);
./tools/qemu-xen-traditional/target-mips/translate.c:                env->active_fpu.fcr0, env->active_fpu.fcr31, is_fpu64, env->active_fpu.fp_status,
./tools/qemu-xen-traditional/target-mips/translate.c:                get_float_exception_flags(&env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/translate.c:        printfpr(&env->active_fpu.fpr[i]);
./tools/qemu-xen-traditional/target-mips/translate.c:    if (!SIGN_EXT_P(env->active_tc.PC))
./tools/qemu-xen-traditional/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: pc=0x" TARGET_FMT_lx "\n", env->active_tc.PC);
./tools/qemu-xen-traditional/target-mips/translate.c:    if (!SIGN_EXT_P(env->active_tc.HI[0]))
./tools/qemu-xen-traditional/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: HI=0x" TARGET_FMT_lx "\n", env->active_tc.HI[0]);
./tools/qemu-xen-traditional/target-mips/translate.c:    if (!SIGN_EXT_P(env->active_tc.LO[0]))
./tools/qemu-xen-traditional/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: LO=0x" TARGET_FMT_lx "\n", env->active_tc.LO[0]);
./tools/qemu-xen-traditional/target-mips/translate.c:    if (!SIGN_EXT_P(env->btarget))
./tools/qemu-xen-traditional/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: btarget=0x" TARGET_FMT_lx "\n", env->btarget);
./tools/qemu-xen-traditional/target-mips/translate.c:        if (!SIGN_EXT_P(env->active_tc.gpr[i]))
./tools/qemu-xen-traditional/target-mips/translate.c:            cpu_fprintf(f, "BROKEN: %s=0x" TARGET_FMT_lx "\n", regnames[i], env->active_tc.gpr[i]);
./tools/qemu-xen-traditional/target-mips/translate.c:    if (!SIGN_EXT_P(env->CP0_EPC))
./tools/qemu-xen-traditional/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: EPC=0x" TARGET_FMT_lx "\n", env->CP0_EPC);
./tools/qemu-xen-traditional/target-mips/translate.c:    if (!SIGN_EXT_P(env->CP0_LLAddr))
./tools/qemu-xen-traditional/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: LLAddr=0x" TARGET_FMT_lx "\n", env->CP0_LLAddr);
./tools/qemu-xen-traditional/target-mips/translate.c:                env->active_tc.PC, env->active_tc.HI[0], env->active_tc.LO[0],
./tools/qemu-xen-traditional/target-mips/translate.c:                env->hflags, env->btarget, env->bcond);
./tools/qemu-xen-traditional/target-mips/translate.c:        cpu_fprintf(f, " %s " TARGET_FMT_lx, regnames[i], env->active_tc.gpr[i]);
./tools/qemu-xen-traditional/target-mips/translate.c:                env->CP0_Status, env->CP0_Cause, env->CP0_EPC);
./tools/qemu-xen-traditional/target-mips/translate.c:                env->CP0_Config0, env->CP0_Config1, env->CP0_LLAddr);
./tools/qemu-xen-traditional/target-mips/translate.c:    if (env->hflags & MIPS_HFLAG_FPU)
./tools/qemu-xen-traditional/target-mips/translate.c:    env->cpu_model = def;
./tools/qemu-xen-traditional/target-mips/translate.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen-traditional/target-mips/translate.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen-traditional/target-mips/translate.c:    env->hflags = MIPS_HFLAG_UM;
./tools/qemu-xen-traditional/target-mips/translate.c:    if (env->hflags & MIPS_HFLAG_BMASK) {
./tools/qemu-xen-traditional/target-mips/translate.c:        env->CP0_ErrorEPC = env->active_tc.PC - 4;
./tools/qemu-xen-traditional/target-mips/translate.c:        env->CP0_ErrorEPC = env->active_tc.PC;
./tools/qemu-xen-traditional/target-mips/translate.c:    env->active_tc.PC = (int32_t)0xBFC00000;
./tools/qemu-xen-traditional/target-mips/translate.c:    env->CP0_Wired = 0;
./tools/qemu-xen-traditional/target-mips/translate.c:    env->CP0_EBase = 0x80000000;
./tools/qemu-xen-traditional/target-mips/translate.c:    env->CP0_Status = (1 << CP0St_BEV) | (1 << CP0St_ERL);
./tools/qemu-xen-traditional/target-mips/translate.c:    env->CP0_IntCtl = 0xe0000000;
./tools/qemu-xen-traditional/target-mips/translate.c:            env->CP0_WatchLo[i] = 0;
./tools/qemu-xen-traditional/target-mips/translate.c:            env->CP0_WatchHi[i] = 0x80000000;
./tools/qemu-xen-traditional/target-mips/translate.c:        env->CP0_WatchLo[7] = 0;
./tools/qemu-xen-traditional/target-mips/translate.c:        env->CP0_WatchHi[7] = 0;
./tools/qemu-xen-traditional/target-mips/translate.c:    env->CP0_Debug = (1 << CP0DB_CNT) | (0x1 << CP0DB_VER);
./tools/qemu-xen-traditional/target-mips/translate.c:    env->hflags = MIPS_HFLAG_CP0;
./tools/qemu-xen-traditional/target-mips/translate.c:    env->exception_index = EXCP_NONE;
./tools/qemu-xen-traditional/target-mips/translate.c:    cpu_mips_register(env, env->cpu_model);
./tools/qemu-xen-traditional/target-mips/translate.c:    env->active_tc.PC = gen_opc_pc[pc_pos];
./tools/qemu-xen-traditional/target-mips/translate.c:    env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen-traditional/target-mips/translate.c:    env->hflags |= gen_opc_hflags[pc_pos];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->exception_index = exception;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->error_code = error_code;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (!(env->CP0_Status & (1 << CP0St_EXL)) &&
./tools/qemu-xen-traditional/target-mips/op_helper.c:        !(env->CP0_Status & (1 << CP0St_ERL)) &&
./tools/qemu-xen-traditional/target-mips/op_helper.c:        !(env->hflags & MIPS_HFLAG_DM) &&
./tools/qemu-xen-traditional/target-mips/op_helper.c:        (env->CP0_Status & (1 << CP0St_IE)) &&
./tools/qemu-xen-traditional/target-mips/op_helper.c:        (env->CP0_Status & env->CP0_Cause & CP0Ca_IP_mask)) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->CP0_Cause &= ~(0x1f << CP0Ca_EC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return ((uint64_t)(env->active_tc.HI[0]) << 32) | (uint32_t)env->active_tc.LO[0];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.LO[0] = (int32_t)HILO;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.HI[0] = (int32_t)(HILO >> 32);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.LO[0] = (int32_t)(HILO & 0xFFFFFFFF);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    t0 = env->active_tc.HI[0] = (int32_t)(HILO >> 32);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    t0 = env->active_tc.LO[0] = (int32_t)(HILO & 0xFFFFFFFF);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.HI[0] = (int32_t)(HILO >> 32);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    muls64(&(env->active_tc.LO[0]), &(env->active_tc.HI[0]), t0, t1);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    mulu64(&(env->active_tc.LO[0]), &(env->active_tc.HI[0]), t0, t1);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->mvp->CP0_MVPControl;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->mvp->CP0_MVPConf0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->mvp->CP0_MVPConf1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCStatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.CP0_TCStatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].CP0_TCStatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCBind;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.CP0_TCBind;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].CP0_TCBind;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.PC;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.PC;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].PC;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCHalt;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.CP0_TCHalt;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].CP0_TCHalt;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCContext;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.CP0_TCContext;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].CP0_TCContext;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCSchedule;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.CP0_TCSchedule;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].CP0_TCSchedule;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCScheFBack;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.CP0_TCScheFBack;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].CP0_TCScheFBack;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tcstatus = env->active_tc.CP0_TCStatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tcstatus = env->tcs[other_tc].CP0_TCStatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return (env->CP0_EntryHi & ~0xff) | (tcstatus & 0xff);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tcstatus = env->active_tc.CP0_TCStatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tcstatus = env->tcs[other_tc].CP0_TCStatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    t0 = env->CP0_Status & ~0xf1000018;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return (int32_t)env->CP0_LLAddr >> 4;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return (int32_t)env->CP0_WatchLo[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->CP0_WatchHi[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    target_ulong t0 = env->CP0_Debug;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->hflags & MIPS_HFLAG_DM)
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tcstatus = env->active_tc.CP0_Debug_tcstatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tcstatus = env->tcs[other_tc].CP0_Debug_tcstatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return (env->CP0_Debug & ~((1 << CP0DB_SSt) | (1 << CP0DB_Halt))) |
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.PC;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCHalt;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCContext;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCSchedule;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->active_tc.CP0_TCScheFBack;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->CP0_LLAddr >> 4;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->CP0_WatchLo[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    unsigned int tmp = env->tlb->nb_tlb;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Index = (env->CP0_Index & 0x80000000) | (t0 & (num - 1));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->mvp->CP0_MVPControl & (1 << CP0MVPCo_VPC))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    newval = (env->mvp->CP0_MVPControl & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->mvp->CP0_MVPControl = newval;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    newval = (env->CP0_VPEControl & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_VPEControl = newval;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP)) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        if (env->CP0_VPEConf0 & (1 << CP0VPEC0_VPA))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    newval = (env->CP0_VPEConf0 & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_VPEConf0 = newval;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->mvp->CP0_MVPControl & (1 << CP0MVPCo_VPC))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    newval = (env->CP0_VPEConf1 & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_VPEConf1 = newval;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_YQMask = 0x00000000;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_VPEOpt = t0 & 0x0000ffff;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_EntryLo0 = t0 & 0x3FFFFFFF;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    uint32_t mask = env->CP0_TCStatus_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    newval = (env->active_tc.CP0_TCStatus & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.CP0_TCStatus = newval;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCStatus = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCStatus = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->mvp->CP0_MVPControl & (1 << CP0MVPCo_VPC))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    newval = (env->active_tc.CP0_TCBind & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.CP0_TCBind = newval;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->mvp->CP0_MVPControl & (1 << CP0MVPCo_VPC))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        newval = (env->active_tc.CP0_TCBind & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCBind = newval;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        newval = (env->tcs[other_tc].CP0_TCBind & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCBind = newval;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.PC = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.CP0_TCStatus &= ~(1 << CP0TCSt_TDS);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_LLAddr = 0ULL;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.PC = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCStatus &= ~(1 << CP0TCSt_TDS);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->CP0_LLAddr = 0ULL;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].PC = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCStatus &= ~(1 << CP0TCSt_TDS);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->CP0_LLAddr = 0ULL;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.CP0_TCHalt = t0 & 0x1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCHalt = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCHalt = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.CP0_TCContext = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCContext = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCContext = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.CP0_TCSchedule = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCSchedule = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCSchedule = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.CP0_TCScheFBack = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCScheFBack = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCScheFBack = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_EntryLo1 = t0 & 0x3FFFFFFF;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Context = (env->CP0_Context & 0x007FFFFF) | (t0 & ~0x007FFFFF);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_PageMask = t0 & (0x1FFFFFFF & (TARGET_PAGE_MASK << 1));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_PageGrain = 0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Wired = t0 % env->tlb->nb_tlb;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_SRSConf0 |= t0 & env->CP0_SRSConf0_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_SRSConf1 |= t0 & env->CP0_SRSConf1_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_SRSConf2 |= t0 & env->CP0_SRSConf2_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_SRSConf3 |= t0 & env->CP0_SRSConf3_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_SRSConf4 |= t0 & env->CP0_SRSConf4_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_HWREna = t0 & 0x0000000F;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    val &= env->SEGMask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    old = env->CP0_EntryHi;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_EntryHi = val;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->CP0_Config3 & (1 << CP0C3_MT)) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        uint32_t tcst = env->active_tc.CP0_TCStatus & ~0xff;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCStatus = tcst | (val & 0xff);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_EntryHi = (env->CP0_EntryHi & 0xff) | (t0 & ~0xff);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tcstatus = (env->active_tc.CP0_TCStatus & ~0xff) | (t0 & 0xff);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCStatus = tcstatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tcstatus = (env->tcs[other_tc].CP0_TCStatus & ~0xff) | (t0 & 0xff);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCStatus = tcstatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    uint32_t mask = env->CP0_Status_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    old = env->CP0_Status;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Status = (env->CP0_Status & ~mask) | val;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int32_t tcstatus = env->tcs[other_tc].CP0_TCStatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Status = t0 & ~0xf1000018;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_TCStatus = tcstatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_TCStatus = tcstatus;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_IntCtl = (env->CP0_IntCtl & ~0x000002e0) | (t0 & 0x000002e0);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_SRSCtl = (env->CP0_SRSCtl & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    uint32_t old = env->CP0_Cause;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->insn_flags & ISA_MIPS32R2)
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Cause = (env->CP0_Cause & ~mask) | (t0 & mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if ((old ^ env->CP0_Cause) & (1 << CP0Ca_DC)) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        if (env->CP0_Cause & (1 << CP0Ca_DC))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_EBase = 0x80000000 | (t0 & 0x3FFFF000);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Config0 = (env->CP0_Config0 & 0x81FFFFF8) | (t0 & 0x00000007);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Config2 = (env->CP0_Config2 & 0x8FFF0FFF);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_WatchLo[sel] = (t0 & ~0x7);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_WatchHi[sel] = (t0 & 0x40FF0FF8);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_WatchHi[sel] &= ~(env->CP0_WatchHi[sel] & t0 & 0x7);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    target_ulong mask = (1ULL << (env->SEGBITS - 7)) - 1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_XContext = (env->CP0_XContext & mask) | (t0 & ~mask);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Framemask = t0; /* XXX */
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Debug = (env->CP0_Debug & 0x8C03FC1F) | (t0 & 0x13300120);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->hflags |= MIPS_HFLAG_DM;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->hflags &= ~MIPS_HFLAG_DM;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.CP0_Debug_tcstatus = val;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].CP0_Debug_tcstatus = val;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Debug = (env->CP0_Debug & ((1 << CP0DB_SSt) | (1 << CP0DB_Halt))) |
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Performance0 = t0 & 0x000007ff;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_TagLo = t0 & 0xFFFFFCF6;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_DataLo = t0; /* XXX */
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_TagHi = t0; /* XXX */
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_DataHi = t0; /* XXX */
./tools/qemu-xen-traditional/target-mips/op_helper.c:            old, old & env->CP0_Cause & CP0Ca_IP_mask,
./tools/qemu-xen-traditional/target-mips/op_helper.c:            val, val & env->CP0_Cause & CP0Ca_IP_mask,
./tools/qemu-xen-traditional/target-mips/op_helper.c:            env->CP0_Cause);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    switch (env->hflags & MIPS_HFLAG_KSU) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.gpr[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].gpr[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.LO[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].LO[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.HI[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].HI[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.ACX[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].ACX[sel];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->active_tc.DSPControl;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->tcs[other_tc].DSPControl;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.gpr[sel] = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].gpr[sel] = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.LO[sel] = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].LO[sel] = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.HI[sel] = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].HI[sel] = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.ACX[sel] = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].ACX[sel] = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (other_tc == env->current_tc)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.DSPControl = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->tcs[other_tc].DSPControl = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:            if (env->CP0_VPEControl & (1 << CP0VPECo_YSI) &&
./tools/qemu-xen-traditional/target-mips/op_helper.c:                env->active_tc.CP0_TCStatus & (1 << CP0TCSt_DT)) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:                env->CP0_VPEControl &= ~(0x7 << CP0VPECo_EXCPT);
./tools/qemu-xen-traditional/target-mips/op_helper.c:                env->CP0_VPEControl |= 4 << CP0VPECo_EXCPT;
./tools/qemu-xen-traditional/target-mips/op_helper.c:            env->CP0_VPEControl &= ~(0x7 << CP0VPECo_EXCPT);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->CP0_VPEControl &= ~(0x7 << CP0VPECo_EXCPT);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->CP0_VPEControl |= 2 << CP0VPECo_EXCPT;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return env->CP0_YQMask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->tlb->tlb_in_use = env->tlb->nb_tlb;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    /* Discard entries from env->tlb[first] onwards.  */
./tools/qemu-xen-traditional/target-mips/op_helper.c:    while (env->tlb->tlb_in_use > first) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        r4k_invalidate_tlb(env, --env->tlb->tlb_in_use, 0);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb = &env->tlb->mmu.r4k.tlb[idx];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->VPN = env->CP0_EntryHi & (TARGET_PAGE_MASK << 1);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->VPN &= env->SEGMask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->PageMask = env->CP0_PageMask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->G = env->CP0_EntryLo0 & env->CP0_EntryLo1 & 1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->V0 = (env->CP0_EntryLo0 & 2) != 0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->D0 = (env->CP0_EntryLo0 & 4) != 0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->C0 = (env->CP0_EntryLo0 >> 3) & 0x7;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->PFN[0] = (env->CP0_EntryLo0 >> 6) << 12;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->V1 = (env->CP0_EntryLo1 & 2) != 0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->D1 = (env->CP0_EntryLo1 & 4) != 0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->C1 = (env->CP0_EntryLo1 >> 3) & 0x7;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb->PFN[1] = (env->CP0_EntryLo1 >> 6) << 12;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    idx = (env->CP0_Index & ~0x80000000) % env->tlb->nb_tlb;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    r4k_mips_tlb_flush_extra (env, env->tlb->nb_tlb);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    for (i = 0; i < env->tlb->nb_tlb; i++) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tlb = &env->tlb->mmu.r4k.tlb[i];
./tools/qemu-xen-traditional/target-mips/op_helper.c:        tag = env->CP0_EntryHi & ~mask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:            env->CP0_Index = i;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (i == env->tlb->nb_tlb) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        for (i = env->tlb->nb_tlb; i < env->tlb->tlb_in_use; i++) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:            tlb = &env->tlb->mmu.r4k.tlb[i];
./tools/qemu-xen-traditional/target-mips/op_helper.c:            tag = env->CP0_EntryHi & ~mask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->CP0_Index |= 0x80000000;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    idx = (env->CP0_Index & ~0x80000000) % env->tlb->nb_tlb;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    tlb = &env->tlb->mmu.r4k.tlb[idx];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    r4k_mips_tlb_flush_extra(env, env->tlb->nb_tlb);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_EntryHi = tlb->VPN | tlb->ASID;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_PageMask = tlb->PageMask;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_EntryLo0 = tlb->G | (tlb->V0 << 1) | (tlb->D0 << 2) |
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_EntryLo1 = tlb->G | (tlb->V1 << 1) | (tlb->D1 << 2) |
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->tlb->do_tlbwi();
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->tlb->do_tlbwr();
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->tlb->do_tlbp();
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->tlb->do_tlbr();
./tools/qemu-xen-traditional/target-mips/op_helper.c:    target_ulong t0 = env->CP0_Status;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Status = t0 & ~(1 << CP0St_IE);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    target_ulong t0 = env->CP0_Status;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_Status = t0 | (1 << CP0St_IE);
./tools/qemu-xen-traditional/target-mips/op_helper.c:                env->active_tc.PC, env->CP0_EPC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        if (env->CP0_Status & (1 << CP0St_ERL))
./tools/qemu-xen-traditional/target-mips/op_helper.c:            qemu_log(" ErrorEPC " TARGET_FMT_lx, env->CP0_ErrorEPC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        if (env->hflags & MIPS_HFLAG_DM)
./tools/qemu-xen-traditional/target-mips/op_helper.c:            qemu_log(" DEPC " TARGET_FMT_lx, env->CP0_DEPC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:                env->active_tc.PC, env->CP0_EPC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        if (env->CP0_Status & (1 << CP0St_ERL))
./tools/qemu-xen-traditional/target-mips/op_helper.c:            qemu_log(" ErrorEPC " TARGET_FMT_lx, env->CP0_ErrorEPC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        if (env->hflags & MIPS_HFLAG_DM)
./tools/qemu-xen-traditional/target-mips/op_helper.c:            qemu_log(" DEPC " TARGET_FMT_lx, env->CP0_DEPC);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        switch (env->hflags & MIPS_HFLAG_KSU) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (env->CP0_Status & (1 << CP0St_ERL)) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.PC = env->CP0_ErrorEPC;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->CP0_Status &= ~(1 << CP0St_ERL);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.PC = env->CP0_EPC;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->CP0_Status &= ~(1 << CP0St_EXL);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_LLAddr = 1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->active_tc.PC = env->CP0_DEPC;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->hflags &= MIPS_HFLAG_DM;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_LLAddr = 1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if ((env->hflags & MIPS_HFLAG_CP0) ||
./tools/qemu-xen-traditional/target-mips/op_helper.c:        (env->CP0_HWREna & (1 << 0)))
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->CP0_EBase & 0x3ff;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if ((env->hflags & MIPS_HFLAG_CP0) ||
./tools/qemu-xen-traditional/target-mips/op_helper.c:        (env->CP0_HWREna & (1 << 1)))
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->SYNCI_Step;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if ((env->hflags & MIPS_HFLAG_CP0) ||
./tools/qemu-xen-traditional/target-mips/op_helper.c:        (env->CP0_HWREna & (1 << 2)))
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->CP0_Count;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if ((env->hflags & MIPS_HFLAG_CP0) ||
./tools/qemu-xen-traditional/target-mips/op_helper.c:        (env->CP0_HWREna & (1 << 3)))
./tools/qemu-xen-traditional/target-mips/op_helper.c:        return env->CCRes;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        if (env->active_tc.gpr[4] == 0)
./tools/qemu-xen-traditional/target-mips/op_helper.c:            env->active_tc.gpr[2] = -1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_tc.gpr[2] = -1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        printf("%c", (char)(env->active_tc.gpr[4] & 0xFF));
./tools/qemu-xen-traditional/target-mips/op_helper.c:            unsigned char *fmt = (void *)(unsigned long)env->active_tc.gpr[4];
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->halted = 1;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    env->CP0_BadVAddr = addr;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        do_raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(ieee_rm[env->active_fpu.fcr31 & 3], &env->active_fpu.fp_status)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        t0 = (int32_t)env->active_fpu.fcr0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        t0 = ((env->active_fpu.fcr31 >> 24) & 0xfe) | ((env->active_fpu.fcr31 >> 23) & 0x1);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        t0 = env->active_fpu.fcr31 & 0x0003f07c;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        t0 = (env->active_fpu.fcr31 & 0x00000f83) | ((env->active_fpu.fcr31 >> 22) & 0x4);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        t0 = (int32_t)env->active_fpu.fcr31;
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_fpu.fcr31 = (env->active_fpu.fcr31 & 0x017fffff) | ((t0 & 0xfe) << 24) |
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_fpu.fcr31 = (env->active_fpu.fcr31 & 0xfffc0f83) | (t0 & 0x0003f07c);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_fpu.fcr31 = (env->active_fpu.fcr31 & 0xfefff07c) | (t0 & 0x00000f83) |
./tools/qemu-xen-traditional/target-mips/op_helper.c:        env->active_fpu.fcr31 = t0;
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if ((GET_FP_ENABLE(env->active_fpu.fcr31) | 0x20) & GET_FP_CAUSE(env->active_fpu.fcr31))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    int tmp = ieee_ex_to_mips(get_float_exception_flags(&env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    SET_FP_CAUSE(env->active_fpu.fcr31, tmp);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_ENABLE(env->active_fpu.fcr31) & tmp)
./tools/qemu-xen-traditional/target-mips/op_helper.c:        UPDATE_FP_FLAGS(env->active_fpu.fcr31, tmp);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return float64_sqrt(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return float32_sqrt(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float32_to_float64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = int32_to_float64(wt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = int64_to_float64(dt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float64_to_int64(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float32_to_int64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = int32_to_float32(dt0 & 0XFFFFFFFF, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = int32_to_float32(dt0 >> 32, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float32_to_int32(fdt0 & 0XFFFFFFFF, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wth2 = float32_to_int32(fdt0 >> 32, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID)) {
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float64_to_float32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = int32_to_float32(wt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = int64_to_float32(dt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float32_to_int32(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float64_to_int32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_nearest_even, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float64_to_int64(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_nearest_even, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float32_to_int64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_nearest_even, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float64_to_int32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_nearest_even, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float32_to_int32(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float64_to_int64_round_to_zero(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float32_to_int64_round_to_zero(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float64_to_int32_round_to_zero(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float32_to_int32_round_to_zero(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_up, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float64_to_int64(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_up, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float32_to_int64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_up, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float64_to_int32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_up, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float32_to_int32(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_down, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float64_to_int64(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_down, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float32_to_int64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_down, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float64_to_int32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_rounding_mode(float_round_down, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float32_to_int32(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_div(FLOAT_ONE64, fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_sqrt(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_div(FLOAT_ONE64, fdt2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_sqrt(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_div(FLOAT_ONE64, fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fdt0 & 0XFFFFFFFF, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_div(FLOAT_ONE32, fdt0 >> 32, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_sqrt(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_div(FLOAT_ONE64, fdt2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_sqrt(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_sqrt(fdt0 & 0XFFFFFFFF, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_sqrt(fdt0 >> 32, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_div(FLOAT_ONE32, fsth2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);            \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    dt2 = float64_ ## name (fdt0, fdt1, &env->active_fpu.fp_status);     \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & FP_INVALID)                \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);            \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float32_ ## name (fst0, fst1, &env->active_fpu.fp_status);     \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & FP_INVALID)                \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);            \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wt2 = float32_ ## name (fst0, fst1, &env->active_fpu.fp_status);     \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    wth2 = float32_ ## name (fsth0, fsth1, &env->active_fpu.fp_status);  \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & FP_INVALID) {              \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt0 = float64_ ## name1 (fdt0, fdt1, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return float64_ ## name2 (fdt0, fdt2, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst0 = float32_ ## name1 (fst0, fst1, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    return float32_ ## name2 (fst0, fst2, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst0 = float32_ ## name1 (fst0, fst1, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth0 = float32_ ## name1 (fsth0, fsth1, &env->active_fpu.fp_status);       \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_ ## name2 (fst0, fst2, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_ ## name2 (fsth0, fsth2, &env->active_fpu.fp_status);       \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt0 = float64_ ## name1 (fdt0, fdt1, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_ ## name2 (fdt0, fdt2, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst0 = float32_ ## name1 (fst0, fst1, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_ ## name2 (fst0, fst2, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst0 = float32_ ## name1 (fst0, fst1, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth0 = float32_ ## name1 (fsth0, fsth1, &env->active_fpu.fp_status);       \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_ ## name2 (fst0, fst2, &env->active_fpu.fp_status);          \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_ ## name2 (fsth0, fsth2, &env->active_fpu.fp_status);       \
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_mul(fdt0, fdt2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_chs(float64_sub(fdt2, FLOAT_ONE64, &env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_mul(fst0, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_chs(float32_sub(fst2, FLOAT_ONE32, &env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_mul(fst0, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_mul(fsth0, fsth2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_chs(float32_sub(fst2, FLOAT_ONE32, &env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_chs(float32_sub(fsth2, FLOAT_ONE32, &env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_mul(fdt0, fdt2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_sub(fdt2, FLOAT_ONE64, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fdt2 = float64_chs(float64_div(fdt2, FLOAT_TWO64, &env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_mul(fst0, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_sub(fst2, FLOAT_ONE32, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_chs(float32_div(fst2, FLOAT_TWO32, &env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_mul(fst0, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_mul(fsth0, fsth2, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_sub(fst2, FLOAT_ONE32, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_sub(fsth2, FLOAT_ONE32, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_chs(float32_div(fst2, FLOAT_TWO32, &env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_chs(float32_div(fsth2, FLOAT_TWO32, &env->active_fpu.fp_status));
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_add (fst0, fsth0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_add (fst1, fsth1, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fst2 = float32_mul (fst0, fsth0, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:    fsth2 = float32_mul (fst1, fsth1, &env->active_fpu.fp_status);
./tools/qemu-xen-traditional/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                      \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                    \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                      \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                    \
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(f,   (float64_is_unordered(0, fdt1, fdt0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(un,  float64_is_unordered(0, fdt1, fdt0, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(eq,  !float64_is_unordered(0, fdt1, fdt0, &env->active_fpu.fp_status) && float64_eq(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(ueq, float64_is_unordered(0, fdt1, fdt0, &env->active_fpu.fp_status)  || float64_eq(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(olt, !float64_is_unordered(0, fdt1, fdt0, &env->active_fpu.fp_status) && float64_lt(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(ult, float64_is_unordered(0, fdt1, fdt0, &env->active_fpu.fp_status)  || float64_lt(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(ole, !float64_is_unordered(0, fdt1, fdt0, &env->active_fpu.fp_status) && float64_le(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(ule, float64_is_unordered(0, fdt1, fdt0, &env->active_fpu.fp_status)  || float64_le(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(sf,  (float64_is_unordered(1, fdt1, fdt0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(ngle,float64_is_unordered(1, fdt1, fdt0, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(seq, !float64_is_unordered(1, fdt1, fdt0, &env->active_fpu.fp_status) && float64_eq(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(ngl, float64_is_unordered(1, fdt1, fdt0, &env->active_fpu.fp_status)  || float64_eq(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(lt,  !float64_is_unordered(1, fdt1, fdt0, &env->active_fpu.fp_status) && float64_lt(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(nge, float64_is_unordered(1, fdt1, fdt0, &env->active_fpu.fp_status)  || float64_lt(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(le,  !float64_is_unordered(1, fdt1, fdt0, &env->active_fpu.fp_status) && float64_le(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_D(ngt, float64_is_unordered(1, fdt1, fdt0, &env->active_fpu.fp_status)  || float64_le(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                      \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                    \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                      \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                    \
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(f,   (float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(un,  float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(eq,  !float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status) && float32_eq(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(ueq, float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)  || float32_eq(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(olt, !float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status) && float32_lt(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(ult, float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)  || float32_lt(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(ole, !float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status) && float32_le(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(ule, float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)  || float32_le(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(sf,  (float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(ngle,float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(seq, !float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status) && float32_eq(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(ngl, float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)  || float32_eq(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(lt,  !float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status) && float32_lt(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(nge, float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)  || float32_lt(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(le,  !float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status) && float32_le(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_S(ngt, float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)  || float32_le(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                       \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                     \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        SET_FP_COND(cc + 1, env->active_fpu);                   \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        CLEAR_FP_COND(cc + 1, env->active_fpu);                 \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                       \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                     \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        SET_FP_COND(cc + 1, env->active_fpu);                   \
./tools/qemu-xen-traditional/target-mips/op_helper.c:        CLEAR_FP_COND(cc + 1, env->active_fpu);                 \
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(f,   (float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status), 0),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 (float32_is_unordered(0, fsth1, fsth0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(un,  float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 float32_is_unordered(0, fsth1, fsth0, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(eq,  !float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)   && float32_eq(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 !float32_is_unordered(0, fsth1, fsth0, &env->active_fpu.fp_status) && float32_eq(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(ueq, float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)    || float32_eq(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 float32_is_unordered(0, fsth1, fsth0, &env->active_fpu.fp_status)  || float32_eq(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(olt, !float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)   && float32_lt(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 !float32_is_unordered(0, fsth1, fsth0, &env->active_fpu.fp_status) && float32_lt(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(ult, float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)    || float32_lt(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 float32_is_unordered(0, fsth1, fsth0, &env->active_fpu.fp_status)  || float32_lt(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(ole, !float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)   && float32_le(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 !float32_is_unordered(0, fsth1, fsth0, &env->active_fpu.fp_status) && float32_le(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(ule, float32_is_unordered(0, fst1, fst0, &env->active_fpu.fp_status)    || float32_le(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 float32_is_unordered(0, fsth1, fsth0, &env->active_fpu.fp_status)  || float32_le(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(sf,  (float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status), 0),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 (float32_is_unordered(1, fsth1, fsth0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(ngle,float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 float32_is_unordered(1, fsth1, fsth0, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(seq, !float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)   && float32_eq(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 !float32_is_unordered(1, fsth1, fsth0, &env->active_fpu.fp_status) && float32_eq(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(ngl, float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)    || float32_eq(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 float32_is_unordered(1, fsth1, fsth0, &env->active_fpu.fp_status)  || float32_eq(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(lt,  !float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)   && float32_lt(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 !float32_is_unordered(1, fsth1, fsth0, &env->active_fpu.fp_status) && float32_lt(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(nge, float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)    || float32_lt(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 float32_is_unordered(1, fsth1, fsth0, &env->active_fpu.fp_status)  || float32_lt(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(le,  !float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)   && float32_le(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 !float32_is_unordered(1, fsth1, fsth0, &env->active_fpu.fp_status) && float32_le(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/op_helper.c:FOP_COND_PS(ngt, float32_is_unordered(1, fst1, fst0, &env->active_fpu.fp_status)    || float32_le(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen-traditional/target-mips/op_helper.c:                 float32_is_unordered(1, fsth1, fsth0, &env->active_fpu.fp_status)  || float32_le(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->nb_tlb = 1;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->map_address = &no_mmu_map_address;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->nb_tlb = 1;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->map_address = &fixed_mmu_map_address;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->nb_tlb = 1 + ((def->CP0_Config1 >> CP0C1_MMU) & 63);
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->map_address = &r4k_map_address;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->do_tlbwi = r4k_do_tlbwi;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->do_tlbwr = r4k_do_tlbwr;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->do_tlbp = r4k_do_tlbp;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->do_tlbr = r4k_do_tlbr;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb = qemu_mallocz(sizeof(CPUMIPSTLBContext));
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Random = env->tlb->nb_tlb - 1;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->tlb->tlb_in_use = env->tlb->nb_tlb;
./tools/qemu-xen-traditional/target-mips/translate_init.c:        env->fpus[i].fcr0 = def->CP1_fcr0;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    memcpy(&env->active_fpu, &env->fpus[0], sizeof(env->active_fpu));
./tools/qemu-xen-traditional/target-mips/translate_init.c:    if (env->CP0_Config1 & (1 << CP0C1_FP))
./tools/qemu-xen-traditional/target-mips/translate_init.c:        env->hflags |= MIPS_HFLAG_FPU;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    if (env->active_fpu.fcr0 & (1 << FCR0_F64))
./tools/qemu-xen-traditional/target-mips/translate_init.c:        env->hflags |= MIPS_HFLAG_F64;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->mvp = qemu_mallocz(sizeof(CPUMIPSMVPContext));
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->mvp->CP0_MVPConf0 = (1 << CP0MVPC0_M) | (1 << CP0MVPC0_TLBS) |
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->mvp->CP0_MVPConf0 |= (env->tlb->nb_tlb << CP0MVPC0_PTLBE);
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->mvp->CP0_MVPConf1 = (1 << CP0MVPC1_CIM) | (1 << CP0MVPC1_CIF) |
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_PRid = def->CP0_PRid;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Config0 = def->CP0_Config0;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Config0 |= (1 << CP0C0_BE);
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Config1 = def->CP0_Config1;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Config2 = def->CP0_Config2;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Config3 = def->CP0_Config3;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Config6 = def->CP0_Config6;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Config7 = def->CP0_Config7;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->SYNCI_Step = def->SYNCI_Step;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CCRes = def->CCRes;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_Status_rw_bitmask = def->CP0_Status_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_TCStatus_rw_bitmask = def->CP0_TCStatus_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSCtl = def->CP0_SRSCtl;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->current_tc = 0;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->SEGBITS = def->SEGBITS;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->SEGMask = (target_ulong)((1ULL << def->SEGBITS) - 1);
./tools/qemu-xen-traditional/target-mips/translate_init.c:        env->hflags |= MIPS_HFLAG_64;
./tools/qemu-xen-traditional/target-mips/translate_init.c:        env->SEGMask |= 3ULL << 62;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->PABITS = def->PABITS;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->PAMask = (target_ulong)((1ULL << def->PABITS) - 1);
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf0_rw_bitmask = def->CP0_SRSConf0_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf0 = def->CP0_SRSConf0;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf1_rw_bitmask = def->CP0_SRSConf1_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf1 = def->CP0_SRSConf1;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf2_rw_bitmask = def->CP0_SRSConf2_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf2 = def->CP0_SRSConf2;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf3_rw_bitmask = def->CP0_SRSConf3_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf3 = def->CP0_SRSConf3;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf4_rw_bitmask = def->CP0_SRSConf4_rw_bitmask;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->CP0_SRSConf4 = def->CP0_SRSConf4;
./tools/qemu-xen-traditional/target-mips/translate_init.c:    env->insn_flags = def->insn_flags;
./tools/qemu-xen-traditional/target-mips/helper.c:        if (!(env->CP0_Status & (1 << CP0St_ERL)))
./tools/qemu-xen-traditional/target-mips/helper.c:    uint8_t ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen-traditional/target-mips/helper.c:    for (i = 0; i < env->tlb->tlb_in_use; i++) {
./tools/qemu-xen-traditional/target-mips/helper.c:        r4k_tlb_t *tlb = &env->tlb->mmu.r4k.tlb[i];
./tools/qemu-xen-traditional/target-mips/helper.c:        tag &= env->SEGMask;
./tools/qemu-xen-traditional/target-mips/helper.c:    int user_mode = (env->hflags & MIPS_HFLAG_MODE) == MIPS_HFLAG_UM;
./tools/qemu-xen-traditional/target-mips/helper.c:    int supervisor_mode = (env->hflags & MIPS_HFLAG_MODE) == MIPS_HFLAG_SM;
./tools/qemu-xen-traditional/target-mips/helper.c:    int UX = (env->CP0_Status & (1 << CP0St_UX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:    int SX = (env->CP0_Status & (1 << CP0St_SX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:    int KX = (env->CP0_Status & (1 << CP0St_KX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:    qemu_log("user mode %d h %08x\n", user_mode, env->hflags);
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->CP0_Status & (1 << CP0St_ERL)) {
./tools/qemu-xen-traditional/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen-traditional/target-mips/helper.c:        if (UX && address <= (0x3FFFFFFFFFFFFFFFULL & env->SEGMask)) {
./tools/qemu-xen-traditional/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen-traditional/target-mips/helper.c:            SX && address <= (0x7FFFFFFFFFFFFFFFULL & env->SEGMask)) {
./tools/qemu-xen-traditional/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen-traditional/target-mips/helper.c:            (address & 0x07FFFFFFFFFFFFFFULL) <= env->PAMask) {
./tools/qemu-xen-traditional/target-mips/helper.c:            *physical = address & env->PAMask;
./tools/qemu-xen-traditional/target-mips/helper.c:            address <= (0xFFFFFFFF7FFFFFFFULL & env->SEGMask)) {
./tools/qemu-xen-traditional/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen-traditional/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen-traditional/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen-traditional/target-mips/helper.c:              __func__, env->active_tc.PC, address, rw, mmu_idx, is_softmmu);
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_BadVAddr = address;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Context = (env->CP0_Context & ~0x007fffff) |
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_EntryHi =
./tools/qemu-xen-traditional/target-mips/helper.c:            (env->CP0_EntryHi & 0xFF) | (address & (TARGET_PAGE_MASK << 1));
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_EntryHi &= env->SEGMask;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_XContext = (env->CP0_XContext & ((~0ULL) << (env->SEGBITS - 7))) |
./tools/qemu-xen-traditional/target-mips/helper.c:                            ((address & 0xC00000000000ULL) >> (55 - env->SEGBITS)) |
./tools/qemu-xen-traditional/target-mips/helper.c:                            ((address & ((1ULL << env->SEGBITS) - 1) & 0xFFFFFFFFFFFFE000ULL) >> 9);
./tools/qemu-xen-traditional/target-mips/helper.c:        env->exception_index = exception;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->error_code = error_code;
./tools/qemu-xen-traditional/target-mips/helper.c:    if (qemu_log_enabled() && env->exception_index != EXCP_EXT_INTERRUPT) {
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->exception_index < 0 || env->exception_index > EXCP_LAST)
./tools/qemu-xen-traditional/target-mips/helper.c:            name = excp_names[env->exception_index];
./tools/qemu-xen-traditional/target-mips/helper.c:                 __func__, env->active_tc.PC, env->CP0_EPC, name);
./tools/qemu-xen-traditional/target-mips/helper.c:    if (env->exception_index == EXCP_EXT_INTERRUPT &&
./tools/qemu-xen-traditional/target-mips/helper.c:        (env->hflags & MIPS_HFLAG_DM))
./tools/qemu-xen-traditional/target-mips/helper.c:        env->exception_index = EXCP_DINT;
./tools/qemu-xen-traditional/target-mips/helper.c:    switch (env->exception_index) {
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DSS;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_DEPC = env->active_tc.PC;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DINT;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DIB;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DBp;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DDBS;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DDBL;
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->hflags & MIPS_HFLAG_BMASK) {
./tools/qemu-xen-traditional/target-mips/helper.c:            env->CP0_DEPC = env->active_tc.PC - 4;
./tools/qemu-xen-traditional/target-mips/helper.c:            env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen-traditional/target-mips/helper.c:            env->CP0_DEPC = env->active_tc.PC;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->hflags |= MIPS_HFLAG_DM | MIPS_HFLAG_64 | MIPS_HFLAG_CP0;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->hflags &= ~(MIPS_HFLAG_KSU);
./tools/qemu-xen-traditional/target-mips/helper.c:        if (!(env->CP0_Status & (1 << CP0St_EXL)))
./tools/qemu-xen-traditional/target-mips/helper.c:            env->CP0_Cause &= ~(1 << CP0Ca_BD);
./tools/qemu-xen-traditional/target-mips/helper.c:        env->active_tc.PC = (int32_t)0xBFC00480;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Status |= (1 << CP0St_SR);
./tools/qemu-xen-traditional/target-mips/helper.c:        memset(env->CP0_WatchLo, 0, sizeof(*env->CP0_WatchLo));
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Status |= (1 << CP0St_NMI);
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->hflags & MIPS_HFLAG_BMASK) {
./tools/qemu-xen-traditional/target-mips/helper.c:            env->CP0_ErrorEPC = env->active_tc.PC - 4;
./tools/qemu-xen-traditional/target-mips/helper.c:            env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen-traditional/target-mips/helper.c:            env->CP0_ErrorEPC = env->active_tc.PC;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Status |= (1 << CP0St_ERL) | (1 << CP0St_BEV);
./tools/qemu-xen-traditional/target-mips/helper.c:        env->hflags |= MIPS_HFLAG_64 | MIPS_HFLAG_CP0;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->hflags &= ~(MIPS_HFLAG_KSU);
./tools/qemu-xen-traditional/target-mips/helper.c:        if (!(env->CP0_Status & (1 << CP0St_EXL)))
./tools/qemu-xen-traditional/target-mips/helper.c:            env->CP0_Cause &= ~(1 << CP0Ca_BD);
./tools/qemu-xen-traditional/target-mips/helper.c:        env->active_tc.PC = (int32_t)0xBFC00000;
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->CP0_Cause & (1 << CP0Ca_IV))
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->error_code == 1 && !(env->CP0_Status & (1 << CP0St_EXL))) {
./tools/qemu-xen-traditional/target-mips/helper.c:            int R = env->CP0_BadVAddr >> 62;
./tools/qemu-xen-traditional/target-mips/helper.c:            int UX = (env->CP0_Status & (1 << CP0St_UX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:            int SX = (env->CP0_Status & (1 << CP0St_SX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:            int KX = (env->CP0_Status & (1 << CP0St_KX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->error_code == 1 && !(env->CP0_Status & (1 << CP0St_EXL))) {
./tools/qemu-xen-traditional/target-mips/helper.c:            int R = env->CP0_BadVAddr >> 62;
./tools/qemu-xen-traditional/target-mips/helper.c:            int UX = (env->CP0_Status & (1 << CP0St_UX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:            int SX = (env->CP0_Status & (1 << CP0St_SX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:            int KX = (env->CP0_Status & (1 << CP0St_KX)) != 0;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Cause = (env->CP0_Cause & ~(0x3 << CP0Ca_CE)) |
./tools/qemu-xen-traditional/target-mips/helper.c:                         (env->error_code << CP0Ca_CE);
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->CP0_Status & (1 << CP0St_BEV)) {
./tools/qemu-xen-traditional/target-mips/helper.c:        if (!(env->CP0_Status & (1 << CP0St_EXL))) {
./tools/qemu-xen-traditional/target-mips/helper.c:            if (env->hflags & MIPS_HFLAG_BMASK) {
./tools/qemu-xen-traditional/target-mips/helper.c:                env->CP0_EPC = env->active_tc.PC - 4;
./tools/qemu-xen-traditional/target-mips/helper.c:                env->CP0_Cause |= (1 << CP0Ca_BD);
./tools/qemu-xen-traditional/target-mips/helper.c:                env->CP0_EPC = env->active_tc.PC;
./tools/qemu-xen-traditional/target-mips/helper.c:                env->CP0_Cause &= ~(1 << CP0Ca_BD);
./tools/qemu-xen-traditional/target-mips/helper.c:            env->CP0_Status |= (1 << CP0St_EXL);
./tools/qemu-xen-traditional/target-mips/helper.c:            env->hflags |= MIPS_HFLAG_64 | MIPS_HFLAG_CP0;
./tools/qemu-xen-traditional/target-mips/helper.c:            env->hflags &= ~(MIPS_HFLAG_KSU);
./tools/qemu-xen-traditional/target-mips/helper.c:        env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen-traditional/target-mips/helper.c:        if (env->CP0_Status & (1 << CP0St_BEV)) {
./tools/qemu-xen-traditional/target-mips/helper.c:            env->active_tc.PC = (int32_t)0xBFC00200;
./tools/qemu-xen-traditional/target-mips/helper.c:            env->active_tc.PC = (int32_t)(env->CP0_EBase & ~0x3ff);
./tools/qemu-xen-traditional/target-mips/helper.c:        env->active_tc.PC += offset;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->CP0_Cause = (env->CP0_Cause & ~(0x1f << CP0Ca_EC)) | (cause << CP0Ca_EC);
./tools/qemu-xen-traditional/target-mips/helper.c:        qemu_log("Invalid MIPS exception %d. Exiting\n", env->exception_index);
./tools/qemu-xen-traditional/target-mips/helper.c:        printf("Invalid MIPS exception %d. Exiting\n", env->exception_index);
./tools/qemu-xen-traditional/target-mips/helper.c:    if (qemu_log_enabled() && env->exception_index != EXCP_EXT_INTERRUPT) {
./tools/qemu-xen-traditional/target-mips/helper.c:                __func__, env->active_tc.PC, env->CP0_EPC, cause,
./tools/qemu-xen-traditional/target-mips/helper.c:                env->CP0_Status, env->CP0_Cause, env->CP0_BadVAddr,
./tools/qemu-xen-traditional/target-mips/helper.c:                env->CP0_DEPC);
./tools/qemu-xen-traditional/target-mips/helper.c:    env->exception_index = EXCP_NONE;
./tools/qemu-xen-traditional/target-mips/helper.c:    uint8_t ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen-traditional/target-mips/helper.c:    tlb = &env->tlb->mmu.r4k.tlb[idx];
./tools/qemu-xen-traditional/target-mips/helper.c:    if (use_extra && env->tlb->tlb_in_use < MIPS_TLB_MAX) {
./tools/qemu-xen-traditional/target-mips/helper.c:        env->tlb->mmu.r4k.tlb[env->tlb->tlb_in_use] = *tlb;
./tools/qemu-xen-traditional/target-mips/helper.c:        env->tlb->tlb_in_use++;
./tools/qemu-xen-traditional/target-mips/helper.c:        if (addr >= (0xFFFFFFFF80000000ULL & env->SEGMask)) {
./tools/qemu-xen-traditional/target-mips/helper.c:        if (addr >= (0xFFFFFFFF80000000ULL & env->SEGMask)) {
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_put_betls(f, &env->gpr[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_put_betls(f, &env->gprh[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->lr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->ctr);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_put_be32s(f, &env->crf[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->xer);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->reserve);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->msr);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_put_betls(f, &env->tgpr[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:        u.d = env->fpr[i];
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_be32s(f, &env->fpscr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->access_type);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->asr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->slb_nr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->sdr1);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_put_betls(f, &env->sr[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_put_betls(f, &env->DBAT[i][j]);
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_put_betls(f, &env->IBAT[i][j]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->nb_tlb);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->tlb_per_way);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->nb_ways);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->last_way);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->id_tlbs);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->nb_pids);
./tools/qemu-xen-traditional/target-ppc/machine.c:    if (env->tlb) {
./tools/qemu-xen-traditional/target-ppc/machine.c:        for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_put_betls(f, &env->tlb[i].tlb6.pte0);
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_put_betls(f, &env->tlb[i].tlb6.pte1);
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_put_betls(f, &env->tlb[i].tlb6.EPN);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_put_betls(f, &env->pb[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_put_betls(f, &env->spr[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_be32s(f, &env->vscr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_be64s(f, &env->spe_acc);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_be32s(f, &env->spe_fscr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->msr_mask);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_be32s(f, &env->flags);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->error_code);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_be32s(f, &env->pending_interrupts);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_be32s(f, &env->irq_input_state);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_put_betls(f, &env->excp_vectors[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->excp_prefix);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->ivor_mask);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->ivpr_mask);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->hreset_vector);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->nip);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->hflags);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_betls(f, &env->hflags_nmsr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->mmu_idx);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->power_mode);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_get_betls(f, &env->gpr[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_get_betls(f, &env->gprh[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->lr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->ctr);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_get_be32s(f, &env->crf[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->xer);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->reserve);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->msr);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_get_betls(f, &env->tgpr[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:        env->fpr[i] = u.d;
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_be32s(f, &env->fpscr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->access_type);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->asr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->slb_nr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->sdr1);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_get_betls(f, &env->sr[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_get_betls(f, &env->DBAT[i][j]);
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_get_betls(f, &env->IBAT[i][j]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->nb_tlb);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->tlb_per_way);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->nb_ways);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->last_way);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->id_tlbs);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->nb_pids);
./tools/qemu-xen-traditional/target-ppc/machine.c:    if (env->tlb) {
./tools/qemu-xen-traditional/target-ppc/machine.c:        for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_get_betls(f, &env->tlb[i].tlb6.pte0);
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_get_betls(f, &env->tlb[i].tlb6.pte1);
./tools/qemu-xen-traditional/target-ppc/machine.c:            qemu_get_betls(f, &env->tlb[i].tlb6.EPN);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_get_betls(f, &env->pb[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_get_betls(f, &env->spr[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_be32s(f, &env->vscr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_be64s(f, &env->spe_acc);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_be32s(f, &env->spe_fscr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->msr_mask);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_be32s(f, &env->flags);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->error_code);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_be32s(f, &env->pending_interrupts);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_be32s(f, &env->irq_input_state);
./tools/qemu-xen-traditional/target-ppc/machine.c:        qemu_get_betls(f, &env->excp_vectors[i]);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->excp_prefix);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->ivor_mask);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->ivpr_mask);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->hreset_vector);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->nip);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->hflags);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_betls(f, &env->hflags_nmsr);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->mmu_idx);
./tools/qemu-xen-traditional/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->power_mode);
./tools/qemu-xen-traditional/target-ppc/translate.c:                env->nip, env->lr, env->ctr, env->xer);
./tools/qemu-xen-traditional/target-ppc/translate.c:                env->msr, env->spr[SPR_HID0], env->hflags, env->mmu_idx);
./tools/qemu-xen-traditional/target-ppc/translate.c:        cpu_fprintf(f, "%01x", env->crf[i]);
./tools/qemu-xen-traditional/target-ppc/translate.c:        if (env->crf[i] & 0x08)
./tools/qemu-xen-traditional/target-ppc/translate.c:        else if (env->crf[i] & 0x04)
./tools/qemu-xen-traditional/target-ppc/translate.c:        else if (env->crf[i] & 0x02)
./tools/qemu-xen-traditional/target-ppc/translate.c:        cpu_fprintf(f, " %c%c", a, env->crf[i] & 0x01 ? 'O' : ' ');
./tools/qemu-xen-traditional/target-ppc/translate.c:    cpu_fprintf(f, " ]             RES " ADDRX "\n", env->reserve);
./tools/qemu-xen-traditional/target-ppc/translate.c:        cpu_fprintf(f, " %016" PRIx64, *((uint64_t *)&env->fpr[i]));
./tools/qemu-xen-traditional/target-ppc/translate.c:    cpu_fprintf(f, "FPSCR %08x\n", env->fpscr);
./tools/qemu-xen-traditional/target-ppc/translate.c:                env->spr[SPR_SRR0], env->spr[SPR_SRR1], env->sdr1);
./tools/qemu-xen-traditional/target-ppc/translate.c:    t1 = env->opcodes;
./tools/qemu-xen-traditional/target-ppc/translate.c:    ctx.spr_cb = env->spr_cb;
./tools/qemu-xen-traditional/target-ppc/translate.c:    ctx.mem_idx = env->mmu_idx;
./tools/qemu-xen-traditional/target-ppc/translate.c:    ctx.le_mode = env->hflags & (1 << MSR_LE) ? 1 : 0;
./tools/qemu-xen-traditional/target-ppc/translate.c:    if ((env->flags & POWERPC_FLAG_SPE) && msr_spe)
./tools/qemu-xen-traditional/target-ppc/translate.c:    if ((env->flags & POWERPC_FLAG_VRE) && msr_vr)
./tools/qemu-xen-traditional/target-ppc/translate.c:    if ((env->flags & POWERPC_FLAG_SE) && msr_se)
./tools/qemu-xen-traditional/target-ppc/translate.c:    if ((env->flags & POWERPC_FLAG_BE) && msr_be)
./tools/qemu-xen-traditional/target-ppc/translate.c:    if (unlikely(env->singlestep_enabled))
./tools/qemu-xen-traditional/target-ppc/translate.c:        if (unlikely(!TAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen-traditional/target-ppc/translate.c:            TAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen-traditional/target-ppc/translate.c:        table = env->opcodes;
./tools/qemu-xen-traditional/target-ppc/translate.c:                            (env->singlestep_enabled) ||
./tools/qemu-xen-traditional/target-ppc/translate.c:        if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen-traditional/target-ppc/translate.c:        flags = env->bfd_mach;
./tools/qemu-xen-traditional/target-ppc/translate.c:    env->nip = gen_opc_pc[pc_pos];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.ctr = env->ctr;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.lr  = env->lr;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.xer = env->xer;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.msr = env->msr;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.pc = env->nip;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.srr0 = env->spr[SPR_SRR0];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.srr1 = env->spr[SPR_SRR1];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.sprg0 = env->spr[SPR_SPRG0];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.sprg1 = env->spr[SPR_SPRG1];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.sprg2 = env->spr[SPR_SPRG2];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.sprg3 = env->spr[SPR_SPRG3];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.sprg4 = env->spr[SPR_SPRG4];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.sprg5 = env->spr[SPR_SPRG5];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.sprg6 = env->spr[SPR_SPRG6];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    regs.sprg7 = env->spr[SPR_SPRG7];
./tools/qemu-xen-traditional/target-ppc/kvm.c:        regs.gpr[i] = env->gpr[i];
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->ctr = regs.ctr;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->lr = regs.lr;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->xer = regs.xer;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->msr = regs.msr;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->nip = regs.pc;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SRR0] = regs.srr0;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SRR1] = regs.srr1;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SPRG0] = regs.sprg0;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SPRG1] = regs.sprg1;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SPRG2] = regs.sprg2;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SPRG3] = regs.sprg3;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SPRG4] = regs.sprg4;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SPRG5] = regs.sprg5;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SPRG6] = regs.sprg6;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    env->spr[SPR_SPRG7] = regs.sprg7;
./tools/qemu-xen-traditional/target-ppc/kvm.c:        env->gpr[i] = regs.gpr[i];
./tools/qemu-xen-traditional/target-ppc/kvm.c:     * interrupt, reset, etc) in PPC-specific env->irq_input_state. */
./tools/qemu-xen-traditional/target-ppc/kvm.c:        (env->interrupt_request & CPU_INTERRUPT_HARD) &&
./tools/qemu-xen-traditional/target-ppc/kvm.c:        (env->irq_input_state & (1<<PPC40x_INPUT_INT)))
./tools/qemu-xen-traditional/target-ppc/kvm.c:            printf("cpu %d fail inject %x\n", env->cpu_index, irq);
./tools/qemu-xen-traditional/target-ppc/kvm.c:    if (!(env->interrupt_request & CPU_INTERRUPT_HARD) && (msr_ee)) {
./tools/qemu-xen-traditional/target-ppc/kvm.c:        env->halted = 1;
./tools/qemu-xen-traditional/target-ppc/kvm.c:        env->exception_index = EXCP_HLT;
./tools/qemu-xen-traditional/target-ppc/kvm.c:    if (ppc_dcr_read(env->dcr_env, dcrn, data) < 0)
./tools/qemu-xen-traditional/target-ppc/kvm.c:    if (ppc_dcr_write(env->dcr_env, dcrn, data) < 0)
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->exception_index = exception;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->error_code = error_code;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return (env->crf[0] << 28) |
./tools/qemu-xen-traditional/target-ppc/op_helper.c:           (env->crf[1] << 24) |
./tools/qemu-xen-traditional/target-ppc/op_helper.c:           (env->crf[2] << 20) |
./tools/qemu-xen-traditional/target-ppc/op_helper.c:           (env->crf[3] << 16) |
./tools/qemu-xen-traditional/target-ppc/op_helper.c:           (env->crf[4] << 12) |
./tools/qemu-xen-traditional/target-ppc/op_helper.c:           (env->crf[5] << 8) |
./tools/qemu-xen-traditional/target-ppc/op_helper.c:           (env->crf[6] << 4) |
./tools/qemu-xen-traditional/target-ppc/op_helper.c:           (env->crf[7] << 0);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->crf[i] = (val >> (sh * 4)) & 0xFUL;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                sprn, sprn, env->spr[sprn]);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                sprn, sprn, env->spr[sprn]);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    hid0 = env->spr[SPR_HID0];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->hflags &= ~(1 << MSR_LE);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->hflags_nmsr &= ~(1 << MSR_LE);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->hflags_nmsr |= (1 << MSR_LE) & (((val >> 3) & 1) << MSR_LE);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->hflags |= env->hflags_nmsr;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    __func__, val & 0x8 ? 'l' : 'b', env->hflags);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->spr[SPR_HID0] = (uint32_t)val;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    if (likely(env->pb[num] != value)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->pb[num] = value;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->gpr[reg] = bswap32(ldl(addr));
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->gpr[reg] = ldl(addr);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            stl(addr, bswap32((uint32_t)env->gpr[reg]));
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            stl(addr, (uint32_t)env->gpr[reg]);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->gpr[reg] = ldl(addr);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->gpr[reg] = 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->gpr[reg] |= ldub(addr) << sh;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        stl(addr, env->gpr[reg]);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            stb(addr, (env->gpr[reg] >> sh) & 0xFF);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    if (env->reserve == addr)
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->reserve = (target_ulong)-1ULL;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_dcbz(addr, env->dcache_line_size);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    if (((env->spr[SPR_970_HID5] >> 7) & 0x3) == 1)
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        do_dcbz(addr, env->dcache_line_size);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    addr &= ~(env->dcache_line_size - 1);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tb_invalidate_page_range(addr, addr + env->icache_line_size);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->gpr[reg] = (env->gpr[reg] & ~(0xFF << d)) | (c << d);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->xer &= ~(1 << XER_OV);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->xer |= (1 << XER_OV) | (1 << XER_SO);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->xer &= ~(1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->xer |= (1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->xer |= (1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->xer &= ~(1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->xer |= (1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->xer |= (1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_CA);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    d.d = float32_to_float64(f.f, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    f.f = float64_to_float32(d.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr &= ~(0x1F << FPSCR_FPRF);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= ret << FPSCR_FPRF;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXSNAN;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXSOFT;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXISI;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXIDI;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXZDZ;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXIMZ;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXVC;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr &= ~(0xF << FPSCR_FPCC);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 0x11 << FPSCR_FPCC;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_VXVC;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXSQRT;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr &= ~((1 << FPSCR_FR) | (1 << FPSCR_FI));
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr &= ~(0xF << FPSCR_FPCC);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 0x11 << FPSCR_FPCC;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXCVI;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr &= ~((1 << FPSCR_FR) | (1 << FPSCR_FI));
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr &= ~(0xF << FPSCR_FPCC);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 0x11 << FPSCR_FPCC;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_VX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_ZX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr &= ~((1 << FPSCR_FR) | (1 << FPSCR_FI));
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_OX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_OX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_XX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FI;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_UX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_UX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_XX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_XX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    set_float_rounding_mode(rnd_type, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    prev = (env->fpscr >> bit) & 1;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr &= ~(1 << bit);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    prev = (env->fpscr >> bit) & 1;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= 1 << bit;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_VX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXSNAN;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXISI;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXIDI;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXZDZ;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXIMZ;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXVC;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXSOFT;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXSQRT;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXCVI;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_OX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_UX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_ZX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_XX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    prev = env->fpscr;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr &= ~(0xF << (4 * i));
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->fpscr |= new & (0xF << (4 * i));
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr &= ~(1 << FPSCR_VX);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->error_code = POWERPC_EXCP_FP;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->fpscr &= ~(1 << FPSCR_FEX);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    if (env->exception_index == POWERPC_EXCP_PROGRAM &&
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        (env->error_code & POWERPC_EXCP_FP)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            helper_raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        int status = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    if (env->exception_index == POWERPC_EXCP_PROGRAM &&
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        (env->error_code & POWERPC_EXCP_FP)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            helper_raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg1.d = float64_add(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg1.d = float64_add(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg1.d = float64_sub(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg1.d = float64_sub(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg1.d = float64_mul(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg1.d = float64_mul(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg1.d = float64_div(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg1.d = float64_div(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.ll = float64_to_int32(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.ll = float64_to_int32_round_to_zero(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg.d = int64_to_float64(arg, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.ll = float64_to_int64(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.ll = float64_to_int64_round_to_zero(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        set_float_rounding_mode(rounding_mode, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.ll = float64_round_to_int(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft0_128 = float64_to_float128(farg1.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft1_128 = float64_to_float128(farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft0_128 = float128_mul(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            ft1_128 = float64_to_float128(farg3.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            ft0_128 = float128_add(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            farg1.d = float128_to_float64(ft0_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg1.d = float64_mul(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg1.d = float64_add(farg1.d, farg3.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft0_128 = float64_to_float128(farg1.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft1_128 = float64_to_float128(farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft0_128 = float128_mul(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            ft1_128 = float64_to_float128(farg3.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            ft0_128 = float128_sub(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            farg1.d = float128_to_float64(ft0_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg1.d = float64_mul(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg1.d = float64_sub(farg1.d, farg3.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft0_128 = float64_to_float128(farg1.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft1_128 = float64_to_float128(farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft0_128 = float128_mul(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            ft1_128 = float64_to_float128(farg3.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            ft0_128 = float128_add(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            farg1.d = float128_to_float64(ft0_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg1.d = float64_mul(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg1.d = float64_add(farg1.d, farg3.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft0_128 = float64_to_float128(farg1.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft1_128 = float64_to_float128(farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        ft0_128 = float128_mul(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            ft1_128 = float64_to_float128(farg3.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            ft0_128 = float128_sub(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            farg1.d = float128_to_float64(ft0_128, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg1.d = float64_mul(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg1.d = float64_sub(farg1.d, farg3.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:       f32 = float64_to_float32(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:       farg.d = float32_to_float64(f32, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    f32 = float64_to_float32(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    farg.d = float32_to_float64(f32, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.d = float64_sqrt(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.d = float64_div(float64_one, farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.d = float64_div(float64_one, farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        f32 = float64_to_float32(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.d = float32_to_float64(f32, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.d = float64_sqrt(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.d = float64_div(float64_one, farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        f32 = float64_to_float32(farg.d, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        farg.d = float32_to_float64(f32, &env->fp_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    } else if (float64_lt(farg1.d, farg2.d, &env->fp_status)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    } else if (!float64_le(farg1.d, farg2.d, &env->fp_status)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr &= ~(0x0F << FPSCR_FPRF);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= ret << FPSCR_FPRF;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->crf[crfD] = ret;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    } else if (float64_lt(farg1.d, farg2.d, &env->fp_status)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    } else if (!float64_le(farg1.d, farg2.d, &env->fp_status)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr &= ~(0x0F << FPSCR_FPRF);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->fpscr |= ret << FPSCR_FPRF;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->crf[crfD] = ret;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            msr |= env->msr & ~((uint64_t)0xFFFFFFFF);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->nip = nip & ~((target_ulong)0x00000003);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    cpu_dump_rfi(env->nip, env->msr);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_SRR0], env->spr[SPR_SRR1],
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_SRR0], env->spr[SPR_SRR1],
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_HSRR0], env->spr[SPR_HSRR1],
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        return env->icache_line_size;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        return env->dcache_line_size;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        return (env->icache_line_size < env->dcache_line_size) ?
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->icache_line_size : env->dcache_line_size;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        return (env->icache_line_size > env->dcache_line_size) ?
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->icache_line_size : env->dcache_line_size;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    uint64_t tmp = (uint64_t)arg1 << 32 | env->spr[SPR_MQ];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_MQ] = 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_MQ] = tmp % arg2;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    uint64_t tmp = (uint64_t)arg1 << 32 | env->spr[SPR_MQ];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->xer |= (1 << XER_OV) | (1 << XER_SO);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_MQ] = 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_MQ] = tmp % arg2;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->xer |= (1 << XER_OV) | (1 << XER_SO);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_OV);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_MQ] = 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_MQ] = (int32_t)arg1 % (int32_t)arg2;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->xer |= (1 << XER_OV) | (1 << XER_SO);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_MQ] = 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->xer &= ~(1 << XER_OV);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_MQ] = (int32_t)arg1 % (int32_t)arg2;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    nb_BATs = env->nb_BATs;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->nb_BATs = 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->nb_BATs = nb_BATs;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_rfi(env->lr, env->ctr, 0x0000FFFF, 0);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    if (unlikely(env->dcr_env == NULL)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    } else if (unlikely(ppc_dcr_read(env->dcr_env, dcrn, &val) != 0)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    if (unlikely(env->dcr_env == NULL)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    } else if (unlikely(ppc_dcr_write(env->dcr_env, dcrn, val) != 0)) {
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_40x_SRR2], env->spr[SPR_40x_SRR3],
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_BOOKE_CSRR0], SPR_BOOKE_CSRR1,
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_BOOKE_DSRR0], SPR_BOOKE_DSRR1,
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_BOOKE_MCSRR0], SPR_BOOKE_MCSRR1,
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->crf[0] = 0x4;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                env->crf[0] = 0x8;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->crf[0] = 0x2;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->xer = (env->xer & ~0x7F) | i;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->crf[0] |= xer_so;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->vscr = r->u32[3];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->vscr = r->u32[0];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    set_flush_to_zero(vscr_nj, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                r->f[i] = func(a->f[i], b->f[i], &env->vec_status);     \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->vscr |= (1 << VSCR_SAT);                               \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            float32 t = cvt(b->element[i], &env->vec_status);           \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            r->f[i] = float32_scalbn (t, -uim, &env->vec_status);       \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->crf[6] = ((all != 0) << 3) | ((none == 0) << 1);       \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            int rel = float32_compare_quiet(a->f[i], b->f[i], &env->vec_status); \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->crf[6] = ((all != 0) << 3) | ((none == 0) << 1);       \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        int le_rel = float32_compare_quiet(a->f[i], b->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            int ge_rel = float32_compare_quiet(a->f[i], bneg, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->crf[6] = (all_in == 0) << 1;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        float_status s = env->vec_status;                               \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->vscr |= (1 << VSCR_SAT);                               \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            af = float32_to_float64(a->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            bf = float32_to_float64(b->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            cf = float32_to_float64(c->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            t = float64_mul(af, cf, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            t = float64_add(t, bf, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            r->f[i] = float64_to_float32(t, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:                if (float32_lt_quiet(a->f[i], b->f[i], &env->vec_status)) { \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            af = float32_to_float64(a->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            bf = float32_to_float64(b->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            cf = float32_to_float64(c->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            t = float64_mul(af, cf, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            t = float64_sub(t, bf, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            r->f[i] = float64_to_float32(t, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            env->vscr |= (1 << VSCR_SAT);                               \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            r->f[i] = float32_div(float32_one, b->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        float_status s = env->vec_status;                               \
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            float32 t = float32_sqrt(b->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            r->f[i] = float32_div(float32_one, t, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:            r->f[i] = float32_log2(b->f[i], &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.f = int32_to_float32(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.f = uint32_to_float32(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_to_int32(u.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_to_uint32(u.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_to_int32_round_to_zero(u.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_to_uint32_round_to_zero(u.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.f = int32_to_float32(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tmp = int64_to_float32(1ULL << 32, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.f = float32_div(u.f, tmp, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.f = uint32_to_float32(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tmp = uint64_to_float32(1ULL << 32, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.f = float32_div(u.f, tmp, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tmp = uint64_to_float32(1ULL << 32, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.f = float32_mul(u.f, tmp, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_to_int32(u.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tmp = uint64_to_float32(1ULL << 32, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.f = float32_mul(u.f, tmp, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_to_uint32(u.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u1.f = float32_add(u1.f, u2.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u1.f = float32_sub(u1.f, u2.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u1.f = float32_mul(u1.f, u2.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u1.f = float32_div(u1.f, u2.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_lt(u1.f, u2.f, &env->vec_status) ? 4 : 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_le(u1.f, u2.f, &env->vec_status) ? 0 : 4;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float32_eq(u1.f, u2.f, &env->vec_status) ? 4 : 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = int32_to_float64(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = int64_to_float64(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = uint32_to_float64(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = uint64_to_float64(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_to_int32(u.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_to_uint32(u.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_to_int32_round_to_zero(u.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_to_int64_round_to_zero(u.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_to_uint32_round_to_zero(u.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_to_uint64_round_to_zero(u.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = int32_to_float64(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tmp = int64_to_float64(1ULL << 32, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = float64_div(u.d, tmp, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = uint32_to_float64(val, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tmp = int64_to_float64(1ULL << 32, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = float64_div(u.d, tmp, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tmp = uint64_to_float64(1ULL << 32, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = float64_mul(u.d, tmp, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_to_int32(u.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tmp = uint64_to_float64(1ULL << 32, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u.d = float64_mul(u.d, tmp, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_to_uint32(u.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u2.f = float64_to_float32(u1.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u2.d = float32_to_float64(u1.f, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u1.d = float64_add(u1.d, u2.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u1.d = float64_sub(u1.d, u2.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u1.d = float64_mul(u1.d, u2.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    u1.d = float64_div(u1.d, u2.d, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_lt(u1.d, u2.d, &env->vec_status) ? 4 : 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_le(u1.d, u2.d, &env->vec_status) ? 0 : 4;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return float64_eq(u1.d, u2.d, &env->vec_status) ? 4 : 0;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        helper_raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return env->sr[sr_num];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    RPN = env->spr[SPR_RPA];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        CMP = env->spr[SPR_ICMP];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        EPN = env->spr[SPR_IMISS];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        CMP = env->spr[SPR_DCMP];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        EPN = env->spr[SPR_DMISS];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    way = (env->spr[SPR_SRR1] >> 17) & 1;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    RPN = env->spr[SPR_PTELO];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    CMP = env->spr[SPR_PTEHI];
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    EPN = env->spr[SPR_TLBMISS] & ~0x3;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    way = env->spr[SPR_TLBMISS] & 0x3;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tlb = &env->tlb[entry].tlbe;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    env->spr[SPR_40x_PID] = tlb->PID;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tlb = &env->tlb[entry].tlbe;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tlb = &env->tlb[entry].tlbe;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tlb->PID = env->spr[SPR_40x_PID]; /* PID */
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tlb = &env->tlb[entry].tlbe;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return ppcemb_tlb_search(env, address, env->spr[SPR_40x_PID]);
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tlb = &env->tlb[entry].tlbe;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        tlb->PID = env->spr[SPR_440_MMUCR] & 0x000000FF;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    tlb = &env->tlb[entry].tlbe;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_440_MMUCR] &= ~0x000000FF;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:        env->spr[SPR_440_MMUCR] |= tlb->PID;
./tools/qemu-xen-traditional/target-ppc/op_helper.c:    return ppcemb_tlb_search(env, address, env->spr[SPR_440_MMUCR] & 0xFF);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->vscr = val;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    set_float_rounding_mode(float_round_nearest_even, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    set_flush_to_zero(vscr_nj, &env->vec_status);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    spr = &env->spr_cb[num];
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (spr->name != NULL ||env-> spr[num] != 0x00000000 ||
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->spr[num] = initial_value;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_BATs += 4;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_BATs += 4;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = nb_tlbs;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = nb_ways;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_BATs = 4;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = nb_tlbs;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = nb_ways;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->nb_pids > 1) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->nb_pids > 2) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    switch (env->nb_ways) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PIT]      = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FIT]      = 0x00001010;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00001020;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DEBUG]    = 0x00002000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF0UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PIT]      = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FIT]      = 0x00001010;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00001020;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLB]     = 0x00001100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLB]     = 0x00001200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DEBUG]    = 0x00002000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF0UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPA]      = 0x00000E00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EMUL]     = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DABR]     = 0x00001C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MEXTBR]   = 0x00001E00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_NMEXTBR]  = 0x00001F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF0UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPA]      = 0x00000E00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EMUL]     = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLB]     = 0x00001100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLB]     = 0x00001200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLBE]    = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLBE]    = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DABR]     = 0x00001C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MEXTBR]   = 0x00001E00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_NMEXTBR]  = 0x00001F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF0UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000A00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000FFC;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_APU]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FIT]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLB]     = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLB]     = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DEBUG]    = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SPEU]     = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EFPDI]    = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EFPRI]    = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF7UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_APU]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FIT]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLB]     = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLB]     = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DEBUG]    = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFE0UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IO]       = 0x00000A00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RUNM]     = 0x00002000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0xFFF00000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0x00000100UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00001500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EMUL]     = 0x00001600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0xFFF00000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0xFFF00000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0x0000000000000100ULL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPU]      = 0x00000F20;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPUA]     = 0x00001600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPU]      = 0x00000F20;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPUA]     = 0x00001600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000UL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSEG]     = 0x00000380;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISEG]     = 0x00000480;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_HDECR]    = 0x00000980;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPU]      = 0x00000F20;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MAINT]    = 0x00001600;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPUA]     = 0x00001700;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001800;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix   = 0x00000000FFF00000ULL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->hreset_vector = 0x0000000000000100ULL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00E00000)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00600000)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_pids = 3;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00600000)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->slb_nr = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00600000)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->slb_nr = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00600000)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->slb_nr = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x01C00000)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->slb_nr = 32;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->dcache_line_size = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->icache_line_size = 64;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->irq_inputs = NULL;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->excp_vectors[i] = (target_ulong)(-1ULL);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_prefix = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivor_mask = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->ivpr_mask = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_BATs = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_tlb = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->nb_ways = 0;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 25)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_SPE | POWERPC_FLAG_VRE)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_SPE | POWERPC_FLAG_VRE)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 17)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_TGPR | POWERPC_FLAG_CE)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_TGPR | POWERPC_FLAG_CE)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 10)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_SE | POWERPC_FLAG_DWE |
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_SE | POWERPC_FLAG_DWE |
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 9)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_BE | POWERPC_FLAG_DE)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_BE | POWERPC_FLAG_DE)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 2)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_PX | POWERPC_FLAG_PMM)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_PX | POWERPC_FLAG_PMM)) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if ((env->flags & (POWERPC_FLAG_RTC_CLK | POWERPC_FLAG_BUS_CLK)) == 0) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->nb_tlb != 0) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        int nb_tlb = env->nb_tlb;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        if (env->id_tlbs != 0)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->tlb = qemu_mallocz(nb_tlb * sizeof(ppc_tlb_t));
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->tlb_per_way = env->nb_tlb / env->nb_ways;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->irq_inputs == NULL) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    if (env->check_pow == NULL) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:            spr = &env->spr_cb[n];
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    fill_new_table(env->opcodes, 0x40);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:            if (register_insn(env->opcodes, opc) < 0) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    fix_opcode_tables(env->opcodes);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        table = env->opcodes;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:                table = env->opcodes;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:                handler = env->opcodes[opc1];
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stfq_p(mem_buf, env->fpr[n]);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->fpr[n] = ldfq_p(mem_buf);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stq_p(mem_buf, env->avr[n].u64[0]);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stq_p(mem_buf+8, env->avr[n].u64[1]);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stq_p(mem_buf, env->avr[n].u64[1]);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stq_p(mem_buf+8, env->avr[n].u64[0]);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stl_p(mem_buf, env->vscr);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stl_p(mem_buf, (uint32_t)env->spr[SPR_VRSAVE]);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->avr[n].u64[0] = ldq_p(mem_buf);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->avr[n].u64[1] = ldq_p(mem_buf+8);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->avr[n].u64[1] = ldq_p(mem_buf);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->avr[n].u64[0] = ldq_p(mem_buf+8);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->vscr = ldl_p(mem_buf);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->spr[SPR_VRSAVE] = (target_ulong)ldl_p(mem_buf);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stl_p(mem_buf, env->gpr[n] >> 32);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stl_p(mem_buf, env->gprh[n]);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        stq_p(mem_buf, env->spe_acc);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        target_ulong lo = (uint32_t)env->gpr[n];
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->gpr[n] = lo | hi;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->gprh[n] = ldl_p(mem_buf);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        env->spe_acc = ldq_p(mem_buf);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->msr_mask = def->msr_mask;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->mmu_model = def->mmu_model;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->excp_model = def->excp_model;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->bus_model = def->bus_model;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->flags = def->flags;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->bfd_mach = def->bfd_mach;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:    env->check_pow = def->check_pow;
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        switch (env->mmu_model) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        switch (env->excp_model) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        switch (env->bus_model) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        if (env->tlb != NULL) {
./tools/qemu-xen-traditional/target-ppc/translate_init.c:                   env->nb_tlb, env->id_tlbs ? "splitted" : "merged",
./tools/qemu-xen-traditional/target-ppc/translate_init.c:                   env->nb_ways);
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_SPE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_VRE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_TGPR)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_CE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_SE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_DWE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_UBLE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_BE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_DE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_PX)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_PMM)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:        if (env->flags == POWERPC_FLAG_NONE)
./tools/qemu-xen-traditional/target-ppc/translate_init.c:               env->flags & POWERPC_FLAG_RTC_CLK ? "RTC clock" : "bus clock");
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->spr[SPR_DSISR] = error_code;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->exception_index = exception;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->error_code = error_code;
./tools/qemu-xen-traditional/target-ppc/helper.c:    nr = (eaddr >> TARGET_PAGE_BITS) & (env->tlb_per_way - 1);
./tools/qemu-xen-traditional/target-ppc/helper.c:    nr += env->tlb_per_way * way;
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (is_code && env->id_tlbs == 1)
./tools/qemu-xen-traditional/target-ppc/helper.c:        nr += env->nb_tlb;
./tools/qemu-xen-traditional/target-ppc/helper.c:    max = env->nb_tlb;
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->id_tlbs == 1)
./tools/qemu-xen-traditional/target-ppc/helper.c:        tlb = &env->tlb[nr].tlb6;
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (way = 0; way < env->nb_ways; way++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        tlb = &env->tlb[nr].tlb6;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        nr, env->nb_tlb, eaddr);
./tools/qemu-xen-traditional/target-ppc/helper.c:    tlb = &env->tlb[nr].tlb6;
./tools/qemu-xen-traditional/target-ppc/helper.c:                " PTE1 " ADDRX "\n", nr, env->nb_tlb, EPN, pte0, pte1);
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->last_way = way;
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (way = 0; way < env->nb_ways; way++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        tlb = &env->tlb[nr].tlb6;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        nr, env->nb_tlb,
./tools/qemu-xen-traditional/target-ppc/helper.c:                    nr, env->nb_tlb,
./tools/qemu-xen-traditional/target-ppc/helper.c:        pte_update_flags(ctx, &env->tlb[best].tlb6.pte1, ret, rw);
./tools/qemu-xen-traditional/target-ppc/helper.c:        BATlt = env->IBAT[1];
./tools/qemu-xen-traditional/target-ppc/helper.c:        BATut = env->IBAT[0];
./tools/qemu-xen-traditional/target-ppc/helper.c:        BATlt = env->DBAT[1];
./tools/qemu-xen-traditional/target-ppc/helper.c:        BATut = env->DBAT[0];
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (i = 0; i < env->nb_BATs; i++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (unlikely(env->mmu_model == POWERPC_MMU_601)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->mmu_model & POWERPC_MMU_64)
./tools/qemu-xen-traditional/target-ppc/helper.c:    sr_base = env->spr[SPR_ASR];
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (n = 0; n < env->slb_nr; n++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:    sr_base = env->spr[SPR_ASR];
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (n = 1; n < env->slb_nr; n++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        sr_base = env->spr[SPR_ASR];
./tools/qemu-xen-traditional/target-ppc/helper.c:    sr_base = env->spr[SPR_ASR];
./tools/qemu-xen-traditional/target-ppc/helper.c:    sr_base = env->spr[SPR_ASR];
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->mmu_model & POWERPC_MMU_64) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        sr = env->sr[eaddr >> 28];
./tools/qemu-xen-traditional/target-ppc/helper.c:                    eaddr, (int)(eaddr >> 28), sr, env->nip,
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->lr, (int)msr_ir, (int)msr_dr, pr != 0 ? 1 : 0,
./tools/qemu-xen-traditional/target-ppc/helper.c:            sdr = env->sdr1;
./tools/qemu-xen-traditional/target-ppc/helper.c:            if (env->mmu_model & POWERPC_MMU_64) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            if (env->mmu_model & POWERPC_MMU_64) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            if (unlikely(env->mmu_model == POWERPC_MMU_SOFT_6xx ||
./tools/qemu-xen-traditional/target-ppc/helper.c:                         env->mmu_model == POWERPC_MMU_SOFT_74xx)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        tlb = &env->tlb[i].tlbe;
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        tlb = &env->tlb[i].tlbe;
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        tlb = &env->tlb[i].tlbe;
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        tlb = &env->tlb[i].tlbe;
./tools/qemu-xen-traditional/target-ppc/helper.c:                             env->spr[SPR_40x_PID], 0, i) < 0)
./tools/qemu-xen-traditional/target-ppc/helper.c:        zpr = (env->spr[SPR_40x_ZPR] >> (28 - (2 * zsel))) & 0x3;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->spr[SPR_405_SLER] = val;
./tools/qemu-xen-traditional/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        tlb = &env->tlb[i].tlbe;
./tools/qemu-xen-traditional/target-ppc/helper.c:                             env->spr[SPR_BOOKE_PID], 1, i) < 0)
./tools/qemu-xen-traditional/target-ppc/helper.c:    switch (env->mmu_model) {
./tools/qemu-xen-traditional/target-ppc/helper.c:                (env->pb[0] < env->pb[1] &&
./tools/qemu-xen-traditional/target-ppc/helper.c:                 eaddr >= env->pb[0] && eaddr < env->pb[1]) ||
./tools/qemu-xen-traditional/target-ppc/helper.c:                (env->pb[2] < env->pb[3] &&
./tools/qemu-xen-traditional/target-ppc/helper.c:                 eaddr >= env->pb[2] && eaddr < env->pb[3]) ? 1 : 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:        switch (env->mmu_model) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            if (env->nb_BATs != 0)
./tools/qemu-xen-traditional/target-ppc/helper.c:        access_type = env->access_type;
./tools/qemu-xen-traditional/target-ppc/helper.c:                switch (env->mmu_model) {
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_IFTLB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 1 << 18;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_IMISS] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_ICMP] = 0x80000000 | ctx.ptem;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_IFTLB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ITLB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_40x_DEAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_40x_ESR] = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0x40000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->error_code = 0x08000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->error_code = 0x10000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->error_code = 0x10000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                if (env->mmu_model == POWERPC_MMU_620) {
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0x40000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ISEG;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                switch (env->mmu_model) {
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->exception_index = POWERPC_EXCP_DSTLB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->error_code = 1 << 16;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->exception_index = POWERPC_EXCP_DLTLB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DMISS] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DCMP] = 0x80000000 | ctx.ptem;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code |= ctx.key << 19;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_HASH1] = ctx.pg_addr[0];
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_HASH2] = ctx.pg_addr[1];
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->exception_index = POWERPC_EXCP_DSTLB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->exception_index = POWERPC_EXCP_DLTLB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = ctx.key << 19;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_TLBMISS] = (address & ~((target_ulong)0x3)) |
./tools/qemu-xen-traditional/target-ppc/helper.c:                        ((env->last_way + 1) & (env->nb_ways - 1));
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_PTEHI] = 0x80000000 | ctx.ptem;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DTLB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_40x_DEAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_40x_ESR] = 0x00800000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_40x_ESR] = 0x00000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x42000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x40000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DSISR] = 0x0A000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DSISR] = 0x08000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ALIGN;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = POWERPC_EXCP_ALIGN_FP;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x06000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x04000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x06100000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x04100000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code =
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                if (env->mmu_model == POWERPC_MMU_620) {
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x42000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x40000000;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSEG;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen-traditional/target-ppc/helper.c:               env->exception, env->error_code);
./tools/qemu-xen-traditional/target-ppc/helper.c:                ID, nr, ul == 0 ? 'u' : 'l', value, env->nip);
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->IBAT[0][nr] != value) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->IBAT[0][nr] = (value & 0x00001FFFUL) |
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->IBAT[1][nr] = (env->IBAT[1][nr] & 0x0000007B) |
./tools/qemu-xen-traditional/target-ppc/helper.c:            (env->IBAT[1][nr] & ~0x0001FFFF & ~mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:        do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->IBAT[1][nr] = value;
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->DBAT[0][nr] != value) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        do_invalidate_BAT(env, env->DBAT[0][nr], mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->DBAT[0][nr] = (value & 0x00001FFFUL) |
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->DBAT[1][nr] = (env->DBAT[1][nr] & 0x0000007B) |
./tools/qemu-xen-traditional/target-ppc/helper.c:            (env->DBAT[1][nr] & ~0x0001FFFF & ~mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:        do_invalidate_BAT(env, env->DBAT[0][nr], mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->DBAT[1][nr] = value;
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->IBAT[0][nr] != value) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        mask = (env->IBAT[1][nr] << 17) & 0x0FFE0000UL;
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->IBAT[1][nr] & 0x40) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->IBAT[0][nr] = (value & 0x00001FFFUL) |
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->DBAT[0][nr] = env->IBAT[0][nr];
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->IBAT[1][nr] & 0x40) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->IBAT[1][nr] != value) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->IBAT[1][nr] & 0x40) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            mask = (env->IBAT[1][nr] << 17) & 0x0FFE0000UL;
./tools/qemu-xen-traditional/target-ppc/helper.c:            do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:            do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->IBAT[1][nr] = value;
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->DBAT[1][nr] = value;
./tools/qemu-xen-traditional/target-ppc/helper.c:    switch (env->mmu_model) {
./tools/qemu-xen-traditional/target-ppc/helper.c:    switch (env->mmu_model) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->id_tlbs == 1)
./tools/qemu-xen-traditional/target-ppc/helper.c:        ppc4xx_tlb_invalidate_virt(env, addr, env->spr[SPR_40x_PID]);
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->asr != value) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->asr = value;
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->sdr1 != value) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->sdr1 = value;
./tools/qemu-xen-traditional/target-ppc/helper.c:                __func__, srnum, value, env->sr[srnum]);
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->sr[srnum] != value) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->sr[srnum] = value;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:            ppc_dump_gpr(env, 5), ppc_dump_gpr(env, 6), env->nip);
./tools/qemu-xen-traditional/target-ppc/helper.c:        lpes0 = (env->spr[SPR_LPCR] >> 1) & 1;
./tools/qemu-xen-traditional/target-ppc/helper.c:        lpes1 = (env->spr[SPR_LPCR] >> 2) & 1;
./tools/qemu-xen-traditional/target-ppc/helper.c:                 env->nip, excp, env->error_code);
./tools/qemu-xen-traditional/target-ppc/helper.c:    msr = env->msr;
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->halted = 1;
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    env->spr[SPR_DSISR], env->spr[SPR_DAR]);
./tools/qemu-xen-traditional/target-ppc/helper.c:                    msr, env->nip);
./tools/qemu-xen-traditional/target-ppc/helper.c:        msr |= env->error_code;
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->spr[SPR_DSISR] |= (ldl_code((env->nip - 4)) & 0x03FF0000) >> 16;
./tools/qemu-xen-traditional/target-ppc/helper.c:        switch (env->error_code & ~0xF) {
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->nip);
./tools/qemu-xen-traditional/target-ppc/helper.c:                      env->error_code);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->gpr[3] == 0x113724fa && env->gpr[4] == 0x77810f9b &&
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->osi_call) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            if (env->osi_call(env) != 0) {
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:        lev = env->error_code;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    miss = &env->spr[SPR_IMISS];
./tools/qemu-xen-traditional/target-ppc/helper.c:                    cmp = &env->spr[SPR_ICMP];
./tools/qemu-xen-traditional/target-ppc/helper.c:                    miss = &env->spr[SPR_DMISS];
./tools/qemu-xen-traditional/target-ppc/helper.c:                    cmp = &env->spr[SPR_DCMP];
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->spr[SPR_HASH1], env->spr[SPR_HASH2],
./tools/qemu-xen-traditional/target-ppc/helper.c:                        env->error_code);
./tools/qemu-xen-traditional/target-ppc/helper.c:            msr |= env->crf[0] << 28;
./tools/qemu-xen-traditional/target-ppc/helper.c:            msr |= env->error_code; /* key, D/I, S/L bits */
./tools/qemu-xen-traditional/target-ppc/helper.c:            msr |= ((env->last_way + 1) & (env->nb_ways - 1)) << 17;
./tools/qemu-xen-traditional/target-ppc/helper.c:                    miss = &env->spr[SPR_TLBMISS];
./tools/qemu-xen-traditional/target-ppc/helper.c:                    cmp = &env->spr[SPR_PTEHI];
./tools/qemu-xen-traditional/target-ppc/helper.c:                    miss = &env->spr[SPR_TLBMISS];
./tools/qemu-xen-traditional/target-ppc/helper.c:                    cmp = &env->spr[SPR_PTEHI];
./tools/qemu-xen-traditional/target-ppc/helper.c:                        es, en, *miss, en, *cmp, env->error_code);
./tools/qemu-xen-traditional/target-ppc/helper.c:            msr |= env->error_code; /* key bit */
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->spr[srr0] = env->nip - 4;
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->spr[srr0] = env->nip;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->spr[srr1] = msr;
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->spr[asrr0] = env->spr[srr0];
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->spr[asrr1] = env->spr[srr1];
./tools/qemu-xen-traditional/target-ppc/helper.c:    vector = env->excp_vectors[excp];
./tools/qemu-xen-traditional/target-ppc/helper.c:    vector |= env->excp_prefix;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->msr = new_msr & env->msr_mask;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->nip = vector;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:    powerpc_excp(env, env->excp_model, env->exception_index);
./tools/qemu-xen-traditional/target-ppc/helper.c:                __func__, env, env->pending_interrupts,
./tools/qemu-xen-traditional/target-ppc/helper.c:                env->interrupt_request, (int)msr_me, (int)msr_ee);
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->pending_interrupts & (1 << PPC_INTERRUPT_RESET)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->pending_interrupts &= ~(1 << PPC_INTERRUPT_RESET);
./tools/qemu-xen-traditional/target-ppc/helper.c:        powerpc_excp(env, env->excp_model, POWERPC_EXCP_RESET);
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->pending_interrupts & (1 << PPC_INTERRUPT_MCK)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->pending_interrupts &= ~(1 << PPC_INTERRUPT_MCK);
./tools/qemu-xen-traditional/target-ppc/helper.c:        powerpc_excp(env, env->excp_model, POWERPC_EXCP_MCHECK);
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->pending_interrupts & (1 << PPC_INTERRUPT_DEBUG)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:        env->pending_interrupts &= ~(1 << PPC_INTERRUPT_DEBUG);
./tools/qemu-xen-traditional/target-ppc/helper.c:        powerpc_excp(env, env->excp_model, POWERPC_EXCP_DEBUG);
./tools/qemu-xen-traditional/target-ppc/helper.c:        hdice = env->spr[SPR_LPCR] & 1;
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_HDECR)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_HDECR);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_HDECR);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_CEXT)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_CEXT);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_CRITICAL);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_WDT)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_WDT);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_WDT);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_CDOORBELL)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_CDOORBELL);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_DOORCI);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_FIT)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_FIT);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_FIT);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_PIT)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_PIT);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_PIT);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_DECR)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_DECR);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_DECR);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_EXT)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_EXT);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_EXTERNAL);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_DOORBELL)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_DOORBELL);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_DOORI);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_PERFM)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_PERFM);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_PERFM);
./tools/qemu-xen-traditional/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_THERM)) {
./tools/qemu-xen-traditional/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_THERM);
./tools/qemu-xen-traditional/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_THERM);
./tools/qemu-xen-traditional/target-ppc/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->nip = env->hreset_vector | env->excp_prefix;
./tools/qemu-xen-traditional/target-ppc/helper.c:    if (env->mmu_model != POWERPC_MMU_REAL)
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->msr = msr & env->msr_mask;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->reserve = (target_ulong)-1ULL;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->pending_interrupts = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->error_code = 0;
./tools/qemu-xen-traditional/target-ppc/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen-traditional/tcg/ppc64/tcg-target.c:    /* r0 now contains &env->tlb_table[mem_index][index].addr_read */
./tools/qemu-xen-traditional/tcg/ppc64/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend */
./tools/qemu-xen-traditional/tcg/ppc64/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend + addr */
./tools/qemu-xen-traditional/tcg/ppc64/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend */
./tools/qemu-xen-traditional/tcg/ppc64/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend + addr */
./tools/qemu-xen-traditional/tcg/ppc/tcg-target.c:    /* r0 now contains &env->tlb_table[mem_index][index].addr_read */
./tools/qemu-xen-traditional/tcg/ppc/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend */
./tools/qemu-xen-traditional/tcg/ppc/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend + addr */
./tools/qemu-xen-traditional/tcg/ppc/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend */
./tools/qemu-xen-traditional/tcg/ppc/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend + addr */
./tools/qemu-xen-traditional/translate-all.c:        env->icount_decr.u16.low += tb->icount;
./tools/qemu-xen-traditional/translate-all.c:        env->can_do_io = 0;
./tools/qemu-xen-traditional/translate-all.c:    env->icount_decr.u16.low -= gen_opc_icount[j];
./tools/qemu-xen-traditional/linux-user/strace.c:        	 tv->tv_sec, tv->tv_usec);
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.eax = tswap32(env->regs[R_EAX]);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.ebx = tswap32(env->regs[R_EBX]);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.ecx = tswap32(env->regs[R_ECX]);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.edx = tswap32(env->regs[R_EDX]);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.esi = tswap32(env->regs[R_ESI]);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.edi = tswap32(env->regs[R_EDI]);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.ebp = tswap32(env->regs[R_EBP]);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.esp = tswap32(env->regs[R_ESP]);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.eip = tswap32(env->eip);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.cs = tswap16(env->segs[R_CS].selector);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.ss = tswap16(env->segs[R_SS].selector);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.ds = tswap16(env->segs[R_DS].selector);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.es = tswap16(env->segs[R_ES].selector);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.fs = tswap16(env->segs[R_FS].selector);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.gs = tswap16(env->segs[R_GS].selector);
./tools/qemu-xen-traditional/linux-user/vm86.c:    set_flags(env->eflags, ts->v86flags, VIF_MASK | ts->v86mask);
./tools/qemu-xen-traditional/linux-user/vm86.c:    target_v86->regs.eflags = tswap32(env->eflags);
./tools/qemu-xen-traditional/linux-user/vm86.c:             env->eflags, env->segs[R_CS].selector, env->eip);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EAX] = ts->vm86_saved_regs.eax;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EBX] = ts->vm86_saved_regs.ebx;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_ECX] = ts->vm86_saved_regs.ecx;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EDX] = ts->vm86_saved_regs.edx;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_ESI] = ts->vm86_saved_regs.esi;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EDI] = ts->vm86_saved_regs.edi;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EBP] = ts->vm86_saved_regs.ebp;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_ESP] = ts->vm86_saved_regs.esp;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->eflags = ts->vm86_saved_regs.eflags;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->eip = ts->vm86_saved_regs.eip;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EAX] = retval;
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->eflags &= ~TF_MASK;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->eflags &= ~AC_MASK;
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    set_flags(env->eflags, eflags, SAFE_MASK);
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    set_flags(env->eflags, flags, SAFE_MASK);
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    flags = env->eflags & RETURN_MASK;
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    if (env->segs[R_CS].selector == TARGET_BIOSSEG)
./tools/qemu-xen-traditional/linux-user/vm86.c:    if (intno == 0x21 && is_revectored((env->regs[R_EAX] >> 8) & 0xff,
./tools/qemu-xen-traditional/linux-user/vm86.c:    ssp = env->segs[R_SS].selector << 4;
./tools/qemu-xen-traditional/linux-user/vm86.c:    sp = env->regs[R_ESP] & 0xffff;
./tools/qemu-xen-traditional/linux-user/vm86.c:    vm_putw(ssp, sp - 4, env->segs[R_CS].selector);
./tools/qemu-xen-traditional/linux-user/vm86.c:    vm_putw(ssp, sp - 6, env->eip);
./tools/qemu-xen-traditional/linux-user/vm86.c:    ADD16(env->regs[R_ESP], -6);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->eip = segoffs & 0xffff;
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    csp = env->segs[R_CS].selector << 4;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ip = env->eip & 0xffff;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ssp = env->segs[R_SS].selector << 4;
./tools/qemu-xen-traditional/linux-user/vm86.c:    sp = env->regs[R_ESP] & 0xffff;
./tools/qemu-xen-traditional/linux-user/vm86.c:             env->segs[R_CS].selector, env->eip);
./tools/qemu-xen-traditional/linux-user/vm86.c:            ADD16(env->regs[R_ESP], -4);
./tools/qemu-xen-traditional/linux-user/vm86.c:            ADD16(env->regs[R_ESP], -2);
./tools/qemu-xen-traditional/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen-traditional/linux-user/vm86.c:            ADD16(env->regs[R_ESP], 4);
./tools/qemu-xen-traditional/linux-user/vm86.c:            ADD16(env->regs[R_ESP], 2);
./tools/qemu-xen-traditional/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen-traditional/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen-traditional/linux-user/vm86.c:            ADD16(env->regs[R_ESP], 12);
./tools/qemu-xen-traditional/linux-user/vm86.c:            ADD16(env->regs[R_ESP], 6);
./tools/qemu-xen-traditional/linux-user/vm86.c:        env->eip = newip;
./tools/qemu-xen-traditional/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen-traditional/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen-traditional/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.ebx = env->regs[R_EBX];
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.ecx = env->regs[R_ECX];
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.edx = env->regs[R_EDX];
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.esi = env->regs[R_ESI];
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.edi = env->regs[R_EDI];
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.ebp = env->regs[R_EBP];
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.esp = env->regs[R_ESP];
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.eflags = env->eflags;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.eip  = env->eip;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.cs = env->segs[R_CS].selector;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.ss = env->segs[R_SS].selector;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.ds = env->segs[R_DS].selector;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.es = env->segs[R_ES].selector;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.fs = env->segs[R_FS].selector;
./tools/qemu-xen-traditional/linux-user/vm86.c:    ts->vm86_saved_regs.gs = env->segs[R_GS].selector;
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->eflags = (env->eflags & ~SAFE_MASK) |
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EBX] = tswap32(target_v86->regs.ebx);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_ECX] = tswap32(target_v86->regs.ecx);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EDX] = tswap32(target_v86->regs.edx);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_ESI] = tswap32(target_v86->regs.esi);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EDI] = tswap32(target_v86->regs.edi);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_EBP] = tswap32(target_v86->regs.ebp);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->regs[R_ESP] = tswap32(target_v86->regs.esp);
./tools/qemu-xen-traditional/linux-user/vm86.c:    env->eip = tswap32(target_v86->regs.eip);
./tools/qemu-xen-traditional/linux-user/vm86.c:             env->segs[R_CS].selector, env->eip);
./tools/qemu-xen-traditional/linux-user/m68k-sim.c:  env->dregs[0] = code;
./tools/qemu-xen-traditional/linux-user/m68k-sim.c:      env->dregs[1] = errno;
./tools/qemu-xen-traditional/linux-user/m68k-sim.c:      env->dregs[1] = 0;
./tools/qemu-xen-traditional/linux-user/m68k-sim.c:    args = (uint32_t *)(unsigned long)(env->aregs[7] + 4);
./tools/qemu-xen-traditional/linux-user/main.c:        thread_env->next_cpu = NULL;
./tools/qemu-xen-traditional/linux-user/main.c:    env->running = 1;
./tools/qemu-xen-traditional/linux-user/main.c:    env->running = 0;
./tools/qemu-xen-traditional/linux-user/main.c:            env->regs[R_EAX] = do_syscall(env,
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_EAX],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_EBX],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_ECX],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_EDX],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_ESI],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_EDI],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_EBP]);
./tools/qemu-xen-traditional/linux-user/main.c:            env->regs[R_EAX] = do_syscall(env,
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_EAX],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_EDI],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_ESI],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[R_EDX],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[10],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[8],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->regs[9]);
./tools/qemu-xen-traditional/linux-user/main.c:            env->eip = env->exception_next_eip;
./tools/qemu-xen-traditional/linux-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen-traditional/linux-user/main.c:            if (!(env->error_code & 1))
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->cr[2];
./tools/qemu-xen-traditional/linux-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen-traditional/linux-user/main.c:                info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen-traditional/linux-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen-traditional/linux-user/main.c:                    info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen-traditional/linux-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen-traditional/linux-user/main.c:            pc = env->segs[R_CS].base + env->eip;
./tools/qemu-xen-traditional/linux-user/main.c:    switch (env->regs[15]) {
./tools/qemu-xen-traditional/linux-user/main.c:        addr = env->regs[2];
./tools/qemu-xen-traditional/linux-user/main.c:            val = ~env->regs[0];
./tools/qemu-xen-traditional/linux-user/main.c:        if (val == env->regs[0]) {
./tools/qemu-xen-traditional/linux-user/main.c:            val = env->regs[1];
./tools/qemu-xen-traditional/linux-user/main.c:            env->regs[0] = 0;
./tools/qemu-xen-traditional/linux-user/main.c:            env->regs[0] = -1;
./tools/qemu-xen-traditional/linux-user/main.c:        env->regs[0] = env->cp15.c13_tls2;
./tools/qemu-xen-traditional/linux-user/main.c:    addr = env->regs[14];
./tools/qemu-xen-traditional/linux-user/main.c:        env->thumb = 1;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[15] = addr;
./tools/qemu-xen-traditional/linux-user/main.c:                TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/main.c:                get_user_u32(opcode, env->regs[15]);
./tools/qemu-xen-traditional/linux-user/main.c:                    info._sifields._sigfault._addr = env->regs[15];
./tools/qemu-xen-traditional/linux-user/main.c:                      info._sifields._sigfault._addr = env->regs[15];
./tools/qemu-xen-traditional/linux-user/main.c:                      env->regs[15] += 4;
./tools/qemu-xen-traditional/linux-user/main.c:                    env->regs[15] += 4;
./tools/qemu-xen-traditional/linux-user/main.c:                env->eabi = 1;
./tools/qemu-xen-traditional/linux-user/main.c:                    if (env->thumb) {
./tools/qemu-xen-traditional/linux-user/main.c:                        get_user_u16(insn, env->regs[15]);
./tools/qemu-xen-traditional/linux-user/main.c:                        env->regs[15] += 2;
./tools/qemu-xen-traditional/linux-user/main.c:                        get_user_u32(insn, env->regs[15]);
./tools/qemu-xen-traditional/linux-user/main.c:                        env->regs[15] += 4;
./tools/qemu-xen-traditional/linux-user/main.c:                    if (env->thumb) {
./tools/qemu-xen-traditional/linux-user/main.c:                        get_user_u16(insn, env->regs[15] - 2);
./tools/qemu-xen-traditional/linux-user/main.c:                        get_user_u32(insn, env->regs[15] - 4);
./tools/qemu-xen-traditional/linux-user/main.c:                    arm_cache_flush(env->regs[0], env->regs[1]);
./tools/qemu-xen-traditional/linux-user/main.c:                    env->regs[0] = do_arm_semihosting (env);
./tools/qemu-xen-traditional/linux-user/main.c:                           || (env->thumb && n == ARM_THUMB_SYSCALL)) {
./tools/qemu-xen-traditional/linux-user/main.c:                    if (env->thumb || n == 0) {
./tools/qemu-xen-traditional/linux-user/main.c:                        n = env->regs[7];
./tools/qemu-xen-traditional/linux-user/main.c:                        env->eabi = 0;
./tools/qemu-xen-traditional/linux-user/main.c:                            arm_cache_flush(env->regs[0], env->regs[1]);
./tools/qemu-xen-traditional/linux-user/main.c:                            cpu_set_tls(env, env->regs[0]);
./tools/qemu-xen-traditional/linux-user/main.c:                            env->regs[0] = 0;
./tools/qemu-xen-traditional/linux-user/main.c:                            env->regs[0] = -TARGET_ENOSYS;
./tools/qemu-xen-traditional/linux-user/main.c:                        env->regs[0] = do_syscall(env,
./tools/qemu-xen-traditional/linux-user/main.c:                                                  env->regs[0],
./tools/qemu-xen-traditional/linux-user/main.c:                                                  env->regs[1],
./tools/qemu-xen-traditional/linux-user/main.c:                                                  env->regs[2],
./tools/qemu-xen-traditional/linux-user/main.c:                                                  env->regs[3],
./tools/qemu-xen-traditional/linux-user/main.c:                                                  env->regs[4],
./tools/qemu-xen-traditional/linux-user/main.c:                                                  env->regs[5]);
./tools/qemu-xen-traditional/linux-user/main.c:            addr = env->cp15.c6_insn;
./tools/qemu-xen-traditional/linux-user/main.c:            addr = env->cp15.c6_data;
./tools/qemu-xen-traditional/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen-traditional/linux-user/main.c:    index = (index + cwp * 16) % (16 * env->nwindows);
./tools/qemu-xen-traditional/linux-user/main.c:    if (index < 8 && env->cwp == env->nwindows - 1)
./tools/qemu-xen-traditional/linux-user/main.c:        index += 16 * env->nwindows;
./tools/qemu-xen-traditional/linux-user/main.c:    sp_ptr = env->regbase[get_reg_index(env, cwp1, 6)];
./tools/qemu-xen-traditional/linux-user/main.c:        put_user_ual(env->regbase[get_reg_index(env, cwp1, 8 + i)], sp_ptr);
./tools/qemu-xen-traditional/linux-user/main.c:    new_wim = ((env->wim >> 1) | (env->wim << (env->nwindows - 1))) &
./tools/qemu-xen-traditional/linux-user/main.c:        ((1LL << env->nwindows) - 1);
./tools/qemu-xen-traditional/linux-user/main.c:    save_window_offset(env, cpu_cwp_dec(env, env->cwp - 2));
./tools/qemu-xen-traditional/linux-user/main.c:    env->wim = new_wim;
./tools/qemu-xen-traditional/linux-user/main.c:    save_window_offset(env, cpu_cwp_dec(env, env->cwp - 2));
./tools/qemu-xen-traditional/linux-user/main.c:    env->cansave++;
./tools/qemu-xen-traditional/linux-user/main.c:    env->canrestore--;
./tools/qemu-xen-traditional/linux-user/main.c:    new_wim = ((env->wim << 1) | (env->wim >> (env->nwindows - 1))) &
./tools/qemu-xen-traditional/linux-user/main.c:        ((1LL << env->nwindows) - 1);
./tools/qemu-xen-traditional/linux-user/main.c:    cwp1 = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen-traditional/linux-user/main.c:    sp_ptr = env->regbase[get_reg_index(env, cwp1, 6)];
./tools/qemu-xen-traditional/linux-user/main.c:        get_user_ual(env->regbase[get_reg_index(env, cwp1, 8 + i)], sp_ptr);
./tools/qemu-xen-traditional/linux-user/main.c:    env->canrestore++;
./tools/qemu-xen-traditional/linux-user/main.c:    if (env->cleanwin < env->nwindows - 1)
./tools/qemu-xen-traditional/linux-user/main.c:        env->cleanwin++;
./tools/qemu-xen-traditional/linux-user/main.c:    env->cansave--;
./tools/qemu-xen-traditional/linux-user/main.c:    env->wim = new_wim;
./tools/qemu-xen-traditional/linux-user/main.c:        cwp1 = cpu_cwp_inc(env, env->cwp + offset);
./tools/qemu-xen-traditional/linux-user/main.c:        if (env->wim & (1 << cwp1))
./tools/qemu-xen-traditional/linux-user/main.c:        if (env->canrestore == 0)
./tools/qemu-xen-traditional/linux-user/main.c:        env->cansave++;
./tools/qemu-xen-traditional/linux-user/main.c:        env->canrestore--;
./tools/qemu-xen-traditional/linux-user/main.c:    cwp1 = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen-traditional/linux-user/main.c:    env->wim = 1 << cwp1;
./tools/qemu-xen-traditional/linux-user/main.c:            ret = do_syscall (env, env->gregs[1],
./tools/qemu-xen-traditional/linux-user/main.c:                              env->regwptr[0], env->regwptr[1],
./tools/qemu-xen-traditional/linux-user/main.c:                              env->regwptr[2], env->regwptr[3],
./tools/qemu-xen-traditional/linux-user/main.c:                              env->regwptr[4], env->regwptr[5]);
./tools/qemu-xen-traditional/linux-user/main.c:                env->xcc |= PSR_CARRY;
./tools/qemu-xen-traditional/linux-user/main.c:                env->psr |= PSR_CARRY;
./tools/qemu-xen-traditional/linux-user/main.c:                env->xcc &= ~PSR_CARRY;
./tools/qemu-xen-traditional/linux-user/main.c:                env->psr &= ~PSR_CARRY;
./tools/qemu-xen-traditional/linux-user/main.c:            env->regwptr[0] = ret;
./tools/qemu-xen-traditional/linux-user/main.c:            env->pc = env->npc;
./tools/qemu-xen-traditional/linux-user/main.c:            env->npc = env->npc + 4;
./tools/qemu-xen-traditional/linux-user/main.c:            env->pc = env->npc;
./tools/qemu-xen-traditional/linux-user/main.c:            env->npc = env->npc + 4;
./tools/qemu-xen-traditional/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen-traditional/linux-user/main.c:                info._sifields._sigfault._addr = env->mmuregs[4];
./tools/qemu-xen-traditional/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen-traditional/linux-user/main.c:                    info._sifields._sigfault._addr = env->dmmuregs[4];
./tools/qemu-xen-traditional/linux-user/main.c:                    info._sifields._sigfault._addr = env->tsptr->tpc;
./tools/qemu-xen-traditional/linux-user/main.c:                      env->spr[SPR_DAR]);
./tools/qemu-xen-traditional/linux-user/main.c:            switch (env->error_code & 0xFF000000) {
./tools/qemu-xen-traditional/linux-user/main.c:                          env->error_code);
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->nip;
./tools/qemu-xen-traditional/linux-user/main.c:                      env->spr[SPR_SRR0]);
./tools/qemu-xen-traditional/linux-user/main.c:            switch (env->error_code & 0xFF000000) {
./tools/qemu-xen-traditional/linux-user/main.c:                          env->error_code);
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen-traditional/linux-user/main.c:            switch (env->error_code & ~0xF) {
./tools/qemu-xen-traditional/linux-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen-traditional/linux-user/main.c:                              env->error_code);
./tools/qemu-xen-traditional/linux-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen-traditional/linux-user/main.c:                              env->error_code & 0xF);
./tools/qemu-xen-traditional/linux-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen-traditional/linux-user/main.c:                              env->error_code & 0xF);
./tools/qemu-xen-traditional/linux-user/main.c:                          env->error_code);
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen-traditional/linux-user/main.c:            printf("syscall %d 0x%08x 0x%08x 0x%08x 0x%08x\n", env->gpr[0],
./tools/qemu-xen-traditional/linux-user/main.c:                   env->gpr[3], env->gpr[4], env->gpr[5], env->gpr[6]);
./tools/qemu-xen-traditional/linux-user/main.c:            env->crf[0] &= ~0x1;
./tools/qemu-xen-traditional/linux-user/main.c:            ret = do_syscall(env, env->gpr[0], env->gpr[3], env->gpr[4],
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gpr[5], env->gpr[6], env->gpr[7],
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gpr[8]);
./tools/qemu-xen-traditional/linux-user/main.c:                env->crf[0] |= 0x1;
./tools/qemu-xen-traditional/linux-user/main.c:            env->gpr[3] = ret;
./tools/qemu-xen-traditional/linux-user/main.c:            syscall_num = env->active_tc.gpr[2] - 4000;
./tools/qemu-xen-traditional/linux-user/main.c:            env->active_tc.PC += 4;
./tools/qemu-xen-traditional/linux-user/main.c:                sp_reg = env->active_tc.gpr[29];
./tools/qemu-xen-traditional/linux-user/main.c:                ret = do_syscall(env, env->active_tc.gpr[2],
./tools/qemu-xen-traditional/linux-user/main.c:                                 env->active_tc.gpr[4],
./tools/qemu-xen-traditional/linux-user/main.c:                                 env->active_tc.gpr[5],
./tools/qemu-xen-traditional/linux-user/main.c:                                 env->active_tc.gpr[6],
./tools/qemu-xen-traditional/linux-user/main.c:                                 env->active_tc.gpr[7],
./tools/qemu-xen-traditional/linux-user/main.c:                env->active_tc.gpr[7] = 1; /* error flag */
./tools/qemu-xen-traditional/linux-user/main.c:                env->active_tc.gpr[7] = 0; /* error flag */
./tools/qemu-xen-traditional/linux-user/main.c:            env->active_tc.gpr[2] = ret;
./tools/qemu-xen-traditional/linux-user/main.c:            env->pc += 2;
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gregs[3],
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gregs[4],
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gregs[5],
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gregs[6],
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gregs[7],
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gregs[0],
./tools/qemu-xen-traditional/linux-user/main.c:                             env->gregs[1]);
./tools/qemu-xen-traditional/linux-user/main.c:            env->gregs[0] = ret;
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->tea;
./tools/qemu-xen-traditional/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen-traditional/linux-user/main.c:                info._sifields._sigfault._addr = env->pregs[PR_EDA];
./tools/qemu-xen-traditional/linux-user/main.c:                             env->regs[9], 
./tools/qemu-xen-traditional/linux-user/main.c:                             env->regs[10], 
./tools/qemu-xen-traditional/linux-user/main.c:                             env->regs[11], 
./tools/qemu-xen-traditional/linux-user/main.c:                             env->regs[12], 
./tools/qemu-xen-traditional/linux-user/main.c:                             env->regs[13], 
./tools/qemu-xen-traditional/linux-user/main.c:                             env->pregs[7], 
./tools/qemu-xen-traditional/linux-user/main.c:                             env->pregs[11]);
./tools/qemu-xen-traditional/linux-user/main.c:            env->regs[10] = ret;
./tools/qemu-xen-traditional/linux-user/main.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/main.c:                    nr = lduw(env->pc + 2);
./tools/qemu-xen-traditional/linux-user/main.c:                    env->pc += 4;
./tools/qemu-xen-traditional/linux-user/main.c:            env->pc += 4;
./tools/qemu-xen-traditional/linux-user/main.c:            do_m68k_semihosting(env, env->dregs[0]);
./tools/qemu-xen-traditional/linux-user/main.c:            info._sifields._sigfault._addr = env->pc;
./tools/qemu-xen-traditional/linux-user/main.c:                n = env->dregs[0];
./tools/qemu-xen-traditional/linux-user/main.c:                env->pc += 2;
./tools/qemu-xen-traditional/linux-user/main.c:                env->dregs[0] = do_syscall(env,
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->dregs[1],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->dregs[2],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->dregs[3],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->dregs[4],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->dregs[5],
./tools/qemu-xen-traditional/linux-user/main.c:                                          env->aregs[0]);
./tools/qemu-xen-traditional/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen-traditional/linux-user/main.c:                info._sifields._sigfault._addr = env->mmu.ar;
./tools/qemu-xen-traditional/linux-user/main.c:    env->opaque = ts;
./tools/qemu-xen-traditional/linux-user/main.c:    env->cr[0] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK;
./tools/qemu-xen-traditional/linux-user/main.c:    env->hflags |= HF_PE_MASK;
./tools/qemu-xen-traditional/linux-user/main.c:    if (env->cpuid_features & CPUID_SSE) {
./tools/qemu-xen-traditional/linux-user/main.c:        env->cr[4] |= CR4_OSFXSR_MASK;
./tools/qemu-xen-traditional/linux-user/main.c:        env->hflags |= HF_OSFXSR_MASK;
./tools/qemu-xen-traditional/linux-user/main.c:    if (!(env->cpuid_ext2_features & CPUID_EXT2_LM)) {
./tools/qemu-xen-traditional/linux-user/main.c:    env->cr[4] |= CR4_PAE_MASK;
./tools/qemu-xen-traditional/linux-user/main.c:    env->efer |= MSR_EFER_LMA | MSR_EFER_LME;
./tools/qemu-xen-traditional/linux-user/main.c:    env->hflags |= HF_LMA_MASK;
./tools/qemu-xen-traditional/linux-user/main.c:    env->eflags |= IF_MASK;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EAX] = regs->rax;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EBX] = regs->rbx;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_ECX] = regs->rcx;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EDX] = regs->rdx;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_ESI] = regs->rsi;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EDI] = regs->rdi;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EBP] = regs->rbp;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_ESP] = regs->rsp;
./tools/qemu-xen-traditional/linux-user/main.c:    env->eip = regs->rip;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EAX] = regs->eax;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EBX] = regs->ebx;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_ECX] = regs->ecx;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EDX] = regs->edx;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_ESI] = regs->esi;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EDI] = regs->edi;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_EBP] = regs->ebp;
./tools/qemu-xen-traditional/linux-user/main.c:    env->regs[R_ESP] = regs->esp;
./tools/qemu-xen-traditional/linux-user/main.c:    env->eip = regs->eip;
./tools/qemu-xen-traditional/linux-user/main.c:    env->idt.limit = 511;
./tools/qemu-xen-traditional/linux-user/main.c:    env->idt.limit = 255;
./tools/qemu-xen-traditional/linux-user/main.c:    env->idt.base = target_mmap(0, sizeof(uint64_t) * (env->idt.limit + 1),
./tools/qemu-xen-traditional/linux-user/main.c:    idt_table = g2h(env->idt.base);
./tools/qemu-xen-traditional/linux-user/main.c:        env->gdt.base = target_mmap(0, sizeof(uint64_t) * TARGET_GDT_ENTRIES,
./tools/qemu-xen-traditional/linux-user/main.c:        env->gdt.limit = sizeof(uint64_t) * TARGET_GDT_ENTRIES - 1;
./tools/qemu-xen-traditional/linux-user/main.c:        gdt_table = g2h(env->gdt.base);
./tools/qemu-xen-traditional/linux-user/main.c:    env->segs[R_FS].selector = 0;
./tools/qemu-xen-traditional/linux-user/main.c:            env->regs[i] = regs->uregs[i];
./tools/qemu-xen-traditional/linux-user/main.c:	env->pc = regs->pc;
./tools/qemu-xen-traditional/linux-user/main.c:	env->npc = regs->npc;
./tools/qemu-xen-traditional/linux-user/main.c:        env->y = regs->y;
./tools/qemu-xen-traditional/linux-user/main.c:            env->gregs[i] = regs->u_regs[i];
./tools/qemu-xen-traditional/linux-user/main.c:            env->regwptr[i] = regs->u_regs[i + 8];
./tools/qemu-xen-traditional/linux-user/main.c:        env->msr &= ~((target_ulong)1 << MSR_SF);
./tools/qemu-xen-traditional/linux-user/main.c:        env->msr |= (target_ulong)1 << MSR_SF;
./tools/qemu-xen-traditional/linux-user/main.c:        env->nip = regs->nip;
./tools/qemu-xen-traditional/linux-user/main.c:            env->gpr[i] = regs->gpr[i];
./tools/qemu-xen-traditional/linux-user/main.c:        env->pc = regs->pc;
./tools/qemu-xen-traditional/linux-user/main.c:        env->dregs[0] = regs->d0;
./tools/qemu-xen-traditional/linux-user/main.c:        env->dregs[1] = regs->d1;
./tools/qemu-xen-traditional/linux-user/main.c:        env->dregs[2] = regs->d2;
./tools/qemu-xen-traditional/linux-user/main.c:        env->dregs[3] = regs->d3;
./tools/qemu-xen-traditional/linux-user/main.c:        env->dregs[4] = regs->d4;
./tools/qemu-xen-traditional/linux-user/main.c:        env->dregs[5] = regs->d5;
./tools/qemu-xen-traditional/linux-user/main.c:        env->dregs[6] = regs->d6;
./tools/qemu-xen-traditional/linux-user/main.c:        env->dregs[7] = regs->d7;
./tools/qemu-xen-traditional/linux-user/main.c:        env->aregs[0] = regs->a0;
./tools/qemu-xen-traditional/linux-user/main.c:        env->aregs[1] = regs->a1;
./tools/qemu-xen-traditional/linux-user/main.c:        env->aregs[2] = regs->a2;
./tools/qemu-xen-traditional/linux-user/main.c:        env->aregs[3] = regs->a3;
./tools/qemu-xen-traditional/linux-user/main.c:        env->aregs[4] = regs->a4;
./tools/qemu-xen-traditional/linux-user/main.c:        env->aregs[5] = regs->a5;
./tools/qemu-xen-traditional/linux-user/main.c:        env->aregs[6] = regs->a6;
./tools/qemu-xen-traditional/linux-user/main.c:        env->aregs[7] = regs->usp;
./tools/qemu-xen-traditional/linux-user/main.c:        env->sr = regs->sr;
./tools/qemu-xen-traditional/linux-user/main.c:            env->active_tc.gpr[i] = regs->regs[i];
./tools/qemu-xen-traditional/linux-user/main.c:        env->active_tc.PC = regs->cp0_epc;
./tools/qemu-xen-traditional/linux-user/main.c:            env->gregs[i] = regs->regs[i];
./tools/qemu-xen-traditional/linux-user/main.c:        env->pc = regs->pc;
./tools/qemu-xen-traditional/linux-user/main.c:            env->ir[i] = ((abi_ulong *)regs)[i];
./tools/qemu-xen-traditional/linux-user/main.c:        env->ipr[IPR_USP] = regs->usp;
./tools/qemu-xen-traditional/linux-user/main.c:        env->ir[30] = regs->usp;
./tools/qemu-xen-traditional/linux-user/main.c:        env->pc = regs->pc;
./tools/qemu-xen-traditional/linux-user/main.c:        env->unique = regs->unique;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[0] = regs->r0;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[1] = regs->r1;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[2] = regs->r2;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[3] = regs->r3;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[4] = regs->r4;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[5] = regs->r5;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[6] = regs->r6;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[7] = regs->r7;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[8] = regs->r8;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[9] = regs->r9;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[10] = regs->r10;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[11] = regs->r11;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[12] = regs->r12;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[13] = regs->r13;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[14] = info->start_stack;
./tools/qemu-xen-traditional/linux-user/main.c:	    env->regs[15] = regs->acr;	    
./tools/qemu-xen-traditional/linux-user/main.c:	    env->pc = regs->erp;
./tools/qemu-xen-traditional/linux-user/syscall.c:    __get_user(tv->tv_sec, &target_tv->tv_sec);
./tools/qemu-xen-traditional/linux-user/syscall.c:    __get_user(tv->tv_usec, &target_tv->tv_usec);
./tools/qemu-xen-traditional/linux-user/syscall.c:    __put_user(tv->tv_sec, &target_tv->tv_sec);
./tools/qemu-xen-traditional/linux-user/syscall.c:    __put_user(tv->tv_usec, &target_tv->tv_usec);
./tools/qemu-xen-traditional/linux-user/syscall.c:        env->ldt.base = target_mmap(0,
./tools/qemu-xen-traditional/linux-user/syscall.c:        if (env->ldt.base == -1)
./tools/qemu-xen-traditional/linux-user/syscall.c:        memset(g2h(env->ldt.base), 0,
./tools/qemu-xen-traditional/linux-user/syscall.c:        env->ldt.limit = 0xffff;
./tools/qemu-xen-traditional/linux-user/syscall.c:        ldt_table = g2h(env->ldt.base);
./tools/qemu-xen-traditional/linux-user/syscall.c:    uint64_t *gdt_table = g2h(env->gdt.base);
./tools/qemu-xen-traditional/linux-user/syscall.c:    uint64_t *gdt_table = g2h(env->gdt.base);
./tools/qemu-xen-traditional/linux-user/syscall.c:        env->segs[idx].base = addr;
./tools/qemu-xen-traditional/linux-user/syscall.c:        val = env->segs[idx].base;
./tools/qemu-xen-traditional/linux-user/syscall.c:        new_env->opaque = ts;
./tools/qemu-xen-traditional/linux-user/syscall.c:            ts = (TaskState *)env->opaque;
./tools/qemu-xen-traditional/linux-user/syscall.c:		env->active_tc.gpr[3] = host_pipe[1];
./tools/qemu-xen-traditional/linux-user/elfload.c:    int family = (thread_env->cpuid_version >> 8) & 0xff;
./tools/qemu-xen-traditional/linux-user/elfload.c:  return thread_env->cpuid_features;
./tools/qemu-xen-traditional/linux-user/signal.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/signal.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/signal.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->segs[R_GS].selector, (unsigned int *)&sc->gs);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->segs[R_FS].selector, (unsigned int *)&sc->fs);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->segs[R_ES].selector, (unsigned int *)&sc->es);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->segs[R_DS].selector, (unsigned int *)&sc->ds);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_EDI], &sc->edi);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_ESI], &sc->esi);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_EBP], &sc->ebp);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_ESP], &sc->esp);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_EBX], &sc->ebx);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_EDX], &sc->edx);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_ECX], &sc->ecx);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_EAX], &sc->eax);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->exception_index, &sc->trapno);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->error_code, &sc->err);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->eip, &sc->eip);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->segs[R_CS].selector, (unsigned int *)&sc->cs);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->eflags, &sc->eflags);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regs[R_ESP], &sc->esp_at_signal);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->segs[R_SS].selector, (unsigned int *)&sc->ss);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->cr[2], &sc->cr2);
./tools/qemu-xen-traditional/linux-user/signal.c:	esp = env->regs[R_ESP];
./tools/qemu-xen-traditional/linux-user/signal.c:        if ((env->segs[R_SS].selector & 0xffff) != __USER_DS &&
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regs[R_ESP] = frame_addr;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->eip = ka->_sa_handler;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->eflags &= ~TF_MASK;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regs[R_ESP] = frame_addr;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->eip = ka->_sa_handler;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->eflags &= ~TF_MASK;
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[R_EDI] = tswapl(sc->edi);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[R_ESI] = tswapl(sc->esi);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[R_EBP] = tswapl(sc->ebp);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[R_ESP] = tswapl(sc->esp);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[R_EBX] = tswapl(sc->ebx);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[R_EDX] = tswapl(sc->edx);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[R_ECX] = tswapl(sc->ecx);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->eip = tswapl(sc->eip);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->eflags = (env->eflags & ~0x40DD5) | (tmpflags & 0x40DD5);
./tools/qemu-xen-traditional/linux-user/signal.c:    abi_ulong frame_addr = env->regs[R_ESP] - 8;
./tools/qemu-xen-traditional/linux-user/signal.c:        frame_addr = env->regs[R_ESP] - 4;
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[0], &sc->arm_r0);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[1], &sc->arm_r1);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[2], &sc->arm_r2);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[3], &sc->arm_r3);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[4], &sc->arm_r4);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[5], &sc->arm_r5);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[6], &sc->arm_r6);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[7], &sc->arm_r7);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[8], &sc->arm_r8);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[9], &sc->arm_r9);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[10], &sc->arm_r10);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[11], &sc->arm_fp);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[12], &sc->arm_ip);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[13], &sc->arm_sp);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[14], &sc->arm_lr);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[15], &sc->arm_pc);
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regs[0] = usig;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regs[13] = frame_addr;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regs[14] = retcode;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regs[15] = handler & (thumb ? ~1 : ~3);
./tools/qemu-xen-traditional/linux-user/signal.c:	env->thumb = thumb;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->cpsr = cpsr;
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[1] = info_addr;
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[2] = uc_addr;
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[1] = info_addr;
./tools/qemu-xen-traditional/linux-user/signal.c:        env->regs[2] = uc_addr;
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[0], &sc->arm_r0, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[1], &sc->arm_r1, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[2], &sc->arm_r2, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[3], &sc->arm_r3, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[4], &sc->arm_r4, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[5], &sc->arm_r5, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[6], &sc->arm_r6, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[7], &sc->arm_r7, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[8], &sc->arm_r8, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[9], &sc->arm_r9, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[10], &sc->arm_r10, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[11], &sc->arm_fp, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[12], &sc->arm_ip, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[13], &sc->arm_sp, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[14], &sc->arm_lr, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user_error(env->regs[15], &sc->arm_pc, err);
./tools/qemu-xen-traditional/linux-user/signal.c:	if (env->regs[13] & 7)
./tools/qemu-xen-traditional/linux-user/signal.c:        frame_addr = env->regs[13];
./tools/qemu-xen-traditional/linux-user/signal.c:        return env->regs[0];
./tools/qemu-xen-traditional/linux-user/signal.c:	if (env->regs[13] & 7)
./tools/qemu-xen-traditional/linux-user/signal.c:        frame_addr = env->regs[13];
./tools/qemu-xen-traditional/linux-user/signal.c:	return env->regs[0];
./tools/qemu-xen-traditional/linux-user/signal.c:	if (env->regs[13] & 7)
./tools/qemu-xen-traditional/linux-user/signal.c:        frame_addr = env->regs[13];
./tools/qemu-xen-traditional/linux-user/signal.c:	return env->regs[0];
./tools/qemu-xen-traditional/linux-user/signal.c:	if (env->regs[13] & 7)
./tools/qemu-xen-traditional/linux-user/signal.c:        frame_addr = env->regs[13];
./tools/qemu-xen-traditional/linux-user/signal.c:	return env->regs[0];
./tools/qemu-xen-traditional/linux-user/signal.c:	sp = env->regwptr[UREG_FP];
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->psr, &si->si_regs.psr);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->pc, &si->si_regs.pc);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->npc, &si->si_regs.npc);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->y, &si->si_regs.y);
./tools/qemu-xen-traditional/linux-user/signal.c:		err |= __put_user(env->gregs[i], &si->si_regs.u_regs[i]);
./tools/qemu-xen-traditional/linux-user/signal.c:		err |= __put_user(env->regwptr[UREG_I0 + i], &si->si_regs.u_regs[i+8]);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regwptr[UREG_SP], &sc->sigc_sp);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->pc, &sc->sigc_pc);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->npc, &sc->sigc_npc);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->psr, &sc->sigc_psr);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->gregs[1], &sc->sigc_g1);
./tools/qemu-xen-traditional/linux-user/signal.c:	err |= __put_user(env->regwptr[UREG_O0], &sc->sigc_o0);
./tools/qemu-xen-traditional/linux-user/signal.c:	//fprintf(stderr, "sf: %x pc %x fp %x sp %x\n", sf, env->pc, env->regwptr[UREG_FP], env->regwptr[UREG_SP]);
./tools/qemu-xen-traditional/linux-user/signal.c:	  	err |= __put_user(env->regwptr[i + UREG_L0], &sf->ss.locals[i]);
./tools/qemu-xen-traditional/linux-user/signal.c:	  	err |= __put_user(env->regwptr[i + UREG_I0], &sf->ss.ins[i]);
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regwptr[UREG_FP] = sf_addr;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regwptr[UREG_I0] = sig;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regwptr[UREG_I1] = sf_addr + 
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regwptr[UREG_I2] = sf_addr + 
./tools/qemu-xen-traditional/linux-user/signal.c:	env->pc = ka->_sa_handler;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->npc = (env->pc + 4);
./tools/qemu-xen-traditional/linux-user/signal.c:		env->regwptr[UREG_I7] = ka->sa_restorer;
./tools/qemu-xen-traditional/linux-user/signal.c:		env->regwptr[UREG_I7] = sf_addr + 
./tools/qemu-xen-traditional/linux-user/signal.c:        err = __copy_from_user(&env->fpr[0], &fpu->si_float_regs[0],
./tools/qemu-xen-traditional/linux-user/signal.c:        err |= __get_user(env->fsr, &fpu->si_fsr);
./tools/qemu-xen-traditional/linux-user/signal.c:        sf_addr = env->regwptr[UREG_FP];
./tools/qemu-xen-traditional/linux-user/signal.c:	fprintf(stderr, "sf: %x pc %x fp %x sp %x\n", sf, env->pc, env->regwptr[UREG_FP], env->regwptr[UREG_SP]);
./tools/qemu-xen-traditional/linux-user/signal.c:        env->psr = (up_psr & (PSR_ICC /* | PSR_EF */))
./tools/qemu-xen-traditional/linux-user/signal.c:                  | (env->psr & ~(PSR_ICC /* | PSR_EF */));
./tools/qemu-xen-traditional/linux-user/signal.c:	env->pc = pc;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->npc = npc;
./tools/qemu-xen-traditional/linux-user/signal.c:        err |= __get_user(env->y, &sf->info.si_regs.y);
./tools/qemu-xen-traditional/linux-user/signal.c:		err |= __get_user(env->gregs[i], &sf->info.si_regs.u_regs[i]);
./tools/qemu-xen-traditional/linux-user/signal.c:		err |= __get_user(env->regwptr[i + UREG_I0], &sf->info.si_regs.u_regs[i+8]);
./tools/qemu-xen-traditional/linux-user/signal.c:        return env->regwptr[0];
./tools/qemu-xen-traditional/linux-user/signal.c:    ucp_addr = env->regwptr[UREG_I0];
./tools/qemu-xen-traditional/linux-user/signal.c:    if (env->regwptr[UREG_I1]) {
./tools/qemu-xen-traditional/linux-user/signal.c:    env->pc = pc;
./tools/qemu-xen-traditional/linux-user/signal.c:    env->npc = npc;
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->y, &((*grp)[MC_Y]));
./tools/qemu-xen-traditional/linux-user/signal.c:    env->asi = (tstate >> 24) & 0xff;
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->gregs[1], (&(*grp)[MC_G1]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->gregs[2], (&(*grp)[MC_G2]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->gregs[3], (&(*grp)[MC_G3]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->gregs[4], (&(*grp)[MC_G4]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->gregs[5], (&(*grp)[MC_G5]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->gregs[6], (&(*grp)[MC_G6]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->gregs[7], (&(*grp)[MC_G7]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I0], (&(*grp)[MC_O0]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I1], (&(*grp)[MC_O1]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I2], (&(*grp)[MC_O2]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I3], (&(*grp)[MC_O3]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I4], (&(*grp)[MC_O4]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I5], (&(*grp)[MC_O5]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I6], (&(*grp)[MC_O6]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I7], (&(*grp)[MC_O7]));
./tools/qemu-xen-traditional/linux-user/signal.c:    w_addr = TARGET_STACK_BIAS+env->regwptr[UREG_I6];
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->fprs, &(ucp->uc_mcontext.mc_fpregs.mcfpu_fprs));
./tools/qemu-xen-traditional/linux-user/signal.c:        dst = env->fpr;
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->fsr,
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __get_user(env->gsr,
./tools/qemu-xen-traditional/linux-user/signal.c:    ucp_addr = env->regwptr[UREG_I0];
./tools/qemu-xen-traditional/linux-user/signal.c:    env->pc = env->npc;
./tools/qemu-xen-traditional/linux-user/signal.c:    env->npc += 4;
./tools/qemu-xen-traditional/linux-user/signal.c:    //    err |= __put_user(env->tstate, &((*grp)[MC_TSTATE]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->pc, &((*grp)[MC_PC]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->npc, &((*grp)[MC_NPC]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->y, &((*grp)[MC_Y]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->gregs[1], &((*grp)[MC_G1]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->gregs[2], &((*grp)[MC_G2]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->gregs[3], &((*grp)[MC_G3]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->gregs[4], &((*grp)[MC_G4]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->gregs[5], &((*grp)[MC_G5]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->gregs[6], &((*grp)[MC_G6]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->gregs[7], &((*grp)[MC_G7]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I0], &((*grp)[MC_O0]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I1], &((*grp)[MC_O1]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I2], &((*grp)[MC_O2]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I3], &((*grp)[MC_O3]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I4], &((*grp)[MC_O4]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I5], &((*grp)[MC_O5]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I6], &((*grp)[MC_O6]));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I7], &((*grp)[MC_O7]));
./tools/qemu-xen-traditional/linux-user/signal.c:    w_addr = TARGET_STACK_BIAS+env->regwptr[UREG_I6];
./tools/qemu-xen-traditional/linux-user/signal.c:        src = env->fpr;
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->fsr, &(mcp->mc_fpregs.mcfpu_fsr));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->gsr, &(mcp->mc_fpregs.mcfpu_gsr));
./tools/qemu-xen-traditional/linux-user/signal.c:    err |= __put_user(env->fprs, &(mcp->mc_fpregs.mcfpu_fprs));
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[0], &sc->regs.r0);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[1], &sc->regs.r1);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[2], &sc->regs.r2);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[3], &sc->regs.r3);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[4], &sc->regs.r4);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[5], &sc->regs.r5);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[6], &sc->regs.r6);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[7], &sc->regs.r7);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[8], &sc->regs.r8);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[9], &sc->regs.r9);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[10], &sc->regs.r10);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[11], &sc->regs.r11);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[12], &sc->regs.r12);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[13], &sc->regs.r13);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[14], &sc->usp);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->regs[15], &sc->regs.acr);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->pregs[PR_MOF], &sc->regs.mof);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->pregs[PR_SRP], &sc->regs.srp);
./tools/qemu-xen-traditional/linux-user/signal.c:	__put_user(env->pc, &sc->regs.erp);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[0], &sc->regs.r0);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[1], &sc->regs.r1);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[2], &sc->regs.r2);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[3], &sc->regs.r3);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[4], &sc->regs.r4);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[5], &sc->regs.r5);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[6], &sc->regs.r6);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[7], &sc->regs.r7);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[8], &sc->regs.r8);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[9], &sc->regs.r9);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[10], &sc->regs.r10);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[11], &sc->regs.r11);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[12], &sc->regs.r12);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[13], &sc->regs.r13);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[14], &sc->usp);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->regs[15], &sc->regs.acr);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->pregs[PR_MOF], &sc->regs.mof);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->pregs[PR_SRP], &sc->regs.srp);
./tools/qemu-xen-traditional/linux-user/signal.c:	__get_user(env->pc, &sc->regs.erp);
./tools/qemu-xen-traditional/linux-user/signal.c:	sp = (env->regs[R_SP] & ~3);
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regs[R_SP] = (uint32_t) (unsigned long) frame;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->regs[10] = sig;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->pc = (unsigned long) ka->_sa_handler;
./tools/qemu-xen-traditional/linux-user/signal.c:	env->pregs[PR_SRP] = (uint32_t) (unsigned long) &frame->retcode[0];
./tools/qemu-xen-traditional/linux-user/signal.c:	frame_addr = env->regs[R_SP];
./tools/qemu-xen-traditional/linux-user/signal.c:	return env->regs[10];
./tools/qemu-xen-traditional/linux-user/signal.c:    TaskState *ts = cpu_env->opaque;
./tools/qemu-xen-traditional/linux-user/signal.c:            if (env->eflags & VM_MASK)
./tools/qemu-xen-traditional/linux-user/flatload.c: * create_flat_tables() parses the env- and arg-strings in new user
./tools/qemu-xen-traditional/arm-semi.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/arm-semi.c:        env->regs[0] = ret;
./tools/qemu-xen-traditional/arm-semi.c:        switch (env->regs[0]) {
./tools/qemu-xen-traditional/arm-semi.c:            env->regs[0] = arm_semi_syscall_len - ret;
./tools/qemu-xen-traditional/arm-semi.c:            env->regs[0] = 0;
./tools/qemu-xen-traditional/arm-semi.c:            env->regs[0] = ret;
./tools/qemu-xen-traditional/arm-semi.c:    cpu_memory_rw_debug(env, env->regs[13]-64+32, (uint8_t *)&size, 4, 0);
./tools/qemu-xen-traditional/arm-semi.c:    env->regs[0] = be32_to_cpu(size);
./tools/qemu-xen-traditional/arm-semi.c:    ((TaskState *)env->opaque)->swi_errno = err;
./tools/qemu-xen-traditional/arm-semi.c:    TaskState *ts = env->opaque;
./tools/qemu-xen-traditional/arm-semi.c:    nr = env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:    args = env->regs[1];
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:                return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            ret = env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:			   ARG(0), env->regs[13]-64);
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            ret = env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/qemu-xen-traditional/arm-semi.c:            return env->regs[0];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		priv->devs = NULL;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		priv->kc = NULL;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	if (priv->kc == NULL) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		if ((priv->kc = kstat_open()) == NULL) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	for (dev = priv->devs; dev != NULL; dev = tmp) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		tmp = dev->next;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		if (dev->used || dev->type != type) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			dev->next = start;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	priv->devs = start;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	for (dev = priv->devs; dev != NULL; dev = dev->next)
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		dev->used = 0;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	if (priv->kc != NULL)
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	 	kstat_close(priv->kc);
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	priv->kc = NULL;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	if (kstat_chain_update(priv->kc) == -1)
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	if (dev->type == DEVICE_NIC) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		ksp = kstat_lookup(priv->kc, "link", 0, (char *)dev->name);
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		ksp = kstat_lookup(priv->kc, "xdb", dev->instance,
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	if (kstat_read(priv->kc, ksp, NULL) == -1)
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	dev->used = 1;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	bcopy(&(dev->stats[1][0]), &(dev->stats[0][0]), sizeof(dev->stats[0]));
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	if (dev->type == DEVICE_NIC) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		if (!kstat_get(ksp, "rbytes64", &dev->stats[1][0]) ||
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    !kstat_get(ksp, "ipackets64", &dev->stats[1][1]) ||
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    !kstat_get(ksp, "ierrors", &dev->stats[1][2]) ||
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    !kstat_get(ksp, "obytes64", &dev->stats[1][3]) ||
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    !kstat_get(ksp, "opackets64", &dev->stats[1][4]) ||
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    !kstat_get(ksp, "oerrors", &dev->stats[1][5]))
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		dev->stats[1][6] = 0;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		dev->stats[1][7] = 0;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		if (!kstat_get(ksp, "rd_reqs", &dev->stats[1][0]) ||
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    !kstat_get(ksp, "wr_reqs", &dev->stats[1][1]) ||
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    !kstat_get(ksp, "oo_reqs", &dev->stats[1][2]))
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	dev->type = type;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		strcpy(dev->name, name);
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	dev->instance = instance;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	dev->domid = domid;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	dev->next = priv->devs;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	priv->devs = dev;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	for (dev = priv->devs; dev != NULL; dev = dev->next) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		if (dev->type == DEVICE_NIC && dev->domid == dom->id &&
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    strcmp(name, dev->name) == 0) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			net->rbytes = dev->stats[1][0] - dev->stats[0][0];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			net->rpackets = dev->stats[1][1] - dev->stats[0][1];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			net->rerrs = dev->stats[1][2] - dev->stats[0][2];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			net->tbytes = dev->stats[1][3] - dev->stats[0][3];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			net->tpackets = dev->stats[1][4] - dev->stats[0][4];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			net->terrs = dev->stats[1][5] - dev->stats[0][5];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			net->rdrop = dev->stats[1][6] - dev->stats[0][6];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			net->tdrop = dev->stats[1][7] - dev->stats[0][7];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	for (dev = priv->devs; dev != NULL; dev = dev->next)
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		dev->used = 0;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	for (dev = priv->devs; dev != NULL; dev = dev->next) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		if (dev->type == DEVICE_XDB && dev->domid == dom->id &&
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		    dev->instance == instance) {
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			vbd->dev = dev->instance;
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			vbd->rd_reqs = dev->stats[1][0] - dev->stats[0][0];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			vbd->wr_reqs = dev->stats[1][1] - dev->stats[0][1];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:			vbd->oo_reqs = dev->stats[1][2] - dev->stats[0][2];
./tools/xenstat/libxenstat/src/xenstat_solaris.c:	for (dev = priv->devs; dev != NULL; dev = dev->next)
./tools/xenstat/libxenstat/src/xenstat_solaris.c:		dev->used = 0;
./tools/xenstat/libxenstat/src/xenstat_linux.c:	if (priv->procnetdev == NULL) {
./tools/xenstat/libxenstat/src/xenstat_linux.c:		priv->procnetdev = fopen("/proc/net/dev", "r");
./tools/xenstat/libxenstat/src/xenstat_linux.c:		if (priv->procnetdev == NULL) {
./tools/xenstat/libxenstat/src/xenstat_linux.c:			  priv->procnetdev) != 1) {
./tools/xenstat/libxenstat/src/xenstat_linux.c:	fseek(priv->procnetdev, sizeof(PROCNETDEV_HEADER) - 1,
./tools/xenstat/libxenstat/src/xenstat_linux.c:	while (fgets(line, 512, priv->procnetdev)) {
./tools/xenstat/libxenstat/src/xenstat_linux.c:	if (priv != NULL && priv->procnetdev != NULL)
./tools/xenstat/libxenstat/src/xenstat_linux.c:		fclose(priv->procnetdev);
./tools/xenstat/libxenstat/src/xenstat_linux.c:	if (priv->sysfsvbd == NULL) {
./tools/xenstat/libxenstat/src/xenstat_linux.c:		priv->sysfsvbd = opendir(SYSFS_VBD_PATH);
./tools/xenstat/libxenstat/src/xenstat_linux.c:		if (priv->sysfsvbd == NULL) {
./tools/xenstat/libxenstat/src/xenstat_linux.c:	rewinddir(priv->sysfsvbd);
./tools/xenstat/libxenstat/src/xenstat_linux.c:	for(dp = readdir(priv->sysfsvbd); dp != NULL ;
./tools/xenstat/libxenstat/src/xenstat_linux.c:	    dp = readdir(priv->sysfsvbd)) {
./tools/xenstat/libxenstat/src/xenstat_linux.c:	if (priv != NULL && priv->sysfsvbd != NULL)
./tools/xenstat/libxenstat/src/xenstat_linux.c:		closedir(priv->sysfsvbd);
./tools/xenstat/libxenstat/src/xenstat_netbsd.c:	if (priv != NULL && priv->procnetdev != NULL)
./tools/xenstat/libxenstat/src/xenstat_netbsd.c:		fclose(priv->procnetdev);
./tools/xenstat/libxenstat/src/xenstat_netbsd.c:	if (priv != NULL && priv->sysfsvbd != NULL)
./tools/xenstat/libxenstat/src/xenstat_netbsd.c:		closedir(priv->sysfsvbd);
./tools/libxl/libxl_event.c:    rc = OSEVENT_HOOK(fd_register, fd, &ev->for_app_reg, events, ev);
./tools/libxl/libxl_event.c:    ev->fd = fd;
./tools/libxl/libxl_event.c:    ev->events = events;
./tools/libxl/libxl_event.c:    ev->func = func;
./tools/libxl/libxl_event.c:    DBG("ev_fd=%p modify fd=%d events=%x", ev, ev->fd, events);
./tools/libxl/libxl_event.c:    rc = OSEVENT_HOOK(fd_modify, ev->fd, &ev->for_app_reg, events);
./tools/libxl/libxl_event.c:    ev->events = events;
./tools/libxl/libxl_event.c:    DBG("ev_fd=%p deregister fd=%d", ev, ev->fd);
./tools/libxl/libxl_event.c:    OSEVENT_HOOK_VOID(fd_deregister, ev->fd, ev->for_app_reg);
./tools/libxl/libxl_event.c:    ev->fd = -1;
./tools/libxl/libxl_event.c:                              timercmp(&ev->abs, &evsearch->abs, >));
./tools/libxl/libxl_event.c:    ev->infinite = 0;
./tools/libxl/libxl_event.c:    rc = OSEVENT_HOOK(timeout_register, &ev->for_app_reg, abs, ev);
./tools/libxl/libxl_event.c:    ev->infinite = 0;
./tools/libxl/libxl_event.c:    ev->abs = abs;
./tools/libxl/libxl_event.c:    if (!ev->infinite) {
./tools/libxl/libxl_event.c:        OSEVENT_HOOK_VOID(timeout_deregister, ev->for_app_reg);
./tools/libxl/libxl_event.c:               ev, rc, ev->func, ev->infinite,
./tools/libxl/libxl_event.c:               (unsigned long)ev->abs.tv_sec, (unsigned long)ev->abs.tv_usec);
./tools/libxl/libxl_event.c:    ev->func = func;
./tools/libxl/libxl_event.c:        ev->infinite = 1;
./tools/libxl/libxl_event.c:    ev->func = func;
./tools/libxl/libxl_event.c:    if (ev->infinite) {
./tools/libxl/libxl_event.c:        rc = OSEVENT_HOOK(timeout_modify, &ev->for_app_reg, abs);
./tools/libxl/libxl_event.c:        ev->abs = abs;
./tools/libxl/libxl_event.c:        ev->infinite = 1;
./tools/libxl/libxl_event.c:    ev->func = 0;
./tools/libxl/libxl_event.c:    assert(fd == ev->fd);
./tools/libxl/libxl_event.c:    revents &= ev->events;
./tools/libxl/libxl_event.c:        ev->func(egc, ev, fd, ev->events, revents);
./tools/libxl/libxl_event.c:    assert(!ev->infinite);
./tools/libxl/libxl_event.c:    ev->func(egc, ev, &ev->abs);
./tools/libxl/libxl_event.c:            ev, libxl_event_type_to_string(ev->type));
./tools/libxl/libxl_event.c:    ev->domid = domid;
./tools/libxl/libxl_event.c:    ev->for_user = for_user;
./tools/libxl/libxl_event.c:        if (!(typemask & ((uint64_t)1 << ev->type)))
./tools/libxl/libxl_event.c:            ev->u.operation_complete.rc = ao->rc;
./tools/libxl/libxl_event.c:            ao, ev, libxl_event_type_to_string(ev->type));
./tools/libxl/libxl_pci.c:    value = pcidev->domain << 16;
./tools/libxl/libxl_pci.c:    value |= (pcidev->bus & 0xff) << 8;
./tools/libxl/libxl_pci.c:    value |= (pcidev->dev & 0x1f) << 3;
./tools/libxl/libxl_pci.c:    value |= (pcidev->func & 0x7);
./tools/libxl/libxl_pci.c:    pcidev->domain = domain;
./tools/libxl/libxl_pci.c:    pcidev->bus = bus;
./tools/libxl/libxl_pci.c:    pcidev->dev = dev;
./tools/libxl/libxl_pci.c:    pcidev->func = func;
./tools/libxl/libxl_pci.c:    pcidev->vdevfn = vdevfn;
./tools/libxl/libxl_pci.c:    flexarray_append(back, libxl__sprintf(gc, PCI_BDF, pcidev->domain, pcidev->bus, pcidev->dev, pcidev->func));
./tools/libxl/libxl_pci.c:    flexarray_append(back, libxl__sprintf(gc, "dev-%d", num));
./tools/libxl/libxl_pci.c:    flexarray_append(back, libxl__sprintf(gc, PCI_BDF, pcidev->domain, pcidev->bus, pcidev->dev, pcidev->func));
./tools/libxl/libxl_pci.c:    if (pcidev->vdevfn)
./tools/libxl/libxl_pci.c:        flexarray_append_pair(back, libxl__sprintf(gc, "vdevfn-%d", num), libxl__sprintf(gc, "%x", pcidev->vdevfn));
./tools/libxl/libxl_pci.c:                             pcidev->msitranslate, pcidev->power_mgmt,
./tools/libxl/libxl_pci.c:                             pcidev->permissive));
./tools/libxl/libxl_pci.c:        xsdev = libxl__xs_read(gc, XBT_NULL, libxl__sprintf(gc, "%s/dev-%d", be_path, i));
./tools/libxl/libxl_pci.c:        if (domain == pcidev->domain && bus == pcidev->bus &&
./tools/libxl/libxl_pci.c:            pcidev->dev == dev && pcidev->func == func) {
./tools/libxl/libxl_pci.c:    xs_rm(ctx->xsh, t, libxl__sprintf(gc, "%s/dev-%d", be_path, i));
./tools/libxl/libxl_pci.c:    xs_rm(ctx->xsh, t, libxl__sprintf(gc, "%s/vdev-%d", be_path, i));
./tools/libxl/libxl_pci.c:        tmppath = libxl__sprintf(gc, "%s/dev-%d", be_path, j);
./tools/libxl/libxl_pci.c:        xs_write(ctx->xsh, t, libxl__sprintf(gc, "%s/dev-%d", be_path, j - 1), tmp, strlen(tmp));
./tools/libxl/libxl_pci.c:        tmppath = libxl__sprintf(gc, "%s/vdev-%d", be_path, j);
./tools/libxl/libxl_pci.c:            xs_write(ctx->xsh, t, libxl__sprintf(gc, "%s/vdev-%d", be_path, j - 1), tmp, strlen(tmp));
./tools/libxl/libxl_pci.c:                devpath = libxl__sprintf(gc, "/local/domain/0/backend/pci/%s/0/dev-%u",
./tools/libxl/libxl_pci.c:    buf = libxl__sprintf(gc, PCI_BDF, pcidev->domain, pcidev->bus,
./tools/libxl/libxl_pci.c:                         pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:                           pcidev->domain,
./tools/libxl/libxl_pci.c:                           pcidev->bus,
./tools/libxl/libxl_pci.c:                           pcidev->dev,
./tools/libxl/libxl_pci.c:                           pcidev->func);
./tools/libxl/libxl_pci.c:        if(dom == pcidev->domain
./tools/libxl/libxl_pci.c:           && bus == pcidev->bus
./tools/libxl/libxl_pci.c:           && dev == pcidev->dev
./tools/libxl/libxl_pci.c:           && func == pcidev->func) {
./tools/libxl/libxl_pci.c:                           pcidev->domain, pcidev->bus,
./tools/libxl/libxl_pci.c:                           pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:                          pcidev->domain,
./tools/libxl/libxl_pci.c:                          pcidev->bus,
./tools/libxl/libxl_pci.c:                          pcidev->dev,
./tools/libxl/libxl_pci.c:                          pcidev->func);
./tools/libxl/libxl_pci.c:                           pcidev->domain,
./tools/libxl/libxl_pci.c:                           pcidev->bus,
./tools/libxl/libxl_pci.c:                           pcidev->dev,
./tools/libxl/libxl_pci.c:                           pcidev->func));
./tools/libxl/libxl_pci.c:                         pcidev->domain,
./tools/libxl/libxl_pci.c:                         pcidev->bus,
./tools/libxl/libxl_pci.c:                         pcidev->dev,
./tools/libxl/libxl_pci.c:                         pcidev->func) );
./tools/libxl/libxl_pci.c:    dom = pcidev->domain;
./tools/libxl/libxl_pci.c:    bus = pcidev->bus;
./tools/libxl/libxl_pci.c:    dev = pcidev->dev;
./tools/libxl/libxl_pci.c:    func = pcidev->func;
./tools/libxl/libxl_pci.c:        if ( pcidev->domain != dom )
./tools/libxl/libxl_pci.c:        if ( pcidev->bus != bus )
./tools/libxl/libxl_pci.c:        if ( pcidev->dev != dev )
./tools/libxl/libxl_pci.c:    if (pcidev->vdevfn) {
./tools/libxl/libxl_pci.c:                        pcidev->domain, pcidev->bus, pcidev->dev,
./tools/libxl/libxl_pci.c:                        pcidev->func, pcidev->vdevfn, pcidev->msitranslate,
./tools/libxl/libxl_pci.c:                        pcidev->power_mgmt);
./tools/libxl/libxl_pci.c:                        pcidev->domain,  pcidev->bus, pcidev->dev,
./tools/libxl/libxl_pci.c:                        pcidev->func, pcidev->msitranslate, pcidev->power_mgmt);
./tools/libxl/libxl_pci.c:    else if ( sscanf(vdevfn, "0x%x", &pcidev->vdevfn) != 1 ) {
./tools/libxl/libxl_pci.c:        char *sysfs_path = libxl__sprintf(gc, SYSFS_PCI_DEV"/"PCI_BDF"/resource", pcidev->domain,
./tools/libxl/libxl_pci.c:                                         pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:        sysfs_path = libxl__sprintf(gc, SYSFS_PCI_DEV"/"PCI_BDF"/irq", pcidev->domain,
./tools/libxl/libxl_pci.c:                                   pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:        if (pcidev->permissive) {
./tools/libxl/libxl_pci.c:        if (pcidevs[i].domain == pcidev->domain &&
./tools/libxl/libxl_pci.c:            pcidevs[i].bus == pcidev->bus &&
./tools/libxl/libxl_pci.c:            pcidevs[i].dev == pcidev->dev &&
./tools/libxl/libxl_pci.c:            pcidevs[i].func == pcidev->func)
./tools/libxl/libxl_pci.c:                   pcidev->domain, pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:    if ( is_pcidev_in_array(assigned, num_assigned, pcidev->domain,
./tools/libxl/libxl_pci.c:                     pcidev->bus, pcidev->dev, pcidev->func) ) {
./tools/libxl/libxl_pci.c:    libxl__device_pci_reset(gc, pcidev->domain, pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:    orig_vdev = pcidev->vdevfn & ~7U;
./tools/libxl/libxl_pci.c:    if ( pcidev->vfunc_mask == LIBXL_PCI_FUNC_ALL ) {
./tools/libxl/libxl_pci.c:        if ( !(pcidev->vdevfn >> 3) ) {
./tools/libxl/libxl_pci.c:            LIBXL__LOG(ctx, LIBXL__LOG_ERROR, "Must specify a v-slot for multi-function devices");
./tools/libxl/libxl_pci.c:        pcidev->vfunc_mask &= pfunc_mask;
./tools/libxl/libxl_pci.c:        pfunc_mask = (1 << pcidev->func);
./tools/libxl/libxl_pci.c:            if ( pcidev->vfunc_mask == pfunc_mask ) {
./tools/libxl/libxl_pci.c:                pcidev->func = i;
./tools/libxl/libxl_pci.c:                pcidev->vdevfn = orig_vdev | i;
./tools/libxl/libxl_pci.c:                pcidev->vdevfn = orig_vdev;
./tools/libxl/libxl_pci.c:    libxl__xs_write(gc, XBT_NULL, path, PCI_BDF, pcidev->domain,
./tools/libxl/libxl_pci.c:                    pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:    if ( !force && (pcidev->vdevfn & 0x7) == 0 ) {
./tools/libxl/libxl_pci.c:    if ( !is_pcidev_in_array(assigned, num, pcidev->domain,
./tools/libxl/libxl_pci.c:                      pcidev->bus, pcidev->dev, pcidev->func) ) {
./tools/libxl/libxl_pci.c:        char *sysfs_path = libxl__sprintf(gc, SYSFS_PCI_DEV"/"PCI_BDF"/resource", pcidev->domain,
./tools/libxl/libxl_pci.c:                                         pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:        sysfs_path = libxl__sprintf(gc, SYSFS_PCI_DEV"/"PCI_BDF"/irq", pcidev->domain,
./tools/libxl/libxl_pci.c:                                   pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:    if ( (pcidev->vdevfn & 0x7) == 0 ) {
./tools/libxl/libxl_pci.c:        libxl__device_pci_reset(gc, pcidev->domain, pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_pci.c:    orig_vdev = pcidev->vdevfn & ~7U;
./tools/libxl/libxl_pci.c:    if ( pcidev->vfunc_mask == LIBXL_PCI_FUNC_ALL ) {
./tools/libxl/libxl_pci.c:        pcidev->vfunc_mask &= pfunc_mask;
./tools/libxl/libxl_pci.c:        pfunc_mask = (1 << pcidev->func);
./tools/libxl/libxl_pci.c:            if ( pcidev->vfunc_mask == pfunc_mask ) {
./tools/libxl/libxl_pci.c:                pcidev->func = i;
./tools/libxl/libxl_pci.c:                pcidev->vdevfn = orig_vdev | i;
./tools/libxl/libxl_pci.c:                pcidev->vdevfn = orig_vdev;
./tools/libxl/libxl_pci.c:    s = libxl__xs_read(gc, XBT_NULL, libxl__sprintf(gc, "%s/dev-%d", be_path, nr));
./tools/libxl/xl_cmdimpl.c:            pcidev->msitranslate = pci_msitranslate;
./tools/libxl/xl_cmdimpl.c:            pcidev->power_mgmt = pci_power_mgmt;
./tools/libxl/xl_cmdimpl.c:            pcidev->permissive = pci_permissive;
./tools/libxl/xl_cmdimpl.c:    uint32_t bldomid = ev->domid;
./tools/libxl/libxl_qmp.c:                                    pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_qmp.c:                 pcidev->vdevfn = PCI_DEVFN(dev_slot, dev_func);
./tools/libxl/libxl_qmp.c:    hostaddr = libxl__sprintf(gc, "%04x:%02x:%02x.%01x", pcidev->domain,
./tools/libxl/libxl_qmp.c:                              pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxl_qmp.c:                                         pcidev->bus, pcidev->dev,
./tools/libxl/libxl_qmp.c:                                         pcidev->func));
./tools/libxl/libxl_qmp.c:    if (pcidev->vdevfn) {
./tools/libxl/libxl_qmp.c:                                             PCI_SLOT(pcidev->vdevfn),
./tools/libxl/libxl_qmp.c:                                             PCI_FUNC(pcidev->vdevfn)));
./tools/libxl/libxl_qmp.c:                        pcidev->bus, pcidev->dev, pcidev->func);
./tools/libxl/libxlu_pci.c:    pcidev->domain = domain;
./tools/libxl/libxlu_pci.c:    pcidev->bus = bus;
./tools/libxl/libxlu_pci.c:    pcidev->dev = dev;
./tools/libxl/libxlu_pci.c:    pcidev->func = func;
./tools/libxl/libxlu_pci.c:    pcidev->vdevfn = vdevfn;
./tools/libxl/libxlu_pci.c:                    pcidev->vfunc_mask = LIBXL_PCI_FUNC_ALL;
./tools/libxl/libxlu_pci.c:                    pcidev->vfunc_mask = (1 << 0);
./tools/libxl/libxlu_pci.c:                    pcidev->msitranslate = atoi(tok);
./tools/libxl/libxlu_pci.c:                    pcidev->power_mgmt = atoi(tok);
./tools/libxl/libxlu_pci.c:                    pcidev->permissive = atoi(tok);
./tools/libxl/libxl_aoutils.c:        int r = read(ev->fd,
./tools/libxl/libxl_aoutils.c:        int r = write(ev->fd, buf->buf, buf->used);
./tools/libxl/libxl_device.c:                    &dev->backend_domid,
./tools/libxl/libxl_device.c:                    &dev->domid,
./tools/libxl/libxl_device.c:                    &dev->devid);
./tools/libxl/libxl_device.c:    return libxl__device_kind_from_string(strkind, &dev->backend_kind);
./tools/libxl/libxl_device.c:    aodev->ao = ao;
./tools/libxl/libxl_device.c:    aodev->rc = 0;
./tools/libxl/libxl_device.c:    aodev->dev = NULL;
./tools/libxl/libxl_device.c:    libxl__ev_time_init(&aodev->timeout);
./tools/libxl/libxl_device.c:    aodev->active = 1;
./tools/libxl/libxl_device.c:    libxl__ev_child_init(&aodev->child);
./tools/libxl/libxl_device.c:    multidev->ao = ao;
./tools/libxl/libxl_device.c:    multidev->array = 0;
./tools/libxl/libxl_device.c:    multidev->used = multidev->allocd = 0;
./tools/libxl/libxl_device.c:    multidev->preparation = libxl__multidev_prepare(multidev);
./tools/libxl/libxl_device.c:    STATE_AO_GC(multidev->ao);
./tools/libxl/libxl_device.c:    aodev->multidev = multidev;
./tools/libxl/libxl_device.c:    aodev->callback = multidev_one_callback;
./tools/libxl/libxl_device.c:    if (multidev->used >= multidev->allocd) {
./tools/libxl/libxl_device.c:        multidev->allocd = multidev->used * 2 + 5;
./tools/libxl/libxl_device.c:        GCREALLOC_ARRAY(multidev->array, multidev->allocd);
./tools/libxl/libxl_device.c:    multidev->array[multidev->used++] = aodev;
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    libxl__multidev *multidev = aodev->multidev;
./tools/libxl/libxl_device.c:    aodev->active = 0;
./tools/libxl/libxl_device.c:    for (i = 0; i < multidev->used; i++) {
./tools/libxl/libxl_device.c:        if (multidev->array[i]->active)
./tools/libxl/libxl_device.c:        if (multidev->array[i]->rc)
./tools/libxl/libxl_device.c:            error = multidev->array[i]->rc;
./tools/libxl/libxl_device.c:    multidev->callback(egc, multidev, error);
./tools/libxl/libxl_device.c:    multidev->preparation->rc = rc;
./tools/libxl/libxl_device.c:    multidev_one_callback(egc, multidev->preparation);
./tools/libxl/libxl_device.c:    multidev->callback = devices_remove_callback;
./tools/libxl/libxl_device.c:                dev->domid = domid;
./tools/libxl/libxl_device.c:                dev->kind = kind;
./tools/libxl/libxl_device.c:                dev->devid = atoi(devs[j]);
./tools/libxl/libxl_device.c:                if (dev->backend_kind == LIBXL__DEVICE_KIND_CONSOLE) {
./tools/libxl/libxl_device.c:                aodev->action = DEVICE_DISCONNECT;
./tools/libxl/libxl_device.c:                aodev->dev = dev;
./tools/libxl/libxl_device.c:                aodev->force = drs->force;
./tools/libxl/libxl_device.c:        dev->domid = domid;
./tools/libxl/libxl_device.c:        dev->kind = LIBXL__DEVICE_KIND_CONSOLE;
./tools/libxl/libxl_device.c:        dev->devid = 0;
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    char *be_path = libxl__device_backend_path(gc, aodev->dev);
./tools/libxl/libxl_device.c:    uint32_t domid = aodev->dev->domid;
./tools/libxl/libxl_device.c:    if (QEMU_BACKEND(aodev->dev)) {
./tools/libxl/libxl_device.c:    rc = libxl__ev_devstate_wait(gc, &aodev->backend_ds,
./tools/libxl/libxl_device.c:    aodev->rc = rc;
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    char *be_path = libxl__device_backend_path(gc, aodev->dev);
./tools/libxl/libxl_device.c:    uint32_t domid = aodev->dev->domid;
./tools/libxl/libxl_device.c:    if (QEMU_BACKEND(aodev->dev) &&
./tools/libxl/libxl_device.c:        rc = libxl__ev_time_register_rel(gc, &aodev->timeout,
./tools/libxl/libxl_device.c:        if (aodev->force)
./tools/libxl/libxl_device.c:                                   libxl__device_frontend_path(gc, aodev->dev));
./tools/libxl/libxl_device.c:    rc = libxl__ev_devstate_wait(gc, &aodev->backend_ds,
./tools/libxl/libxl_device.c:    aodev->rc = rc;
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    char *be_path = libxl__device_backend_path(gc, aodev->dev);
./tools/libxl/libxl_device.c:    libxl__ev_time_deregister(gc, &aodev->timeout);
./tools/libxl/libxl_device.c:    aodev->rc = rc;
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    if (rc == ERROR_TIMEDOUT && aodev->action == DEVICE_DISCONNECT &&
./tools/libxl/libxl_device.c:        !aodev->force) {
./tools/libxl/libxl_device.c:        aodev->force = 1;
./tools/libxl/libxl_device.c:                   aodev->action == DEVICE_CONNECT ? "connect" : "disconnect",
./tools/libxl/libxl_device.c:                   libxl__device_backend_path(gc, aodev->dev));
./tools/libxl/libxl_device.c:    aodev->rc = rc;
./tools/libxl/libxl_device.c:    libxl__ev_devstate_cancel(gc, &aodev->backend_ds);
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    char *be_path = libxl__device_backend_path(gc, aodev->dev);
./tools/libxl/libxl_device.c:    hotplug = libxl__get_hotplug_script_info(gc, aodev->dev, &args, &env,
./tools/libxl/libxl_device.c:                                             aodev->action,
./tools/libxl/libxl_device.c:                                             aodev->num_exec);
./tools/libxl/libxl_device.c:                   "device %s", libxl__device_backend_path(gc, aodev->dev));
./tools/libxl/libxl_device.c:    rc = libxl__ev_time_register_rel(gc, &aodev->timeout,
./tools/libxl/libxl_device.c:    aodev->what = GCSPRINTF("%s %s", args[0], args[1]);
./tools/libxl/libxl_device.c:    pid = libxl__ev_child_fork(gc, &aodev->child, device_hotplug_child_death_cb);
./tools/libxl/libxl_device.c:    assert(libxl__ev_child_inuse(&aodev->child));
./tools/libxl/libxl_device.c:    aodev->rc = rc;
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    libxl__ev_time_deregister(gc, &aodev->timeout);
./tools/libxl/libxl_device.c:    assert(libxl__ev_child_inuse(&aodev->child));
./tools/libxl/libxl_device.c:    LOG(DEBUG, "killing hotplug script %s because of timeout", aodev->what);
./tools/libxl/libxl_device.c:    if (kill(aodev->child.pid, SIGKILL)) {
./tools/libxl/libxl_device.c:                            aodev->what, (unsigned long)aodev->child.pid);
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    char *be_path = libxl__device_backend_path(gc, aodev->dev);
./tools/libxl/libxl_device.c:                                      aodev->what, pid, status);
./tools/libxl/libxl_device.c:        aodev->rc = ERROR_FAIL;
./tools/libxl/libxl_device.c:        if (aodev->action == DEVICE_CONNECT)
./tools/libxl/libxl_device.c:    aodev->num_exec++;
./tools/libxl/libxl_device.c:    assert(aodev->rc);
./tools/libxl/libxl_device.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl_device.c:    if (aodev->action == DEVICE_DISCONNECT) {
./tools/libxl/libxl_device.c:        rc = libxl__device_destroy(gc, aodev->dev);
./tools/libxl/libxl_device.c:        if (!aodev->rc)
./tools/libxl/libxl_device.c:            aodev->rc = rc;
./tools/libxl/libxl_device.c:    aodev->callback(egc, aodev);
./tools/libxl/libxl_device.c:    libxl__ev_time_deregister(gc, &aodev->timeout);
./tools/libxl/libxl_device.c:    assert(!libxl__ev_child_inuse(&aodev->child));
./tools/libxl/libxl_netbsd.c:    switch (dev->backend_kind) {
./tools/libxl/libxl_linux.c:    const char *type = libxl__device_kind_to_string(dev->backend_kind);
./tools/libxl/libxl_linux.c:    env[nr++] = GCSPRINTF("backend/%s/%u/%d", type, dev->domid, dev->devid);
./tools/libxl/libxl_linux.c:    if (dev->backend_kind == LIBXL__DEVICE_KIND_VIF) {
./tools/libxl/libxl_linux.c:            env[nr++] = (char *) libxl__device_nic_devname(gc, dev->domid,
./tools/libxl/libxl_linux.c:                                                    dev->devid,
./tools/libxl/libxl_linux.c:            env[nr++] = (char *) libxl__device_nic_devname(gc, dev->domid,
./tools/libxl/libxl_linux.c:                                                    dev->devid,
./tools/libxl/libxl_linux.c:    switch (dev->backend_kind) {
./tools/libxl/libxl_linux.c:            (libxl_get_stubdom_id(CTX, dev->domid) && num_exec)) {
./tools/libxl/libxl.c:                ev->u.domain_shutdown.shutdown_reason =
./tools/libxl/libxl.c:    libxl_device_disk *disk = &ev->u.disk_eject.disk;
./tools/libxl/libxl.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl.c:    if (aodev->rc) {
./tools/libxl/libxl.c:        if (aodev->dev) {
./tools/libxl/libxl.c:                        aodev->action == DEVICE_CONNECT ? "add" : "remove",
./tools/libxl/libxl.c:                        libxl__device_kind_to_string(aodev->dev->kind),
./tools/libxl/libxl.c:                        aodev->dev->devid);
./tools/libxl/libxl.c:                       aodev->action == DEVICE_CONNECT ? "add" : "remove");
./tools/libxl/libxl.c:    libxl__ao_complete(egc, ao, aodev->rc);
./tools/libxl/libxl.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl.c:    aodev->dev = device;
./tools/libxl/libxl.c:    aodev->action = DEVICE_CONNECT;
./tools/libxl/libxl.c:    aodev->rc = rc;
./tools/libxl/libxl.c:    if (rc) aodev->callback(egc, aodev);
./tools/libxl/libxl.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl.c:    rc = aodev->rc;
./tools/libxl/libxl.c:                    aodev->action == DEVICE_CONNECT ? "add" : "remove",
./tools/libxl/libxl.c:                    libxl__device_kind_to_string(aodev->dev->kind),
./tools/libxl/libxl.c:                    aodev->dev->devid);
./tools/libxl/libxl.c:                aodev->action = DEVICE_DISCONNECT;
./tools/libxl/libxl.c:                aodev->dev = device;
./tools/libxl/libxl.c:                aodev->callback = local_device_detach_cb;
./tools/libxl/libxl.c:                aodev->force = 0;
./tools/libxl/libxl.c:    aodev->rc = rc;
./tools/libxl/libxl.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl.c:    if (aodev->rc) {
./tools/libxl/libxl.c:                    aodev->action == DEVICE_CONNECT ? "add" : "remove",
./tools/libxl/libxl.c:                    libxl__device_kind_to_string(aodev->dev->kind),
./tools/libxl/libxl.c:                    aodev->dev->devid);
./tools/libxl/libxl.c:    rc = dls->rc ? dls->rc : aodev->rc;
./tools/libxl/libxl.c:    STATE_AO_GC(aodev->ao);
./tools/libxl/libxl.c:    aodev->dev = device;
./tools/libxl/libxl.c:    aodev->action = DEVICE_CONNECT;
./tools/libxl/libxl.c:    aodev->rc = rc;
./tools/libxl/libxl.c:    if (rc) aodev->callback(egc, aodev);
./tools/libxl/libxl.c:        aodev->action = DEVICE_DISCONNECT;                              \
./tools/libxl/libxl.c:        aodev->dev = device;                                            \
./tools/libxl/libxl.c:        aodev->callback = device_addrm_aocomplete;                      \
./tools/libxl/libxl.c:        aodev->force = f;                                               \
./tools/libxl/libxl.c:        aodev->callback = device_addrm_aocomplete;                      \
./tools/vtpm_manager/crypto/sym_crypto.c:			    key->cipher, NULL, key->key.bytes, iv->bytes,
./tools/libxen/test/test_event_handling.c:            struct tm *tm = localtime(&ev->timestamp);
./tools/libxen/test/test_event_handling.c:            printf("Event received: ID = %"PRId64", %s.\n", ev->id, time);
./tools/libxen/test/test_event_handling.c:            switch (ev->operation)
./tools/libxen/test/test_event_handling.c:                printf("%s created with UUID %s.\n", ev->class, ev->obj_uuid);
./tools/libxen/test/test_event_handling.c:                printf("%s with UUID %s deleted.\n", ev->class, ev->obj_uuid);
./tools/libxen/test/test_event_handling.c:                printf("%s with UUID %s modified.\n", ev->class, ev->obj_uuid);
./tools/libxen/src/xen_common.c:        add_param(params_node, "string", v->u.string_val);
./tools/libxen/src/xen_common.c:        snprintf(buf, sizeof(buf), "%"PRId64, v->u.int_val);
./tools/libxen/src/xen_common.c:        snprintf(buf, sizeof(buf), "%lf", v->u.float_val);
./tools/libxen/src/xen_common.c:        add_param(params_node, "boolean", v->u.bool_val ? "1" : "0");
./tools/libxen/src/xen_common.c:                  v->type->enum_marshaller(v->u.enum_val));
./tools/libxen/src/xen_common.c:        const struct abstract_type *member_type = v->type->child;
./tools/libxen/src/xen_common.c:        arbitrary_set *set_val = v->u.struct_val;
./tools/libxen/src/xen_common.c:        size_t member_count = v->type->member_count;
./tools/libxen/src/xen_common.c:            const struct struct_member *mem = v->type->members + i;
./tools/libxen/src/xen_common.c:            void *struct_value = v->u.struct_val;
./tools/libxen/src/xen_common.c:        const struct struct_member *member = v->type->members;
./tools/libxen/src/xen_common.c:        arbitrary_map *map_val = v->u.struct_val;
./tools/libxen/src/xen_common.c:            int struct_size = v->type->struct_size;
./tools/libxen/src/xen_common.c:        make_body_add_type(v->type->typename, v, params_node);
./tools/debugger/xenitp/ia64-gen.c:      ent->ournum = prev->ournum + prev->nextcnt + 1;
./tools/debugger/kdd/kdd.c:    if (kdd_read_virtual(s, 0, v->base, 2, &val) != 2 || val != 0x5a4d) {
./tools/debugger/kdd/kdd.c:        KDD_DEBUG(s, "not %s: krnl 0x%"PRIx64"\n", v->name, val);
./tools/debugger/kdd/kdd.c:    if (kdd_read_virtual(s, 0, v->base + v->version, 4, &val) != 4
./tools/debugger/kdd/kdd.c:        || val != (v->build | 0xf0000000) ) {
./tools/debugger/kdd/kdd.c:        KDD_DEBUG(s, "not %s: version 0x%"PRIx64"\n", v->name, val);
./tools/debugger/kdd/kdd.c:    addr = v->base + v->modules;
./tools/debugger/kdd/kdd.c:    width = v->w64 ? 8 : 4;
./tools/debugger/kdd/kdd.c:    for (i = 0; val != v->base + v->modules && i < 250; i++) {
./tools/debugger/kdd/kdd.c:            KDD_DEBUG(s, "not %s: bad module list\n", v->name);
./tools/blktap2/lvm/lvm-util.c:		if (!pv->name[0])
./tools/blktap2/lvm/lvm-util.c:		if (!strcmp(pv->name, name))
./tools/blktap2/lvm/lvm-util.c:	err = lvm_copy_name(pv->name, name, sizeof(pv->name) - 1);
./tools/blktap2/lvm/lvm-util.c:	pv->start = start;
./tools/blktap2/lvm/lvm-util.c:		lv->size          = size;
./tools/blktap2/lvm/lvm-util.c:		lv->segments      = segs;
./tools/blktap2/lvm/lvm-util.c:		lv->first_segment = seg;
./tools/blktap2/lvm/lvm-util.c:		err = lvm_copy_name(lv->name, name, sizeof(lv->name) - 1);
./tools/blktap2/lvm/lvm-util.c:                printf("pv %s: start %"PRIu64"\n", pv->name, pv->start);
./tools/blktap2/lvm/lvm-util.c:		seg = &lv->first_segment;                
./tools/blktap2/lvm/lvm-util.c:		       lv->name, lv->size, lv->segments, seg->type,
./tools/blktap2/vhd/lib/vhd-util-scan.c: * /dev/<vol-group>/<lv-name> becomes /dev/mapper/<vol--group>-<lv--name>
./tools/blktap2/vhd/lib/vhd-util-scan.c:	if (lv->first_segment.type != LVM_SEG_TYPE_LINEAR)
./tools/blktap2/vhd/lib/vhd-util-scan.c:	err = copy_name(target->name, lv->name);
./tools/blktap2/vhd/lib/vhd-util-scan.c:	err = copy_name(target->device, lv->first_segment.device);
./tools/blktap2/vhd/lib/vhd-util-scan.c:	target->size  = lv->size;
./tools/blktap2/vhd/lib/vhd-util-scan.c:	target->start = lv->first_segment.pe_start;
./tools/blktap2/vhd/lib/vhd-util-scan.c:	target->end   = target->start + lv->first_segment.pe_size;
./tools/blktap2/vhd/lib/vhd-util-scan.c:		err = fnmatch(filter, lv->name, FNM_PATHNAME);
./tools/blktap2/vhd/lib/vhd-util-scan.c:				vhd_util_scan_error(lv->name, err);
./tools/blktap2/drivers/img2qcow.c:             output, (int64_t)((prev-1)*PROGRESS_QUANT));
./tools/blktap2/drivers/qcow2raw.c:			output, (uint64_t)((prev-1)*PROGRESS_QUANT));
./tools/blktap2/drivers/tapdisk-queue.c:		prev->next = tiocb;
./tools/blktap2/drivers/block-ram.c:		prv->fd = -1;
./tools/blktap2/drivers/block-ram.c:        prv->fd = fd;
./tools/blktap2/drivers/block-ram.c:		ret = read(prv->fd, p, driver->info.sector_size);
./tools/blktap2/drivers/block-qcow.c:	if (prv->aio_free_count == 0)
./tools/blktap2/drivers/block-qcow.c:	aio        = prv->aio_free_list[--prv->aio_free_count];
./tools/blktap2/drivers/block-qcow.c:	td_prep_read(&aio->tiocb, prv->fd, treq.buf,
./tools/blktap2/drivers/block-qcow.c:	if (prv->aio_free_count == 0)
./tools/blktap2/drivers/block-qcow.c:	aio        = prv->aio_free_list[--prv->aio_free_count];
./tools/blktap2/drivers/block-qcow.c:	td_prep_write(&aio->tiocb, prv->fd, treq.buf,
./tools/blktap2/drivers/block-qcow.c:	  //		return dd->drv->td_open(dd, name, flags);
./tools/blktap2/drivers/block-aio.c:	prv->aio_free_count = MAX_AIO_REQS;
./tools/blktap2/drivers/block-aio.c:		prv->aio_free_list[i] = &prv->aio_requests[i];
./tools/blktap2/drivers/block-aio.c:        prv->fd = fd;
./tools/blktap2/drivers/block-aio.c:	prv->aio_free_list[prv->aio_free_count++] = aio;
./tools/blktap2/drivers/block-aio.c:	if (prv->aio_free_count == 0)
./tools/blktap2/drivers/block-aio.c:	aio        = prv->aio_free_list[--prv->aio_free_count];
./tools/blktap2/drivers/block-aio.c:	td_prep_read(&aio->tiocb, prv->fd, treq.buf,
./tools/blktap2/drivers/block-aio.c:	if (prv->aio_free_count == 0)
./tools/blktap2/drivers/block-aio.c:	aio        = prv->aio_free_list[--prv->aio_free_count];
./tools/blktap2/drivers/block-aio.c:	td_prep_write(&aio->tiocb, prv->fd, treq.buf,
./tools/blktap2/drivers/block-aio.c:	close(prv->fd);
./tools/qemu-xen/gdbstub.c:        if (TARGET_LONG_BITS == 64 && env->hflags & HF_CS64_MASK) {
./tools/qemu-xen/gdbstub.c:            GET_REG64(env->regs[gpr_map[n]]);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->regs[gpr_map32[n]]);
./tools/qemu-xen/gdbstub.c:        memcpy(mem_buf, &env->fpregs[n - IDX_FP_REGS], 10);
./tools/qemu-xen/gdbstub.c:            (TARGET_LONG_BITS == 64 && env->hflags & HF_CS64_MASK)) {
./tools/qemu-xen/gdbstub.c:            stq_p(mem_buf, env->xmm_regs[n].XMM_Q(0));
./tools/qemu-xen/gdbstub.c:            stq_p(mem_buf + 8, env->xmm_regs[n].XMM_Q(1));
./tools/qemu-xen/gdbstub.c:            if (TARGET_LONG_BITS == 64 && env->hflags & HF_CS64_MASK) {
./tools/qemu-xen/gdbstub.c:                GET_REG64(env->eip);
./tools/qemu-xen/gdbstub.c:                GET_REG32(env->eip);
./tools/qemu-xen/gdbstub.c:        case IDX_FLAGS_REG: GET_REG32(env->eflags);
./tools/qemu-xen/gdbstub.c:        case IDX_SEG_REGS:     GET_REG32(env->segs[R_CS].selector);
./tools/qemu-xen/gdbstub.c:        case IDX_SEG_REGS + 1: GET_REG32(env->segs[R_SS].selector);
./tools/qemu-xen/gdbstub.c:        case IDX_SEG_REGS + 2: GET_REG32(env->segs[R_DS].selector);
./tools/qemu-xen/gdbstub.c:        case IDX_SEG_REGS + 3: GET_REG32(env->segs[R_ES].selector);
./tools/qemu-xen/gdbstub.c:        case IDX_SEG_REGS + 4: GET_REG32(env->segs[R_FS].selector);
./tools/qemu-xen/gdbstub.c:        case IDX_SEG_REGS + 5: GET_REG32(env->segs[R_GS].selector);
./tools/qemu-xen/gdbstub.c:        case IDX_FP_REGS + 8:  GET_REG32(env->fpuc);
./tools/qemu-xen/gdbstub.c:        case IDX_FP_REGS + 9:  GET_REG32((env->fpus & ~0x3800) |
./tools/qemu-xen/gdbstub.c:                                         (env->fpstt & 0x7) << 11);
./tools/qemu-xen/gdbstub.c:        case IDX_MXCSR_REG: GET_REG32(env->mxcsr);
./tools/qemu-xen/gdbstub.c:    if (selector != env->segs[sreg].selector) {
./tools/qemu-xen/gdbstub.c:        if (!(env->cr[0] & CR0_PE_MASK) || (env->eflags & VM_MASK)) {
./tools/qemu-xen/gdbstub.c:        if (TARGET_LONG_BITS == 64 && env->hflags & HF_CS64_MASK) {
./tools/qemu-xen/gdbstub.c:            env->regs[gpr_map[n]] = ldtul_p(mem_buf);
./tools/qemu-xen/gdbstub.c:            env->regs[n] &= ~0xffffffffUL;
./tools/qemu-xen/gdbstub.c:            env->regs[n] |= (uint32_t)ldl_p(mem_buf);
./tools/qemu-xen/gdbstub.c:        memcpy(&env->fpregs[n - IDX_FP_REGS], mem_buf, 10);
./tools/qemu-xen/gdbstub.c:            (TARGET_LONG_BITS == 64 && env->hflags & HF_CS64_MASK)) {
./tools/qemu-xen/gdbstub.c:            env->xmm_regs[n].XMM_Q(0) = ldq_p(mem_buf);
./tools/qemu-xen/gdbstub.c:            env->xmm_regs[n].XMM_Q(1) = ldq_p(mem_buf + 8);
./tools/qemu-xen/gdbstub.c:            if (TARGET_LONG_BITS == 64 && env->hflags & HF_CS64_MASK) {
./tools/qemu-xen/gdbstub.c:                env->eip = ldq_p(mem_buf);
./tools/qemu-xen/gdbstub.c:                env->eip &= ~0xffffffffUL;
./tools/qemu-xen/gdbstub.c:                env->eip |= (uint32_t)ldl_p(mem_buf);
./tools/qemu-xen/gdbstub.c:            env->eflags = ldl_p(mem_buf);
./tools/qemu-xen/gdbstub.c:            env->fpuc = ldl_p(mem_buf);
./tools/qemu-xen/gdbstub.c:            env->fpstt = (tmp >> 11) & 7;
./tools/qemu-xen/gdbstub.c:            env->fpus = tmp & ~0x3800;
./tools/qemu-xen/gdbstub.c:            env->mxcsr = ldl_p(mem_buf);
./tools/qemu-xen/gdbstub.c:        GET_REGL(env->gpr[n]);
./tools/qemu-xen/gdbstub.c:        stfq_p(mem_buf, env->fpr[n-32]);
./tools/qemu-xen/gdbstub.c:        case 64: GET_REGL(env->nip);
./tools/qemu-xen/gdbstub.c:        case 65: GET_REGL(env->msr);
./tools/qemu-xen/gdbstub.c:                    cr |= env->crf[i] << (32 - ((i + 1) * 4));
./tools/qemu-xen/gdbstub.c:        case 67: GET_REGL(env->lr);
./tools/qemu-xen/gdbstub.c:        case 68: GET_REGL(env->ctr);
./tools/qemu-xen/gdbstub.c:        case 69: GET_REGL(env->xer);
./tools/qemu-xen/gdbstub.c:                GET_REG32(env->fpscr);
./tools/qemu-xen/gdbstub.c:        env->gpr[n] = ldtul_p(mem_buf);
./tools/qemu-xen/gdbstub.c:        env->fpr[n-32] = ldfq_p(mem_buf);
./tools/qemu-xen/gdbstub.c:            env->nip = ldtul_p(mem_buf);
./tools/qemu-xen/gdbstub.c:                    env->crf[i] = (cr >> (32 - ((i + 1) * 4))) & 0xF;
./tools/qemu-xen/gdbstub.c:            env->lr = ldtul_p(mem_buf);
./tools/qemu-xen/gdbstub.c:            env->ctr = ldtul_p(mem_buf);
./tools/qemu-xen/gdbstub.c:            env->xer = ldtul_p(mem_buf);
./tools/qemu-xen/gdbstub.c:        GET_REGA(env->gregs[n]);
./tools/qemu-xen/gdbstub.c:        GET_REGA(env->regwptr[n - 8]);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->fpr[(n - 32) / 2].l.lower);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->fpr[(n - 32) / 2].l.upper);
./tools/qemu-xen/gdbstub.c:    case 64: GET_REGA(env->y);
./tools/qemu-xen/gdbstub.c:    case 66: GET_REGA(env->wim);
./tools/qemu-xen/gdbstub.c:    case 67: GET_REGA(env->tbr);
./tools/qemu-xen/gdbstub.c:    case 68: GET_REGA(env->pc);
./tools/qemu-xen/gdbstub.c:    case 69: GET_REGA(env->npc);
./tools/qemu-xen/gdbstub.c:    case 70: GET_REGA(env->fsr);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->fpr[(n - 32) / 2].l.lower);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->fpr[(n - 32) / 2].l.upper);
./tools/qemu-xen/gdbstub.c:        GET_REG64(env->fpr[(n - 32) / 2].ll);
./tools/qemu-xen/gdbstub.c:    case 80: GET_REGL(env->pc);
./tools/qemu-xen/gdbstub.c:    case 81: GET_REGL(env->npc);
./tools/qemu-xen/gdbstub.c:                      ((env->asi & 0xff) << 24) |
./tools/qemu-xen/gdbstub.c:                      ((env->pstate & 0xfff) << 8) |
./tools/qemu-xen/gdbstub.c:    case 83: GET_REGL(env->fsr);
./tools/qemu-xen/gdbstub.c:    case 84: GET_REGL(env->fprs);
./tools/qemu-xen/gdbstub.c:    case 85: GET_REGL(env->y);
./tools/qemu-xen/gdbstub.c:        env->gregs[n] = tmp;
./tools/qemu-xen/gdbstub.c:        env->regwptr[n - 8] = tmp;
./tools/qemu-xen/gdbstub.c:            env->fpr[(n - 32) / 2].l.lower = tmp;
./tools/qemu-xen/gdbstub.c:            env->fpr[(n - 32) / 2].l.upper = tmp;
./tools/qemu-xen/gdbstub.c:        case 64: env->y = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 66: env->wim = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 67: env->tbr = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 68: env->pc = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 69: env->npc = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 70: env->fsr = tmp; break;
./tools/qemu-xen/gdbstub.c:            env->fpr[(n - 32) / 2].l.lower = tmp;
./tools/qemu-xen/gdbstub.c:            env->fpr[(n - 32) / 2].l.upper = tmp;
./tools/qemu-xen/gdbstub.c:        env->fpr[(n - 32) / 2].ll = tmp;
./tools/qemu-xen/gdbstub.c:        case 80: env->pc = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 81: env->npc = tmp; break;
./tools/qemu-xen/gdbstub.c:	    env->asi = (tmp >> 24) & 0xff;
./tools/qemu-xen/gdbstub.c:	    env->pstate = (tmp >> 8) & 0xfff;
./tools/qemu-xen/gdbstub.c:        case 83: env->fsr = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 84: env->fprs = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 85: env->y = tmp; break;
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->regs[n]);
./tools/qemu-xen/gdbstub.c:        env->regs[n] = tmp;
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->dregs[n]);
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->aregs[n - 8]);
./tools/qemu-xen/gdbstub.c:        case 16: GET_REG32(env->sr);
./tools/qemu-xen/gdbstub.c:        case 17: GET_REG32(env->pc);
./tools/qemu-xen/gdbstub.c:        env->dregs[n] = tmp;
./tools/qemu-xen/gdbstub.c:        env->aregs[n - 8] = tmp;
./tools/qemu-xen/gdbstub.c:        case 16: env->sr = tmp; break;
./tools/qemu-xen/gdbstub.c:        case 17: env->pc = tmp; break;
./tools/qemu-xen/gdbstub.c:        GET_REGL(env->active_tc.gpr[n]);
./tools/qemu-xen/gdbstub.c:    if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen/gdbstub.c:            if (env->CP0_Status & (1 << CP0St_FR))
./tools/qemu-xen/gdbstub.c:		GET_REGL(env->active_fpu.fpr[n - 38].d);
./tools/qemu-xen/gdbstub.c:		GET_REGL(env->active_fpu.fpr[n - 38].w[FP_ENDIAN_IDX]);
./tools/qemu-xen/gdbstub.c:        case 70: GET_REGL((int32_t)env->active_fpu.fcr31);
./tools/qemu-xen/gdbstub.c:        case 71: GET_REGL((int32_t)env->active_fpu.fcr0);
./tools/qemu-xen/gdbstub.c:    case 32: GET_REGL((int32_t)env->CP0_Status);
./tools/qemu-xen/gdbstub.c:    case 33: GET_REGL(env->active_tc.LO[0]);
./tools/qemu-xen/gdbstub.c:    case 34: GET_REGL(env->active_tc.HI[0]);
./tools/qemu-xen/gdbstub.c:    case 35: GET_REGL(env->CP0_BadVAddr);
./tools/qemu-xen/gdbstub.c:    case 36: GET_REGL((int32_t)env->CP0_Cause);
./tools/qemu-xen/gdbstub.c:    case 37: GET_REGL(env->active_tc.PC | !!(env->hflags & MIPS_HFLAG_M16));
./tools/qemu-xen/gdbstub.c:    case 89: GET_REGL((int32_t)env->CP0_PRid);
./tools/qemu-xen/gdbstub.c:    set_float_rounding_mode(ieee_rm[env->active_fpu.fcr31 & 3], &env->active_fpu.fp_status)
./tools/qemu-xen/gdbstub.c:        env->active_tc.gpr[n] = tmp;
./tools/qemu-xen/gdbstub.c:    if (env->CP0_Config1 & (1 << CP0C1_FP)
./tools/qemu-xen/gdbstub.c:            if (env->CP0_Status & (1 << CP0St_FR))
./tools/qemu-xen/gdbstub.c:              env->active_fpu.fpr[n - 38].d = tmp;
./tools/qemu-xen/gdbstub.c:              env->active_fpu.fpr[n - 38].w[FP_ENDIAN_IDX] = tmp;
./tools/qemu-xen/gdbstub.c:            env->active_fpu.fcr31 = tmp & 0xFF83FFFF;
./tools/qemu-xen/gdbstub.c:        case 71: env->active_fpu.fcr0 = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 32: env->CP0_Status = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 33: env->active_tc.LO[0] = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 34: env->active_tc.HI[0] = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 35: env->CP0_BadVAddr = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 36: env->CP0_Cause = tmp; break;
./tools/qemu-xen/gdbstub.c:        env->active_tc.PC = tmp & ~(target_ulong)1;
./tools/qemu-xen/gdbstub.c:            env->hflags |= MIPS_HFLAG_M16;
./tools/qemu-xen/gdbstub.c:            env->hflags &= ~(MIPS_HFLAG_M16);
./tools/qemu-xen/gdbstub.c:        if ((env->sr & (SR_MD | SR_RB)) == (SR_MD | SR_RB)) {
./tools/qemu-xen/gdbstub.c:            GET_REGL(env->gregs[n + 16]);
./tools/qemu-xen/gdbstub.c:            GET_REGL(env->gregs[n]);
./tools/qemu-xen/gdbstub.c:        GET_REGL(env->gregs[n]);
./tools/qemu-xen/gdbstub.c:	GET_REGL(env->fregs[(n - 25) + ((env->fpscr & FPSCR_FR) ? 16 : 0)]);
./tools/qemu-xen/gdbstub.c:	GET_REGL(env->gregs[n - 43]);
./tools/qemu-xen/gdbstub.c:	GET_REGL(env->gregs[n - (51 - 16)]);
./tools/qemu-xen/gdbstub.c:    case 16: GET_REGL(env->pc);
./tools/qemu-xen/gdbstub.c:    case 17: GET_REGL(env->pr);
./tools/qemu-xen/gdbstub.c:    case 18: GET_REGL(env->gbr);
./tools/qemu-xen/gdbstub.c:    case 19: GET_REGL(env->vbr);
./tools/qemu-xen/gdbstub.c:    case 20: GET_REGL(env->mach);
./tools/qemu-xen/gdbstub.c:    case 21: GET_REGL(env->macl);
./tools/qemu-xen/gdbstub.c:    case 22: GET_REGL(env->sr);
./tools/qemu-xen/gdbstub.c:    case 23: GET_REGL(env->fpul);
./tools/qemu-xen/gdbstub.c:    case 24: GET_REGL(env->fpscr);
./tools/qemu-xen/gdbstub.c:    case 41: GET_REGL(env->ssr);
./tools/qemu-xen/gdbstub.c:    case 42: GET_REGL(env->spc);
./tools/qemu-xen/gdbstub.c:        if ((env->sr & (SR_MD | SR_RB)) == (SR_MD | SR_RB)) {
./tools/qemu-xen/gdbstub.c:            env->gregs[n + 16] = tmp;
./tools/qemu-xen/gdbstub.c:            env->gregs[n] = tmp;
./tools/qemu-xen/gdbstub.c:        env->gregs[n] = tmp;
./tools/qemu-xen/gdbstub.c:	env->fregs[(n - 25) + ((env->fpscr & FPSCR_FR) ? 16 : 0)] = tmp;
./tools/qemu-xen/gdbstub.c:	env->gregs[n - 43] = tmp;
./tools/qemu-xen/gdbstub.c:	env->gregs[n - (51 - 16)] = tmp;
./tools/qemu-xen/gdbstub.c:    case 16: env->pc = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 17: env->pr = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 18: env->gbr = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 19: env->vbr = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 20: env->mach = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 21: env->macl = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 22: env->sr = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 23: env->fpul = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 24: env->fpscr = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 41: env->ssr = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 42: env->spc = tmp; break;
./tools/qemu-xen/gdbstub.c:	GET_REG32(env->regs[n]);
./tools/qemu-xen/gdbstub.c:	GET_REG32(env->sregs[n - 32]);
./tools/qemu-xen/gdbstub.c:	env->regs[n] = tmp;
./tools/qemu-xen/gdbstub.c:	env->sregs[n - 32] = tmp;
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->regs[n]);
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->pc);
./tools/qemu-xen/gdbstub.c:            GET_REG8(env->pregs[n - 16]);
./tools/qemu-xen/gdbstub.c:            GET_REG8(env->pregs[n - 16]);
./tools/qemu-xen/gdbstub.c:            GET_REG16(env->pregs[n - 16]);
./tools/qemu-xen/gdbstub.c:                GET_REG32(env->pregs[n - 16]);
./tools/qemu-xen/gdbstub.c:    if (env->pregs[PR_VR] < 32)
./tools/qemu-xen/gdbstub.c:    srs = env->pregs[PR_SRS];
./tools/qemu-xen/gdbstub.c:	GET_REG32(env->regs[n]);
./tools/qemu-xen/gdbstub.c:	GET_REG32(env->pregs[n - 16]);
./tools/qemu-xen/gdbstub.c:	GET_REG32(env->sregs[srs][n - 33]);
./tools/qemu-xen/gdbstub.c:    case 16: GET_REG8(env->pregs[0]);
./tools/qemu-xen/gdbstub.c:    case 17: GET_REG8(env->pregs[1]);
./tools/qemu-xen/gdbstub.c:    case 18: GET_REG32(env->pregs[2]);
./tools/qemu-xen/gdbstub.c:    case 20: GET_REG16(env->pregs[4]);
./tools/qemu-xen/gdbstub.c:    case 32: GET_REG32(env->pc);
./tools/qemu-xen/gdbstub.c:	env->regs[n] = tmp;
./tools/qemu-xen/gdbstub.c:	env->pregs[n - 16] = tmp;
./tools/qemu-xen/gdbstub.c:    case 18: env->pregs[PR_PID] = tmp; break;
./tools/qemu-xen/gdbstub.c:    case 32: env->pc = tmp; break;
./tools/qemu-xen/gdbstub.c:        val = env->ir[n];
./tools/qemu-xen/gdbstub.c:        d.d = env->fir[n - 32];
./tools/qemu-xen/gdbstub.c:        val = env->pc;
./tools/qemu-xen/gdbstub.c:        val = env->unique;
./tools/qemu-xen/gdbstub.c:        env->ir[n] = tmp;
./tools/qemu-xen/gdbstub.c:        env->fir[n - 32] = d.d;
./tools/qemu-xen/gdbstub.c:        env->pc = tmp;
./tools/qemu-xen/gdbstub.c:        env->unique = tmp;
./tools/qemu-xen/gdbstub.c:        case S390_PSWM_REGNUM: GET_REGL(env->psw.mask); break;
./tools/qemu-xen/gdbstub.c:        case S390_PSWA_REGNUM: GET_REGL(env->psw.addr); break;
./tools/qemu-xen/gdbstub.c:            GET_REGL(env->regs[n-S390_R0_REGNUM]); break;
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->aregs[n-S390_A0_REGNUM]); break;
./tools/qemu-xen/gdbstub.c:        case S390_FPC_REGNUM: GET_REG32(env->fpc); break;
./tools/qemu-xen/gdbstub.c:        case S390_PC_REGNUM: GET_REGL(env->psw.addr); break;
./tools/qemu-xen/gdbstub.c:            env->cc_op = calc_cc(env, env->cc_op, env->cc_src, env->cc_dst,
./tools/qemu-xen/gdbstub.c:                                 env->cc_vr);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->cc_op);
./tools/qemu-xen/gdbstub.c:        case S390_PSWM_REGNUM: env->psw.mask = tmpl; break;
./tools/qemu-xen/gdbstub.c:        case S390_PSWA_REGNUM: env->psw.addr = tmpl; break;
./tools/qemu-xen/gdbstub.c:            env->regs[n-S390_R0_REGNUM] = tmpl; break;
./tools/qemu-xen/gdbstub.c:            env->aregs[n-S390_A0_REGNUM] = tmp32; r=4; break;
./tools/qemu-xen/gdbstub.c:        case S390_FPC_REGNUM: env->fpc = tmp32; r=4; break;
./tools/qemu-xen/gdbstub.c:        case S390_PC_REGNUM: env->psw.addr = tmpl; break;
./tools/qemu-xen/gdbstub.c:        case S390_CC_REGNUM: env->cc_op = tmp32; r=4; break;
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->regs[n]);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->pc);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->eba);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->deba);
./tools/qemu-xen/gdbstub.c:            GET_REG32(env->ie);
./tools/qemu-xen/gdbstub.c:            GET_REG32(lm32_pic_get_im(env->pic_state));
./tools/qemu-xen/gdbstub.c:            GET_REG32(lm32_pic_get_ip(env->pic_state));
./tools/qemu-xen/gdbstub.c:        env->regs[n] = tmp;
./tools/qemu-xen/gdbstub.c:            env->pc = tmp;
./tools/qemu-xen/gdbstub.c:            env->eba = tmp;
./tools/qemu-xen/gdbstub.c:            env->deba = tmp;
./tools/qemu-xen/gdbstub.c:            env->ie = tmp;
./tools/qemu-xen/gdbstub.c:            lm32_pic_set_im(env->pic_state, tmp);
./tools/qemu-xen/gdbstub.c:            lm32_pic_set_ip(env->pic_state, tmp);
./tools/qemu-xen/gdbstub.c:#define NUM_CORE_REGS (env->config->gdb_regmap.num_regs)
./tools/qemu-xen/gdbstub.c:    const XtensaGdbReg *reg = env->config->gdb_regmap.reg + n;
./tools/qemu-xen/gdbstub.c:    if (n < 0 || n >= env->config->gdb_regmap.num_regs) {
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->pc);
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->phys_regs[(reg->targno & 0xff) % env->config->nareg]);
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->sregs[reg->targno & 0xff]);
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->uregs[reg->targno & 0xff]);
./tools/qemu-xen/gdbstub.c:        GET_REG32(env->regs[reg->targno & 0x0f]);
./tools/qemu-xen/gdbstub.c:    const XtensaGdbReg *reg = env->config->gdb_regmap.reg + n;
./tools/qemu-xen/gdbstub.c:    if (n < 0 || n >= env->config->gdb_regmap.num_regs) {
./tools/qemu-xen/gdbstub.c:        env->pc = tmp;
./tools/qemu-xen/gdbstub.c:        env->phys_regs[(reg->targno & 0xff) % env->config->nareg] = tmp;
./tools/qemu-xen/gdbstub.c:        env->sregs[reg->targno & 0xff] = tmp;
./tools/qemu-xen/gdbstub.c:        env->uregs[reg->targno & 0xff] = tmp;
./tools/qemu-xen/gdbstub.c:        env->regs[reg->targno & 0x0f] = tmp;
./tools/qemu-xen/gdbstub.c:    for (r = env->gdb_regs; r; r = r->next) {
./tools/qemu-xen/gdbstub.c:    for (r = env->gdb_regs; r; r = r->next) {
./tools/qemu-xen/gdbstub.c:    p = &env->gdb_regs;
./tools/qemu-xen/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/gdbstub.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/gdbstub.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/gdbstub.c:    return env->host_tid;
./tools/qemu-xen/gdbstub.c:    return env->cpu_index + 1;
./tools/qemu-xen/gdbstub.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/gdbstub.c:                               "CPU#%d [%s]", env->cpu_index,
./tools/qemu-xen/gdbstub.c:                               env->halted ? "halted " : "running");
./tools/qemu-xen/gdbstub.c:        if (env->watchpoint_hit) {
./tools/qemu-xen/gdbstub.c:            switch (env->watchpoint_hit->flags & BP_MEM_ACCESS) {
./tools/qemu-xen/gdbstub.c:                     env->watchpoint_hit->vaddr);
./tools/qemu-xen/gdbstub.c:            env->watchpoint_hit = NULL;
./tools/qemu-xen/cmd.c:	double		usec = (double)tv->tv_usec / 1000000.0;
./tools/qemu-xen/cmd.c:		if (!HOURS(tv->tv_sec)) {
./tools/qemu-xen/cmd.c:				(unsigned int) MINUTES(tv->tv_sec),
./tools/qemu-xen/cmd.c:				(unsigned int) SECONDS(tv->tv_sec),
./tools/qemu-xen/cmd.c:	if ((format & VERBOSE_FIXED_TIME) || tv->tv_sec) {
./tools/qemu-xen/cmd.c:			(unsigned int) HOURS(tv->tv_sec),
./tools/qemu-xen/cmd.c:			(unsigned int) MINUTES(tv->tv_sec),
./tools/qemu-xen/cmd.c:			(unsigned int) SECONDS(tv->tv_sec),
./tools/qemu-xen/libcacard/vreader.c:        entry->prev->next = entry->next;
./tools/qemu-xen/target-s390x/translate.c:        cpu_fprintf(f, "R%02d=%016" PRIx64, i, env->regs[i]);
./tools/qemu-xen/target-s390x/translate.c:        cpu_fprintf(f, "F%02d=%016" PRIx64, i, *(uint64_t *)&env->fregs[i]);
./tools/qemu-xen/target-s390x/translate.c:        cpu_fprintf(f, "C%02d=%016" PRIx64, i, env->cregs[i]);
./tools/qemu-xen/target-s390x/translate.c:    if (env->cc_op > 3) {
./tools/qemu-xen/target-s390x/translate.c:                    env->psw.mask, env->psw.addr, cc_name(env->cc_op));
./tools/qemu-xen/target-s390x/translate.c:                    env->psw.mask, env->psw.addr, env->cc_op);
./tools/qemu-xen/target-s390x/translate.c:/* CC value is in env->cc_op */
./tools/qemu-xen/target-s390x/translate.c:        /* env->cc_op already is the cc value */
./tools/qemu-xen/target-s390x/translate.c:            /* i.e. env->cc = 0 */
./tools/qemu-xen/target-s390x/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-s390x/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-s390x/translate.c:        if (env->singlestep_enabled) {
./tools/qemu-xen/target-s390x/translate.c:             && num_insns < max_insns && !env->singlestep_enabled
./tools/qemu-xen/target-s390x/translate.c:    env->psw.addr = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-s390x/translate.c:        env->cc_op = cc_op;
./tools/qemu-xen/target-s390x/kvm.c:        regs.gprs[i] = env->regs[i];
./tools/qemu-xen/target-s390x/kvm.c:    env->kvm_run->psw_addr = env->psw.addr;
./tools/qemu-xen/target-s390x/kvm.c:    env->kvm_run->psw_mask = env->psw.mask;
./tools/qemu-xen/target-s390x/kvm.c:        env->regs[i] = regs.gprs[i];
./tools/qemu-xen/target-s390x/kvm.c:    env->psw.addr = env->kvm_run->psw_addr;
./tools/qemu-xen/target-s390x/kvm.c:    env->psw.mask = env->kvm_run->psw_mask;
./tools/qemu-xen/target-s390x/kvm.c:    return env->halted;
./tools/qemu-xen/target-s390x/kvm.c:    if (!env->kvm_state) {
./tools/qemu-xen/target-s390x/kvm.c:        r = kvm_vm_ioctl(env->kvm_state, KVM_S390_INTERRUPT, &kvmint);
./tools/qemu-xen/target-s390x/kvm.c:    env->kvm_run->psw_mask &= ~(3ull << 44);
./tools/qemu-xen/target-s390x/kvm.c:    env->kvm_run->psw_mask |= (cc & 3) << 44;
./tools/qemu-xen/target-s390x/kvm.c:    env->psw.mask &= ~(3ul << 44);
./tools/qemu-xen/target-s390x/kvm.c:    env->psw.mask |= (cc & 3) << 44;
./tools/qemu-xen/target-s390x/kvm.c:    sccb = env->regs[ipbh0 & 0xf];
./tools/qemu-xen/target-s390x/kvm.c:    code = env->regs[(ipbh0 & 0xf0) >> 4];
./tools/qemu-xen/target-s390x/kvm.c:    env->regs[2] = s390_virtio_hypercall(env, env->regs[2], env->regs[1]);
./tools/qemu-xen/target-s390x/kvm.c:        env->regs[i] = 0;
./tools/qemu-xen/target-s390x/kvm.c:        order_code = env->regs[order_code];
./tools/qemu-xen/target-s390x/kvm.c:    parameter = env->regs[t] & 0x7ffffe00;
./tools/qemu-xen/target-s390x/kvm.c:    cpu_addr = env->regs[ipa1 & 0x0f];
./tools/qemu-xen/target-s390x/kvm.c:    struct kvm_run *run = env->kvm_run;
./tools/qemu-xen/target-s390x/kvm.c:            (long)env->kvm_run->psw_addr);
./tools/qemu-xen/target-s390x/op_helper.c:    env->exception_index = excp;
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t asc = env->psw.mask & PSW_MASK_ASC;
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t asc = env->psw.mask & PSW_MASK_ASC;
./tools/qemu-xen/target-s390x/op_helper.c:    __uint128_t res = (__uint128_t)env->regs[r1 + 1];
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = (uint64_t)(res >> 64);
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1 + 1] = (uint64_t)res;
./tools/qemu-xen/target-s390x/op_helper.c:    mulu64(&env->regs[r1 + 1], &env->regs[r1], env->regs[r1 + 1], v2);
./tools/qemu-xen/target-s390x/op_helper.c:    if (!env->regs[r1]) {
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = env->regs[r1+1] % divisor;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1+1] = env->regs[r1+1] / divisor;
./tools/qemu-xen/target-s390x/op_helper.c:        __uint128_t dividend = (((__uint128_t)env->regs[r1]) << 64) |
./tools/qemu-xen/target-s390x/op_helper.c:                               (env->regs[r1+1]);
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1+1] = quotient;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = remainder;
./tools/qemu-xen/target-s390x/op_helper.c:        r += env->regs[x2];
./tools/qemu-xen/target-s390x/op_helper.c:        r += env->regs[b2];
./tools/qemu-xen/target-s390x/op_helper.c:    if (!(env->psw.mask & PSW_MASK_64)) {
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t r = env->regs[reg];
./tools/qemu-xen/target-s390x/op_helper.c:    if (!(env->psw.mask & PSW_MASK_64)) {
./tools/qemu-xen/target-s390x/op_helper.c:               c, env->regs[r1], env->regs[r2]);
./tools/qemu-xen/target-s390x/op_helper.c:            env->regs[r1] = i;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = s1;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r2] = s2;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = dest; /* FIXME: 31-bit mode! */
./tools/qemu-xen/target-s390x/op_helper.c:    if (env->regs[r1] == v2) {
./tools/qemu-xen/target-s390x/op_helper.c:        stq(a2, env->regs[r3]);
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = v2;
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t v1_hi = env->regs[r1];
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t v1_lo = env->regs[r1 + 1];
./tools/qemu-xen/target-s390x/op_helper.c:        stq(a2, env->regs[r3]);
./tools/qemu-xen/target-s390x/op_helper.c:        stq(a2 + 8, env->regs[r3 + 1]);
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = v2_hi;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1 + 1] = v2_lo;
./tools/qemu-xen/target-s390x/op_helper.c:    if (((uint32_t)env->regs[r1]) == v2) {
./tools/qemu-xen/target-s390x/op_helper.c:        stl(a2, (uint32_t)env->regs[r3]);
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = (env->regs[r1] & 0xffffffff00000000ULL) | v2;
./tools/qemu-xen/target-s390x/op_helper.c:            env->regs[r1] &= ~rmask;
./tools/qemu-xen/target-s390x/op_helper.c:            env->regs[r1] |= (uint64_t)val << pos;
./tools/qemu-xen/target-s390x/op_helper.c:        env->psw.addr = ret - 4;
./tools/qemu-xen/target-s390x/op_helper.c:        env->int_svc_code = (insn|v1) & 0xff;
./tools/qemu-xen/target-s390x/op_helper.c:        env->int_svc_ilc = 4;
./tools/qemu-xen/target-s390x/op_helper.c:            stb(address, (env->regs[r1] >> pos) & 0xff);
./tools/qemu-xen/target-s390x/op_helper.c:            env->regs[r1] &= ~rmask;
./tools/qemu-xen/target-s390x/op_helper.c:            env->regs[r1] |= (uint64_t)val << pos;
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t r = env->regs[r1];
./tools/qemu-xen/target-s390x/op_helper.c:    r |= (cc << 28) | ( (env->psw.mask >> 40) & 0xf );
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = r;
./tools/qemu-xen/target-s390x/op_helper.c:               cc, env->psw.mask, r);
./tools/qemu-xen/target-s390x/op_helper.c:        env->aregs[i] = ldl(a2);
./tools/qemu-xen/target-s390x/op_helper.c:        stl(a2, env->aregs[i]);
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t destlen = env->regs[r1 + 1] & 0xffffff;
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t srclen = env->regs[r2 + 1] & 0xffffff;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1 + 1] = destlen;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r2 + 1] -= src - env->regs[r2];
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = dest;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r2] = src;
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t destlen = env->regs[r1 + 1];
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t dest = env->regs[r1];
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t srclen = env->regs[r3 + 1];
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t src = env->regs[r3];
./tools/qemu-xen/target-s390x/op_helper.c:    if (!(env->psw.mask & PSW_MASK_64)) {
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1 + 1] = destlen;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r3 + 1] -= src - env->regs[r3];
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = dest;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r3] = src;
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t destlen = env->regs[r1 + 1];
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t srclen = env->regs[r3 + 1];
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1 + 1] = destlen;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r3 + 1] -= src - env->regs[r3];
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = dest;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r3] = src;
./tools/qemu-xen/target-s390x/op_helper.c:    uint32_t v1 = env->regs[r1];
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = (env->regs[r1] & 0xffffffff00000000ULL) | res;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = res;
./tools/qemu-xen/target-s390x/op_helper.c:    return float_comp_to_cc(float32_compare_quiet(v1, v2, &env->fpu_status));
./tools/qemu-xen/target-s390x/op_helper.c:    return float_comp_to_cc(float64_compare_quiet(v1, v2, &env->fpu_status));
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = int32_to_float64(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    v1.q = int32_to_float128(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = v1.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = v1.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = int64_to_float32(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = int64_to_float64(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    x1.q = int64_to_float128(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = x1.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = x1.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = int32_to_float32(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:               env->fregs[f1].l.upper, f1);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_add(env->fregs[f1].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         env->fregs[f2].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:               env->fregs[f2].l.upper, env->fregs[f1].l.upper, f1);
./tools/qemu-xen/target-s390x/op_helper.c:    return set_cc_nz_f32(env->fregs[f1].l.upper);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_add(env->fregs[f1].d, env->fregs[f2].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                   &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:               env->fregs[f2].d, env->fregs[f1].d, f1);
./tools/qemu-xen/target-s390x/op_helper.c:    return set_cc_nz_f64(env->fregs[f1].d);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_sub(env->fregs[f1].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         env->fregs[f2].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:               env->fregs[f2].l.upper, env->fregs[f1].l.upper, f1);
./tools/qemu-xen/target-s390x/op_helper.c:    return set_cc_nz_f32(env->fregs[f1].l.upper);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_sub(env->fregs[f1].d, env->fregs[f2].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                   &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:               __FUNCTION__, env->fregs[f2].d, env->fregs[f1].d, f1);
./tools/qemu-xen/target-s390x/op_helper.c:    return set_cc_nz_f64(env->fregs[f1].d);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_div(env->fregs[f1].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         env->fregs[f2].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.upper = env->fregs[f1].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.lower = env->fregs[f1 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    res.q = float128_div(v1.q, v2.q, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = res.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = res.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_mul(env->fregs[f1].d, env->fregs[f2].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                   &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.upper = env->fregs[f1].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.lower = env->fregs[f1 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    res.q = float128_mul(v1.q, v2.q, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = res.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = res.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[r1].d = float32_to_float64(env->fregs[r2].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                          &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    x2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    x2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float128_to_float64(x2.q, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    HELPER_LOG("%s: to 0x%ld\n", __FUNCTION__, env->fregs[f1].d);
./tools/qemu-xen/target-s390x/op_helper.c:    res.q = float64_to_float128(env->fregs[f2].d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = res.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = res.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    float64 d2 = env->fregs[f2].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float64_to_float32(d2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    x2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    x2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float128_to_float32(x2.q, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    HELPER_LOG("%s: to 0x%d\n", __FUNCTION__, env->fregs[f1].l.upper);
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v2 = env->fregs[f2].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = v1;
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v2 = env->fregs[f2].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = v1;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = v1.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = v1.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = env->fregs[f2].d;
./tools/qemu-xen/target-s390x/op_helper.c:    return set_cc_nz_f64(env->fregs[f1].d);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = env->fregs[f2].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    return set_cc_nz_f32(env->fregs[f1].l.upper);
./tools/qemu-xen/target-s390x/op_helper.c:    x.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    x.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = x.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = x.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_chs(env->fregs[f2].l.upper);
./tools/qemu-xen/target-s390x/op_helper.c:    return set_cc_nz_f32(env->fregs[f1].l.upper);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_chs(env->fregs[f2].d);
./tools/qemu-xen/target-s390x/op_helper.c:    return set_cc_nz_f64(env->fregs[f1].d);
./tools/qemu-xen/target-s390x/op_helper.c:    x2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    x2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = x1.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = x1.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v1 = env->fregs[f1].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_add(v1, v2.f, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v1 = env->fregs[f1].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_div(v1, v2.f, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v1 = env->fregs[f1].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_mul(v1, v2.f, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v1 = env->fregs[f1].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v2 = env->fregs[f2].l.upper;;
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v1 = env->fregs[f1].d;
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v2 = env->fregs[f2].d;;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.upper = env->fregs[f1].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.lower = env->fregs[f1 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:                            &env->fpu_status));
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v1 = env->fregs[f1].d;
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v1 = env->fregs[f1].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = v1 = float64_add(v1, v2.d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v1 = env->fregs[f1].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_sub(v1, v2.f, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v1 = env->fregs[f1].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = v1 = float64_sub(v1, v2.d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v1 = env->fregs[f1].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_mul(v1, v2.d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v1 = env->fregs[f1].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_div(v1, v2.d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:        set_float_rounding_mode(float_round_nearest_even, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:        set_float_rounding_mode(float_round_to_zero, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:        set_float_rounding_mode(float_round_up, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:        set_float_rounding_mode(float_round_down, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v2 = env->fregs[f2].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = float32_to_int64(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v2 = env->fregs[f2].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = float64_to_int64(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = float128_to_int64(v2.q, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v2 = env->fregs[f2].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = (env->regs[r1] & 0xffffffff00000000ULL) |
./tools/qemu-xen/target-s390x/op_helper.c:                     float32_to_int32(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v2 = env->fregs[f2].d;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = (env->regs[r1] & 0xffffffff00000000ULL) |
./tools/qemu-xen/target-s390x/op_helper.c:                     float64_to_int32(v2, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = (env->regs[r1] & 0xffffffff00000000ULL) |
./tools/qemu-xen/target-s390x/op_helper.c:                     float128_to_int32(v2.q, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_zero;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_zero;
./tools/qemu-xen/target-s390x/op_helper.c:    x.q = float64_to_float128(float64_zero, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = x.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 1].ll = x.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.upper = env->fregs[f1].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.lower = env->fregs[f1 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    res.q = float128_sub(v1.q, v2.q, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = res.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = res.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.upper = env->fregs[f1].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.lower = env->fregs[f1 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.upper = env->fregs[f2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v2.ll.lower = env->fregs[f2 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    res.q = float128_add(v1.q, v2.q, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = res.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = res.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_mul(env->fregs[f1].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         env->fregs[f2].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_div(env->fregs[f1].d, env->fregs[f2].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                   &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_add(env->fregs[f1].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                   float64_mul(v2.d, env->fregs[f3].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                               &env->fpu_status),
./tools/qemu-xen/target-s390x/op_helper.c:                                   &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_add(float64_mul(env->fregs[f2].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                               env->fregs[f3].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                               &env->fpu_status),
./tools/qemu-xen/target-s390x/op_helper.c:                                   env->fregs[f1].d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_sub(float64_mul(env->fregs[f2].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                               env->fregs[f3].d,
./tools/qemu-xen/target-s390x/op_helper.c:                                               &env->fpu_status),
./tools/qemu-xen/target-s390x/op_helper.c:                                   env->fregs[f1].d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].l.upper = float32_add(env->fregs[f1].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                         float32_mul(env->fregs[f2].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                                     env->fregs[f3].l.upper,
./tools/qemu-xen/target-s390x/op_helper.c:                                                     &env->fpu_status),
./tools/qemu-xen/target-s390x/op_helper.c:                                         &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float32_to_float64(v2,
./tools/qemu-xen/target-s390x/op_helper.c:                                          &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    v1.q = float64_to_float128(v2.d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].ll = v1.ll.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1 + 2].ll = v1.ll.lower;
./tools/qemu-xen/target-s390x/op_helper.c:    float32 v1 = env->fregs[f1].l.upper;
./tools/qemu-xen/target-s390x/op_helper.c:    float64 v1 = env->fregs[f1].d;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.upper = env->fregs[f1].ll;
./tools/qemu-xen/target-s390x/op_helper.c:    v1.ll.lower = env->fregs[f1 + 2].ll;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = 64;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1 + 1] = 0;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = res;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1 + 1] = ov2 & ~(0x8000000000000000ULL >> res);
./tools/qemu-xen/target-s390x/op_helper.c:    env->fregs[f1].d = float64_sqrt(env->fregs[f2].d, &env->fpu_status);
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t src_len = env->regs[(r2 + 1) & 15];
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t cksm = (uint32_t)env->regs[r1];
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r2] = src + src_len;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[(r2 + 1) & 15] = 0;
./tools/qemu-xen/target-s390x/op_helper.c:    env->regs[r1] = (env->regs[r1] & 0xffffffff00000000ULL) |
./tools/qemu-xen/target-s390x/op_helper.c:    qemu_log("program interrupt at %#" PRIx64 "\n", env->psw.addr);
./tools/qemu-xen/target-s390x/op_helper.c:        env->int_pgm_code = code;
./tools/qemu-xen/target-s390x/op_helper.c:        env->int_pgm_ilc = ilc;
./tools/qemu-xen/target-s390x/op_helper.c:        env->exception_index = EXCP_PGM;
./tools/qemu-xen/target-s390x/op_helper.c:                env->psw.addr += 4;
./tools/qemu-xen/target-s390x/op_helper.c:    stq(a1, env->cpu_num);
./tools/qemu-xen/target-s390x/op_helper.c:    env->psa = prefix & 0xfffff000;
./tools/qemu-xen/target-s390x/op_helper.c:    time = env->tod_offset +
./tools/qemu-xen/target-s390x/op_helper.c:           time2tod(qemu_get_clock_ns(vm_clock) - env->tod_basetime);
./tools/qemu-xen/target-s390x/op_helper.c:    stq(a1 + 1, clock_value(env) | env->cpu_num);
./tools/qemu-xen/target-s390x/op_helper.c:    qemu_mod_timer(env->tod_timer, qemu_get_clock_ns(vm_clock) + time);
./tools/qemu-xen/target-s390x/op_helper.c:    qemu_mod_timer(env->cpu_timer, qemu_get_clock_ns(vm_clock) + time);
./tools/qemu-xen/target-s390x/op_helper.c:            stw_p(&sysib.cpu_addr, env->cpu_num);
./tools/qemu-xen/target-s390x/op_helper.c:            stw_p(&sysib.cpu_addr, env->cpu_num);
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[0] = STSI_LEVEL_3;
./tools/qemu-xen/target-s390x/op_helper.c:        env->cregs[i] = ldq(src);
./tools/qemu-xen/target-s390x/op_helper.c:                   i, src, env->cregs[i]);
./tools/qemu-xen/target-s390x/op_helper.c:        env->cregs[i] = (env->cregs[i] & 0xFFFFFFFF00000000ULL) | ldl(src);
./tools/qemu-xen/target-s390x/op_helper.c:        stq(dest, env->cregs[i]);
./tools/qemu-xen/target-s390x/op_helper.c:        stl(dest, env->cregs[i]);
./tools/qemu-xen/target-s390x/op_helper.c:    return env->storage_keys[addr / TARGET_PAGE_SIZE];
./tools/qemu-xen/target-s390x/op_helper.c:    env->storage_keys[addr / TARGET_PAGE_SIZE] = r1;
./tools/qemu-xen/target-s390x/op_helper.c:    key = env->storage_keys[r2 / TARGET_PAGE_SIZE];
./tools/qemu-xen/target-s390x/op_helper.c:    env->storage_keys[r2 / TARGET_PAGE_SIZE] = (key & ~SK_R);
./tools/qemu-xen/target-s390x/op_helper.c:    uint32_t o1 = env->regs[r1];
./tools/qemu-xen/target-s390x/op_helper.c:        stl(a2, env->regs[(r1 + 1) & 15]);
./tools/qemu-xen/target-s390x/op_helper.c:        if (env->regs[r2] & 0x3) {
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = (env->regs[r1] & 0xffffffff00000000ULL) | o2;
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] &= 0xffffffff00000000ULL;
./tools/qemu-xen/target-s390x/op_helper.c:        env->psw.mask &= ~PSW_MASK_ASC;
./tools/qemu-xen/target-s390x/op_helper.c:        env->psw.mask |= PSW_ASC_PRIMARY;
./tools/qemu-xen/target-s390x/op_helper.c:        env->psw.mask &= ~PSW_MASK_ASC;
./tools/qemu-xen/target-s390x/op_helper.c:        env->psw.mask |= PSW_ASC_SECONDARY;
./tools/qemu-xen/target-s390x/op_helper.c:        env->psw.mask &= ~PSW_MASK_ASC;
./tools/qemu-xen/target-s390x/op_helper.c:        env->psw.mask |= PSW_ASC_HOME;
./tools/qemu-xen/target-s390x/op_helper.c:    int old_exc = env->exception_index;
./tools/qemu-xen/target-s390x/op_helper.c:    uint64_t asc = env->psw.mask & PSW_MASK_ASC;
./tools/qemu-xen/target-s390x/op_helper.c:    if (!(env->psw.mask & PSW_MASK_64) && (addr >> 32)) {
./tools/qemu-xen/target-s390x/op_helper.c:    env->exception_index = old_exc;
./tools/qemu-xen/target-s390x/op_helper.c:    if (env->exception_index == EXCP_PGM) {
./tools/qemu-xen/target-s390x/op_helper.c:        ret = env->int_pgm_code | 0x80000000;
./tools/qemu-xen/target-s390x/op_helper.c:    env->exception_index = old_exc;
./tools/qemu-xen/target-s390x/op_helper.c:    if (!(env->psw.mask & PSW_MASK_64)) {
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = (env->regs[r1] & 0xffffffff00000000ULL) | (ret & 0xffffffffULL);
./tools/qemu-xen/target-s390x/op_helper.c:        env->regs[r1] = ret;
./tools/qemu-xen/target-s390x/helper.c:    env->pending_int |= INTERRUPT_TOD;
./tools/qemu-xen/target-s390x/helper.c:    env->pending_int |= INTERRUPT_CPUTIMER;
./tools/qemu-xen/target-s390x/helper.c:    env->tod_offset = TOD_UNIX_EPOCH +
./tools/qemu-xen/target-s390x/helper.c:    env->tod_basetime = 0;
./tools/qemu-xen/target-s390x/helper.c:    env->tod_timer = qemu_new_timer_ns(vm_clock, s390x_tod_timer, env);
./tools/qemu-xen/target-s390x/helper.c:    env->cpu_timer = qemu_new_timer_ns(vm_clock, s390x_cpu_timer, env);
./tools/qemu-xen/target-s390x/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/target-s390x/helper.c:    env->cpu_num = cpu_num++;
./tools/qemu-xen/target-s390x/helper.c:    env->ext_index = -1;
./tools/qemu-xen/target-s390x/helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-s390x/helper.c:    env->exception_index = EXCP_ADDR;
./tools/qemu-xen/target-s390x/helper.c:    env->__excp_addr = address; /* FIXME: find out how this works on a real machine */
./tools/qemu-xen/target-s390x/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-s390x/helper.c:    env->exception_index = EXCP_PGM;
./tools/qemu-xen/target-s390x/helper.c:    env->int_pgm_code = code;
./tools/qemu-xen/target-s390x/helper.c:    env->int_pgm_ilc = ilc;
./tools/qemu-xen/target-s390x/helper.c:    stq_phys(env->psa + offsetof(LowCore, trans_exc_code), vaddr | bits);
./tools/qemu-xen/target-s390x/helper.c:    stq_phys(env->psa + offsetof(LowCore, trans_exc_code), vaddr | bits);
./tools/qemu-xen/target-s390x/helper.c:        asce = env->cregs[1];
./tools/qemu-xen/target-s390x/helper.c:        asce = env->cregs[7];
./tools/qemu-xen/target-s390x/helper.c:        asce = env->cregs[13];
./tools/qemu-xen/target-s390x/helper.c:    if (!(env->psw.mask & PSW_MASK_DAT)) {
./tools/qemu-xen/target-s390x/helper.c:        *raddr = *raddr + env->psa;
./tools/qemu-xen/target-s390x/helper.c:        sk = &env->storage_keys[*raddr / TARGET_PAGE_SIZE];
./tools/qemu-xen/target-s390x/helper.c:    uint64_t asc = env->psw.mask & PSW_MASK_ASC;
./tools/qemu-xen/target-s390x/helper.c:    if (!(env->psw.mask & PSW_MASK_64)) {
./tools/qemu-xen/target-s390x/helper.c:    int old_exc = env->exception_index;
./tools/qemu-xen/target-s390x/helper.c:    uint64_t asc = env->psw.mask & PSW_MASK_ASC;
./tools/qemu-xen/target-s390x/helper.c:    if (!(env->psw.mask & PSW_MASK_64)) {
./tools/qemu-xen/target-s390x/helper.c:    env->exception_index = old_exc;
./tools/qemu-xen/target-s390x/helper.c:        env->halted = 1;
./tools/qemu-xen/target-s390x/helper.c:        env->exception_index = EXCP_HLT;
./tools/qemu-xen/target-s390x/helper.c:    env->psw.addr = addr;
./tools/qemu-xen/target-s390x/helper.c:    env->psw.mask = mask;
./tools/qemu-xen/target-s390x/helper.c:    env->cc_op = (mask >> 13) & 3;
./tools/qemu-xen/target-s390x/helper.c:    uint64_t r = env->psw.mask;
./tools/qemu-xen/target-s390x/helper.c:    env->cc_op = calc_cc(env, env->cc_op, env->cc_src, env->cc_dst, env->cc_vr);
./tools/qemu-xen/target-s390x/helper.c:    assert(!(env->cc_op & ~3));
./tools/qemu-xen/target-s390x/helper.c:    r |= env->cc_op << 13;
./tools/qemu-xen/target-s390x/helper.c:    lowcore = cpu_physical_memory_map(env->psa, &len, 1);
./tools/qemu-xen/target-s390x/helper.c:    lowcore->svc_code = cpu_to_be16(env->int_svc_code);
./tools/qemu-xen/target-s390x/helper.c:    lowcore->svc_ilc = cpu_to_be16(env->int_svc_ilc);
./tools/qemu-xen/target-s390x/helper.c:    lowcore->svc_old_psw.addr = cpu_to_be64(env->psw.addr + (env->int_svc_ilc));
./tools/qemu-xen/target-s390x/helper.c:    int ilc = env->int_pgm_ilc;
./tools/qemu-xen/target-s390x/helper.c:        ilc = get_ilc(ldub_code(env->psw.addr));
./tools/qemu-xen/target-s390x/helper.c:        ilc = get_ilc(ldub_code(env->psw.addr));
./tools/qemu-xen/target-s390x/helper.c:        env->psw.addr += ilc * 2;
./tools/qemu-xen/target-s390x/helper.c:        ilc = get_ilc(ldub_code(env->psw.addr)) * 2;
./tools/qemu-xen/target-s390x/helper.c:        env->psw.addr += ilc;
./tools/qemu-xen/target-s390x/helper.c:    qemu_log("%s: code=0x%x ilc=%d\n", __FUNCTION__, env->int_pgm_code, ilc);
./tools/qemu-xen/target-s390x/helper.c:    lowcore = cpu_physical_memory_map(env->psa, &len, 1);
./tools/qemu-xen/target-s390x/helper.c:    lowcore->pgm_code = cpu_to_be16(env->int_pgm_code);
./tools/qemu-xen/target-s390x/helper.c:    lowcore->program_old_psw.addr = cpu_to_be64(env->psw.addr);
./tools/qemu-xen/target-s390x/helper.c:            env->int_pgm_code, ilc, env->psw.mask,
./tools/qemu-xen/target-s390x/helper.c:            env->psw.addr);
./tools/qemu-xen/target-s390x/helper.c:    if (!(env->psw.mask & PSW_MASK_EXT)) {
./tools/qemu-xen/target-s390x/helper.c:    if (env->ext_index < 0 || env->ext_index > MAX_EXT_QUEUE) {
./tools/qemu-xen/target-s390x/helper.c:        cpu_abort(env, "Ext queue overrun: %d\n", env->ext_index);
./tools/qemu-xen/target-s390x/helper.c:    q = &env->ext_queue[env->ext_index];
./tools/qemu-xen/target-s390x/helper.c:    lowcore = cpu_physical_memory_map(env->psa, &len, 1);
./tools/qemu-xen/target-s390x/helper.c:    lowcore->external_old_psw.addr = cpu_to_be64(env->psw.addr);
./tools/qemu-xen/target-s390x/helper.c:    lowcore->cpu_addr = cpu_to_be16(env->cpu_num | VIRTIO_SUBCODE_64);
./tools/qemu-xen/target-s390x/helper.c:    env->ext_index--;
./tools/qemu-xen/target-s390x/helper.c:    if (env->ext_index == -1) {
./tools/qemu-xen/target-s390x/helper.c:        env->pending_int &= ~INTERRUPT_EXT;
./tools/qemu-xen/target-s390x/helper.c:            env->psw.mask, env->psw.addr);
./tools/qemu-xen/target-s390x/helper.c:    qemu_log("%s: %d at pc=%" PRIx64 "\n", __FUNCTION__, env->exception_index,
./tools/qemu-xen/target-s390x/helper.c:             env->psw.addr);
./tools/qemu-xen/target-s390x/helper.c:    if ((env->psw.mask & PSW_MASK_EXT) &&
./tools/qemu-xen/target-s390x/helper.c:        env->exception_index == -1) {
./tools/qemu-xen/target-s390x/helper.c:        if (env->pending_int & INTERRUPT_EXT) {
./tools/qemu-xen/target-s390x/helper.c:            env->exception_index = EXCP_EXT;
./tools/qemu-xen/target-s390x/helper.c:        } else if (env->pending_int & INTERRUPT_TOD) {
./tools/qemu-xen/target-s390x/helper.c:            env->exception_index = EXCP_EXT;
./tools/qemu-xen/target-s390x/helper.c:            env->pending_int &= ~INTERRUPT_EXT;
./tools/qemu-xen/target-s390x/helper.c:            env->pending_int &= ~INTERRUPT_TOD;
./tools/qemu-xen/target-s390x/helper.c:        } else if (env->pending_int & INTERRUPT_CPUTIMER) {
./tools/qemu-xen/target-s390x/helper.c:            env->exception_index = EXCP_EXT;
./tools/qemu-xen/target-s390x/helper.c:            env->pending_int &= ~INTERRUPT_EXT;
./tools/qemu-xen/target-s390x/helper.c:            env->pending_int &= ~INTERRUPT_TOD;
./tools/qemu-xen/target-s390x/helper.c:    switch (env->exception_index) {
./tools/qemu-xen/target-s390x/helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-s390x/helper.c:    if (!env->pending_int) {
./tools/qemu-xen/target-s390x/helper.c:        env->interrupt_request &= ~CPU_INTERRUPT_HARD;
./tools/qemu-xen/kvm-all.c:    ret = kvm_vm_ioctl(s, KVM_CREATE_VCPU, env->cpu_index);
./tools/qemu-xen/kvm-all.c:    env->kvm_fd = ret;
./tools/qemu-xen/kvm-all.c:    env->kvm_state = s;
./tools/qemu-xen/kvm-all.c:    env->kvm_vcpu_dirty = 1;
./tools/qemu-xen/kvm-all.c:    env->kvm_run = mmap(NULL, mmap_size, PROT_READ | PROT_WRITE, MAP_SHARED,
./tools/qemu-xen/kvm-all.c:                        env->kvm_fd, 0);
./tools/qemu-xen/kvm-all.c:    if (env->kvm_run == MAP_FAILED) {
./tools/qemu-xen/kvm-all.c:            (void *)env->kvm_run + s->coalesced_mmio * PAGE_SIZE;
./tools/qemu-xen/kvm-all.c:    env->interrupt_request |= mask;
./tools/qemu-xen/kvm-all.c:    if (!env->kvm_vcpu_dirty) {
./tools/qemu-xen/kvm-all.c:        env->kvm_vcpu_dirty = 1;
./tools/qemu-xen/kvm-all.c:    if (!env->kvm_vcpu_dirty) {
./tools/qemu-xen/kvm-all.c:    env->kvm_vcpu_dirty = 0;
./tools/qemu-xen/kvm-all.c:    env->kvm_vcpu_dirty = 0;
./tools/qemu-xen/kvm-all.c:    struct kvm_run *run = env->kvm_run;
./tools/qemu-xen/kvm-all.c:        env->exit_request = 0;
./tools/qemu-xen/kvm-all.c:        if (env->kvm_vcpu_dirty) {
./tools/qemu-xen/kvm-all.c:            env->kvm_vcpu_dirty = 0;
./tools/qemu-xen/kvm-all.c:        if (env->exit_request) {
./tools/qemu-xen/kvm-all.c:    env->exit_request = 0;
./tools/qemu-xen/kvm-all.c:    ret = ioctl(env->kvm_fd, type, arg);
./tools/qemu-xen/kvm-all.c:    QTAILQ_FOREACH(bp, &env->kvm_state->kvm_sw_breakpoints, entry) {
./tools/qemu-xen/kvm-all.c:    return !QTAILQ_EMPTY(&env->kvm_state->kvm_sw_breakpoints);
./tools/qemu-xen/kvm-all.c:    if (env->singlestep_enabled) {
./tools/qemu-xen/kvm-all.c:        QTAILQ_INSERT_HEAD(&current_env->kvm_state->kvm_sw_breakpoints,
./tools/qemu-xen/kvm-all.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/kvm-all.c:        QTAILQ_REMOVE(&current_env->kvm_state->kvm_sw_breakpoints, bp, entry);
./tools/qemu-xen/kvm-all.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/kvm-all.c:    KVMState *s = current_env->kvm_state;
./tools/qemu-xen/kvm-all.c:            for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/kvm-all.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/bsd-user/main.c:                abi_ulong params = (abi_ulong) env->regs[R_ESP] +
./tools/qemu-xen/bsd-user/main.c:                int32_t syscall_nr = env->regs[R_EAX];
./tools/qemu-xen/bsd-user/main.c:                env->regs[R_EAX] = do_freebsd_syscall(env,
./tools/qemu-xen/bsd-user/main.c:                env->regs[R_EAX] = do_openbsd_syscall(env,
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EAX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EBX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_ECX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EDX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_ESI],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EDI],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EBP]);
./tools/qemu-xen/bsd-user/main.c:            if (((abi_ulong)env->regs[R_EAX]) >= (abi_ulong)(-515)) {
./tools/qemu-xen/bsd-user/main.c:                env->regs[R_EAX] = -env->regs[R_EAX];
./tools/qemu-xen/bsd-user/main.c:                env->eflags |= CC_C;
./tools/qemu-xen/bsd-user/main.c:                env->eflags &= ~CC_C;
./tools/qemu-xen/bsd-user/main.c:                env->regs[R_EAX] = do_freebsd_syscall(env,
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EAX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EDI],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_ESI],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EDX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_ECX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[8],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[9], 0, 0);
./tools/qemu-xen/bsd-user/main.c:                env->regs[R_EAX] = do_openbsd_syscall(env,
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EAX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EDI],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_ESI],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[R_EDX],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[10],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[8],
./tools/qemu-xen/bsd-user/main.c:                                                      env->regs[9]);
./tools/qemu-xen/bsd-user/main.c:            env->eip = env->exception_next_eip;
./tools/qemu-xen/bsd-user/main.c:            if (((abi_ulong)env->regs[R_EAX]) >= (abi_ulong)(-515)) {
./tools/qemu-xen/bsd-user/main.c:                env->regs[R_EAX] = -env->regs[R_EAX];
./tools/qemu-xen/bsd-user/main.c:                env->eflags |= CC_C;
./tools/qemu-xen/bsd-user/main.c:                env->eflags &= ~CC_C;
./tools/qemu-xen/bsd-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/bsd-user/main.c:            if (!(env->error_code & 1))
./tools/qemu-xen/bsd-user/main.c:            info._sifields._sigfault._addr = env->cr[2];
./tools/qemu-xen/bsd-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/bsd-user/main.c:                info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen/bsd-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/bsd-user/main.c:                    info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen/bsd-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/bsd-user/main.c:            info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen/bsd-user/main.c:            pc = env->segs[R_CS].base + env->eip;
./tools/qemu-xen/bsd-user/main.c:    index = (index + cwp * 16) % (16 * env->nwindows);
./tools/qemu-xen/bsd-user/main.c:    if (index < 8 && env->cwp == env->nwindows - 1)
./tools/qemu-xen/bsd-user/main.c:        index += 16 * env->nwindows;
./tools/qemu-xen/bsd-user/main.c:    sp_ptr = env->regbase[get_reg_index(env, cwp1, 6)];
./tools/qemu-xen/bsd-user/main.c:        put_user_ual(env->regbase[get_reg_index(env, cwp1, 8 + i)], sp_ptr);
./tools/qemu-xen/bsd-user/main.c:    new_wim = ((env->wim >> 1) | (env->wim << (env->nwindows - 1))) &
./tools/qemu-xen/bsd-user/main.c:        ((1LL << env->nwindows) - 1);
./tools/qemu-xen/bsd-user/main.c:    save_window_offset(env, cpu_cwp_dec(env, env->cwp - 2));
./tools/qemu-xen/bsd-user/main.c:    env->wim = new_wim;
./tools/qemu-xen/bsd-user/main.c:    save_window_offset(env, cpu_cwp_dec(env, env->cwp - 2));
./tools/qemu-xen/bsd-user/main.c:    env->cansave++;
./tools/qemu-xen/bsd-user/main.c:    env->canrestore--;
./tools/qemu-xen/bsd-user/main.c:    new_wim = ((env->wim << 1) | (env->wim >> (env->nwindows - 1))) &
./tools/qemu-xen/bsd-user/main.c:        ((1LL << env->nwindows) - 1);
./tools/qemu-xen/bsd-user/main.c:    cwp1 = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen/bsd-user/main.c:    sp_ptr = env->regbase[get_reg_index(env, cwp1, 6)];
./tools/qemu-xen/bsd-user/main.c:        get_user_ual(env->regbase[get_reg_index(env, cwp1, 8 + i)], sp_ptr);
./tools/qemu-xen/bsd-user/main.c:    env->canrestore++;
./tools/qemu-xen/bsd-user/main.c:    if (env->cleanwin < env->nwindows - 1)
./tools/qemu-xen/bsd-user/main.c:        env->cleanwin++;
./tools/qemu-xen/bsd-user/main.c:    env->cansave--;
./tools/qemu-xen/bsd-user/main.c:    env->wim = new_wim;
./tools/qemu-xen/bsd-user/main.c:        cwp1 = cpu_cwp_inc(env, env->cwp + offset);
./tools/qemu-xen/bsd-user/main.c:        if (env->wim & (1 << cwp1))
./tools/qemu-xen/bsd-user/main.c:        if (env->canrestore == 0)
./tools/qemu-xen/bsd-user/main.c:        env->cansave++;
./tools/qemu-xen/bsd-user/main.c:        env->canrestore--;
./tools/qemu-xen/bsd-user/main.c:    cwp1 = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen/bsd-user/main.c:    env->wim = 1 << cwp1;
./tools/qemu-xen/bsd-user/main.c:            syscall_nr = env->gregs[1];
./tools/qemu-xen/bsd-user/main.c:                                         env->regwptr[0], env->regwptr[1],
./tools/qemu-xen/bsd-user/main.c:                                         env->regwptr[2], env->regwptr[3],
./tools/qemu-xen/bsd-user/main.c:                                         env->regwptr[4], env->regwptr[5], 0, 0);
./tools/qemu-xen/bsd-user/main.c:                                        env->regwptr[0], env->regwptr[1],
./tools/qemu-xen/bsd-user/main.c:                                        env->regwptr[2], env->regwptr[3],
./tools/qemu-xen/bsd-user/main.c:                                        env->regwptr[4], env->regwptr[5]);
./tools/qemu-xen/bsd-user/main.c:                                         env->regwptr[0], env->regwptr[1],
./tools/qemu-xen/bsd-user/main.c:                                         env->regwptr[2], env->regwptr[3],
./tools/qemu-xen/bsd-user/main.c:                                         env->regwptr[4], env->regwptr[5]);
./tools/qemu-xen/bsd-user/main.c:                env->xcc |= PSR_CARRY;
./tools/qemu-xen/bsd-user/main.c:                env->psr |= PSR_CARRY;
./tools/qemu-xen/bsd-user/main.c:                env->xcc &= ~PSR_CARRY;
./tools/qemu-xen/bsd-user/main.c:                env->psr &= ~PSR_CARRY;
./tools/qemu-xen/bsd-user/main.c:            env->regwptr[0] = ret;
./tools/qemu-xen/bsd-user/main.c:                env->gregs[1] & TARGET_OPENBSD_SYSCALL_G2RFLAG) {
./tools/qemu-xen/bsd-user/main.c:                env->pc = env->gregs[2];
./tools/qemu-xen/bsd-user/main.c:                env->npc = env->pc + 4;
./tools/qemu-xen/bsd-user/main.c:                       env->gregs[1] & TARGET_OPENBSD_SYSCALL_G7RFLAG) {
./tools/qemu-xen/bsd-user/main.c:                env->pc = env->gregs[7];
./tools/qemu-xen/bsd-user/main.c:                env->npc = env->pc + 4;
./tools/qemu-xen/bsd-user/main.c:                env->pc = env->npc;
./tools/qemu-xen/bsd-user/main.c:                env->npc = env->npc + 4;
./tools/qemu-xen/bsd-user/main.c:            env->pc = env->npc;
./tools/qemu-xen/bsd-user/main.c:            env->npc = env->npc + 4;
./tools/qemu-xen/bsd-user/main.c:            env->pc = env->npc;
./tools/qemu-xen/bsd-user/main.c:            env->npc = env->npc + 4;
./tools/qemu-xen/bsd-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/bsd-user/main.c:                info._sifields._sigfault._addr = env->mmuregs[4];
./tools/qemu-xen/bsd-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/bsd-user/main.c:                    info._sifields._sigfault._addr = env->dmmuregs[4];
./tools/qemu-xen/bsd-user/main.c:                    info._sifields._sigfault._addr = env->tsptr->tpc;
./tools/qemu-xen/bsd-user/main.c:    env->opaque = ts;
./tools/qemu-xen/bsd-user/main.c:    env->cr[0] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK;
./tools/qemu-xen/bsd-user/main.c:    env->hflags |= HF_PE_MASK;
./tools/qemu-xen/bsd-user/main.c:    if (env->cpuid_features & CPUID_SSE) {
./tools/qemu-xen/bsd-user/main.c:        env->cr[4] |= CR4_OSFXSR_MASK;
./tools/qemu-xen/bsd-user/main.c:        env->hflags |= HF_OSFXSR_MASK;
./tools/qemu-xen/bsd-user/main.c:    if (!(env->cpuid_ext2_features & CPUID_EXT2_LM)) {
./tools/qemu-xen/bsd-user/main.c:    env->cr[4] |= CR4_PAE_MASK;
./tools/qemu-xen/bsd-user/main.c:    env->efer |= MSR_EFER_LMA | MSR_EFER_LME;
./tools/qemu-xen/bsd-user/main.c:    env->hflags |= HF_LMA_MASK;
./tools/qemu-xen/bsd-user/main.c:    env->eflags |= IF_MASK;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EAX] = regs->rax;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EBX] = regs->rbx;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_ECX] = regs->rcx;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EDX] = regs->rdx;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_ESI] = regs->rsi;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EDI] = regs->rdi;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EBP] = regs->rbp;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_ESP] = regs->rsp;
./tools/qemu-xen/bsd-user/main.c:    env->eip = regs->rip;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EAX] = regs->eax;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EBX] = regs->ebx;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_ECX] = regs->ecx;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EDX] = regs->edx;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_ESI] = regs->esi;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EDI] = regs->edi;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_EBP] = regs->ebp;
./tools/qemu-xen/bsd-user/main.c:    env->regs[R_ESP] = regs->esp;
./tools/qemu-xen/bsd-user/main.c:    env->eip = regs->eip;
./tools/qemu-xen/bsd-user/main.c:    env->idt.limit = 511;
./tools/qemu-xen/bsd-user/main.c:    env->idt.limit = 255;
./tools/qemu-xen/bsd-user/main.c:    env->idt.base = target_mmap(0, sizeof(uint64_t) * (env->idt.limit + 1),
./tools/qemu-xen/bsd-user/main.c:    idt_table = g2h(env->idt.base);
./tools/qemu-xen/bsd-user/main.c:        env->gdt.base = target_mmap(0, sizeof(uint64_t) * TARGET_GDT_ENTRIES,
./tools/qemu-xen/bsd-user/main.c:        env->gdt.limit = sizeof(uint64_t) * TARGET_GDT_ENTRIES - 1;
./tools/qemu-xen/bsd-user/main.c:        gdt_table = g2h(env->gdt.base);
./tools/qemu-xen/bsd-user/main.c:    env->segs[R_FS].selector = 0;
./tools/qemu-xen/bsd-user/main.c:        env->pc = regs->pc;
./tools/qemu-xen/bsd-user/main.c:        env->npc = regs->npc;
./tools/qemu-xen/bsd-user/main.c:        env->y = regs->y;
./tools/qemu-xen/bsd-user/main.c:            env->gregs[i] = regs->u_regs[i];
./tools/qemu-xen/bsd-user/main.c:            env->regwptr[i] = regs->u_regs[i + 8];
./tools/qemu-xen/bsd-user/syscall.c:        env->segs[idx].base = val;
./tools/qemu-xen/bsd-user/syscall.c:        val = env->segs[idx].base;
./tools/qemu-xen/bsd-user/elfload.c:    int family = (thread_env->cpuid_version >> 8) & 0xff;
./tools/qemu-xen/bsd-user/elfload.c:  return thread_env->cpuid_features;
./tools/qemu-xen/usb-redir.c:        if (dev->debug >= usbredirparser_error) { \
./tools/qemu-xen/usb-redir.c:        if (dev->debug >= usbredirparser_warning) { \
./tools/qemu-xen/usb-redir.c:        if (dev->debug >= usbredirparser_info) { \
./tools/qemu-xen/usb-redir.c:        if (dev->debug >= usbredirparser_debug) { \
./tools/qemu-xen/usb-redir.c:        if (dev->debug >= usbredirparser_debug_data) { \
./tools/qemu-xen/usb-redir.c:    if (dev->debug < level) {
./tools/qemu-xen/usb-redir.c:    if (dev->debug < usbredirparser_debug_data) {
./tools/qemu-xen/usb-redir.c:    if (dev->read_buf_size < count) {
./tools/qemu-xen/usb-redir.c:        count = dev->read_buf_size;
./tools/qemu-xen/usb-redir.c:    memcpy(data, dev->read_buf, count);
./tools/qemu-xen/usb-redir.c:    dev->read_buf_size -= count;
./tools/qemu-xen/usb-redir.c:    if (dev->read_buf_size) {
./tools/qemu-xen/usb-redir.c:        dev->read_buf += count;
./tools/qemu-xen/usb-redir.c:        dev->read_buf = NULL;
./tools/qemu-xen/usb-redir.c:    if (!dev->cs->opened) {
./tools/qemu-xen/usb-redir.c:    return qemu_chr_fe_write(dev->cs, data, count);
./tools/qemu-xen/usb-redir.c:    aurb->packet_id = dev->packet_id;
./tools/qemu-xen/usb-redir.c:    QTAILQ_INSERT_TAIL(&dev->asyncq, aurb, next);
./tools/qemu-xen/usb-redir.c:    dev->packet_id++;
./tools/qemu-xen/usb-redir.c:    QTAILQ_REMOVE(&dev->asyncq, aurb, next);
./tools/qemu-xen/usb-redir.c:    QTAILQ_FOREACH(aurb, &dev->asyncq, next) {
./tools/qemu-xen/usb-redir.c:    QTAILQ_FOREACH(aurb, &dev->asyncq, next) {
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_cancel_data_packet(dev->parser, aurb->packet_id);
./tools/qemu-xen/usb-redir.c:        usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:    QTAILQ_INSERT_TAIL(&dev->endpoint[EP2I(ep)].bufpq, bufp, next);
./tools/qemu-xen/usb-redir.c:    QTAILQ_REMOVE(&dev->endpoint[EP2I(ep)].bufpq, bufp, next);
./tools/qemu-xen/usb-redir.c:    QTAILQ_FOREACH_SAFE(buf, &dev->endpoint[EP2I(ep)].bufpq, next, buf_next) {
./tools/qemu-xen/usb-redir.c:    usbredirparser_send_reset(dev->parser);
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:    if (!dev->endpoint[EP2I(ep)].iso_started &&
./tools/qemu-xen/usb-redir.c:            !dev->endpoint[EP2I(ep)].iso_error) {
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_start_iso_stream(dev->parser, 0, &start_iso);
./tools/qemu-xen/usb-redir.c:        usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:        dev->endpoint[EP2I(ep)].iso_started = 1;
./tools/qemu-xen/usb-redir.c:        isop = QTAILQ_FIRST(&dev->endpoint[EP2I(ep)].bufpq);
./tools/qemu-xen/usb-redir.c:            status = dev->endpoint[EP2I(ep)].iso_error;
./tools/qemu-xen/usb-redir.c:            dev->endpoint[EP2I(ep)].iso_error = 0;
./tools/qemu-xen/usb-redir.c:        if (dev->endpoint[EP2I(ep)].iso_started) {
./tools/qemu-xen/usb-redir.c:            usbredirparser_send_iso_packet(dev->parser, 0, &iso_packet,
./tools/qemu-xen/usb-redir.c:            usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:        status = dev->endpoint[EP2I(ep)].iso_error;
./tools/qemu-xen/usb-redir.c:        dev->endpoint[EP2I(ep)].iso_error = 0;
./tools/qemu-xen/usb-redir.c:    if (dev->endpoint[EP2I(ep)].iso_started) {
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_stop_iso_stream(dev->parser, 0, &stop_iso_stream);
./tools/qemu-xen/usb-redir.c:        dev->endpoint[EP2I(ep)].iso_started = 0;
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_bulk_packet(dev->parser, aurb->packet_id,
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_bulk_packet(dev->parser, aurb->packet_id,
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:        if (!dev->endpoint[EP2I(ep)].interrupt_started &&
./tools/qemu-xen/usb-redir.c:                !dev->endpoint[EP2I(ep)].interrupt_error) {
./tools/qemu-xen/usb-redir.c:            usbredirparser_send_start_interrupt_receiving(dev->parser, 0,
./tools/qemu-xen/usb-redir.c:            usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:            dev->endpoint[EP2I(ep)].interrupt_started = 1;
./tools/qemu-xen/usb-redir.c:        intp = QTAILQ_FIRST(&dev->endpoint[EP2I(ep)].bufpq);
./tools/qemu-xen/usb-redir.c:            status = dev->endpoint[EP2I(ep)].interrupt_error;
./tools/qemu-xen/usb-redir.c:            dev->endpoint[EP2I(ep)].interrupt_error = 0;
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_interrupt_packet(dev->parser, aurb->packet_id,
./tools/qemu-xen/usb-redir.c:        usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:    if (dev->endpoint[EP2I(ep)].interrupt_started) {
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_stop_interrupt_receiving(dev->parser, 0,
./tools/qemu-xen/usb-redir.c:        dev->endpoint[EP2I(ep)].interrupt_started = 0;
./tools/qemu-xen/usb-redir.c:    switch (dev->endpoint[EP2I(ep)].type) {
./tools/qemu-xen/usb-redir.c:              dev->endpoint[EP2I(ep)].type);
./tools/qemu-xen/usb-redir.c:        switch (dev->endpoint[i].type) {
./tools/qemu-xen/usb-redir.c:    usbredirparser_send_set_configuration(dev->parser, aurb->packet_id,
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:    usbredirparser_send_get_configuration(dev->parser, aurb->packet_id);
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:        if (dev->endpoint[i].interface == interface) {
./tools/qemu-xen/usb-redir.c:            switch (dev->endpoint[i].type) {
./tools/qemu-xen/usb-redir.c:    usbredirparser_send_set_alt_setting(dev->parser, aurb->packet_id,
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:    usbredirparser_send_get_alt_setting(dev->parser, aurb->packet_id,
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:        dev->dev.addr = value;
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_control_packet(dev->parser, aurb->packet_id,
./tools/qemu-xen/usb-redir.c:        usbredirparser_send_control_packet(dev->parser, aurb->packet_id,
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:    if (dev->parser) {
./tools/qemu-xen/usb-redir.c:        usbredirparser_destroy(dev->parser);
./tools/qemu-xen/usb-redir.c:        dev->parser = NULL;
./tools/qemu-xen/usb-redir.c:    if (dev->cs->opened) {
./tools/qemu-xen/usb-redir.c:        dev->parser = qemu_oom_check(usbredirparser_create());
./tools/qemu-xen/usb-redir.c:        dev->parser->priv = dev;
./tools/qemu-xen/usb-redir.c:        dev->parser->log_func = usbredir_log;
./tools/qemu-xen/usb-redir.c:        dev->parser->read_func = usbredir_read;
./tools/qemu-xen/usb-redir.c:        dev->parser->write_func = usbredir_write;
./tools/qemu-xen/usb-redir.c:        dev->parser->device_connect_func = usbredir_device_connect;
./tools/qemu-xen/usb-redir.c:        dev->parser->device_disconnect_func = usbredir_device_disconnect;
./tools/qemu-xen/usb-redir.c:        dev->parser->interface_info_func = usbredir_interface_info;
./tools/qemu-xen/usb-redir.c:        dev->parser->ep_info_func = usbredir_ep_info;
./tools/qemu-xen/usb-redir.c:        dev->parser->configuration_status_func = usbredir_configuration_status;
./tools/qemu-xen/usb-redir.c:        dev->parser->alt_setting_status_func = usbredir_alt_setting_status;
./tools/qemu-xen/usb-redir.c:        dev->parser->iso_stream_status_func = usbredir_iso_stream_status;
./tools/qemu-xen/usb-redir.c:        dev->parser->interrupt_receiving_status_func =
./tools/qemu-xen/usb-redir.c:        dev->parser->bulk_streams_status_func = usbredir_bulk_streams_status;
./tools/qemu-xen/usb-redir.c:        dev->parser->control_packet_func = usbredir_control_packet;
./tools/qemu-xen/usb-redir.c:        dev->parser->bulk_packet_func = usbredir_bulk_packet;
./tools/qemu-xen/usb-redir.c:        dev->parser->iso_packet_func = usbredir_iso_packet;
./tools/qemu-xen/usb-redir.c:        dev->parser->interrupt_packet_func = usbredir_interrupt_packet;
./tools/qemu-xen/usb-redir.c:        dev->read_buf = NULL;
./tools/qemu-xen/usb-redir.c:        dev->read_buf_size = 0;
./tools/qemu-xen/usb-redir.c:        usbredirparser_init(dev->parser, VERSION, NULL, 0, 0);
./tools/qemu-xen/usb-redir.c:        usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:    usb_device_attach(&dev->dev);
./tools/qemu-xen/usb-redir.c:    if (dev->parser) {
./tools/qemu-xen/usb-redir.c:    assert(dev->read_buf == NULL);
./tools/qemu-xen/usb-redir.c:    dev->read_buf = buf;
./tools/qemu-xen/usb-redir.c:    dev->read_buf_size = size;
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_read(dev->parser);
./tools/qemu-xen/usb-redir.c:    usbredirparser_do_write(dev->parser);
./tools/qemu-xen/usb-redir.c:        qemu_bh_schedule(dev->open_close_bh);
./tools/qemu-xen/usb-redir.c:    if (dev->cs == NULL) {
./tools/qemu-xen/usb-redir.c:    dev->open_close_bh = qemu_bh_new(usbredir_open_close_bh, dev);
./tools/qemu-xen/usb-redir.c:    dev->attach_timer = qemu_new_timer_ms(vm_clock, usbredir_do_attach, dev);
./tools/qemu-xen/usb-redir.c:    QTAILQ_INIT(&dev->asyncq);
./tools/qemu-xen/usb-redir.c:        QTAILQ_INIT(&dev->endpoint[i].bufpq);
./tools/qemu-xen/usb-redir.c:    udev->auto_attach = 0;
./tools/qemu-xen/usb-redir.c:    qemu_chr_fe_open(dev->cs);
./tools/qemu-xen/usb-redir.c:    qemu_chr_add_handlers(dev->cs, usbredir_chardev_can_read,
./tools/qemu-xen/usb-redir.c:    QTAILQ_FOREACH_SAFE(aurb, &dev->asyncq, next, next_aurb) {
./tools/qemu-xen/usb-redir.c:    qemu_chr_fe_close(dev->cs);
./tools/qemu-xen/usb-redir.c:    qemu_chr_delete(dev->cs);
./tools/qemu-xen/usb-redir.c:    qemu_bh_delete(dev->open_close_bh);
./tools/qemu-xen/usb-redir.c:    qemu_del_timer(dev->attach_timer);
./tools/qemu-xen/usb-redir.c:    qemu_free_timer(dev->attach_timer);
./tools/qemu-xen/usb-redir.c:    if (dev->parser) {
./tools/qemu-xen/usb-redir.c:        usbredirparser_destroy(dev->parser);
./tools/qemu-xen/usb-redir.c:    if (qemu_timer_pending(dev->attach_timer) || dev->dev.attached) {
./tools/qemu-xen/usb-redir.c:        dev->dev.speed = USB_SPEED_LOW;
./tools/qemu-xen/usb-redir.c:        dev->dev.speed = USB_SPEED_FULL;
./tools/qemu-xen/usb-redir.c:        dev->dev.speed = USB_SPEED_HIGH;
./tools/qemu-xen/usb-redir.c:        dev->dev.speed = USB_SPEED_SUPER;
./tools/qemu-xen/usb-redir.c:        dev->dev.speed = USB_SPEED_FULL;
./tools/qemu-xen/usb-redir.c:    dev->dev.speedmask = (1 << dev->dev.speed);
./tools/qemu-xen/usb-redir.c:    qemu_mod_timer(dev->attach_timer, dev->next_attach_time);
./tools/qemu-xen/usb-redir.c:    qemu_del_timer(dev->attach_timer);
./tools/qemu-xen/usb-redir.c:    if (dev->dev.attached) {
./tools/qemu-xen/usb-redir.c:        usb_device_detach(&dev->dev);
./tools/qemu-xen/usb-redir.c:        dev->next_attach_time = qemu_get_clock_ms(vm_clock) + 200;
./tools/qemu-xen/usb-redir.c:    memset(dev->endpoint, 0, sizeof(dev->endpoint));
./tools/qemu-xen/usb-redir.c:        QTAILQ_INIT(&dev->endpoint[i].bufpq);
./tools/qemu-xen/usb-redir.c:        dev->endpoint[i].type = ep_info->type[i];
./tools/qemu-xen/usb-redir.c:        dev->endpoint[i].interval = ep_info->interval[i];
./tools/qemu-xen/usb-redir.c:        dev->endpoint[i].interface = ep_info->interface[i];
./tools/qemu-xen/usb-redir.c:        if (dev->endpoint[i].type != usb_redir_type_invalid) {
./tools/qemu-xen/usb-redir.c:                    dev->endpoint[i].type, dev->endpoint[i].interface);
./tools/qemu-xen/usb-redir.c:            dev->dev.data_buf[0] = config_status->configuration;
./tools/qemu-xen/usb-redir.c:        usb_generic_async_ctrl_complete(&dev->dev, aurb->packet);
./tools/qemu-xen/usb-redir.c:            dev->dev.data_buf[0] = alt_setting_status->alt;
./tools/qemu-xen/usb-redir.c:        usb_generic_async_ctrl_complete(&dev->dev, aurb->packet);
./tools/qemu-xen/usb-redir.c:    if (!dev->dev.attached) {
./tools/qemu-xen/usb-redir.c:    dev->endpoint[EP2I(ep)].iso_error = iso_stream_status->status;
./tools/qemu-xen/usb-redir.c:        dev->endpoint[EP2I(ep)].iso_started = 0;
./tools/qemu-xen/usb-redir.c:    if (!dev->dev.attached) {
./tools/qemu-xen/usb-redir.c:    dev->endpoint[EP2I(ep)].interrupt_error =
./tools/qemu-xen/usb-redir.c:        dev->endpoint[EP2I(ep)].interrupt_started = 0;
./tools/qemu-xen/usb-redir.c:            if (data_len <= sizeof(dev->dev.data_buf)) {
./tools/qemu-xen/usb-redir.c:                memcpy(dev->dev.data_buf, data, data_len);
./tools/qemu-xen/usb-redir.c:                      data_len, sizeof(dev->dev.data_buf));
./tools/qemu-xen/usb-redir.c:        usb_generic_async_ctrl_complete(&dev->dev, aurb->packet);
./tools/qemu-xen/usb-redir.c:        usb_packet_complete(&dev->dev, aurb->packet);
./tools/qemu-xen/usb-redir.c:    if (dev->endpoint[EP2I(ep)].type != USB_ENDPOINT_XFER_ISOC) {
./tools/qemu-xen/usb-redir.c:    if (dev->endpoint[EP2I(ep)].iso_started == 0) {
./tools/qemu-xen/usb-redir.c:    if (dev->endpoint[EP2I(ep)].type != USB_ENDPOINT_XFER_INT) {
./tools/qemu-xen/usb-redir.c:        if (dev->endpoint[EP2I(ep)].interrupt_started == 0) {
./tools/qemu-xen/usb-redir.c:            usb_packet_complete(&dev->dev, aurb->packet);
./tools/qemu-xen/target-alpha/translate.c:            && !ctx->env->singlestep_enabled
./tools/qemu-xen/target-alpha/translate.c:                tcg_gen_movi_i64(cpu_ir[rc], ctx->env->implver);
./tools/qemu-xen/target-alpha/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-alpha/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-alpha/translate.c:                || env->singlestep_enabled)) {
./tools/qemu-xen/target-alpha/translate.c:        if (env->singlestep_enabled) {
./tools/qemu-xen/target-alpha/translate.c:    env->implver = implver;
./tools/qemu-xen/target-alpha/translate.c:    env->amask = amask;
./tools/qemu-xen/target-alpha/translate.c:    env->ps = PS_USER_MODE;
./tools/qemu-xen/target-alpha/translate.c:    env->lock_addr = -1;
./tools/qemu-xen/target-alpha/translate.c:    env->fen = 1;
./tools/qemu-xen/target-alpha/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-alpha/op_helper.c:#define FP_STATUS (env->fp_status)
./tools/qemu-xen/target-alpha/op_helper.c:    env->exception_index = excp;
./tools/qemu-xen/target-alpha/op_helper.c:    env->error_code = error;
./tools/qemu-xen/target-alpha/op_helper.c:    env->exception_index = excp;
./tools/qemu-xen/target-alpha/op_helper.c:    env->error_code = error;
./tools/qemu-xen/target-alpha/op_helper.c:    env->trap_arg0 = exc;
./tools/qemu-xen/target-alpha/op_helper.c:    env->trap_arg1 = mask;
./tools/qemu-xen/target-alpha/op_helper.c:    return (((uint64_t)env->pcc_ofs << 32)
./tools/qemu-xen/target-alpha/op_helper.c:        env->fpcr_exc_status |= exc;
./tools/qemu-xen/target-alpha/op_helper.c:        exc &= ~env->fpcr_exc_mask;
./tools/qemu-xen/target-alpha/op_helper.c:            if (env->fpcr_dnz) {
./tools/qemu-xen/target-alpha/op_helper.c:            if (env->fpcr_dnz) {
./tools/qemu-xen/target-alpha/op_helper.c:    if (env->fpcr_dnz) {
./tools/qemu-xen/target-alpha/op_helper.c:    env->pc = a & ~3;
./tools/qemu-xen/target-alpha/op_helper.c:    env->intr_flag = 0;
./tools/qemu-xen/target-alpha/op_helper.c:    env->lock_addr = -1;
./tools/qemu-xen/target-alpha/op_helper.c:        env->pal_mode = 0;
./tools/qemu-xen/target-alpha/op_helper.c:        env->alarm_expire = expire;
./tools/qemu-xen/target-alpha/op_helper.c:        qemu_mod_timer(env->alarm_timer, expire);
./tools/qemu-xen/target-alpha/op_helper.c:        qemu_del_timer(env->alarm_timer);
./tools/qemu-xen/target-alpha/op_helper.c:    env->lock_addr = p;
./tools/qemu-xen/target-alpha/op_helper.c:    return env->lock_value = (int32_t)ldl_phys(p);
./tools/qemu-xen/target-alpha/op_helper.c:    env->lock_addr = p;
./tools/qemu-xen/target-alpha/op_helper.c:    return env->lock_value = ldl_phys(p);
./tools/qemu-xen/target-alpha/op_helper.c:    if (p == env->lock_addr) {
./tools/qemu-xen/target-alpha/op_helper.c:        if (old == (int32_t)env->lock_value) {
./tools/qemu-xen/target-alpha/op_helper.c:    env->lock_addr = -1;
./tools/qemu-xen/target-alpha/op_helper.c:    if (p == env->lock_addr) {
./tools/qemu-xen/target-alpha/op_helper.c:        if (old == env->lock_value) {
./tools/qemu-xen/target-alpha/op_helper.c:    env->lock_addr = -1;
./tools/qemu-xen/target-alpha/op_helper.c:    pc = env->pc;
./tools/qemu-xen/target-alpha/op_helper.c:    env->trap_arg0 = addr;
./tools/qemu-xen/target-alpha/op_helper.c:    env->trap_arg1 = insn >> 26;                /* opcode */
./tools/qemu-xen/target-alpha/op_helper.c:    env->trap_arg2 = (insn >> 21) & 31;         /* dest regno */
./tools/qemu-xen/target-alpha/op_helper.c:    env->trap_arg0 = addr;
./tools/qemu-xen/target-alpha/op_helper.c:    env->trap_arg1 = is_write;
./tools/qemu-xen/target-alpha/helper.c:    t = env->fpcr_exc_status;
./tools/qemu-xen/target-alpha/helper.c:    t = env->fpcr_exc_mask;
./tools/qemu-xen/target-alpha/helper.c:    switch (env->fpcr_dyn_round) {
./tools/qemu-xen/target-alpha/helper.c:    if (env->fpcr_dnz) {
./tools/qemu-xen/target-alpha/helper.c:    if (env->fpcr_dnod) {
./tools/qemu-xen/target-alpha/helper.c:    if (env->fpcr_undz) {
./tools/qemu-xen/target-alpha/helper.c:    env->fpcr_exc_status = t;
./tools/qemu-xen/target-alpha/helper.c:    env->fpcr_exc_mask = t;
./tools/qemu-xen/target-alpha/helper.c:    env->fpcr_dyn_round = t;
./tools/qemu-xen/target-alpha/helper.c:    env->fpcr_flush_to_zero
./tools/qemu-xen/target-alpha/helper.c:    env->fpcr_dnz = (val & FPCR_DNZ) != 0;
./tools/qemu-xen/target-alpha/helper.c:    env->fpcr_dnod = (val & FPCR_DNOD) != 0;
./tools/qemu-xen/target-alpha/helper.c:    env->fpcr_undz = (val & FPCR_UNDZ) != 0;
./tools/qemu-xen/target-alpha/helper.c:    env->exception_index = EXCP_MMFAULT;
./tools/qemu-xen/target-alpha/helper.c:    env->trap_arg0 = address;
./tools/qemu-xen/target-alpha/helper.c:    i0 = env->ir[8];
./tools/qemu-xen/target-alpha/helper.c:    i1 = env->ir[9];
./tools/qemu-xen/target-alpha/helper.c:    i2 = env->ir[10];
./tools/qemu-xen/target-alpha/helper.c:    i3 = env->ir[11];
./tools/qemu-xen/target-alpha/helper.c:    i4 = env->ir[12];
./tools/qemu-xen/target-alpha/helper.c:    i5 = env->ir[13];
./tools/qemu-xen/target-alpha/helper.c:    i6 = env->ir[14];
./tools/qemu-xen/target-alpha/helper.c:    i7 = env->ir[25];
./tools/qemu-xen/target-alpha/helper.c:    env->ir[8]  = env->shadow[0];
./tools/qemu-xen/target-alpha/helper.c:    env->ir[9]  = env->shadow[1];
./tools/qemu-xen/target-alpha/helper.c:    env->ir[10] = env->shadow[2];
./tools/qemu-xen/target-alpha/helper.c:    env->ir[11] = env->shadow[3];
./tools/qemu-xen/target-alpha/helper.c:    env->ir[12] = env->shadow[4];
./tools/qemu-xen/target-alpha/helper.c:    env->ir[13] = env->shadow[5];
./tools/qemu-xen/target-alpha/helper.c:    env->ir[14] = env->shadow[6];
./tools/qemu-xen/target-alpha/helper.c:    env->ir[25] = env->shadow[7];
./tools/qemu-xen/target-alpha/helper.c:    env->shadow[0] = i0;
./tools/qemu-xen/target-alpha/helper.c:    env->shadow[1] = i1;
./tools/qemu-xen/target-alpha/helper.c:    env->shadow[2] = i2;
./tools/qemu-xen/target-alpha/helper.c:    env->shadow[3] = i3;
./tools/qemu-xen/target-alpha/helper.c:    env->shadow[4] = i4;
./tools/qemu-xen/target-alpha/helper.c:    env->shadow[5] = i5;
./tools/qemu-xen/target-alpha/helper.c:    env->shadow[6] = i6;
./tools/qemu-xen/target-alpha/helper.c:    env->shadow[7] = i7;
./tools/qemu-xen/target-alpha/helper.c:    pt = env->ptbr;
./tools/qemu-xen/target-alpha/helper.c:        env->exception_index = EXCP_MMFAULT;
./tools/qemu-xen/target-alpha/helper.c:        env->trap_arg0 = addr;
./tools/qemu-xen/target-alpha/helper.c:        env->trap_arg1 = fail;
./tools/qemu-xen/target-alpha/helper.c:        env->trap_arg2 = (rw == 2 ? -1 : rw);
./tools/qemu-xen/target-alpha/helper.c:    int i = env->exception_index;
./tools/qemu-xen/target-alpha/helper.c:                 ++count, name, env->error_code, env->pc, env->ir[IR_SP]);
./tools/qemu-xen/target-alpha/helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-alpha/helper.c:        i = env->error_code;
./tools/qemu-xen/target-alpha/helper.c:    env->exc_addr = env->pc | env->pal_mode;
./tools/qemu-xen/target-alpha/helper.c:    env->pc = env->palbr + i;
./tools/qemu-xen/target-alpha/helper.c:    if (!env->pal_mode) {
./tools/qemu-xen/target-alpha/helper.c:        env->pal_mode = 1;
./tools/qemu-xen/target-alpha/helper.c:                env->pc, env->ps);
./tools/qemu-xen/target-alpha/helper.c:                    linux_reg_names[i], env->ir[i]);
./tools/qemu-xen/target-alpha/helper.c:                env->lock_addr, env->lock_value);
./tools/qemu-xen/target-alpha/helper.c:                    *((uint64_t *)(&env->fir[i])));
./tools/qemu-xen/target-sh4/translate.c:		env->pc, env->sr, env->pr, env->fpscr);
./tools/qemu-xen/target-sh4/translate.c:		env->spc, env->ssr, env->gbr, env->vbr);
./tools/qemu-xen/target-sh4/translate.c:		env->sgr, env->dbr, env->delayed_pc, env->fpul);
./tools/qemu-xen/target-sh4/translate.c:		    i, env->gregs[i], i + 1, env->gregs[i + 1],
./tools/qemu-xen/target-sh4/translate.c:		    i + 2, env->gregs[i + 2], i + 3, env->gregs[i + 3]);
./tools/qemu-xen/target-sh4/translate.c:    if (env->flags & DELAY_SLOT) {
./tools/qemu-xen/target-sh4/translate.c:		    env->delayed_pc);
./tools/qemu-xen/target-sh4/translate.c:    } else if (env->flags & DELAY_SLOT_CONDITIONAL) {
./tools/qemu-xen/target-sh4/translate.c:		    env->delayed_pc);
./tools/qemu-xen/target-sh4/translate.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-sh4/translate.c:    env->pc = 0xA0000000;
./tools/qemu-xen/target-sh4/translate.c:    env->fpscr = FPSCR_PR; /* value for userspace according to the kernel */
./tools/qemu-xen/target-sh4/translate.c:    set_float_rounding_mode(float_round_nearest_even, &env->fp_status); /* ?! */
./tools/qemu-xen/target-sh4/translate.c:    env->sr = SR_MD | SR_RB | SR_BL | SR_I3 | SR_I2 | SR_I1 | SR_I0;
./tools/qemu-xen/target-sh4/translate.c:    env->fpscr = FPSCR_DN | FPSCR_RM_ZERO; /* CPU reset value according to SH4 manual */
./tools/qemu-xen/target-sh4/translate.c:    set_float_rounding_mode(float_round_to_zero, &env->fp_status);
./tools/qemu-xen/target-sh4/translate.c:    set_flush_to_zero(1, &env->fp_status);
./tools/qemu-xen/target-sh4/translate.c:    set_default_nan_mode(1, &env->fp_status);
./tools/qemu-xen/target-sh4/translate.c:    env->pvr = def->pvr;
./tools/qemu-xen/target-sh4/translate.c:    env->prr = def->prr;
./tools/qemu-xen/target-sh4/translate.c:    env->cvr = def->cvr;
./tools/qemu-xen/target-sh4/translate.c:    env->id = def->id;
./tools/qemu-xen/target-sh4/translate.c:    env->features = def->features;
./tools/qemu-xen/target-sh4/translate.c:    env->movcal_backup_tail = &(env->movcal_backup);
./tools/qemu-xen/target-sh4/translate.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/target-sh4/translate.c:    ctx.sr = env->sr;
./tools/qemu-xen/target-sh4/translate.c:    ctx.fpscr = env->fpscr;
./tools/qemu-xen/target-sh4/translate.c:    ctx.memidx = (env->sr & SR_MD) == 0 ? 1 : 0;
./tools/qemu-xen/target-sh4/translate.c:    ctx.singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-sh4/translate.c:    ctx.features = env->features;
./tools/qemu-xen/target-sh4/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-sh4/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-sh4/translate.c:	if (env->singlestep_enabled)
./tools/qemu-xen/target-sh4/translate.c:    if (env->singlestep_enabled) {
./tools/qemu-xen/target-sh4/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-sh4/translate.c:    env->flags = gen_opc_hflags[pc_pos];
./tools/qemu-xen/target-sh4/op_helper.c:    env->exception_index = index;
./tools/qemu-xen/target-sh4/op_helper.c:    env->exception_index = EXCP_DEBUG;
./tools/qemu-xen/target-sh4/op_helper.c:    env->halted = 1;
./tools/qemu-xen/target-sh4/op_helper.c:    env->in_sleep = 1;
./tools/qemu-xen/target-sh4/op_helper.c:    env->exception_index = EXCP_HLT;
./tools/qemu-xen/target-sh4/op_helper.c:    env->pc = next_pc;
./tools/qemu-xen/target-sh4/op_helper.c:    env->tra = tra << 2;
./tools/qemu-xen/target-sh4/op_helper.c:	*(env->movcal_backup_tail) = r;
./tools/qemu-xen/target-sh4/op_helper.c:	env->movcal_backup_tail = &(r->next);
./tools/qemu-xen/target-sh4/op_helper.c:    memory_content *current = env->movcal_backup;
./tools/qemu-xen/target-sh4/op_helper.c:	env->movcal_backup = current = next;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->movcal_backup_tail = &(env->movcal_backup);
./tools/qemu-xen/target-sh4/op_helper.c:    memory_content **current = &(env->movcal_backup);
./tools/qemu-xen/target-sh4/op_helper.c:		env->movcal_backup_tail = current;
./tools/qemu-xen/target-sh4/op_helper.c:    arg1 = tmp1 + (env->sr & 1);
./tools/qemu-xen/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->sr |= SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->sr &= ~SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:#define T (env->sr & SR_T)
./tools/qemu-xen/target-sh4/op_helper.c:#define Q (env->sr & SR_Q ? 1 : 0)
./tools/qemu-xen/target-sh4/op_helper.c:#define M (env->sr & SR_M ? 1 : 0)
./tools/qemu-xen/target-sh4/op_helper.c:#define SETT env->sr |= SR_T
./tools/qemu-xen/target-sh4/op_helper.c:#define CLRT env->sr &= ~SR_T
./tools/qemu-xen/target-sh4/op_helper.c:#define SETQ env->sr |= SR_Q
./tools/qemu-xen/target-sh4/op_helper.c:#define CLRQ env->sr &= ~SR_Q
./tools/qemu-xen/target-sh4/op_helper.c:#define SETM env->sr |= SR_M
./tools/qemu-xen/target-sh4/op_helper.c:#define CLRM env->sr &= ~SR_M
./tools/qemu-xen/target-sh4/op_helper.c:    res = ((uint64_t) env->mach << 32) | env->macl;
./tools/qemu-xen/target-sh4/op_helper.c:    env->mach = (res >> 32) & 0xffffffff;
./tools/qemu-xen/target-sh4/op_helper.c:    env->macl = res & 0xffffffff;
./tools/qemu-xen/target-sh4/op_helper.c:    if (env->sr & SR_S) {
./tools/qemu-xen/target-sh4/op_helper.c:	    env->mach |= 0xffff0000;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->mach &= 0x00007fff;
./tools/qemu-xen/target-sh4/op_helper.c:    res = ((uint64_t) env->mach << 32) | env->macl;
./tools/qemu-xen/target-sh4/op_helper.c:    env->mach = (res >> 32) & 0xffffffff;
./tools/qemu-xen/target-sh4/op_helper.c:    env->macl = res & 0xffffffff;
./tools/qemu-xen/target-sh4/op_helper.c:    if (env->sr & SR_S) {
./tools/qemu-xen/target-sh4/op_helper.c:	    env->mach = 1;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->macl = 0x80000000;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->mach = 1;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->macl = 0x7fffffff;
./tools/qemu-xen/target-sh4/op_helper.c:    arg1 = tmp1 - (env->sr & SR_T);
./tools/qemu-xen/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	env->sr |= SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->sr |= SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	    env->sr &= ~SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:	env->sr &= ~SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:    env->sr |= SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:    env->sr &= ~SR_T;
./tools/qemu-xen/target-sh4/op_helper.c:    env->fpscr = val & FPSCR_MASK;
./tools/qemu-xen/target-sh4/op_helper.c:	set_float_rounding_mode(float_round_to_zero, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:	set_float_rounding_mode(float_round_nearest_even, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_flush_to_zero((val & FPSCR_DN) != 0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    xcpt = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    env->fpscr &= ~FPSCR_FLAG_MASK;
./tools/qemu-xen/target-sh4/op_helper.c:            env->fpscr |= FPSCR_FLAG_V;
./tools/qemu-xen/target-sh4/op_helper.c:            env->fpscr |= FPSCR_FLAG_Z;
./tools/qemu-xen/target-sh4/op_helper.c:            env->fpscr |= FPSCR_FLAG_O;
./tools/qemu-xen/target-sh4/op_helper.c:            env->fpscr |= FPSCR_FLAG_U;
./tools/qemu-xen/target-sh4/op_helper.c:            env->fpscr |= FPSCR_FLAG_I;
./tools/qemu-xen/target-sh4/op_helper.c:        env->fpscr |= (env->fpscr & FPSCR_FLAG_MASK)
./tools/qemu-xen/target-sh4/op_helper.c:        cause = (env->fpscr & FPSCR_CAUSE_MASK) >> FPSCR_CAUSE_SHIFT;
./tools/qemu-xen/target-sh4/op_helper.c:        enable = (env->fpscr & FPSCR_ENABLE_MASK) >> FPSCR_ENABLE_SHIFT;
./tools/qemu-xen/target-sh4/op_helper.c:            env->exception_index = 0x120;
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float32_add(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float64_add(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    relation = float32_compare(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    relation = float64_compare(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    relation = float32_compare(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    relation = float64_compare(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    ret = float32_to_float64(t0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    ret = float64_to_float32(t0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float32_div(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float64_div(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    ret = int32_to_float32(t0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    ret = int32_to_float64(t0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float32_mul(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float32_add(t0, t2, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float32_mul(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float64_mul(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float32_sqrt(t0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float64_sqrt(t0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float32_sub(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    t0 = float64_sub(t0, t1, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    ret = float32_to_int32_round_to_zero(t0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    ret = float64_to_int32_round_to_zero(t0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    bank = (env->sr & FPSCR_FR) ? 16 : 0;
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:        p = float32_mul(env->fregs[bank + m + i],
./tools/qemu-xen/target-sh4/op_helper.c:                        env->fregs[bank + n + i],
./tools/qemu-xen/target-sh4/op_helper.c:                        &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:        r = float32_add(r, p, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:    env->fregs[bank + n + 3] = r;
./tools/qemu-xen/target-sh4/op_helper.c:    bank_matrix = (env->sr & FPSCR_FR) ? 0 : 16;
./tools/qemu-xen/target-sh4/op_helper.c:    bank_vector = (env->sr & FPSCR_FR) ? 16 : 0;
./tools/qemu-xen/target-sh4/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:            p = float32_mul(env->fregs[bank_matrix + 4 * j + i],
./tools/qemu-xen/target-sh4/op_helper.c:                            env->fregs[bank_vector + j],
./tools/qemu-xen/target-sh4/op_helper.c:                            &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:            r[i] = float32_add(r[i], p, &env->fp_status);
./tools/qemu-xen/target-sh4/op_helper.c:        env->fregs[bank_vector + i] = r[i];
./tools/qemu-xen/target-sh4/helper.c:  env->exception_index = -1;
./tools/qemu-xen/target-sh4/helper.c:    env->tea = address;
./tools/qemu-xen/target-sh4/helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-sh4/helper.c:        env->exception_index = 0x0a0;
./tools/qemu-xen/target-sh4/helper.c:        env->exception_index = 0x0c0;
./tools/qemu-xen/target-sh4/helper.c:        env->exception_index = 0x0a0;
./tools/qemu-xen/target-sh4/helper.c:    int do_irq = env->interrupt_request & CPU_INTERRUPT_HARD;
./tools/qemu-xen/target-sh4/helper.c:    int do_exp, irq_vector = env->exception_index;
./tools/qemu-xen/target-sh4/helper.c:    do_exp = env->exception_index != -1;
./tools/qemu-xen/target-sh4/helper.c:    do_irq = do_irq && (env->exception_index == -1);
./tools/qemu-xen/target-sh4/helper.c:    if (env->sr & SR_BL) {
./tools/qemu-xen/target-sh4/helper.c:        if (do_exp && env->exception_index != 0x1e0) {
./tools/qemu-xen/target-sh4/helper.c:            env->exception_index = 0x000; /* masked exception -> reset */
./tools/qemu-xen/target-sh4/helper.c:        if (do_irq && !env->in_sleep) {
./tools/qemu-xen/target-sh4/helper.c:    env->in_sleep = 0;
./tools/qemu-xen/target-sh4/helper.c:        irq_vector = sh_intc_get_pending_vector(env->intc_handle,
./tools/qemu-xen/target-sh4/helper.c:						(env->sr >> 4) & 0xf);
./tools/qemu-xen/target-sh4/helper.c:	switch (env->exception_index) {
./tools/qemu-xen/target-sh4/helper.c:    env->ssr = env->sr;
./tools/qemu-xen/target-sh4/helper.c:    env->spc = env->pc;
./tools/qemu-xen/target-sh4/helper.c:    env->sgr = env->gregs[15];
./tools/qemu-xen/target-sh4/helper.c:    env->sr |= SR_BL | SR_MD | SR_RB;
./tools/qemu-xen/target-sh4/helper.c:    if (env->flags & (DELAY_SLOT | DELAY_SLOT_CONDITIONAL)) {
./tools/qemu-xen/target-sh4/helper.c:	env->spc -= 2;
./tools/qemu-xen/target-sh4/helper.c:	env->flags &= ~(DELAY_SLOT | DELAY_SLOT_CONDITIONAL | DELAY_SLOT_TRUE);
./tools/qemu-xen/target-sh4/helper.c:    if (env->flags & DELAY_SLOT_CLEARME)
./tools/qemu-xen/target-sh4/helper.c:        env->flags = 0;
./tools/qemu-xen/target-sh4/helper.c:        env->expevt = env->exception_index;
./tools/qemu-xen/target-sh4/helper.c:        switch (env->exception_index) {
./tools/qemu-xen/target-sh4/helper.c:            env->sr &= ~SR_FD;
./tools/qemu-xen/target-sh4/helper.c:            env->sr |= 0xf << 4; /* IMASK */
./tools/qemu-xen/target-sh4/helper.c:            env->pc = 0xa0000000;
./tools/qemu-xen/target-sh4/helper.c:            env->pc = env->vbr + 0x400;
./tools/qemu-xen/target-sh4/helper.c:            env->spc += 2; /* special case for TRAPA */
./tools/qemu-xen/target-sh4/helper.c:            env->pc = env->vbr + 0x100;
./tools/qemu-xen/target-sh4/helper.c:        env->intevt = irq_vector;
./tools/qemu-xen/target-sh4/helper.c:        env->pc = env->vbr + 0x600;
./tools/qemu-xen/target-sh4/helper.c:    env->mmucr &= (and_mask << 24) | 0x00ffffff;
./tools/qemu-xen/target-sh4/helper.c:    env->mmucr |= (or_mask << 24);
./tools/qemu-xen/target-sh4/helper.c:    if ((env->mmucr & 0xe0000000) == 0xe0000000)
./tools/qemu-xen/target-sh4/helper.c:    if ((env->mmucr & 0x98000000) == 0x18000000)
./tools/qemu-xen/target-sh4/helper.c:    if ((env->mmucr & 0x54000000) == 0x04000000)
./tools/qemu-xen/target-sh4/helper.c:    if ((env->mmucr & 0x2c000000) == 0x00000000)
./tools/qemu-xen/target-sh4/helper.c:    asid = env->pteh & 0xff;
./tools/qemu-xen/target-sh4/helper.c:    urb = ((env->mmucr) >> 18) & 0x3f;
./tools/qemu-xen/target-sh4/helper.c:    urc = ((env->mmucr) >> 10) & 0x3f;
./tools/qemu-xen/target-sh4/helper.c:    env->mmucr = (env->mmucr & 0xffff03ff) | (urc << 10);
./tools/qemu-xen/target-sh4/helper.c:    ientry = &env->itlb[itlb];
./tools/qemu-xen/target-sh4/helper.c:    *ientry = env->utlb[utlb];
./tools/qemu-xen/target-sh4/helper.c:    e = find_tlb_entry(env, address, env->itlb, ITLB_SIZE, use_asid);
./tools/qemu-xen/target-sh4/helper.c:    return find_tlb_entry(env, address, env->utlb, UTLB_SIZE, use_asid);
./tools/qemu-xen/target-sh4/helper.c:    use_asid = (env->mmucr & MMUCR_SV) == 0 || (env->sr & SR_MD) == 0;
./tools/qemu-xen/target-sh4/helper.c:	    matching = &env->itlb[n];
./tools/qemu-xen/target-sh4/helper.c:	    if (!(env->sr & SR_MD) && !(matching->pr & 2))
./tools/qemu-xen/target-sh4/helper.c:                matching = &env->itlb[n];
./tools/qemu-xen/target-sh4/helper.c:                if (!(env->sr & SR_MD) && !(matching->pr & 2)) {
./tools/qemu-xen/target-sh4/helper.c:	    matching = &env->utlb[n];
./tools/qemu-xen/target-sh4/helper.c:            if (!(env->sr & SR_MD) && !(matching->pr & 2)) {
./tools/qemu-xen/target-sh4/helper.c:	if (!(env->sr & SR_MD)
./tools/qemu-xen/target-sh4/helper.c:    if (!(env->mmucr & MMUCR_AT)) {
./tools/qemu-xen/target-sh4/helper.c:	env->tea = address;
./tools/qemu-xen/target-sh4/helper.c:	    env->pteh = (env->pteh & PTEH_ASID_MASK) |
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x040;
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x140;
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x0a0;
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x060;
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x080;
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x0a0;
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x0c0;
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x0e0;
./tools/qemu-xen/target-sh4/helper.c:	    env->exception_index = 0x100;
./tools/qemu-xen/target-sh4/helper.c:    int n = cpu_mmucr_urc(env->mmucr);
./tools/qemu-xen/target-sh4/helper.c:    tlb_t * entry = &env->utlb[n];
./tools/qemu-xen/target-sh4/helper.c:    entry->asid = (uint8_t)cpu_pteh_asid(env->pteh);
./tools/qemu-xen/target-sh4/helper.c:    entry->vpn  = cpu_pteh_vpn(env->pteh);
./tools/qemu-xen/target-sh4/helper.c:    entry->v    = (uint8_t)cpu_ptel_v(env->ptel);
./tools/qemu-xen/target-sh4/helper.c:    entry->ppn  = cpu_ptel_ppn(env->ptel);
./tools/qemu-xen/target-sh4/helper.c:    entry->sz   = (uint8_t)cpu_ptel_sz(env->ptel);
./tools/qemu-xen/target-sh4/helper.c:    entry->sh   = (uint8_t)cpu_ptel_sh(env->ptel);
./tools/qemu-xen/target-sh4/helper.c:    entry->c    = (uint8_t)cpu_ptel_c(env->ptel);
./tools/qemu-xen/target-sh4/helper.c:    entry->pr   = (uint8_t)cpu_ptel_pr(env->ptel);
./tools/qemu-xen/target-sh4/helper.c:    entry->d    = (uint8_t)cpu_ptel_d(env->ptel);
./tools/qemu-xen/target-sh4/helper.c:    entry->wt   = (uint8_t)cpu_ptel_wt(env->ptel);
./tools/qemu-xen/target-sh4/helper.c:    entry->sa   = (uint8_t)cpu_ptea_sa(env->ptea);
./tools/qemu-xen/target-sh4/helper.c:    entry->tc   = (uint8_t)cpu_ptea_tc(env->ptea);
./tools/qemu-xen/target-sh4/helper.c:    int use_asid = (env->mmucr & MMUCR_SV) == 0 || (env->sr & SR_MD) == 0;
./tools/qemu-xen/target-sh4/helper.c:    if (env->sr & SR_MD) {
./tools/qemu-xen/target-sh4/helper.c:    if (!(env->ccr & 1))
./tools/qemu-xen/target-sh4/helper.c:    if (env->mmucr & MMUCR_AT)
./tools/qemu-xen/target-sh4/helper.c:    n = find_tlb_entry(env, addr, env->itlb, ITLB_SIZE, use_asid);
./tools/qemu-xen/target-sh4/helper.c:        return env->itlb[n].c;
./tools/qemu-xen/target-sh4/helper.c:    n = find_tlb_entry(env, addr, env->utlb, UTLB_SIZE, use_asid);
./tools/qemu-xen/target-sh4/helper.c:        return env->utlb[n].c;
./tools/qemu-xen/qemu-char.c:        ret = d->drv->chr_write(d->drv, buf, len);
./tools/qemu-xen/qemu-char.c:                d->drv->chr_write(d->drv, (uint8_t *)buf1, strlen(buf1));
./tools/qemu-xen/qemu-char.c:            ret += d->drv->chr_write(d->drv, buf+i, 1);
./tools/qemu-xen/qemu-char.c:    int fd = drv->fd;
./tools/qemu-xen/qemu-char.c:    int fd = drv->fd;
./tools/qemu-xen/qemu-char.c:    drv->fd = fd;
./tools/qemu-xen/qemu-char.c:    drv->mode = IEEE1284_MODE_COMPAT;
./tools/qemu-xen/qemu-char.c:        if (buf[i].EventType == KEY_EVENT && kev->bKeyDown) {
./tools/qemu-xen/qemu-char.c:            if (kev->uChar.AsciiChar != 0) {
./tools/qemu-xen/qemu-char.c:                for (j = 0; j < kev->wRepeatCount; j++) {
./tools/qemu-xen/qemu-char.c:                        uint8_t c = kev->uChar.AsciiChar;
./tools/qemu-xen/cutils.c:    qiov->iov = g_malloc(alloc_hint * sizeof(struct iovec));
./tools/qemu-xen/cutils.c:    qiov->niov = 0;
./tools/qemu-xen/cutils.c:    qiov->nalloc = alloc_hint;
./tools/qemu-xen/cutils.c:    qiov->size = 0;
./tools/qemu-xen/cutils.c:    qiov->iov = iov;
./tools/qemu-xen/cutils.c:    qiov->niov = niov;
./tools/qemu-xen/cutils.c:    qiov->nalloc = -1;
./tools/qemu-xen/cutils.c:    qiov->size = 0;
./tools/qemu-xen/cutils.c:        qiov->size += iov[i].iov_len;
./tools/qemu-xen/cutils.c:    assert(qiov->nalloc != -1);
./tools/qemu-xen/cutils.c:    if (qiov->niov == qiov->nalloc) {
./tools/qemu-xen/cutils.c:        qiov->nalloc = 2 * qiov->nalloc + 1;
./tools/qemu-xen/cutils.c:        qiov->iov = g_realloc(qiov->iov, qiov->nalloc * sizeof(struct iovec));
./tools/qemu-xen/cutils.c:    qiov->iov[qiov->niov].iov_base = base;
./tools/qemu-xen/cutils.c:    qiov->iov[qiov->niov].iov_len = len;
./tools/qemu-xen/cutils.c:    qiov->size += len;
./tools/qemu-xen/cutils.c:    ++qiov->niov;
./tools/qemu-xen/cutils.c:    assert(qiov->nalloc != -1);
./tools/qemu-xen/cutils.c:    g_free(qiov->iov);
./tools/qemu-xen/cutils.c:    qiov->nalloc = 0;
./tools/qemu-xen/cutils.c:    qiov->iov = NULL;
./tools/qemu-xen/cutils.c:    assert(qiov->nalloc != -1);
./tools/qemu-xen/cutils.c:    qiov->niov = 0;
./tools/qemu-xen/cutils.c:    qiov->size = 0;
./tools/qemu-xen/cutils.c:    for (i = 0; i < qiov->niov; ++i) {
./tools/qemu-xen/cutils.c:        memcpy(p, qiov->iov[i].iov_base, qiov->iov[i].iov_len);
./tools/qemu-xen/cutils.c:        p += qiov->iov[i].iov_len;
./tools/qemu-xen/cutils.c:    for (i = 0; i < qiov->niov && count; ++i) {
./tools/qemu-xen/cutils.c:        if (copy > qiov->iov[i].iov_len)
./tools/qemu-xen/cutils.c:            copy = qiov->iov[i].iov_len;
./tools/qemu-xen/cutils.c:        memcpy(qiov->iov[i].iov_base, p, copy);
./tools/qemu-xen/cutils.c:    for (i = 0; i < qiov->niov && count; ++i) {
./tools/qemu-xen/cutils.c:        n = MIN(count, qiov->iov[i].iov_len);
./tools/qemu-xen/cutils.c:        memset(qiov->iov[i].iov_base, c, n);
./tools/qemu-xen/cutils.c:    for (i = 0; (i < qiov->niov) && (done != count); i++) {
./tools/qemu-xen/cutils.c:        if (skip >= qiov->iov[i].iov_len) {
./tools/qemu-xen/cutils.c:            skip -= qiov->iov[i].iov_len;
./tools/qemu-xen/cutils.c:            iov_base = (uint8_t*) qiov->iov[i].iov_base + skip;
./tools/qemu-xen/cutils.c:            iov_len = qiov->iov[i].iov_len - skip;
./tools/qemu-xen/audio/wavcapture.c:    uint32_t datalen = wav->bytes;
./tools/qemu-xen/audio/wavcapture.c:    if (wav->f) {
./tools/qemu-xen/audio/wavcapture.c:        if (fseek (wav->f, 4, SEEK_SET)) {
./tools/qemu-xen/audio/wavcapture.c:        if (fwrite (rlen, 4, 1, wav->f) != 1) {
./tools/qemu-xen/audio/wavcapture.c:        if (fseek (wav->f, 32, SEEK_CUR)) {
./tools/qemu-xen/audio/wavcapture.c:        if (fwrite (dlen, 1, 4, wav->f) != 4) {
./tools/qemu-xen/audio/wavcapture.c:        if (fclose (wav->f)) {
./tools/qemu-xen/audio/wavcapture.c:    g_free (wav->path);
./tools/qemu-xen/audio/wavcapture.c:    if (fwrite (buf, size, 1, wav->f) != 1) {
./tools/qemu-xen/audio/wavcapture.c:    wav->bytes += size;
./tools/qemu-xen/audio/wavcapture.c:    AUD_del_capture (wav->cap, wav);
./tools/qemu-xen/audio/wavcapture.c:    char *path = wav->path;
./tools/qemu-xen/audio/wavcapture.c:                    wav->freq, wav->bits, wav->nchannels,
./tools/qemu-xen/audio/wavcapture.c:                    path ? path : "<not available>", wav->bytes);
./tools/qemu-xen/audio/wavcapture.c:    wav->f = fopen (path, "wb");
./tools/qemu-xen/audio/wavcapture.c:    if (!wav->f) {
./tools/qemu-xen/audio/wavcapture.c:    wav->path = g_strdup (path);
./tools/qemu-xen/audio/wavcapture.c:    wav->bits = bits;
./tools/qemu-xen/audio/wavcapture.c:    wav->nchannels = nchannels;
./tools/qemu-xen/audio/wavcapture.c:    wav->freq = freq;
./tools/qemu-xen/audio/wavcapture.c:    if (fwrite (hdr, sizeof (hdr), 1, wav->f) != 1) {
./tools/qemu-xen/audio/wavcapture.c:    wav->cap = cap;
./tools/qemu-xen/audio/wavcapture.c:    g_free (wav->path);
./tools/qemu-xen/audio/wavcapture.c:    if (fclose (wav->f)) {
./tools/qemu-xen/audio/audio.c:    if (drv->options) {
./tools/qemu-xen/audio/audio.c:        audio_process_options (drv->name, drv->options);
./tools/qemu-xen/audio/audio.c:    s->drv_opaque = drv->init ();
./tools/qemu-xen/audio/audio.c:        dolog ("Could not init `%s' audio driver\n", drv->name);
./tools/qemu-xen/audio/audio.c:        s->drv->fini (s->drv_opaque);
./tools/qemu-xen/audio/wavaudio.c:    int64_t ticks = now - wav->old_ticks;
./tools/qemu-xen/audio/wavaudio.c:    wav->old_ticks = now;
./tools/qemu-xen/audio/wavaudio.c:        dst = advance (wav->pcm_buf, rpos << hw->info.shift);
./tools/qemu-xen/audio/wavaudio.c:        if (fwrite (dst, convert_samples << hw->info.shift, 1, wav->f) != 1) {
./tools/qemu-xen/audio/wavaudio.c:        wav->total_samples += convert_samples;
./tools/qemu-xen/audio/wavaudio.c:    wav->pcm_buf = audio_calloc (AUDIO_FUNC, hw->samples, 1 << hw->info.shift);
./tools/qemu-xen/audio/wavaudio.c:    if (!wav->pcm_buf) {
./tools/qemu-xen/audio/wavaudio.c:    wav->f = fopen (conf.wav_path, "wb");
./tools/qemu-xen/audio/wavaudio.c:    if (!wav->f) {
./tools/qemu-xen/audio/wavaudio.c:        g_free (wav->pcm_buf);
./tools/qemu-xen/audio/wavaudio.c:        wav->pcm_buf = NULL;
./tools/qemu-xen/audio/wavaudio.c:    if (fwrite (hdr, sizeof (hdr), 1, wav->f) != 1) {
./tools/qemu-xen/audio/wavaudio.c:    uint32_t datalen = wav->total_samples << hw->info.shift;
./tools/qemu-xen/audio/wavaudio.c:    if (!wav->f) {
./tools/qemu-xen/audio/wavaudio.c:    if (fseek (wav->f, 4, SEEK_SET)) {
./tools/qemu-xen/audio/wavaudio.c:    if (fwrite (rlen, 4, 1, wav->f) != 1) {
./tools/qemu-xen/audio/wavaudio.c:    if (fseek (wav->f, 32, SEEK_CUR)) {
./tools/qemu-xen/audio/wavaudio.c:    if (fwrite (dlen, 4, 1, wav->f) != 1) {
./tools/qemu-xen/audio/wavaudio.c:    if (fclose (wav->f))  {
./tools/qemu-xen/audio/wavaudio.c:               wav->f, strerror (errno));
./tools/qemu-xen/audio/wavaudio.c:    wav->f = NULL;
./tools/qemu-xen/audio/wavaudio.c:    g_free (wav->pcm_buf);
./tools/qemu-xen/audio/wavaudio.c:    wav->pcm_buf = NULL;
./tools/qemu-xen/ui/vnc-enc-tight.c:    VncState *vs = priv->vs;
./tools/qemu-xen/ui/vnc-enc-tight.c:        ((uint32_t*)priv->header)[idx] = color;
./tools/qemu-xen/ui/vnc-enc-tight.c:        ((uint16_t*)priv->header)[idx] = color;
./tools/qemu-xen/ui/vnc-enc-tight.c:    VncState *vs = priv->vs;
./tools/qemu-xen/ui/vnc-enc-tight.c:    png_colorp color = &priv->png_palette[idx];
./tools/qemu-xen/ui/sdl.c:    keysym = ev->keysym.sym;
./tools/qemu-xen/ui/sdl.c:    if (keysym == 0 && ev->keysym.scancode == 113)
./tools/qemu-xen/ui/sdl.c:    if (keysym == 92 && ev->keysym.scancode == 133) {
./tools/qemu-xen/ui/sdl.c:    return ev->keysym.scancode;
./tools/qemu-xen/ui/sdl.c:    keycode = ev->keysym.scancode;
./tools/qemu-xen/ui/sdl.c:    if (ev->keysym.sym == SDLK_PAUSE) {
./tools/qemu-xen/ui/sdl.c:        if (ev->type == SDL_KEYUP)
./tools/qemu-xen/ui/sdl.c:        if (ev->type == SDL_KEYUP)
./tools/qemu-xen/ui/sdl.c:    if (ev->type == SDL_KEYUP)
./tools/qemu-xen/ui/sdl.c:        keycode = sdl_keyevent_to_keycode(&ev->key);
./tools/qemu-xen/ui/sdl.c:        if (ev->key.keysym.mod & (KMOD_LCTRL | KMOD_RCTRL)) {
./tools/qemu-xen/ui/sdl.c:            switch (ev->key.keysym.sym) {
./tools/qemu-xen/ui/sdl.c:            switch (ev->key.keysym.sym) {
./tools/qemu-xen/ui/sdl.c:        } else if (ev->key.keysym.unicode != 0) {
./tools/qemu-xen/ui/sdl.c:            kbd_put_keysym(ev->key.keysym.unicode);
./tools/qemu-xen/ui/sdl.c:        sdl_process_key(&ev->key);
./tools/qemu-xen/ui/sdl.c:        mod_state = (ev->key.keysym.mod & gui_grab_code);
./tools/qemu-xen/ui/sdl.c:        mod_state = (ev->key.keysym.mod & (gui_grab_code | KMOD_LSHIFT));
./tools/qemu-xen/ui/sdl.c:        sdl_process_key(&ev->key);
./tools/qemu-xen/ui/sdl.c:        if (gui_grab && (ev->motion.x == 0 || ev->motion.y == 0 ||
./tools/qemu-xen/ui/sdl.c:            ev->motion.x == max_x || ev->motion.y == max_y)) {
./tools/qemu-xen/ui/sdl.c:            (ev->motion.x > 0 && ev->motion.x < max_x &&
./tools/qemu-xen/ui/sdl.c:            ev->motion.y > 0 && ev->motion.y < max_y)) {
./tools/qemu-xen/ui/sdl.c:        sdl_send_mouse_event(ev->motion.xrel, ev->motion.yrel, 0,
./tools/qemu-xen/ui/sdl.c:                             ev->motion.x, ev->motion.y, ev->motion.state);
./tools/qemu-xen/ui/sdl.c:    bev = &ev->button;
./tools/qemu-xen/ui/sdl.c:        if (ev->type == SDL_MOUSEBUTTONDOWN &&
./tools/qemu-xen/ui/sdl.c:            (bev->button == SDL_BUTTON_LEFT)) {
./tools/qemu-xen/ui/sdl.c:        if (ev->type == SDL_MOUSEBUTTONDOWN) {
./tools/qemu-xen/ui/sdl.c:            buttonstate |= SDL_BUTTON(bev->button);
./tools/qemu-xen/ui/sdl.c:            buttonstate &= ~SDL_BUTTON(bev->button);
./tools/qemu-xen/ui/sdl.c:        if (bev->button == SDL_BUTTON_WHEELUP &&
./tools/qemu-xen/ui/sdl.c:            ev->type == SDL_MOUSEBUTTONDOWN) {
./tools/qemu-xen/ui/sdl.c:        } else if (bev->button == SDL_BUTTON_WHEELDOWN &&
./tools/qemu-xen/ui/sdl.c:                   ev->type == SDL_MOUSEBUTTONDOWN) {
./tools/qemu-xen/ui/sdl.c:        sdl_send_mouse_event(0, 0, dz, bev->x, bev->y, buttonstate);
./tools/qemu-xen/ui/sdl.c:    if (gui_grab && ev->active.state == SDL_APPINPUTFOCUS &&
./tools/qemu-xen/ui/sdl.c:        !ev->active.gain && !gui_fullscreen) {
./tools/qemu-xen/ui/sdl.c:    if (!gui_grab && ev->active.gain && is_graphic_console() &&
./tools/qemu-xen/ui/sdl.c:    if (ev->active.state & SDL_APPACTIVE) {
./tools/qemu-xen/ui/sdl.c:        if (ev->active.gain) {
./tools/qemu-xen/ui/sdl.c:        switch (ev->type) {
./tools/qemu-xen/ui/sdl.c:            sdl_scale(ds, ev->resize.w, ev->resize.h);
./tools/qemu-xen/target-cris/machine.c:        qemu_put_be32(f, env->regs[i]);
./tools/qemu-xen/target-cris/machine.c:        qemu_put_be32(f, env->pregs[i]);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->pc);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->ksp);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->dslot);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->btaken);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->btarget);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->cc_op);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->cc_mask);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->cc_dest);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->cc_src);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->cc_result);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->cc_size);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->cc_x);
./tools/qemu-xen/target-cris/machine.c:            qemu_put_be32(f, env->sregs[s][i]);
./tools/qemu-xen/target-cris/machine.c:    qemu_put_be32(f, env->mmu_rand_lfsr);
./tools/qemu-xen/target-cris/machine.c:                qemu_put_be32(f, env->tlbsets[mmu][s][i].lo);
./tools/qemu-xen/target-cris/machine.c:                qemu_put_be32(f, env->tlbsets[mmu][s][i].hi);
./tools/qemu-xen/target-cris/machine.c:        env->regs[i] = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:        env->pregs[i] = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->pc = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->ksp = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->dslot = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->btaken = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->btarget = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->cc_op = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->cc_mask = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->cc_dest = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->cc_src = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->cc_result = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->cc_size = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->cc_x = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:            env->sregs[s][i] = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:    env->mmu_rand_lfsr = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:                env->tlbsets[mmu][s][i].lo = qemu_get_be32(f);
./tools/qemu-xen/target-cris/machine.c:                env->tlbsets[mmu][s][i].hi = qemu_get_be32(f);
./tools/qemu-xen/target-cris/translate.c:	if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-cris/translate.c:		QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-cris/translate.c: * The TB contaning the branch insn will set up env->btarget and evaluate 
./tools/qemu-xen/target-cris/translate.c: * env->btaken. When the translation loop exits we will note that the branch 
./tools/qemu-xen/target-cris/translate.c: * sequence is broken and let env->dslot be the size of the branch insn (those
./tools/qemu-xen/target-cris/translate.c: * set). It will also expect to have env->dslot setup with the size of the 
./tools/qemu-xen/target-cris/translate.c: * delay slot so that env->pc - env->dslot point to the branch insn. This TB 
./tools/qemu-xen/target-cris/translate.c: * When exceptions occur, we check for env->dslot in do_interrupt to detect 
./tools/qemu-xen/target-cris/translate.c: * branch and set lsb). Then env->dslot gets cleared so that the exception 
./tools/qemu-xen/target-cris/translate.c:	if (env->pregs[PR_VR] == 32) {
./tools/qemu-xen/target-cris/translate.c:	dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-cris/translate.c:			env->btarget, (unsigned)tb->flags & 7,
./tools/qemu-xen/target-cris/translate.c:			env->pregs[PR_CCS], 
./tools/qemu-xen/target-cris/translate.c:			env->pregs[PR_PID], env->pregs[PR_USP],
./tools/qemu-xen/target-cris/translate.c:			env->regs[0], env->regs[1], env->regs[2], env->regs[3],
./tools/qemu-xen/target-cris/translate.c:			env->regs[4], env->regs[5], env->regs[6], env->regs[7],
./tools/qemu-xen/target-cris/translate.c:			env->regs[8], env->regs[9],
./tools/qemu-xen/target-cris/translate.c:			env->regs[10], env->regs[11],
./tools/qemu-xen/target-cris/translate.c:			env->regs[12], env->regs[13],
./tools/qemu-xen/target-cris/translate.c:			env->regs[14], env->regs[15]);
./tools/qemu-xen/target-cris/translate.c:		if (!(tb->pc & 1) && env->singlestep_enabled)
./tools/qemu-xen/target-cris/translate.c:		/* Set env->dslot to the size of the branch insn.  */
./tools/qemu-xen/target-cris/translate.c:	if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen/target-cris/translate.c:                                 dc->env->pregs[PR_VR]);
./tools/qemu-xen/target-cris/translate.c:		    env->pc, env->pregs[PR_CCS], env->btaken, env->btarget,
./tools/qemu-xen/target-cris/translate.c:		    env->cc_op,
./tools/qemu-xen/target-cris/translate.c:		    env->cc_src, env->cc_dest, env->cc_result, env->cc_mask);
./tools/qemu-xen/target-cris/translate.c:		cpu_fprintf(f, "%s=%8.8x ",regnames[i], env->regs[i]);
./tools/qemu-xen/target-cris/translate.c:		cpu_fprintf(f, "%s=%8.8x ", pregnames[i], env->pregs[i]);
./tools/qemu-xen/target-cris/translate.c:	srs = env->pregs[PR_SRS];
./tools/qemu-xen/target-cris/translate.c:				    i, env->sregs[srs][i]);
./tools/qemu-xen/target-cris/translate.c:	env->pregs[PR_VR] = vr_by_name(cpu_model);
./tools/qemu-xen/target-cris/translate.c:	if (env->pregs[PR_VR] < 32) {
./tools/qemu-xen/target-cris/translate.c:		qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-cris/translate.c:	vr = env->pregs[PR_VR];
./tools/qemu-xen/target-cris/translate.c:	env->pregs[PR_VR] = vr;
./tools/qemu-xen/target-cris/translate.c:	env->pregs[PR_CCS] |= U_FLAG | I_FLAG | P_FLAG;
./tools/qemu-xen/target-cris/translate.c:	env->pregs[PR_CCS] = 0;
./tools/qemu-xen/target-cris/translate.c:	env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-cris/mmu.c:	env->mmu_rand_lfsr = 0xcccc;
./tools/qemu-xen/target-cris/mmu.c:	f = compute_polynom(env->mmu_rand_lfsr);
./tools/qemu-xen/target-cris/mmu.c:	env->mmu_rand_lfsr >>= 1;
./tools/qemu-xen/target-cris/mmu.c:	env->mmu_rand_lfsr |= (f << 15);
./tools/qemu-xen/target-cris/mmu.c:	env->mmu_rand_lfsr &= 0xffff;
./tools/qemu-xen/target-cris/mmu.c:		base = env->sregs[SFR_RW_MM_KBASE_LO];
./tools/qemu-xen/target-cris/mmu.c:		base = env->sregs[SFR_RW_MM_KBASE_HI];
./tools/qemu-xen/target-cris/mmu.c:			lo = env->tlbsets[mmu][set][idx].lo;
./tools/qemu-xen/target-cris/mmu.c:			hi = env->tlbsets[mmu][set][idx].hi;
./tools/qemu-xen/target-cris/mmu.c:	r_cause = env->sregs[SFR_R_MM_CAUSE];
./tools/qemu-xen/target-cris/mmu.c:	r_cfg = env->sregs[SFR_RW_MM_CFG];
./tools/qemu-xen/target-cris/mmu.c:	pid = env->pregs[PR_PID] & 0xff;
./tools/qemu-xen/target-cris/mmu.c:			lo = env->tlbsets[mmu][set][idx].lo;
./tools/qemu-xen/target-cris/mmu.c:			hi = env->tlbsets[mmu][set][idx].hi;
./tools/qemu-xen/target-cris/mmu.c:		lo = env->tlbsets[mmu][set][idx].lo;
./tools/qemu-xen/target-cris/mmu.c:		hi = env->tlbsets[mmu][set][idx].hi;
./tools/qemu-xen/target-cris/mmu.c:				  vaddr, lo, env->pc));
./tools/qemu-xen/target-cris/mmu.c:				  vaddr, lo, env->pc));
./tools/qemu-xen/target-cris/mmu.c:				 vaddr, lo, env->pc));
./tools/qemu-xen/target-cris/mmu.c:		set = env->mmu_rand_lfsr & 3;
./tools/qemu-xen/target-cris/mmu.c:		env->sregs[SFR_RW_MM_TLB_SEL] = 0;
./tools/qemu-xen/target-cris/mmu.c:		set_field(&env->sregs[SFR_RW_MM_TLB_SEL], idx, 0, 4);
./tools/qemu-xen/target-cris/mmu.c:		set_field(&env->sregs[SFR_RW_MM_TLB_SEL], set, 4, 2);
./tools/qemu-xen/target-cris/mmu.c:		env->sregs[SFR_R_MM_CAUSE] = r_cause;
./tools/qemu-xen/target-cris/mmu.c:		D(printf("refill vaddr=%x pc=%x\n", vaddr, env->pc));
./tools/qemu-xen/target-cris/mmu.c:		  __func__, rw, match, env->pc,
./tools/qemu-xen/target-cris/mmu.c:		  env->sregs[SFR_RW_MM_TLB_SEL],
./tools/qemu-xen/target-cris/mmu.c:		  env->regs[R_SP], env->pregs[PR_USP], env->ksp));
./tools/qemu-xen/target-cris/mmu.c:				lo = env->tlbsets[mmu][set][idx].lo;
./tools/qemu-xen/target-cris/mmu.c:				hi = env->tlbsets[mmu][set][idx].hi;
./tools/qemu-xen/target-cris/mmu.c:	old_srs= env->pregs[PR_SRS];
./tools/qemu-xen/target-cris/mmu.c:	env->pregs[PR_SRS] = rw == 2 ? 1 : 2;
./tools/qemu-xen/target-cris/mmu.c:	if (!cris_mmu_enabled(env->sregs[SFR_RW_GC_CFG])) {
./tools/qemu-xen/target-cris/mmu.c:	if (!is_user && cris_mmu_segmented_addr(seg, env->sregs[SFR_RW_MM_CFG]))
./tools/qemu-xen/target-cris/mmu.c:	env->pregs[PR_SRS] = old_srs;
./tools/qemu-xen/target-cris/op_helper.c:	     env->pc, env->debug1, retaddr);
./tools/qemu-xen/target-cris/op_helper.c:	env->exception_index = index;
./tools/qemu-xen/target-cris/op_helper.c:	if (pid != (env->pregs[PR_PID] & 0xff))
./tools/qemu-xen/target-cris/op_helper.c:		cris_mmu_flush_pid(env, env->pregs[PR_PID]);
./tools/qemu-xen/target-cris/op_helper.c:	tlb_flush_page(env, env->pregs[PR_SPC]);
./tools/qemu-xen/target-cris/op_helper.c:	srs = env->pregs[PR_SRS];
./tools/qemu-xen/target-cris/op_helper.c:	env->sregs[srs][sreg] = env->regs[reg];
./tools/qemu-xen/target-cris/op_helper.c:			env->sregs[SFR_RW_MM_TLB_HI] = env->regs[reg];
./tools/qemu-xen/target-cris/op_helper.c:			env->sregs[SFR_R_MM_CAUSE] = env->regs[reg];
./tools/qemu-xen/target-cris/op_helper.c:			idx = set = env->sregs[SFR_RW_MM_TLB_SEL];
./tools/qemu-xen/target-cris/op_helper.c:			lo = env->sregs[SFR_RW_MM_TLB_LO];
./tools/qemu-xen/target-cris/op_helper.c:			hi = env->sregs[SFR_R_MM_CAUSE];
./tools/qemu-xen/target-cris/op_helper.c:			vaddr = EXTRACT_FIELD(env->tlbsets[srs-1][set][idx].hi,
./tools/qemu-xen/target-cris/op_helper.c:			tlb_v = EXTRACT_FIELD(env->tlbsets[srs-1][set][idx].lo,
./tools/qemu-xen/target-cris/op_helper.c:			env->tlbsets[srs - 1][set][idx].lo = lo;
./tools/qemu-xen/target-cris/op_helper.c:			env->tlbsets[srs - 1][set][idx].hi = hi;
./tools/qemu-xen/target-cris/op_helper.c:				  vaddr, tlb_v, env->pc);
./tools/qemu-xen/target-cris/op_helper.c:	env->pregs[PR_SRS] &= 3;
./tools/qemu-xen/target-cris/op_helper.c:	srs = env->pregs[PR_SRS];
./tools/qemu-xen/target-cris/op_helper.c:		idx = set = env->sregs[SFR_RW_MM_TLB_SEL];
./tools/qemu-xen/target-cris/op_helper.c:		hi = env->tlbsets[srs - 1][set][idx].hi;
./tools/qemu-xen/target-cris/op_helper.c:		lo = env->tlbsets[srs - 1][set][idx].lo;
./tools/qemu-xen/target-cris/op_helper.c:		env->sregs[SFR_RW_MM_TLB_HI] = hi;
./tools/qemu-xen/target-cris/op_helper.c:		env->sregs[SFR_RW_MM_TLB_LO] = lo;
./tools/qemu-xen/target-cris/op_helper.c:	env->regs[reg] = env->sregs[srs][sreg];
./tools/qemu-xen/target-cris/op_helper.c:	ccs = env->pregs[PR_CCS];
./tools/qemu-xen/target-cris/op_helper.c:		env->ksp = env->regs[R_SP];
./tools/qemu-xen/target-cris/op_helper.c:		env->regs[R_SP] = env->pregs[PR_USP];
./tools/qemu-xen/target-cris/op_helper.c:	env->pregs[PR_CCS] = ccs;
./tools/qemu-xen/target-cris/op_helper.c:	int rflag = env->pregs[PR_CCS] & R_FLAG;
./tools/qemu-xen/target-cris/op_helper.c:		 env->pregs[PR_ERP], env->pregs[PR_PID],
./tools/qemu-xen/target-cris/op_helper.c:		 env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/op_helper.c:		 env->btarget);
./tools/qemu-xen/target-cris/op_helper.c:		env->pregs[PR_CCS] |= P_FLAG;
./tools/qemu-xen/target-cris/op_helper.c:	int rflag = env->pregs[PR_CCS] & R_FLAG;
./tools/qemu-xen/target-cris/op_helper.c:		 env->pregs[PR_ERP], env->pregs[PR_PID],
./tools/qemu-xen/target-cris/op_helper.c:		 env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/op_helper.c:		 env->btarget);
./tools/qemu-xen/target-cris/op_helper.c:		env->pregs[PR_CCS] |= P_FLAG;
./tools/qemu-xen/target-cris/op_helper.c:    env->pregs[PR_CCS] |= M_FLAG;
./tools/qemu-xen/target-cris/op_helper.c:	if (env->pregs[PR_VR] < 32)
./tools/qemu-xen/target-cris/op_helper.c:	x = env->cc_x;
./tools/qemu-xen/target-cris/op_helper.c:	mask = env->cc_mask | X_FLAG;
./tools/qemu-xen/target-cris/op_helper.c:	src = env->cc_src;
./tools/qemu-xen/target-cris/op_helper.c:	dst = env->cc_dest;
./tools/qemu-xen/target-cris/op_helper.c:	res = env->cc_result;
./tools/qemu-xen/target-cris/op_helper.c:	if (env->cc_op == CC_OP_SUB || env->cc_op == CC_OP_CMP)
./tools/qemu-xen/target-cris/op_helper.c:	switch (env->cc_size)
./tools/qemu-xen/target-cris/op_helper.c:	if (env->cc_op == CC_OP_SUB || env->cc_op == CC_OP_CMP)
./tools/qemu-xen/target-cris/op_helper.c:	env->pregs[PR_CCS] = evaluate_flags_writeback(flags, env->pregs[PR_CCS]);
./tools/qemu-xen/target-cris/op_helper.c:	switch (env->cc_op)
./tools/qemu-xen/target-cris/op_helper.c:			env->pregs[PR_CCS] = helper_evaluate_flags_mcp(
./tools/qemu-xen/target-cris/op_helper.c:					env->pregs[PR_CCS], env->cc_src,
./tools/qemu-xen/target-cris/op_helper.c:					env->cc_dest, env->cc_result);
./tools/qemu-xen/target-cris/op_helper.c:			env->pregs[PR_CCS] = helper_evaluate_flags_muls(
./tools/qemu-xen/target-cris/op_helper.c:					env->pregs[PR_CCS], env->cc_result,
./tools/qemu-xen/target-cris/op_helper.c:					env->pregs[PR_MOF]);
./tools/qemu-xen/target-cris/op_helper.c:			env->pregs[PR_CCS] = helper_evaluate_flags_mulu(
./tools/qemu-xen/target-cris/op_helper.c:					env->pregs[PR_CCS], env->cc_result,
./tools/qemu-xen/target-cris/op_helper.c:					env->pregs[PR_MOF]);
./tools/qemu-xen/target-cris/op_helper.c:		switch (env->cc_size)
./tools/qemu-xen/target-cris/op_helper.c:				env->pregs[PR_CCS] =
./tools/qemu-xen/target-cris/op_helper.c:							env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/op_helper.c:							env->cc_result);
./tools/qemu-xen/target-cris/op_helper.c:				env->pregs[PR_CCS] =
./tools/qemu-xen/target-cris/op_helper.c:							env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/op_helper.c:							env->cc_result);
./tools/qemu-xen/target-cris/op_helper.c:			if (env->cc_size == 4)
./tools/qemu-xen/target-cris/op_helper.c:				env->pregs[PR_CCS] =
./tools/qemu-xen/target-cris/op_helper.c:						env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/op_helper.c:						env->cc_src, env->cc_dest,
./tools/qemu-xen/target-cris/op_helper.c:						env->cc_result);
./tools/qemu-xen/target-cris/op_helper.c:			switch (env->cc_size)
./tools/qemu-xen/target-cris/op_helper.c:				env->pregs[PR_CCS] =
./tools/qemu-xen/target-cris/op_helper.c:						env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/op_helper.c:						env->cc_src, env->cc_dest,
./tools/qemu-xen/target-cris/op_helper.c:						env->cc_result);
./tools/qemu-xen/target-cris/helper.c:	env->exception_index = -1;
./tools/qemu-xen/target-cris/helper.c:	env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen/target-cris/helper.c:	env->exception_index = 0xaa;
./tools/qemu-xen/target-cris/helper.c:	env->pregs[PR_EDA] = address;
./tools/qemu-xen/target-cris/helper.c:	ccs = env->pregs[PR_CCS];
./tools/qemu-xen/target-cris/helper.c:	env->pregs[PR_CCS] = ccs;
./tools/qemu-xen/target-cris/helper.c:	D(printf ("%s addr=%x pc=%x rw=%x\n", __func__, address, env->pc, rw));
./tools/qemu-xen/target-cris/helper.c:		if (env->exception_index == EXCP_BUSFAULT)
./tools/qemu-xen/target-cris/helper.c:		env->pregs[PR_EDA] = address;
./tools/qemu-xen/target-cris/helper.c:		env->exception_index = EXCP_BUSFAULT;
./tools/qemu-xen/target-cris/helper.c:		env->fault_vector = res.bf_vec;
./tools/qemu-xen/target-cris/helper.c:                  __func__, r, env->interrupt_request, address, res.phy,
./tools/qemu-xen/target-cris/helper.c:                  res.bf_vec, env->pc);
./tools/qemu-xen/target-cris/helper.c:		   env->exception_index,
./tools/qemu-xen/target-cris/helper.c:		   env->interrupt_request);
./tools/qemu-xen/target-cris/helper.c:	assert(!(env->pregs[PR_CCS] & PFIX_FLAG));
./tools/qemu-xen/target-cris/helper.c:	switch (env->exception_index)
./tools/qemu-xen/target-cris/helper.c:			ex_vec = env->trap_vector;
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_CCS] &= ~M_FLAG;
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_NRP] = env->pc;
./tools/qemu-xen/target-cris/helper.c:			ex_vec = env->interrupt_vector;
./tools/qemu-xen/target-cris/helper.c:			   TB's.  env->pc is valid here.  */
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen/target-cris/helper.c:	if (env->pregs[PR_CCS] & U_FLAG) {
./tools/qemu-xen/target-cris/helper.c:		env->pregs[PR_USP] = env->regs[R_SP];
./tools/qemu-xen/target-cris/helper.c:		env->regs[R_SP] = env->ksp;
./tools/qemu-xen/target-cris/helper.c:	env->pc = ldl_code(env->pregs[PR_EBP] + ex_vec * 4);
./tools/qemu-xen/target-cris/helper.c:	env->locked_irq = 1;
./tools/qemu-xen/target-cris/helper.c:	env->pregs[PR_CCS] |= F_FLAG_V10; /* set F.  */
./tools/qemu-xen/target-cris/helper.c:		      __func__, env->pc, ex_vec, 
./tools/qemu-xen/target-cris/helper.c:		      env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/helper.c:		      env->pregs[PR_PID], 
./tools/qemu-xen/target-cris/helper.c:		      env->pregs[PR_ERP]);
./tools/qemu-xen/target-cris/helper.c:	if (env->pregs[PR_VR] < 32)
./tools/qemu-xen/target-cris/helper.c:		   env->exception_index,
./tools/qemu-xen/target-cris/helper.c:		   env->interrupt_request);
./tools/qemu-xen/target-cris/helper.c:	switch (env->exception_index)
./tools/qemu-xen/target-cris/helper.c:			ex_vec = env->trap_vector;
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_CCS] &= ~M_FLAG;
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_NRP] = env->pc;
./tools/qemu-xen/target-cris/helper.c:			ex_vec = env->fault_vector;
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen/target-cris/helper.c:			ex_vec = env->interrupt_vector;
./tools/qemu-xen/target-cris/helper.c:			   TB's.  env->pc is valid here.  */
./tools/qemu-xen/target-cris/helper.c:			env->pregs[PR_ERP] = env->pc;
./tools/qemu-xen/target-cris/helper.c:	env->pregs[PR_EXS] = (ex_vec & 0xff) << 8;
./tools/qemu-xen/target-cris/helper.c:	if (env->dslot) {
./tools/qemu-xen/target-cris/helper.c:			  ex_vec, env->pc, env->dslot,
./tools/qemu-xen/target-cris/helper.c:			  env->regs[R_SP],
./tools/qemu-xen/target-cris/helper.c:			  env->pregs[PR_ERP], env->pregs[PR_PID],
./tools/qemu-xen/target-cris/helper.c:			  env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/helper.c:			  env->cc_op, env->cc_mask);
./tools/qemu-xen/target-cris/helper.c:		env->pregs[PR_ERP] -= env->dslot;
./tools/qemu-xen/target-cris/helper.c:		env->dslot = 0;
./tools/qemu-xen/target-cris/helper.c:	if (env->pregs[PR_CCS] & U_FLAG) {
./tools/qemu-xen/target-cris/helper.c:		env->pregs[PR_USP] = env->regs[R_SP];
./tools/qemu-xen/target-cris/helper.c:		env->regs[R_SP] = env->ksp;
./tools/qemu-xen/target-cris/helper.c:	env->pc = ldl_code(env->pregs[PR_EBP] + ex_vec * 4);
./tools/qemu-xen/target-cris/helper.c:	env->exception_index = -1;
./tools/qemu-xen/target-cris/helper.c:		   __func__, env->pc, ex_vec,
./tools/qemu-xen/target-cris/helper.c:		   env->pregs[PR_CCS],
./tools/qemu-xen/target-cris/helper.c:		   env->pregs[PR_PID], 
./tools/qemu-xen/target-cris/helper.c:		   env->pregs[PR_ERP]);
./tools/qemu-xen/pflib.c:    uint32_t bytes = cnt * conv->src.bytes_per_pixel;
./tools/qemu-xen/pflib.c:    if (conv->conv_cnt < cnt) {
./tools/qemu-xen/pflib.c:        conv->conv_cnt = cnt;
./tools/qemu-xen/pflib.c:        conv->conv_buf = g_realloc(conv->conv_buf, sizeof(QemuPixel) * conv->conv_cnt);
./tools/qemu-xen/pflib.c:    conv->conv_from(&conv->src, conv->conv_buf, src, cnt);
./tools/qemu-xen/pflib.c:    conv->conv_to(&conv->dst, dst, conv->conv_buf, cnt);
./tools/qemu-xen/pflib.c:    conv->src = *src;
./tools/qemu-xen/pflib.c:    conv->dst = *dst;
./tools/qemu-xen/pflib.c:    if (memcmp(&conv->src, &conv->dst, sizeof(PixelFormat)) == 0) {
./tools/qemu-xen/pflib.c:        conv->convert = convert_copy;
./tools/qemu-xen/pflib.c:        switch (conv->src.bytes_per_pixel) {
./tools/qemu-xen/pflib.c:            conv->conv_from = conv_16_to_pixel;
./tools/qemu-xen/pflib.c:            if (conv->src.rbits == 8 && conv->src.gbits == 8 && conv->src.bbits == 8) {
./tools/qemu-xen/pflib.c:                conv->conv_from = conv_32_to_pixel_fast;
./tools/qemu-xen/pflib.c:                conv->conv_from = conv_32_to_pixel_generic;
./tools/qemu-xen/pflib.c:        switch (conv->dst.bytes_per_pixel) {
./tools/qemu-xen/pflib.c:            conv->conv_to = conv_pixel_to_16;
./tools/qemu-xen/pflib.c:            conv->conv_to = conv_pixel_to_32;
./tools/qemu-xen/pflib.c:        conv->convert = convert_generic;
./tools/qemu-xen/pflib.c:    conv->convert(conv, dst, src, cnt);
./tools/qemu-xen/pflib.c:        g_free(conv->conv_buf);
./tools/qemu-xen/slirp/ip_input.c:	p->ipf_next = prev->ipf_next;
./tools/qemu-xen/slirp/ip_input.c:	((struct ipasfrag *)(prev->ipf_next))->ipf_prev = p;
./tools/qemu-xen/slirp/ip_input.c:	prev->ipf_next = p;
./tools/qemu-xen/slirp/if.c:	ifm->ifs_prev->ifs_next = ifm->ifs_next;
./tools/qemu-xen/slirp/tcp_subr.c:			memcpy(so_rcv->sb_wptr, m->m_data, m->m_len);
./tools/qemu-xen/slirp/tcp_subr.c:			so_rcv->sb_wptr += m->m_len;
./tools/qemu-xen/slirp/tcp_subr.c:			so_rcv->sb_rptr += m->m_len;
./tools/qemu-xen/slirp/tcp_subr.c:				if (sscanf(so_rcv->sb_data, "%u%*[ ,]%u", &n1, &n2) == 2) {
./tools/qemu-xen/slirp/tcp_subr.c:                                so_rcv->sb_cc = snprintf(so_rcv->sb_data,
./tools/qemu-xen/slirp/tcp_subr.c:                                                         so_rcv->sb_datalen,
./tools/qemu-xen/slirp/tcp_subr.c:				so_rcv->sb_rptr = so_rcv->sb_data;
./tools/qemu-xen/slirp/tcp_subr.c:				so_rcv->sb_wptr = so_rcv->sb_data + so_rcv->sb_cc;
./tools/qemu-xen/exec.c:    env->interrupt_request &= ~0x01;
./tools/qemu-xen/exec.c:        if (env->cpu_index == cpu)
./tools/qemu-xen/exec.c:        env = env->next_cpu;
./tools/qemu-xen/exec.c:    env->next_cpu = NULL;
./tools/qemu-xen/exec.c:    env->cpu_index = cpu_index;
./tools/qemu-xen/exec.c:    env->numa_node = 0;
./tools/qemu-xen/exec.c:    QTAILQ_INIT(&env->breakpoints);
./tools/qemu-xen/exec.c:    QTAILQ_INIT(&env->watchpoints);
./tools/qemu-xen/exec.c:    env->thread_id = qemu_get_thread_id();
./tools/qemu-xen/exec.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/exec.c:        memset (env->tb_jmp_cache, 0, TB_JMP_CACHE_SIZE * sizeof (void *));
./tools/qemu-xen/exec.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/exec.c:        if (env->tb_jmp_cache[h] == tb)
./tools/qemu-xen/exec.c:            env->tb_jmp_cache[h] = NULL;
./tools/qemu-xen/exec.c:                if (env->mem_io_pc) {
./tools/qemu-xen/exec.c:                    current_tb = tb_find_pc(env->mem_io_pc);
./tools/qemu-xen/exec.c:                cpu_restore_state(current_tb, env, env->mem_io_pc);
./tools/qemu-xen/exec.c:                saved_tb = env->current_tb;
./tools/qemu-xen/exec.c:                env->current_tb = NULL;
./tools/qemu-xen/exec.c:                env->current_tb = saved_tb;
./tools/qemu-xen/exec.c:                if (env->interrupt_request && env->current_tb)
./tools/qemu-xen/exec.c:                    cpu_interrupt(env, env->interrupt_request);
./tools/qemu-xen/exec.c:            tlb_unprotect_code_phys(env, start, env->mem_io_vaddr);
./tools/qemu-xen/exec.c:        env->current_tb = NULL;
./tools/qemu-xen/exec.c:                  cpu_single_env->mem_io_vaddr, len,
./tools/qemu-xen/exec.c:                  cpu_single_env->eip,
./tools/qemu-xen/exec.c:                  cpu_single_env->eip + (long)cpu_single_env->segs[R_CS].base);
./tools/qemu-xen/exec.c:        env->current_tb = NULL;
./tools/qemu-xen/exec.c:        QTAILQ_INSERT_HEAD(&env->watchpoints, wp, entry);
./tools/qemu-xen/exec.c:        QTAILQ_INSERT_TAIL(&env->watchpoints, wp, entry);
./tools/qemu-xen/exec.c:    QTAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen/exec.c:    QTAILQ_REMOVE(&env->watchpoints, watchpoint, entry);
./tools/qemu-xen/exec.c:    QTAILQ_FOREACH_SAFE(wp, &env->watchpoints, entry, next) {
./tools/qemu-xen/exec.c:        QTAILQ_INSERT_HEAD(&env->breakpoints, bp, entry);
./tools/qemu-xen/exec.c:        QTAILQ_INSERT_TAIL(&env->breakpoints, bp, entry);
./tools/qemu-xen/exec.c:    QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/exec.c:    QTAILQ_REMOVE(&env->breakpoints, breakpoint, entry);
./tools/qemu-xen/exec.c:    QTAILQ_FOREACH_SAFE(bp, &env->breakpoints, entry, next) {
./tools/qemu-xen/exec.c:    if (env->singlestep_enabled != enabled) {
./tools/qemu-xen/exec.c:        env->singlestep_enabled = enabled;
./tools/qemu-xen/exec.c:    tb = env->current_tb;
./tools/qemu-xen/exec.c:        env->current_tb = NULL;
./tools/qemu-xen/exec.c:    old_mask = env->interrupt_request;
./tools/qemu-xen/exec.c:    env->interrupt_request |= mask;
./tools/qemu-xen/exec.c:        env->icount_decr.u16.high = 0xffff;
./tools/qemu-xen/exec.c:    env->interrupt_request |= mask;
./tools/qemu-xen/exec.c:    env->interrupt_request &= ~mask;
./tools/qemu-xen/exec.c:    env->exit_request = 1;
./tools/qemu-xen/exec.c:    CPUState *new_env = cpu_init(env->cpu_model_str);
./tools/qemu-xen/exec.c:    CPUState *next_cpu = new_env->next_cpu;
./tools/qemu-xen/exec.c:    int cpu_index = new_env->cpu_index;
./tools/qemu-xen/exec.c:    new_env->next_cpu = next_cpu;
./tools/qemu-xen/exec.c:    new_env->cpu_index = cpu_index;
./tools/qemu-xen/exec.c:    QTAILQ_INIT(&env->breakpoints);
./tools/qemu-xen/exec.c:    QTAILQ_INIT(&env->watchpoints);
./tools/qemu-xen/exec.c:    QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/exec.c:    QTAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen/exec.c:    memset (&env->tb_jmp_cache[i], 0, 
./tools/qemu-xen/exec.c:    memset (&env->tb_jmp_cache[i], 0, 
./tools/qemu-xen/exec.c:    env->current_tb = NULL;
./tools/qemu-xen/exec.c:            env->tlb_table[mmu_idx][i] = s_cputlb_empty_entry;
./tools/qemu-xen/exec.c:    memset (env->tb_jmp_cache, 0, TB_JMP_CACHE_SIZE * sizeof (void *));
./tools/qemu-xen/exec.c:    env->tlb_flush_addr = -1;
./tools/qemu-xen/exec.c:    env->tlb_flush_mask = 0;
./tools/qemu-xen/exec.c:    if ((addr & env->tlb_flush_mask) == env->tlb_flush_addr) {
./tools/qemu-xen/exec.c:               env->tlb_flush_addr, env->tlb_flush_mask);
./tools/qemu-xen/exec.c:    env->current_tb = NULL;
./tools/qemu-xen/exec.c:        tlb_flush_entry(&env->tlb_table[mmu_idx][i], addr);
./tools/qemu-xen/exec.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/exec.c:                tlb_reset_dirty_range(&env->tlb_table[mmu_idx][i],
./tools/qemu-xen/exec.c:            tlb_update_dirty(&env->tlb_table[mmu_idx][i]);
./tools/qemu-xen/exec.c:        tlb_set_dirty1(&env->tlb_table[mmu_idx][i], vaddr);
./tools/qemu-xen/exec.c:    if (env->tlb_flush_addr == (target_ulong)-1) {
./tools/qemu-xen/exec.c:        env->tlb_flush_addr = vaddr & mask;
./tools/qemu-xen/exec.c:        env->tlb_flush_mask = mask;
./tools/qemu-xen/exec.c:    mask &= env->tlb_flush_mask;
./tools/qemu-xen/exec.c:    while (((env->tlb_flush_addr ^ vaddr) & mask) != 0) {
./tools/qemu-xen/exec.c:    env->tlb_flush_addr &= mask;
./tools/qemu-xen/exec.c:    env->tlb_flush_mask = mask;
./tools/qemu-xen/exec.c:    QTAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen/exec.c:    env->iotlb[mmu_idx][index] = iotlb - vaddr;
./tools/qemu-xen/exec.c:    te = &env->tlb_table[mmu_idx][index];
./tools/qemu-xen/exec.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/exec.c:    if (dev && dev->parent_bus && dev->parent_bus->info->get_dev_path) {
./tools/qemu-xen/exec.c:        char *id = dev->parent_bus->info->get_dev_path(dev);
./tools/qemu-xen/exec.c:        tlb_set_dirty(cpu_single_env, cpu_single_env->mem_io_vaddr);
./tools/qemu-xen/exec.c:        tlb_set_dirty(cpu_single_env, cpu_single_env->mem_io_vaddr);
./tools/qemu-xen/exec.c:        tlb_set_dirty(cpu_single_env, cpu_single_env->mem_io_vaddr);
./tools/qemu-xen/exec.c:    if (env->watchpoint_hit) {
./tools/qemu-xen/exec.c:    vaddr = (env->mem_io_vaddr & TARGET_PAGE_MASK) + offset;
./tools/qemu-xen/exec.c:    QTAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen/exec.c:            if (!env->watchpoint_hit) {
./tools/qemu-xen/exec.c:                env->watchpoint_hit = wp;
./tools/qemu-xen/exec.c:                tb = tb_find_pc(env->mem_io_pc);
./tools/qemu-xen/exec.c:                              "pc=%p", (void *)env->mem_io_pc);
./tools/qemu-xen/exec.c:                cpu_restore_state(tb, env, env->mem_io_pc);
./tools/qemu-xen/exec.c:                    env->exception_index = EXCP_DEBUG;
./tools/qemu-xen/exec.c:    n = env->icount_decr.u16.low + tb->icount;
./tools/qemu-xen/exec.c:    n = n - env->icount_decr.u16.low;
./tools/qemu-xen/exec.c:    if ((env->hflags & MIPS_HFLAG_BMASK) != 0 && n > 1) {
./tools/qemu-xen/exec.c:        env->active_tc.PC -= 4;
./tools/qemu-xen/exec.c:        env->icount_decr.u16.low++;
./tools/qemu-xen/exec.c:        env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen/exec.c:    if ((env->flags & ((DELAY_SLOT | DELAY_SLOT_CONDITIONAL))) != 0
./tools/qemu-xen/exec.c:        env->pc -= 2;
./tools/qemu-xen/exec.c:        env->icount_decr.u16.low++;
./tools/qemu-xen/exec.c:        env->flags &= ~(DELAY_SLOT | DELAY_SLOT_CONDITIONAL);
./tools/qemu-xen/exec.c:    /* TODO: If env->pc != tb->pc (i.e. the faulting instruction was not
./tools/qemu-xen/block/blkverify.c:    if (elem_a->src_iov->iov_base < elem_b->src_iov->iov_base) {
./tools/qemu-xen/block/blkverify.c:    } else if (elem_a->src_iov->iov_base > elem_b->src_iov->iov_base) {
./tools/qemu-xen/block/blkverify.c:    acb->buf = qemu_blockalign(bs->file, qiov->size);
./tools/qemu-xen/block/blkverify.c:    qemu_iovec_init(&acb->raw_qiov, acb->qiov->niov);
./tools/qemu-xen/block/qcow.c:    if (qiov->niov > 1) {
./tools/qemu-xen/block/qcow.c:        buf = orig_buf = qemu_blockalign(bs, qiov->size);
./tools/qemu-xen/block/qcow.c:        buf = (uint8_t *)qiov->iov->iov_base;
./tools/qemu-xen/block/qcow.c:    if (qiov->niov > 1) {
./tools/qemu-xen/block/qcow.c:        qemu_iovec_from_buffer(qiov, orig_buf, qiov->size);
./tools/qemu-xen/block/qcow.c:    if (qiov->niov > 1) {
./tools/qemu-xen/block/qcow.c:        buf = orig_buf = qemu_blockalign(bs, qiov->size);
./tools/qemu-xen/block/qcow.c:        buf = (uint8_t *)qiov->iov->iov_base;
./tools/qemu-xen/block/qcow.c:    if (qiov->niov > 1) {
./tools/qemu-xen/block/qcow2.c:    qemu_iovec_init(&hd_qiov, qiov->niov);
./tools/qemu-xen/block/qcow2.c:    qemu_iovec_init(&hd_qiov, qiov->niov);
./tools/qemu-xen/block/rbd.c:        qemu_iovec_from_buffer(acb->qiov, acb->bounce, acb->qiov->size);
./tools/qemu-xen/block/rbd.c:    acb->bounce = qemu_blockalign(bs, qiov->size);
./tools/qemu-xen/block/raw-posix.c:    for (i = 0; i < qiov->niov; i++) {
./tools/qemu-xen/block/raw-posix.c:        if ((uintptr_t) qiov->iov[i].iov_base % bs->buffer_alignment) {
./tools/qemu-xen/block/vmdk.c:        if (strcmp(bs->drv->format_name, "vmdk")) {
./tools/qemu-xen/block/qed.c: * This function reads qiov->size bytes starting at pos from the backing file.
./tools/qemu-xen/block/qed.c:        pos + qiov->size > backing_length) {
./tools/qemu-xen/block/qed.c:        qemu_iovec_memset(qiov, 0, qiov->size);
./tools/qemu-xen/block/qed.c:    size = MIN((uint64_t)backing_length - pos, qiov->size);
./tools/qemu-xen/block/qed.c:    qemu_iovec_init(&acb->cur_qiov, qiov->niov);
./tools/qemu-xen/block/sheepdog.c:    while (iov->iov_len < len) {
./tools/qemu-xen/block/sheepdog.c:        len -= iov->iov_len;
./tools/qemu-xen/block/sheepdog.c:    diff = iov->iov_len - len;
./tools/qemu-xen/block/sheepdog.c:    iov->iov_len -= diff;
./tools/qemu-xen/block/sheepdog.c:    while (msg.msg_iov->iov_len <= offset) {
./tools/qemu-xen/block/sheepdog.c:        offset -= msg.msg_iov->iov_len;
./tools/qemu-xen/block/sheepdog.c:    msg.msg_iov->iov_base = (char *) msg.msg_iov->iov_base + offset;
./tools/qemu-xen/block/sheepdog.c:    msg.msg_iov->iov_len -= offset;
./tools/qemu-xen/block/sheepdog.c:    msg.msg_iov->iov_base = (char *) msg.msg_iov->iov_base - offset;
./tools/qemu-xen/block/sheepdog.c:    msg.msg_iov->iov_len += offset;
./tools/qemu-xen/block/sheepdog.c:    iov->iov_len += diff;
./tools/qemu-xen/block/sheepdog.c:        ret = add_aio_request(s, aio_req, acb->qiov->iov,
./tools/qemu-xen/block/sheepdog.c:                              acb->qiov->niov, 0, acb->aiocb_type);
./tools/qemu-xen/block/sheepdog.c:        ret = do_readv(fd, acb->qiov->iov, rsp.data_length,
./tools/qemu-xen/block/sheepdog.c:        if (!drv || strcmp(drv->protocol_name, "sheepdog") != 0) {
./tools/qemu-xen/block/sheepdog.c:        ret = add_aio_request(s, aio_req, acb->qiov->iov, acb->qiov->niov,
./tools/qemu-xen/block/sheepdog.c:    for (i = 0; i < qiov->niov; i++) {
./tools/qemu-xen/block/sheepdog.c:        memset(qiov->iov[i].iov_base, 0, qiov->iov[i].iov_len);
./tools/qemu-xen/block/vdi.c:        if (qiov->niov > 1) {
./tools/qemu-xen/block/vdi.c:            acb->buf = qemu_blockalign(bs, qiov->size);
./tools/qemu-xen/block/vdi.c:            acb->buf = (uint8_t *)qiov->iov->iov_base;
./tools/qemu-xen/block/vdi.c:    if (acb->qiov->niov > 1) {
./tools/qemu-xen/block/vdi.c:        qemu_iovec_from_buffer(acb->qiov, acb->orig_buf, acb->qiov->size);
./tools/qemu-xen/block/vdi.c:        if (acb->qiov->niov > 1) {
./tools/qemu-xen/block/vdi.c:    if (acb->qiov->niov > 1) {
./tools/qemu-xen/block/vdi.c:        if (acb->qiov->niov > 1) {
./tools/qemu-xen/block/vvfat.c:    if (s->qcow->drv->bdrv_make_empty) {
./tools/qemu-xen/block/vvfat.c:        s->qcow->drv->bdrv_make_empty(s->qcow);
./tools/qemu-xen/block/vvfat.c:    assert(((mapping_t*)array_get(&(vvv->mapping), 0))->end == 2);
./tools/qemu-xen/block/vvfat.c:    assert(!vvv->current_mapping || vvv->current_fd || (vvv->current_mapping->mode & MODE_DIRECTORY));
./tools/qemu-xen/block/vvfat.c:    if (((direntry_t*)vvv->directory.pointer)[1].attributes != 0xf)
./tools/qemu-xen/block/vvfat.c:    assert(vvv->mapping.size >= vvv->mapping.item_size * vvv->mapping.next);
./tools/qemu-xen/block/vvfat.c:    assert(vvv->directory.size >= vvv->directory.item_size * vvv->directory.next);
./tools/qemu-xen/block/vvfat.c:    if (vvv->mapping.next<47)
./tools/qemu-xen/block/vvfat.c:    assert((mapping = array_get(&(vvv->mapping), 47)));
./tools/qemu-xen/block/vvfat.c:    assert(mapping->dir_index < vvv->directory.next);
./tools/qemu-xen/block/vvfat.c:    direntry = array_get(&(vvv->directory), mapping->dir_index);
./tools/qemu-xen/block/iscsi.c:    for (i = 0; i < acb->qiov->niov; i++) {
./tools/qemu-xen/block/iscsi.c:                acb->qiov->iov[i].iov_len,
./tools/qemu-xen/block/iscsi.c:                acb->qiov->iov[i].iov_base);
./tools/qemu-xen/usb-linux.c:    ret = ioctl(dev->fd, USBDEVFS_RESET);
./tools/qemu-xen/usb-linux.c:                dev->bus_num, dev->addr, usecs / 1000000, usecs % 1000000);
./tools/qemu-xen/usb-linux.c:        ret = ioctl(dev->fd, USBDEVFS_IOCTL, &ctrl);
./tools/qemu-xen/usb-linux.c:        dev->ninterfaces   = 0;
./tools/qemu-xen/usb-linux.c:        dev->configuration = 0;
./tools/qemu-xen/usb-linux.c:    dev_descr_len = dev->descr[0];
./tools/qemu-xen/usb-linux.c:    if (dev_descr_len > dev->descr_len) {
./tools/qemu-xen/usb-linux.c:    while (i < dev->descr_len) {
./tools/qemu-xen/usb-linux.c:                i, dev->descr_len,
./tools/qemu-xen/usb-linux.c:               dev->descr[i], dev->descr[i+1]);
./tools/qemu-xen/usb-linux.c:        if (dev->descr[i+1] != USB_DT_CONFIG) {
./tools/qemu-xen/usb-linux.c:            i += dev->descr[i];
./tools/qemu-xen/usb-linux.c:        config_descr_len = dev->descr[i];
./tools/qemu-xen/usb-linux.c:        DPRINTF("husb: config #%d need %d\n", dev->descr[i + 5], configuration);
./tools/qemu-xen/usb-linux.c:        if (configuration == dev->descr[i + 5]) {
./tools/qemu-xen/usb-linux.c:            configuration = dev->descr[i + 5];
./tools/qemu-xen/usb-linux.c:    if (i >= dev->descr_len) {
./tools/qemu-xen/usb-linux.c:    nb_interfaces = dev->descr[i + 4];
./tools/qemu-xen/usb-linux.c:        ret = ioctl(dev->fd, USBDEVFS_CLAIMINTERFACE, &interface);
./tools/qemu-xen/usb-linux.c:    trace_usb_host_claim_interfaces(dev->bus_num, dev->addr,
./tools/qemu-xen/usb-linux.c:    dev->ninterfaces   = nb_interfaces;
./tools/qemu-xen/usb-linux.c:    dev->configuration = configuration;
./tools/qemu-xen/usb-linux.c:    if (length > sizeof(dev->data_buf)) {
./tools/qemu-xen/usb-linux.c:                length, sizeof(dev->data_buf));
./tools/qemu-xen/usb-linux.c:    urb->buffer        = &dev->setup_buf;
./tools/qemu-xen/usb-linux.c:    for (i = 0; (i + 5) < dev->descr_len; i += dev->descr[i]) {
./tools/qemu-xen/usb-linux.c:        if (dev->descr[i + 1] == USB_DT_ENDPOINT) {
./tools/qemu-xen/usb-linux.c:            switch (dev->descr[i + 3] & 0x3) {
./tools/qemu-xen/usb-linux.c:                packet_size = dev->descr[i + 4] + (dev->descr[i + 5] << 8);
./tools/qemu-xen/usb-linux.c:    if (dev->fd != -1) {
./tools/qemu-xen/usb-linux.c:    dev->bus_num = bus_num;
./tools/qemu-xen/usb-linux.c:    dev->addr = addr;
./tools/qemu-xen/usb-linux.c:    strcpy(dev->port, port);
./tools/qemu-xen/usb-linux.c:    dev->fd = fd;
./tools/qemu-xen/usb-linux.c:    dev->descr_len = read(fd, dev->descr, sizeof(dev->descr));
./tools/qemu-xen/usb-linux.c:    if (dev->descr_len <= 0) {
./tools/qemu-xen/usb-linux.c:        for (x = 0; x < dev->descr_len; x++) {
./tools/qemu-xen/usb-linux.c:            printf("%02x ", dev->descr[x]);
./tools/qemu-xen/usb-linux.c:    dev->dev.speed = speed;
./tools/qemu-xen/usb-linux.c:    dev->dev.speedmask = (1 << speed);
./tools/qemu-xen/usb-linux.c:    if (dev->dev.speed == USB_SPEED_HIGH && usb_linux_full_speed_compat(dev)) {
./tools/qemu-xen/usb-linux.c:        dev->dev.speedmask |= USB_SPEED_MASK_FULL;
./tools/qemu-xen/usb-linux.c:        snprintf(dev->dev.product_desc, sizeof(dev->dev.product_desc),
./tools/qemu-xen/usb-linux.c:        pstrcpy(dev->dev.product_desc, sizeof(dev->dev.product_desc),
./tools/qemu-xen/usb-linux.c:    ret = usb_device_attach(&dev->dev);
./tools/qemu-xen/usb-linux.c:    qemu_set_fd_handler(dev->fd, NULL, async_complete, dev);
./tools/qemu-xen/usb-linux.c:    if (dev->fd != -1) {
./tools/qemu-xen/usb-linux.c:        close(dev->fd);
./tools/qemu-xen/usb-linux.c:        dev->fd = -1;
./tools/qemu-xen/usb-linux.c:    if (dev->fd == -1) {
./tools/qemu-xen/usb-linux.c:    trace_usb_host_close(dev->bus_num, dev->addr);
./tools/qemu-xen/usb-linux.c:    qemu_set_fd_handler(dev->fd, NULL, NULL, NULL);
./tools/qemu-xen/usb-linux.c:    dev->closing = 1;
./tools/qemu-xen/usb-linux.c:    dev->closing = 0;
./tools/qemu-xen/usb-linux.c:    if (dev->dev.attached) {
./tools/qemu-xen/usb-linux.c:        usb_device_detach(&dev->dev);
./tools/qemu-xen/usb-linux.c:    close(dev->fd);
./tools/qemu-xen/usb-linux.c:    dev->fd = -1;
./tools/qemu-xen/usb-linux.c:    dev->auto_attach = 0;
./tools/qemu-xen/usb-linux.c:    qdev_prop_set_uint32(&dev->qdev, "hostbus",   filter.bus_num);
./tools/qemu-xen/usb-linux.c:    qdev_prop_set_uint32(&dev->qdev, "hostaddr",  filter.addr);
./tools/qemu-xen/usb-linux.c:    qdev_prop_set_uint32(&dev->qdev, "vendorid",  filter.vendor_id);
./tools/qemu-xen/usb-linux.c:    qdev_prop_set_uint32(&dev->qdev, "productid", filter.product_id);
./tools/qemu-xen/usb-linux.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/usb-linux.c:    qdev_free(&dev->qdev);
./tools/qemu-xen/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI) {
./tools/qemu-xen/target-m68k/translate.c:    } else if (s->env->macsr & MACSR_SU) {
./tools/qemu-xen/target-m68k/translate.c:    if ((s->env->macsr & MACSR_OMC) != 0 && !dual) {
./tools/qemu-xen/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI) {
./tools/qemu-xen/target-m68k/translate.c:        if (s->env->macsr & MACSR_SU)
./tools/qemu-xen/target-m68k/translate.c:    if ((s->env->macsr & MACSR_OMC) != 0 && dual) {
./tools/qemu-xen/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI)
./tools/qemu-xen/target-m68k/translate.c:    else if (s->env->macsr & MACSR_SU)
./tools/qemu-xen/target-m68k/translate.c:        if ((s->env->macsr & MACSR_OMC) != 0) {
./tools/qemu-xen/target-m68k/translate.c:        if (s->env->macsr & MACSR_FI)
./tools/qemu-xen/target-m68k/translate.c:        else if (s->env->macsr & MACSR_SU)
./tools/qemu-xen/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI) {
./tools/qemu-xen/target-m68k/translate.c:    } else if ((s->env->macsr & MACSR_OMC) == 0) {
./tools/qemu-xen/target-m68k/translate.c:    } else if (s->env->macsr & MACSR_SU) {
./tools/qemu-xen/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI)
./tools/qemu-xen/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI) {
./tools/qemu-xen/target-m68k/translate.c:    } else if (s->env->macsr & MACSR_SU) {
./tools/qemu-xen/target-m68k/translate.c:    if (s->env->macsr & MACSR_FI)
./tools/qemu-xen/target-m68k/translate.c:    else if (s->env->macsr & MACSR_SU)
./tools/qemu-xen/target-m68k/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-m68k/translate.c:    dc->fpcr = env->fpcr;
./tools/qemu-xen/target-m68k/translate.c:    dc->user = (env->sr & SR_S) == 0;
./tools/qemu-xen/target-m68k/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-m68k/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-m68k/translate.c:             !env->singlestep_enabled &&
./tools/qemu-xen/target-m68k/translate.c:    if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen/target-m68k/translate.c:        u.d = env->fregs[i];
./tools/qemu-xen/target-m68k/translate.c:                     i, env->dregs[i], i, env->aregs[i],
./tools/qemu-xen/target-m68k/translate.c:    cpu_fprintf (f, "PC = %08x   ", env->pc);
./tools/qemu-xen/target-m68k/translate.c:    sr = env->sr;
./tools/qemu-xen/target-m68k/translate.c:    cpu_fprintf (f, "FPRESULT = %12g\n", *(double *)&env->fp_result);
./tools/qemu-xen/target-m68k/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-m68k/op_helper.c:    sp = env->aregs[7];
./tools/qemu-xen/target-m68k/op_helper.c:    env->pc = ldl_kernel(sp + 4);
./tools/qemu-xen/target-m68k/op_helper.c:    env->sr = fmt & 0xffff;
./tools/qemu-xen/target-m68k/op_helper.c:    env->aregs[7] = sp + 8;
./tools/qemu-xen/target-m68k/op_helper.c:    retaddr = env->pc;
./tools/qemu-xen/target-m68k/op_helper.c:        switch (env->exception_index) {
./tools/qemu-xen/target-m68k/op_helper.c:                    && (env->sr & SR_S) != 0
./tools/qemu-xen/target-m68k/op_helper.c:                    && (env->pc & 3) == 0
./tools/qemu-xen/target-m68k/op_helper.c:                    && lduw_code(env->pc - 4) == 0x4e71
./tools/qemu-xen/target-m68k/op_helper.c:                    && ldl_code(env->pc) == 0x4e7bf000) {
./tools/qemu-xen/target-m68k/op_helper.c:                env->pc += 4;
./tools/qemu-xen/target-m68k/op_helper.c:                do_m68k_semihosting(env, env->dregs[0]);
./tools/qemu-xen/target-m68k/op_helper.c:            env->halted = 1;
./tools/qemu-xen/target-m68k/op_helper.c:            env->exception_index = EXCP_HLT;
./tools/qemu-xen/target-m68k/op_helper.c:        if (env->exception_index >= EXCP_TRAP0
./tools/qemu-xen/target-m68k/op_helper.c:            && env->exception_index <= EXCP_TRAP15) {
./tools/qemu-xen/target-m68k/op_helper.c:    vector = env->exception_index << 2;
./tools/qemu-xen/target-m68k/op_helper.c:    sp = env->aregs[7];
./tools/qemu-xen/target-m68k/op_helper.c:    fmt |= env->sr;
./tools/qemu-xen/target-m68k/op_helper.c:    env->sr |= SR_S;
./tools/qemu-xen/target-m68k/op_helper.c:        env->sr = (env->sr & ~SR_I) | (env->pending_level << SR_I_SHIFT);
./tools/qemu-xen/target-m68k/op_helper.c:        env->sr &= ~SR_M;
./tools/qemu-xen/target-m68k/op_helper.c:    env->aregs[7] = sp;
./tools/qemu-xen/target-m68k/op_helper.c:    env->pc = ldl_kernel(env->vbr + vector);
./tools/qemu-xen/target-m68k/op_helper.c:    env->exception_index = tt;
./tools/qemu-xen/target-m68k/op_helper.c:    num = env->div1;
./tools/qemu-xen/target-m68k/op_helper.c:    den = env->div2;
./tools/qemu-xen/target-m68k/op_helper.c:    env->div1 = quot;
./tools/qemu-xen/target-m68k/op_helper.c:    env->div2 = rem;
./tools/qemu-xen/target-m68k/op_helper.c:    env->cc_dest = flags;
./tools/qemu-xen/target-m68k/op_helper.c:    num = env->div1;
./tools/qemu-xen/target-m68k/op_helper.c:    den = env->div2;
./tools/qemu-xen/target-m68k/op_helper.c:    env->div1 = quot;
./tools/qemu-xen/target-m68k/op_helper.c:    env->div2 = rem;
./tools/qemu-xen/target-m68k/op_helper.c:    env->cc_dest = flags;
./tools/qemu-xen/target-m68k/helper.c:        stfq_p(mem_buf, env->fregs[n]);
./tools/qemu-xen/target-m68k/helper.c:        env->fregs[n] = ldfq_p(mem_buf);
./tools/qemu-xen/target-m68k/helper.c:    env->features |= (1u << feature);
./tools/qemu-xen/target-m68k/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-m68k/helper.c:    env->sr = 0x2700;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen/target-m68k/helper.c:    env->pc = 0;
./tools/qemu-xen/target-m68k/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/target-m68k/helper.c:    src = env->cc_src;
./tools/qemu-xen/target-m68k/helper.c:    dest = env->cc_dest;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_dest = flags;
./tools/qemu-xen/target-m68k/helper.c:        env->cacr = val;
./tools/qemu-xen/target-m68k/helper.c:        env->vbr = val;
./tools/qemu-xen/target-m68k/helper.c:    if ((env->macsr ^ val) & (MACSR_FI | MACSR_SU)) {
./tools/qemu-xen/target-m68k/helper.c:            regval = env->macc[i];
./tools/qemu-xen/target-m68k/helper.c:            if (env->macsr & MACSR_FI) {
./tools/qemu-xen/target-m68k/helper.c:            if (env->macsr & MACSR_FI) {
./tools/qemu-xen/target-m68k/helper.c:            } else if (env->macsr & MACSR_SU) {
./tools/qemu-xen/target-m68k/helper.c:            env->macc[i] = regval;
./tools/qemu-xen/target-m68k/helper.c:    env->macsr = val;
./tools/qemu-xen/target-m68k/helper.c:    env->sp[env->current_sp] = env->aregs[7];
./tools/qemu-xen/target-m68k/helper.c:    new_sp = (env->sr & SR_S && env->cacr & M68K_CACR_EUSP)
./tools/qemu-xen/target-m68k/helper.c:    env->aregs[7] = env->sp[new_sp];
./tools/qemu-xen/target-m68k/helper.c:    env->current_sp = new_sp;
./tools/qemu-xen/target-m68k/helper.c:    env->exception_index = EXCP_ACCESS;
./tools/qemu-xen/target-m68k/helper.c:    env->mmu.ar = address;
./tools/qemu-xen/target-m68k/helper.c:    env->pending_level = level;
./tools/qemu-xen/target-m68k/helper.c:    env->pending_vector = vector;
./tools/qemu-xen/target-m68k/helper.c:    old_flags = env->cc_dest;
./tools/qemu-xen/target-m68k/helper.c:    if (env->cc_x) {
./tools/qemu-xen/target-m68k/helper.c:        env->cc_x = (op1 <= op2);
./tools/qemu-xen/target-m68k/helper.c:        env->cc_op = CC_OP_SUBX;
./tools/qemu-xen/target-m68k/helper.c:        env->cc_x = (op1 < op2);
./tools/qemu-xen/target-m68k/helper.c:        env->cc_op = CC_OP_SUB;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_dest = res;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_src = op2;
./tools/qemu-xen/target-m68k/helper.c:    cpu_m68k_flush_flags(env, env->cc_op);
./tools/qemu-xen/target-m68k/helper.c:    env->cc_dest &= (old_flags | ~CCF_Z);
./tools/qemu-xen/target-m68k/helper.c:    old_flags = env->cc_dest;
./tools/qemu-xen/target-m68k/helper.c:    if (env->cc_x) {
./tools/qemu-xen/target-m68k/helper.c:        env->cc_x = (res <= op2);
./tools/qemu-xen/target-m68k/helper.c:        env->cc_op = CC_OP_ADDX;
./tools/qemu-xen/target-m68k/helper.c:        env->cc_x = (res < op2);
./tools/qemu-xen/target-m68k/helper.c:        env->cc_op = CC_OP_ADD;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_dest = res;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_src = op2;
./tools/qemu-xen/target-m68k/helper.c:    cpu_m68k_flush_flags(env, env->cc_op);
./tools/qemu-xen/target-m68k/helper.c:    env->cc_dest &= (old_flags | ~CCF_Z);
./tools/qemu-xen/target-m68k/helper.c:    env->sr = val & 0xffff;
./tools/qemu-xen/target-m68k/helper.c:        cf = env->cc_src & CCF_C;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_src = cf;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_x = (cf != 0);
./tools/qemu-xen/target-m68k/helper.c:    env->cc_dest = result;
./tools/qemu-xen/target-m68k/helper.c:        cf = env->cc_src & CCF_C;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_src = cf;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_x = (cf != 0);
./tools/qemu-xen/target-m68k/helper.c:    env->cc_dest = result;
./tools/qemu-xen/target-m68k/helper.c:        cf = (env->cc_src & CCF_C) != 0;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_src = cf;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_x = cf;
./tools/qemu-xen/target-m68k/helper.c:    env->cc_dest = result;
./tools/qemu-xen/target-m68k/helper.c:    return float64_to_int32(val, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float64_to_float32(val, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return int32_to_float64(val, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float32_to_float64(val, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float64_round_to_int(val, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float64_trunc_to_int(val, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float64_sqrt(val, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float64_add(a, b, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float64_sub(a, b, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float64_mul(a, b, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    return float64_div(a, b, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    res = float64_sub(a, b, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:            if (float64_lt_quiet(a, res, &env->fp_status))
./tools/qemu-xen/target-m68k/helper.c:    return float64_compare_quiet(val, float64_zero, &env->fp_status);
./tools/qemu-xen/target-m68k/helper.c:    env->macc[dest] = env->macc[src];
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & (MACSR_PAV0 << src))
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= mask;
./tools/qemu-xen/target-m68k/helper.c:        env->macsr &= ~mask;
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & MACSR_RT) {
./tools/qemu-xen/target-m68k/helper.c:    tmp = env->macc[acc];
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & MACSR_V) {
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_PAV0 << acc;
./tools/qemu-xen/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc] = result;
./tools/qemu-xen/target-m68k/helper.c:    val = env->macc[acc];
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & MACSR_V) {
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_PAV0 << acc;
./tools/qemu-xen/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc] = val;
./tools/qemu-xen/target-m68k/helper.c:    sum = env->macc[acc];
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & MACSR_V) {
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_PAV0 << acc;
./tools/qemu-xen/target-m68k/helper.c:        if (env->macsr & MACSR_OMC) {
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc] = result;
./tools/qemu-xen/target-m68k/helper.c:    val = env->macc[acc];
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_Z;
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_N;
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & (MACSR_PAV0 << acc)) {
./tools/qemu-xen/target-m68k/helper.c:        env->macsr |= MACSR_V;
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & MACSR_FI) {
./tools/qemu-xen/target-m68k/helper.c:            env->macsr |= MACSR_EV;
./tools/qemu-xen/target-m68k/helper.c:    } else if (env->macsr & MACSR_SU) {
./tools/qemu-xen/target-m68k/helper.c:            env->macsr |= MACSR_EV;
./tools/qemu-xen/target-m68k/helper.c:            env->macsr |= MACSR_EV;
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & MACSR_SU) {
./tools/qemu-xen/target-m68k/helper.c:    } else if (env->macsr & MACSR_RT) {
./tools/qemu-xen/target-m68k/helper.c:    if (env->macsr & MACSR_OMC) {
./tools/qemu-xen/target-m68k/helper.c:        if (env->macsr & MACSR_SU) {
./tools/qemu-xen/target-m68k/helper.c:        if (env->macsr & MACSR_SU) {
./tools/qemu-xen/target-m68k/helper.c:    val = env->macc[acc] & 0x00ff;
./tools/qemu-xen/target-m68k/helper.c:    val = (env->macc[acc] >> 32) & 0xff00;
./tools/qemu-xen/target-m68k/helper.c:    val |= (env->macc[acc + 1] << 16) & 0x00ff0000;
./tools/qemu-xen/target-m68k/helper.c:    val |= (env->macc[acc + 1] >> 16) & 0xff000000;
./tools/qemu-xen/target-m68k/helper.c:    val = (env->macc[acc] >> 32) & 0xffff;
./tools/qemu-xen/target-m68k/helper.c:    val |= (env->macc[acc + 1] >> 16) & 0xffff0000;
./tools/qemu-xen/target-m68k/helper.c:    res = env->macc[acc] & 0xffffffff00ull;
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc] = res;
./tools/qemu-xen/target-m68k/helper.c:    res = env->macc[acc + 1] & 0xffffffff00ull;
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc + 1] = res;
./tools/qemu-xen/target-m68k/helper.c:    res = (uint32_t)env->macc[acc];
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc] = res;
./tools/qemu-xen/target-m68k/helper.c:    res = (uint32_t)env->macc[acc + 1];
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc + 1] = res;
./tools/qemu-xen/target-m68k/helper.c:    res = (uint32_t)env->macc[acc];
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc] = res;
./tools/qemu-xen/target-m68k/helper.c:    res = (uint32_t)env->macc[acc + 1];
./tools/qemu-xen/target-m68k/helper.c:    env->macc[acc + 1] = res;
./tools/qemu-xen/cpu-exec.c:    env->current_tb = NULL;
./tools/qemu-xen/cpu-exec.c:    longjmp(env->jmp_env, 1);
./tools/qemu-xen/cpu-exec.c:    env->exception_index = -1;
./tools/qemu-xen/cpu-exec.c:    longjmp(env->jmp_env, 1);
./tools/qemu-xen/cpu-exec.c:    env->current_tb = tb;
./tools/qemu-xen/cpu-exec.c:    env->current_tb = NULL;
./tools/qemu-xen/cpu-exec.c:    env->tb_jmp_cache[tb_jmp_cache_hash_func(pc)] = tb;
./tools/qemu-xen/cpu-exec.c:    tb = env->tb_jmp_cache[tb_jmp_cache_hash_func(pc)];
./tools/qemu-xen/cpu-exec.c:    if (!env->watchpoint_hit) {
./tools/qemu-xen/cpu-exec.c:        QTAILQ_FOREACH(wp, &env->watchpoints, entry) {
./tools/qemu-xen/cpu-exec.c:    if (env->halted) {
./tools/qemu-xen/cpu-exec.c:        env->halted = 0;
./tools/qemu-xen/cpu-exec.c:        env->exit_request = 1;
./tools/qemu-xen/cpu-exec.c:    CC_SRC = env->eflags & (CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C);
./tools/qemu-xen/cpu-exec.c:    DF = 1 - (2 * ((env->eflags >> 10) & 1));
./tools/qemu-xen/cpu-exec.c:    env->eflags &= ~(DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C);
./tools/qemu-xen/cpu-exec.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen/cpu-exec.c:    env->cc_dest = env->sr & 0xf;
./tools/qemu-xen/cpu-exec.c:    env->cc_x = (env->sr >> 4) & 1;
./tools/qemu-xen/cpu-exec.c:    env->reserve_addr = -1;
./tools/qemu-xen/cpu-exec.c:    env->exception_index = -1;
./tools/qemu-xen/cpu-exec.c:        if (setjmp(env->jmp_env) == 0) {
./tools/qemu-xen/cpu-exec.c:            if (env->exception_index >= 0) {
./tools/qemu-xen/cpu-exec.c:                if (env->exception_index >= EXCP_INTERRUPT) {
./tools/qemu-xen/cpu-exec.c:                    ret = env->exception_index;
./tools/qemu-xen/cpu-exec.c:                    ret = env->exception_index;
./tools/qemu-xen/cpu-exec.c:                    env->exception_index = -1;
./tools/qemu-xen/cpu-exec.c:                interrupt_request = env->interrupt_request;
./tools/qemu-xen/cpu-exec.c:                    if (unlikely(env->singlestep_enabled & SSTEP_NOIRQ)) {
./tools/qemu-xen/cpu-exec.c:                        env->interrupt_request &= ~CPU_INTERRUPT_DEBUG;
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_DEBUG;
./tools/qemu-xen/cpu-exec.c:                        env->interrupt_request &= ~CPU_INTERRUPT_HALT;
./tools/qemu-xen/cpu-exec.c:                        env->halted = 1;
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_HLT;
./tools/qemu-xen/cpu-exec.c:                            env->exception_index = EXCP_HALTED;
./tools/qemu-xen/cpu-exec.c:                    } else if (env->hflags2 & HF2_GIF_MASK) {
./tools/qemu-xen/cpu-exec.c:                            !(env->hflags & HF_SMM_MASK)) {
./tools/qemu-xen/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_SMI;
./tools/qemu-xen/cpu-exec.c:                                   !(env->hflags2 & HF2_NMI_MASK)) {
./tools/qemu-xen/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_NMI;
./tools/qemu-xen/cpu-exec.c:                            env->hflags2 |= HF2_NMI_MASK;
./tools/qemu-xen/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_MCE;
./tools/qemu-xen/cpu-exec.c:                                   (((env->hflags2 & HF2_VINTR_MASK) && 
./tools/qemu-xen/cpu-exec.c:                                     (env->hflags2 & HF2_HIF_MASK)) ||
./tools/qemu-xen/cpu-exec.c:                                    (!(env->hflags2 & HF2_VINTR_MASK) && 
./tools/qemu-xen/cpu-exec.c:                                     (env->eflags & IF_MASK && 
./tools/qemu-xen/cpu-exec.c:                                      !(env->hflags & HF_INHIBIT_IRQ_MASK))))) {
./tools/qemu-xen/cpu-exec.c:                            env->interrupt_request &= ~(CPU_INTERRUPT_HARD | CPU_INTERRUPT_VIRQ);
./tools/qemu-xen/cpu-exec.c:                                   (env->eflags & IF_MASK) && 
./tools/qemu-xen/cpu-exec.c:                                   !(env->hflags & HF_INHIBIT_IRQ_MASK)) {
./tools/qemu-xen/cpu-exec.c:                            intno = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_vector));
./tools/qemu-xen/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_VIRQ;
./tools/qemu-xen/cpu-exec.c:                        if (env->pending_interrupts == 0)
./tools/qemu-xen/cpu-exec.c:                            env->interrupt_request &= ~CPU_INTERRUPT_HARD;
./tools/qemu-xen/cpu-exec.c:                        && (env->ie & IE_IE)) {
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_IRQ;
./tools/qemu-xen/cpu-exec.c:                        && (env->sregs[SR_MSR] & MSR_IE)
./tools/qemu-xen/cpu-exec.c:                        && !(env->sregs[SR_MSR] & (MSR_EIP | MSR_BIP))
./tools/qemu-xen/cpu-exec.c:                        && !(env->iflags & (D_FLAG | IMM_FLAG))) {
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_IRQ;
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_EXT_INTERRUPT;
./tools/qemu-xen/cpu-exec.c:                        env->error_code = 0;
./tools/qemu-xen/cpu-exec.c:                            env->interrupt_index > 0) {
./tools/qemu-xen/cpu-exec.c:                            int pil = env->interrupt_index & 0xf;
./tools/qemu-xen/cpu-exec.c:                            int type = env->interrupt_index & 0xf0;
./tools/qemu-xen/cpu-exec.c:                                env->exception_index = env->interrupt_index;
./tools/qemu-xen/cpu-exec.c:                        && !(env->uncached_cpsr & CPSR_F)) {
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_FIQ;
./tools/qemu-xen/cpu-exec.c:                        && ((IS_M(env) && env->regs[15] < 0xfffffff0)
./tools/qemu-xen/cpu-exec.c:                            || !(env->uncached_cpsr & CPSR_I))) {
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_IRQ;
./tools/qemu-xen/cpu-exec.c:                        && !(env->uncached_asr & ASR_I)) {
./tools/qemu-xen/cpu-exec.c:		        switch (env->pal_mode ? 7 : env->ps & PS_INT_MASK) {
./tools/qemu-xen/cpu-exec.c:                            env->exception_index = idx;
./tools/qemu-xen/cpu-exec.c:                            env->error_code = 0;
./tools/qemu-xen/cpu-exec.c:                        && (env->pregs[PR_CCS] & I_FLAG)
./tools/qemu-xen/cpu-exec.c:                        && !env->locked_irq) {
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_IRQ;
./tools/qemu-xen/cpu-exec.c:                        && (env->pregs[PR_CCS] & M_FLAG)) {
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXCP_NMI;
./tools/qemu-xen/cpu-exec.c:                        && ((env->sr & SR_I) >> SR_I_SHIFT)
./tools/qemu-xen/cpu-exec.c:                            < env->pending_level) {
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = env->pending_vector;
./tools/qemu-xen/cpu-exec.c:                        (env->psw.mask & PSW_MASK_EXT)) {
./tools/qemu-xen/cpu-exec.c:                        env->exception_index = EXC_IRQ;
./tools/qemu-xen/cpu-exec.c:                    if (env->interrupt_request & CPU_INTERRUPT_EXITTB) {
./tools/qemu-xen/cpu-exec.c:                        env->interrupt_request &= ~CPU_INTERRUPT_EXITTB;
./tools/qemu-xen/cpu-exec.c:                if (unlikely(env->exit_request)) {
./tools/qemu-xen/cpu-exec.c:                    env->exit_request = 0;
./tools/qemu-xen/cpu-exec.c:                    env->exception_index = EXCP_INTERRUPT;
./tools/qemu-xen/cpu-exec.c:                    env->eflags = env->eflags | cpu_cc_compute_all(env, CC_OP)
./tools/qemu-xen/cpu-exec.c:                    env->eflags &= ~(DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C);
./tools/qemu-xen/cpu-exec.c:                    cpu_m68k_flush_flags(env, env->cc_op);
./tools/qemu-xen/cpu-exec.c:                    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen/cpu-exec.c:                    env->sr = (env->sr & 0xffe0)
./tools/qemu-xen/cpu-exec.c:                              | env->cc_dest | (env->cc_x << 4);
./tools/qemu-xen/cpu-exec.c:                   infinite loop and becomes env->current_tb. Avoid
./tools/qemu-xen/cpu-exec.c:                env->current_tb = tb;
./tools/qemu-xen/cpu-exec.c:                if (likely(!env->exit_request)) {
./tools/qemu-xen/cpu-exec.c:                        insns_left = env->icount_decr.u32;
./tools/qemu-xen/cpu-exec.c:                        if (env->icount_extra && insns_left >= 0) {
./tools/qemu-xen/cpu-exec.c:                            env->icount_extra += insns_left;
./tools/qemu-xen/cpu-exec.c:                            if (env->icount_extra > 0xffff) {
./tools/qemu-xen/cpu-exec.c:                                insns_left = env->icount_extra;
./tools/qemu-xen/cpu-exec.c:                            env->icount_extra -= insns_left;
./tools/qemu-xen/cpu-exec.c:                            env->icount_decr.u16.low = insns_left;
./tools/qemu-xen/cpu-exec.c:                            env->exception_index = EXCP_INTERRUPT;
./tools/qemu-xen/cpu-exec.c:                env->current_tb = NULL;
./tools/qemu-xen/cpu-exec.c:    env->eflags = env->eflags | cpu_cc_compute_all(env, CC_OP)
./tools/qemu-xen/cpu-exec.c:    cpu_m68k_flush_flags(env, env->cc_op);
./tools/qemu-xen/cpu-exec.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen/cpu-exec.c:    env->sr = (env->sr & 0xffe0)
./tools/qemu-xen/cpu-exec.c:              | env->cc_dest | (env->cc_x << 4);
./tools/qemu-xen/posix-aio-compat.c:             return handle_aiocb_rw_linear(aiocb, aiocb->aio_iov->iov_base);
./tools/qemu-xen/posix-aio-compat.c:        acb->aio_iov = qiov->iov;
./tools/qemu-xen/posix-aio-compat.c:        acb->aio_niov = qiov->niov;
./tools/qemu-xen/hw/ide/qdev.c:             ((IDEBus*)dev->parent_bus)->bus_id);
./tools/qemu-xen/hw/ide/qdev.c:    IDEBus *bus = DO_UPCAST(IDEBus, qbus, qdev->parent_bus);
./tools/qemu-xen/hw/ide/qdev.c:    if (!dev->conf.bs) {
./tools/qemu-xen/hw/ide/qdev.c:    if (dev->unit == -1) {
./tools/qemu-xen/hw/ide/qdev.c:        dev->unit = bus->master ? 1 : 0;
./tools/qemu-xen/hw/ide/qdev.c:    switch (dev->unit) {
./tools/qemu-xen/hw/ide/qdev.c:            error_report("IDE unit %d is in use", dev->unit);
./tools/qemu-xen/hw/ide/qdev.c:            error_report("IDE unit %d is in use", dev->unit);
./tools/qemu-xen/hw/ide/qdev.c:        error_report("Invalid IDE unit %d", dev->unit);
./tools/qemu-xen/hw/ide/qdev.c:    IDEBus *bus = DO_UPCAST(IDEBus, qbus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/ide/qdev.c:    IDEState *s = bus->ifs + dev->unit;
./tools/qemu-xen/hw/ide/qdev.c:    if (dev->conf.discard_granularity && dev->conf.discard_granularity != 512) {
./tools/qemu-xen/hw/ide/qdev.c:    serial = dev->serial;
./tools/qemu-xen/hw/ide/qdev.c:        dinfo = drive_get_by_blockdev(dev->conf.bs);
./tools/qemu-xen/hw/ide/qdev.c:    if (ide_init_drive(s, dev->conf.bs, kind, dev->version, serial) < 0) {
./tools/qemu-xen/hw/ide/qdev.c:    if (!dev->version) {
./tools/qemu-xen/hw/ide/qdev.c:        dev->version = g_strdup(s->version);
./tools/qemu-xen/hw/ide/qdev.c:    if (!dev->serial) {
./tools/qemu-xen/hw/ide/qdev.c:        dev->serial = g_strdup(s->drive_serial_str);
./tools/qemu-xen/hw/ide/qdev.c:    add_boot_device_path(dev->conf.bootindex, &dev->qdev,
./tools/qemu-xen/hw/ide/qdev.c:                         dev->unit ? "/disk@1" : "/disk@0");
./tools/qemu-xen/hw/ide/qdev.c:    DriveInfo *dinfo = drive_get_by_blockdev(dev->conf.bs);
./tools/qemu-xen/hw/ide/cmd646.c:        val = pci_dev->dev.config[MRDMODE];
./tools/qemu-xen/hw/ide/cmd646.c:        if (bm == &pci_dev->bmdma[0]) {
./tools/qemu-xen/hw/ide/cmd646.c:            val = pci_dev->dev.config[UDIDETCR0];
./tools/qemu-xen/hw/ide/cmd646.c:            val = pci_dev->dev.config[UDIDETCR1];
./tools/qemu-xen/hw/ide/cmd646.c:        pci_dev->dev.config[MRDMODE] =
./tools/qemu-xen/hw/ide/cmd646.c:            (pci_dev->dev.config[MRDMODE] & ~0x30) | (val & 0x30);
./tools/qemu-xen/hw/ide/cmd646.c:        if (bm == &pci_dev->bmdma[0])
./tools/qemu-xen/hw/ide/cmd646.c:            pci_dev->dev.config[UDIDETCR0] = val;
./tools/qemu-xen/hw/ide/cmd646.c:            pci_dev->dev.config[UDIDETCR1] = val;
./tools/qemu-xen/hw/ide/cmd646.c:    vmstate_register(&dev->qdev, 0, &vmstate_ide_pci, d);
./tools/qemu-xen/hw/ide/cmd646.c:    qdev_prop_set_uint32(&dev->qdev, "secondary", secondary_ide_enabled);
./tools/qemu-xen/hw/ide/cmd646.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/ide/piix.c:    dev->qdev.info->unplug = pci_piix3_xen_ide_unplug;
./tools/qemu-xen/hw/ide/via.c:    vmstate_register(&dev->qdev, 0, &vmstate_ide_pci, d);
./tools/qemu-xen/hw/ide/isa.c:    vmstate_register(&dev->qdev, 0, &vmstate_ide_isa, s);
./tools/qemu-xen/hw/ide/isa.c:    qdev_prop_set_uint32(&dev->qdev, "iobase",  iobase);
./tools/qemu-xen/hw/ide/isa.c:    qdev_prop_set_uint32(&dev->qdev, "iobase2", iobase2);
./tools/qemu-xen/hw/ide/isa.c:    qdev_prop_set_uint32(&dev->qdev, "irq",     isairq);
./tools/qemu-xen/hw/ide/isa.c:    if (qdev_init(&dev->qdev) < 0)
./tools/qemu-xen/hw/ide/pci.c:    pci_dma_sglist_init(&s->sg, &bm->pci_dev->dev,
./tools/qemu-xen/hw/ide/pci.c:            pci_dma_read(&bm->pci_dev->dev, bm->cur_addr, (uint8_t *)&prd, 8);
./tools/qemu-xen/hw/ide/pci.c:            pci_dma_read(&bm->pci_dev->dev, bm->cur_addr, (uint8_t *)&prd, 8);
./tools/qemu-xen/hw/ide/pci.c:                pci_dma_write(&bm->pci_dev->dev, bm->cur_prd_addr,
./tools/qemu-xen/hw/ide/pci.c:                pci_dma_read(&bm->pci_dev->dev, bm->cur_prd_addr,
./tools/qemu-xen/hw/ide/ich.c:    ahci_init(&d->ahci, &dev->qdev, 6);
./tools/qemu-xen/hw/ide/core.c:    if (dev && dev->conf.discard_granularity) {
./tools/qemu-xen/hw/ide/core.c:    if (dev && dev->conf.physical_block_size)
./tools/qemu-xen/hw/ide/core.c:        put_le16(p + 106, 0x6000 | get_physical_block_exp(&dev->conf));
./tools/qemu-xen/hw/ide/core.c:    if (dev && dev->conf.discard_granularity) {
./tools/qemu-xen/hw/ide/core.c:    for (j = 0; j < qiov->niov; j++) {
./tools/qemu-xen/hw/ide/core.c:        uint64_t *buffer = qiov->iov[j].iov_base;
./tools/qemu-xen/hw/ide/core.c:        for (i = 0; i < qiov->iov[j].iov_len / 8; i++) {
./tools/qemu-xen/hw/realview.c:    bus = i2c_init_bus(&dev->qdev, "i2c");
./tools/qemu-xen/hw/petalogix_s3adsp1800_mmu.c:    env->regs[5] = boot_info.cmdline;
./tools/qemu-xen/hw/petalogix_s3adsp1800_mmu.c:    env->regs[7] = boot_info.fdt;
./tools/qemu-xen/hw/petalogix_s3adsp1800_mmu.c:    env->sregs[SR_PC] = boot_info.bootstrap_pc;
./tools/qemu-xen/hw/petalogix_s3adsp1800_mmu.c:    env->pvr.regs[10] = 0x0c000000; /* spartan 3a dsp family.  */
./tools/qemu-xen/hw/scsi-disk.c:    add_boot_device_path(s->qdev.conf.bootindex, &dev->qdev, NULL);
./tools/qemu-xen/hw/scsi-disk.c:    if (!dev->conf.bs) {
./tools/qemu-xen/hw/scsi-disk.c:    dinfo = drive_get_by_blockdev(dev->conf.bs);
./tools/qemu-xen/hw/qdev.c:    dev->info = info;
./tools/qemu-xen/hw/qdev.c:    dev->parent_bus = bus;
./tools/qemu-xen/hw/qdev.c:    qdev_prop_set_defaults(dev, dev->info->props);
./tools/qemu-xen/hw/qdev.c:    qdev_prop_set_defaults(dev, dev->parent_bus->info->props);
./tools/qemu-xen/hw/qdev.c:        dev->hotplugged = 1;
./tools/qemu-xen/hw/qdev.c:    dev->instance_id_alias = -1;
./tools/qemu-xen/hw/qdev.c:    dev->state = DEV_STATE_CREATED;
./tools/qemu-xen/hw/qdev.c:        qdev->id = id;
./tools/qemu-xen/hw/qdev.c:    qdev->opts = opts;
./tools/qemu-xen/hw/qdev.c:    assert(dev->state == DEV_STATE_CREATED);
./tools/qemu-xen/hw/qdev.c:    rc = dev->info->init(dev, dev->info);
./tools/qemu-xen/hw/qdev.c:    if (dev->info->vmsd) {
./tools/qemu-xen/hw/qdev.c:        vmstate_register_with_alias_id(dev, -1, dev->info->vmsd, dev,
./tools/qemu-xen/hw/qdev.c:                                       dev->instance_id_alias,
./tools/qemu-xen/hw/qdev.c:                                       dev->alias_required_for_version);
./tools/qemu-xen/hw/qdev.c:    dev->state = DEV_STATE_INITIALIZED;
./tools/qemu-xen/hw/qdev.c:    if (dev->hotplugged && dev->info->reset) {
./tools/qemu-xen/hw/qdev.c:        dev->info->reset(dev);
./tools/qemu-xen/hw/qdev.c:    assert(dev->state == DEV_STATE_CREATED);
./tools/qemu-xen/hw/qdev.c:    dev->instance_id_alias = alias_id;
./tools/qemu-xen/hw/qdev.c:    dev->alias_required_for_version = required_for_version;
./tools/qemu-xen/hw/qdev.c:    if (!dev->parent_bus->allow_hotplug) {
./tools/qemu-xen/hw/qdev.c:        qerror_report(QERR_BUS_NO_HOTPLUG, dev->parent_bus->name);
./tools/qemu-xen/hw/qdev.c:    assert(dev->info->unplug != NULL);
./tools/qemu-xen/hw/qdev.c:    return dev->info->unplug(dev);
./tools/qemu-xen/hw/qdev.c:    if (dev->info->reset) {
./tools/qemu-xen/hw/qdev.c:        dev->info->reset(dev);
./tools/qemu-xen/hw/qdev.c:    DeviceInfo *info = dev->info;
./tools/qemu-xen/hw/qdev.c:    if (dev->state == DEV_STATE_INITIALIZED) {
./tools/qemu-xen/hw/qdev.c:        while (dev->num_child_bus) {
./tools/qemu-xen/hw/qdev.c:            bus = QLIST_FIRST(&dev->child_bus);
./tools/qemu-xen/hw/qdev.c:        if (dev->info->vmsd)
./tools/qemu-xen/hw/qdev.c:            vmstate_unregister(dev, dev->info->vmsd, dev);
./tools/qemu-xen/hw/qdev.c:        if (dev->info->exit)
./tools/qemu-xen/hw/qdev.c:            dev->info->exit(dev);
./tools/qemu-xen/hw/qdev.c:        if (dev->opts)
./tools/qemu-xen/hw/qdev.c:            qemu_opts_del(dev->opts);
./tools/qemu-xen/hw/qdev.c:    QTAILQ_REMOVE(&dev->parent_bus->children, dev, sibling);
./tools/qemu-xen/hw/qdev.c:    for (prop = dev->info->props; prop && prop->name; prop++) {
./tools/qemu-xen/hw/qdev.c:    return dev->parent_bus;
./tools/qemu-xen/hw/qdev.c:    assert(dev->num_gpio_in == 0);
./tools/qemu-xen/hw/qdev.c:    dev->num_gpio_in = n;
./tools/qemu-xen/hw/qdev.c:    dev->gpio_in = qemu_allocate_irqs(handler, dev, n);
./tools/qemu-xen/hw/qdev.c:    assert(dev->num_gpio_out == 0);
./tools/qemu-xen/hw/qdev.c:    dev->num_gpio_out = n;
./tools/qemu-xen/hw/qdev.c:    dev->gpio_out = pins;
./tools/qemu-xen/hw/qdev.c:    assert(n >= 0 && n < dev->num_gpio_in);
./tools/qemu-xen/hw/qdev.c:    return dev->gpio_in[n];
./tools/qemu-xen/hw/qdev.c:    assert(n >= 0 && n < dev->num_gpio_out);
./tools/qemu-xen/hw/qdev.c:    dev->gpio_out[n] = pin;
./tools/qemu-xen/hw/qdev.c:    QLIST_FOREACH(bus, &dev->child_bus, sibling) {
./tools/qemu-xen/hw/qdev.c:    QLIST_FOREACH(bus, &dev->child_bus, sibling) {
./tools/qemu-xen/hw/qdev.c:        QLIST_FOREACH(child, &dev->child_bus, sibling) {
./tools/qemu-xen/hw/qdev.c:        if (dev->id && strcmp(dev->id, id) == 0)
./tools/qemu-xen/hw/qdev.c:        QLIST_FOREACH(child, &dev->child_bus, sibling) {
./tools/qemu-xen/hw/qdev.c:                 dev->id ? dev->id : dev->info->name);
./tools/qemu-xen/hw/qdev.c:    QLIST_FOREACH(child, &dev->child_bus, sibling) {
./tools/qemu-xen/hw/qdev.c:        error_printf("%s\"%s\"", sep, dev->info->name);
./tools/qemu-xen/hw/qdev.c:        if (dev->id)
./tools/qemu-xen/hw/qdev.c:            error_printf("/\"%s\"", dev->id);
./tools/qemu-xen/hw/qdev.c:    QLIST_FOREACH(child, &dev->child_bus, sibling) {
./tools/qemu-xen/hw/qdev.c:        if (dev->id  &&  strcmp(dev->id, elem) == 0) {
./tools/qemu-xen/hw/qdev.c:        if (strcmp(dev->info->name, elem) == 0) {
./tools/qemu-xen/hw/qdev.c:        if (dev->info->alias && strcmp(dev->info->alias, elem) == 0) {
./tools/qemu-xen/hw/qdev.c:            switch (dev->num_child_bus) {
./tools/qemu-xen/hw/qdev.c:                return QLIST_FIRST(&dev->child_bus);
./tools/qemu-xen/hw/qdev.c:    qdev_printf("dev: %s, id \"%s\"\n", dev->info->name,
./tools/qemu-xen/hw/qdev.c:                dev->id ? dev->id : "");
./tools/qemu-xen/hw/qdev.c:    if (dev->num_gpio_in) {
./tools/qemu-xen/hw/qdev.c:        qdev_printf("gpio-in %d\n", dev->num_gpio_in);
./tools/qemu-xen/hw/qdev.c:    if (dev->num_gpio_out) {
./tools/qemu-xen/hw/qdev.c:        qdev_printf("gpio-out %d\n", dev->num_gpio_out);
./tools/qemu-xen/hw/qdev.c:    qdev_print_props(mon, dev, dev->info->props, "dev", indent);
./tools/qemu-xen/hw/qdev.c:    qdev_print_props(mon, dev, dev->parent_bus->info->props, "bus", indent);
./tools/qemu-xen/hw/qdev.c:    if (dev->parent_bus->info->print_dev)
./tools/qemu-xen/hw/qdev.c:        dev->parent_bus->info->print_dev(mon, dev, indent);
./tools/qemu-xen/hw/qdev.c:    QLIST_FOREACH(child, &dev->child_bus, sibling) {
./tools/qemu-xen/hw/qdev.c:    if (dev && dev->parent_bus) {
./tools/qemu-xen/hw/qdev.c:        l = qdev_get_fw_dev_path_helper(dev->parent_bus->parent, p, size);
./tools/qemu-xen/hw/qdev.c:        if (dev->parent_bus->info->get_fw_dev_path) {
./tools/qemu-xen/hw/qdev.c:            d = dev->parent_bus->info->get_fw_dev_path(dev);
./tools/qemu-xen/hw/qdev.c:            l += snprintf(p + l, size - l, "%s", dev->info->name);
./tools/qemu-xen/hw/onenand.c:    vmstate_register(&dev->qdev,
./tools/qemu-xen/hw/r2d.c:    env->pc = s->vector;
./tools/qemu-xen/hw/r2d.c:    reset_info->vector = env->pc;
./tools/qemu-xen/hw/mst_fpga.c:	qdev_init_gpio_in(&dev->qdev, mst_fpga_set_irq, MST_NUM_IRQS);
./tools/qemu-xen/hw/pci-hotplug.c:    dinfo->unit = scsidev->id;
./tools/qemu-xen/hw/pci-hotplug.c:                       scsibus->busnr, scsidev->id);
./tools/qemu-xen/hw/pci-hotplug.c:        if (scsi_hot_add(mon, &dev->qdev, dinfo, 1) != 0) {
./tools/qemu-xen/hw/pci-hotplug.c:        if (qdev_init(&dev->qdev) < 0)
./tools/qemu-xen/hw/pci-hotplug.c:            if (scsi_hot_add(mon, &dev->qdev, dinfo, 0) != 0) {
./tools/qemu-xen/hw/pci-hotplug.c:                qdev_unplug(&dev->qdev);
./tools/qemu-xen/hw/pci-hotplug.c:        if (qdev_prop_set_drive(&dev->qdev, "drive", dinfo->bdrv) < 0) {
./tools/qemu-xen/hw/pci-hotplug.c:            qdev_free(&dev->qdev);
./tools/qemu-xen/hw/pci-hotplug.c:        if (qdev_init(&dev->qdev) < 0)
./tools/qemu-xen/hw/pci-hotplug.c:                       pci_find_domain(dev->bus),
./tools/qemu-xen/hw/pci-hotplug.c:                       pci_bus_num(dev->bus), PCI_SLOT(dev->devfn),
./tools/qemu-xen/hw/pci-hotplug.c:                       PCI_FUNC(dev->devfn));
./tools/qemu-xen/hw/lan9118.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/lm32_uart.c:    s->chr = qdev_init_chardev(&dev->qdev);
./tools/qemu-xen/hw/cris-boot.c:    li = env->load_info;
./tools/qemu-xen/hw/cris-boot.c:    env->pc = li->entry;
./tools/qemu-xen/hw/cris-boot.c:        env->regs[8] = 0x56902387; /* RAM boot magic.  */
./tools/qemu-xen/hw/cris-boot.c:        env->regs[9] = 0x40004000 + li->image_size;
./tools/qemu-xen/hw/cris-boot.c:        env->regs[10] = 0x87109563;
./tools/qemu-xen/hw/cris-boot.c:        env->regs[11] = 0x40000000;
./tools/qemu-xen/hw/cris-boot.c:    env->load_info = li;
./tools/qemu-xen/hw/xen_console.c:    if (!xendev->dev) {
./tools/qemu-xen/hw/etraxfs_eth.c:			      dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/s390-virtio.c:                virtio_queue_notify(dev->vdev, i);
./tools/qemu-xen/hw/s390-virtio.c:        virtio_reset(dev->vdev);
./tools/qemu-xen/hw/s390-virtio.c:        stb_phys(dev->dev_offs + VIRTIO_DEV_OFFS_STATUS, 0);
./tools/qemu-xen/hw/s390-virtio.c:    if (env->halted) {
./tools/qemu-xen/hw/s390-virtio.c:        env->halted = 0;
./tools/qemu-xen/hw/s390-virtio.c:        env->exception_index = -1;
./tools/qemu-xen/hw/s390-virtio.c:    if (env->halted == 0) {
./tools/qemu-xen/hw/s390-virtio.c:        env->halted = 1;
./tools/qemu-xen/hw/s390-virtio.c:        env->exception_index = EXCP_HLT;
./tools/qemu-xen/hw/s390-virtio.c:        tmp_env->halted = 1;
./tools/qemu-xen/hw/s390-virtio.c:        tmp_env->exception_index = EXCP_HLT;
./tools/qemu-xen/hw/s390-virtio.c:        tmp_env->storage_keys = storage_keys;
./tools/qemu-xen/hw/s390-virtio.c:        env->psw.addr = KERN_IMAGE_START;
./tools/qemu-xen/hw/s390-virtio.c:        env->psw.mask = 0x0000000180000000ULL;
./tools/qemu-xen/hw/s390-virtio.c:        env->psw.addr = ZIPL_START;
./tools/qemu-xen/hw/s390-virtio.c:        env->psw.mask = 0x0000000180000000ULL;
./tools/qemu-xen/hw/mips_int.c:        env->CP0_Cause |= 1 << (irq + CP0Ca_IP);
./tools/qemu-xen/hw/mips_int.c:        env->CP0_Cause &= ~(1 << (irq + CP0Ca_IP));
./tools/qemu-xen/hw/mips_int.c:    if (env->CP0_Cause & CP0Ca_IP_mask) {
./tools/qemu-xen/hw/mips_int.c:        env->irq[i] = qi[i];
./tools/qemu-xen/hw/mips_int.c:    qemu_set_irq(env->irq[irq], level);
./tools/qemu-xen/hw/xen_backend.c:    return xenstore_write_str(xendev->be, node, val);
./tools/qemu-xen/hw/xen_backend.c:    return xenstore_write_int(xendev->be, node, ival);
./tools/qemu-xen/hw/xen_backend.c:    return xenstore_read_str(xendev->be, node);
./tools/qemu-xen/hw/xen_backend.c:    return xenstore_read_int(xendev->be, node, ival);
./tools/qemu-xen/hw/xen_backend.c:    return xenstore_read_str(xendev->fe, node);
./tools/qemu-xen/hw/xen_backend.c:    return xenstore_read_int(xendev->fe, node, ival);
./tools/qemu-xen/hw/xen_backend.c:                  xenbus_strstate(xendev->be_state), xenbus_strstate(state));
./tools/qemu-xen/hw/xen_backend.c:    xendev->be_state = state;
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->dom != dom) {
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->dev != dev) {
./tools/qemu-xen/hw/xen_backend.c:        if (strcmp(xendev->type, type) != 0) {
./tools/qemu-xen/hw/xen_backend.c:    xendev->type  = type;
./tools/qemu-xen/hw/xen_backend.c:    xendev->dom   = dom;
./tools/qemu-xen/hw/xen_backend.c:    xendev->dev   = dev;
./tools/qemu-xen/hw/xen_backend.c:    xendev->ops   = ops;
./tools/qemu-xen/hw/xen_backend.c:    snprintf(xendev->be, sizeof(xendev->be), "%s/backend/%s/%d/%d",
./tools/qemu-xen/hw/xen_backend.c:             dom0, xendev->type, xendev->dom, xendev->dev);
./tools/qemu-xen/hw/xen_backend.c:    snprintf(xendev->name, sizeof(xendev->name), "%s-%d",
./tools/qemu-xen/hw/xen_backend.c:             xendev->type, xendev->dev);
./tools/qemu-xen/hw/xen_backend.c:    xendev->debug      = debug;
./tools/qemu-xen/hw/xen_backend.c:    xendev->local_port = -1;
./tools/qemu-xen/hw/xen_backend.c:    xendev->evtchndev = xen_xc_evtchn_open(NULL, 0);
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->evtchndev == XC_HANDLER_INITIAL_VALUE) {
./tools/qemu-xen/hw/xen_backend.c:    fcntl(xc_evtchn_fd(xendev->evtchndev), F_SETFD, FD_CLOEXEC);
./tools/qemu-xen/hw/xen_backend.c:        xendev->gnttabdev = xen_xc_gnttab_open(NULL, 0);
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->gnttabdev == XC_HANDLER_INITIAL_VALUE) {
./tools/qemu-xen/hw/xen_backend.c:            xc_evtchn_close(xendev->evtchndev);
./tools/qemu-xen/hw/xen_backend.c:        xendev->gnttabdev = XC_HANDLER_INITIAL_VALUE;
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->ops->alloc) {
./tools/qemu-xen/hw/xen_backend.c:        xendev->ops->alloc(xendev);
./tools/qemu-xen/hw/xen_backend.c:        xnext = xendev->next.tqe_next;
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->dom != dom) {
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->dev != dev && dev != -1) {
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->ops->free) {
./tools/qemu-xen/hw/xen_backend.c:            xendev->ops->free(xendev);
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->fe) {
./tools/qemu-xen/hw/xen_backend.c:            xs_unwatch(xenstore, xendev->fe, token);
./tools/qemu-xen/hw/xen_backend.c:            g_free(xendev->fe);
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->evtchndev != XC_HANDLER_INITIAL_VALUE) {
./tools/qemu-xen/hw/xen_backend.c:            xc_evtchn_close(xendev->evtchndev);
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->gnttabdev != XC_HANDLER_INITIAL_VALUE) {
./tools/qemu-xen/hw/xen_backend.c:            xc_gnttab_close(xendev->gnttabdev);
./tools/qemu-xen/hw/xen_backend.c:        if (xenstore_read_be_int(xendev, "online", &xendev->online) == -1) {
./tools/qemu-xen/hw/xen_backend.c:            xendev->online = 0;
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->ops->backend_changed) {
./tools/qemu-xen/hw/xen_backend.c:            xendev->ops->backend_changed(xendev, node);
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->fe_state != fe_state) {
./tools/qemu-xen/hw/xen_backend.c:                          xenbus_strstate(xendev->fe_state),
./tools/qemu-xen/hw/xen_backend.c:        xendev->fe_state = fe_state;
./tools/qemu-xen/hw/xen_backend.c:        g_free(xendev->protocol);
./tools/qemu-xen/hw/xen_backend.c:        xendev->protocol = xenstore_read_fe_str(xendev, "protocol");
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->protocol) {
./tools/qemu-xen/hw/xen_backend.c:            xen_be_printf(xendev, 1, "frontend protocol: %s\n", xendev->protocol);
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->ops->frontend_changed) {
./tools/qemu-xen/hw/xen_backend.c:            xendev->ops->frontend_changed(xendev, node);
./tools/qemu-xen/hw/xen_backend.c: * only affects the xendev->be_state variable as xenbus should
./tools/qemu-xen/hw/xen_backend.c:    xendev->fe = xenstore_read_be_str(xendev, "frontend");
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->fe == NULL) {
./tools/qemu-xen/hw/xen_backend.c:    if (!xs_watch(xenstore, xendev->fe, token)) {
./tools/qemu-xen/hw/xen_backend.c:                      xendev->fe);
./tools/qemu-xen/hw/xen_backend.c:    if (!xendev->online) {
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->ops->init) {
./tools/qemu-xen/hw/xen_backend.c:        rc = xendev->ops->init(xendev);
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->fe_state != XenbusStateInitialised  &&
./tools/qemu-xen/hw/xen_backend.c:        xendev->fe_state != XenbusStateConnected) {
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->ops->flags & DEVOPS_FLAG_IGNORE_STATE) {
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->ops->initialise) {
./tools/qemu-xen/hw/xen_backend.c:        rc = xendev->ops->initialise(xendev);
./tools/qemu-xen/hw/xen_backend.c:    if (!xendev->ops->connected) {
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->fe_state != XenbusStateConnected) {
./tools/qemu-xen/hw/xen_backend.c:        if (xendev->ops->flags & DEVOPS_FLAG_IGNORE_STATE) {
./tools/qemu-xen/hw/xen_backend.c:    xendev->ops->connected(xendev);
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->be_state != XenbusStateClosing &&
./tools/qemu-xen/hw/xen_backend.c:        xendev->be_state != XenbusStateClosed  &&
./tools/qemu-xen/hw/xen_backend.c:        xendev->ops->disconnect) {
./tools/qemu-xen/hw/xen_backend.c:        xendev->ops->disconnect(xendev);
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->be_state != state) {
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->fe_state != XenbusStateInitialising) {
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->fe_state == XenbusStateClosing ||
./tools/qemu-xen/hw/xen_backend.c:        xendev->fe_state == XenbusStateClosed) {
./tools/qemu-xen/hw/xen_backend.c:        xen_be_disconnect(xendev, xendev->fe_state);
./tools/qemu-xen/hw/xen_backend.c:        switch (xendev->be_state) {
./tools/qemu-xen/hw/xen_backend.c:            /* xendev->be_state doesn't change */
./tools/qemu-xen/hw/xen_backend.c:        bepath = xs_read(xenstore, 0, xendev->be, &len);
./tools/qemu-xen/hw/xen_backend.c:    len = strlen(xendev->fe);
./tools/qemu-xen/hw/xen_backend.c:    if (strncmp(xendev->fe, watch, len) != 0) {
./tools/qemu-xen/hw/xen_backend.c:    port = xc_evtchn_pending(xendev->evtchndev);
./tools/qemu-xen/hw/xen_backend.c:    if (port != xendev->local_port) {
./tools/qemu-xen/hw/xen_backend.c:                      port, xendev->local_port);
./tools/qemu-xen/hw/xen_backend.c:    xc_evtchn_unmask(xendev->evtchndev, port);
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->ops->event) {
./tools/qemu-xen/hw/xen_backend.c:        xendev->ops->event(xendev);
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->local_port != -1) {
./tools/qemu-xen/hw/xen_backend.c:    xendev->local_port = xc_evtchn_bind_interdomain
./tools/qemu-xen/hw/xen_backend.c:        (xendev->evtchndev, xendev->dom, xendev->remote_port);
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->local_port == -1) {
./tools/qemu-xen/hw/xen_backend.c:    xen_be_printf(xendev, 2, "bind evtchn port %d\n", xendev->local_port);
./tools/qemu-xen/hw/xen_backend.c:    qemu_set_fd_handler(xc_evtchn_fd(xendev->evtchndev),
./tools/qemu-xen/hw/xen_backend.c:    if (xendev->local_port == -1) {
./tools/qemu-xen/hw/xen_backend.c:    qemu_set_fd_handler(xc_evtchn_fd(xendev->evtchndev), NULL, NULL, NULL);
./tools/qemu-xen/hw/xen_backend.c:    xc_evtchn_unbind(xendev->evtchndev, xendev->local_port);
./tools/qemu-xen/hw/xen_backend.c:    xen_be_printf(xendev, 2, "unbind evtchn port %d\n", xendev->local_port);
./tools/qemu-xen/hw/xen_backend.c:    xendev->local_port = -1;
./tools/qemu-xen/hw/xen_backend.c:    return xc_evtchn_notify(xendev->evtchndev, xendev->local_port);
./tools/qemu-xen/hw/xen_backend.c:        if (msg_level > xendev->debug) {
./tools/qemu-xen/hw/xen_backend.c:        qemu_log("xen be: %s: ", xendev->name);
./tools/qemu-xen/hw/xen_backend.c:            fprintf(stderr, "xen be: %s: ", xendev->name);
./tools/qemu-xen/hw/cirrus_vga.c:     PCIDeviceInfo *info = DO_UPCAST(PCIDeviceInfo, qdev, dev->qdev.info);
./tools/qemu-xen/hw/milkymist.c:    env->pc = reset_info->bootstrap_pc;
./tools/qemu-xen/hw/milkymist.c:    env->regs[R_R1] = reset_info->cmdline_base;
./tools/qemu-xen/hw/milkymist.c:    env->regs[R_R2] = reset_info->initrd_base;
./tools/qemu-xen/hw/milkymist.c:    env->regs[R_R3] = reset_info->initrd_base + reset_info->initrd_size;
./tools/qemu-xen/hw/milkymist.c:    env->eba = reset_info->flash_base;
./tools/qemu-xen/hw/milkymist.c:    env->deba = reset_info->flash_base;
./tools/qemu-xen/hw/milkymist.c:    env->pic_state = lm32_pic_init(*cpu_irq);
./tools/qemu-xen/hw/milkymist.c:        irq[i] = qdev_get_gpio_in(env->pic_state, i);
./tools/qemu-xen/hw/milkymist.c:    env->juart_state = lm32_juart_init();
./tools/qemu-xen/hw/9pfs/virtio-9p-device.c:    vdev = virtio_9p_init(&pci_dev->qdev, &proxy->fsconf);
./tools/qemu-xen/hw/9pfs/virtio-9p-device.c:    vdev->nvectors = proxy->nvectors;
./tools/qemu-xen/hw/9pfs/virtio-9p-device.c:    proxy->nvectors = vdev->nvectors;
./tools/qemu-xen/hw/nseries.c:    s->cpu->env->GE = 0x5;
./tools/qemu-xen/hw/nseries.c:        s->cpu->env->regs[15] = OMAP2_Q2_BASE + 0x400000;
./tools/qemu-xen/hw/strongarm.c:    qdev_init_gpio_in(&dev->qdev, strongarm_pic_set_irq, SA_PIC_SRCS);
./tools/qemu-xen/hw/strongarm.c:    qdev_init_gpio_in(&dev->qdev, strongarm_gpio_set, 28);
./tools/qemu-xen/hw/strongarm.c:    qdev_init_gpio_out(&dev->qdev, s->handler, 28);
./tools/qemu-xen/hw/strongarm.c:    qdev_init_gpio_in(&dev->qdev, strongarm_ppc_set, 22);
./tools/qemu-xen/hw/strongarm.c:    qdev_init_gpio_out(&dev->qdev, s->handler, 22);
./tools/qemu-xen/hw/strongarm.c:    s->bus = ssi_create_bus(&dev->qdev, "ssi");
./tools/qemu-xen/hw/xenfb.c:        xendev->fe_state == XenbusStateConnected &&
./tools/qemu-xen/hw/xenfb.c:        xendev->be_state == XenbusStateConnected) {
./tools/qemu-xen/hw/ppce500_pci.c:    int devno = pci_dev->devfn >> 3, ret = 0;
./tools/qemu-xen/hw/ppce500_pci.c:           pci_dev->devfn, irq_num, ret, devno);
./tools/qemu-xen/hw/mips_mipssim.c:    env->active_tc.PC = s->vector & ~(target_ulong)1;
./tools/qemu-xen/hw/mips_mipssim.c:        env->hflags |= MIPS_HFLAG_M16;
./tools/qemu-xen/hw/mips_mipssim.c:    reset_info->vector = env->active_tc.PC;
./tools/qemu-xen/hw/mips_mipssim.c:        env->active_tc.PC = (target_long)(int32_t)0xbfc00000;
./tools/qemu-xen/hw/mips_mipssim.c:        serial_init(0x3f8, env->irq[4], 115200, serial_hds[0]);
./tools/qemu-xen/hw/mips_mipssim.c:        mipsnet_init(0x4200, env->irq[2], &nd_table[0]);
./tools/qemu-xen/hw/mipsnet.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/pxa2xx.c:            s->env->uncached_cpsr =
./tools/qemu-xen/hw/pxa2xx.c:            s->env->cp15.c1_sys = 0;
./tools/qemu-xen/hw/pxa2xx.c:            s->env->cp15.c1_coproc = 0;
./tools/qemu-xen/hw/pxa2xx.c:            s->env->cp15.c2_base0 = 0;
./tools/qemu-xen/hw/pxa2xx.c:            s->env->cp15.c3 = 0;
./tools/qemu-xen/hw/pxa2xx.c:            memset(s->env->regs, 0, 4 * 15);
./tools/qemu-xen/hw/pxa2xx.c:            s->env->regs[15] = s->pm_regs[PSPR >> 2];
./tools/qemu-xen/hw/pxa2xx.c:    register_savevm(&dev->qdev, "pxa2xx_ssp", -1, 0,
./tools/qemu-xen/hw/pxa2xx.c:    s->bus = ssi_create_bus(&dev->qdev, "ssi");
./tools/qemu-xen/hw/pxa2xx.c:    qdev_prop_set_uint32(&i2c_dev->qdev, "size", region_size + 1);
./tools/qemu-xen/hw/pxa2xx.c:    qdev_prop_set_uint32(&i2c_dev->qdev, "offset",
./tools/qemu-xen/hw/pxa2xx.c:    qdev_init_nofail(&i2c_dev->qdev);
./tools/qemu-xen/hw/pxa2xx.c:    s->bus = i2c_init_bus(&dev->qdev, "i2c");
./tools/qemu-xen/hw/lsi53c895a.c:                    dev->info->reset(dev);
./tools/qemu-xen/hw/lsi53c895a.c:    scsi_bus_new(&s->bus, &dev->qdev, &lsi_scsi_info);
./tools/qemu-xen/hw/lsi53c895a.c:    if (!dev->qdev.hotplugged) {
./tools/qemu-xen/hw/tcx.c:#include "qdev-addr.h"
./tools/qemu-xen/hw/i8259.c:    qdev_init_gpio_out(&dev->qdev, s->int_out, ARRAY_SIZE(s->int_out));
./tools/qemu-xen/hw/i8259.c:    qdev_init_gpio_in(&dev->qdev, pic_set_irq, 8);
./tools/qemu-xen/hw/i8259.c:    qdev_set_legacy_instance_id(&dev->qdev, s->iobase, 1);
./tools/qemu-xen/hw/i8259.c:    qdev_prop_set_uint32(&dev->qdev, "iobase", 0x20);
./tools/qemu-xen/hw/i8259.c:    qdev_prop_set_uint32(&dev->qdev, "elcr_addr", 0x4d0);
./tools/qemu-xen/hw/i8259.c:    qdev_prop_set_uint8(&dev->qdev, "elcr_mask", 0xf8);
./tools/qemu-xen/hw/i8259.c:    qdev_prop_set_bit(&dev->qdev, "master", true);
./tools/qemu-xen/hw/i8259.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/i8259.c:    qdev_connect_gpio_out(&dev->qdev, 0, parent_irq);
./tools/qemu-xen/hw/i8259.c:        irq_set[i] = qdev_get_gpio_in(&dev->qdev, i);
./tools/qemu-xen/hw/i8259.c:    qdev_prop_set_uint32(&dev->qdev, "iobase", 0xa0);
./tools/qemu-xen/hw/i8259.c:    qdev_prop_set_uint32(&dev->qdev, "elcr_addr", 0x4d1);
./tools/qemu-xen/hw/i8259.c:    qdev_prop_set_uint8(&dev->qdev, "elcr_mask", 0xde);
./tools/qemu-xen/hw/i8259.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/i8259.c:    qdev_connect_gpio_out(&dev->qdev, 0, irq_set[2]);
./tools/qemu-xen/hw/i8259.c:        irq_set[i + 8] = qdev_get_gpio_in(&dev->qdev, i);
./tools/qemu-xen/hw/e1000.c:    add_boot_device_path(d->conf.bootindex, &pci_dev->qdev, "/ethernet-phy@0");
./tools/qemu-xen/hw/mips_timer.c:        idx = lfsr % (env->tlb->nb_tlb - env->CP0_Wired) + env->CP0_Wired;
./tools/qemu-xen/hw/mips_timer.c:    wait = env->CP0_Compare - env->CP0_Count -
./tools/qemu-xen/hw/mips_timer.c:    qemu_mod_timer(env->timer, next);
./tools/qemu-xen/hw/mips_timer.c:    if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen/hw/mips_timer.c:        env->CP0_Cause |= 1 << CP0Ca_TI;
./tools/qemu-xen/hw/mips_timer.c:    qemu_irq_raise(env->irq[(env->CP0_IntCtl >> CP0IntCtl_IPTI) & 0x7]);
./tools/qemu-xen/hw/mips_timer.c:    if (env->CP0_Cause & (1 << CP0Ca_DC)) {
./tools/qemu-xen/hw/mips_timer.c:        return env->CP0_Count;
./tools/qemu-xen/hw/mips_timer.c:        if (qemu_timer_pending(env->timer)
./tools/qemu-xen/hw/mips_timer.c:            && qemu_timer_expired(env->timer, now)) {
./tools/qemu-xen/hw/mips_timer.c:        return env->CP0_Count +
./tools/qemu-xen/hw/mips_timer.c:    if (env->CP0_Cause & (1 << CP0Ca_DC))
./tools/qemu-xen/hw/mips_timer.c:        env->CP0_Count = count;
./tools/qemu-xen/hw/mips_timer.c:        env->CP0_Count =
./tools/qemu-xen/hw/mips_timer.c:    env->CP0_Compare = value;
./tools/qemu-xen/hw/mips_timer.c:    if (!(env->CP0_Cause & (1 << CP0Ca_DC)))
./tools/qemu-xen/hw/mips_timer.c:    if (env->insn_flags & ISA_MIPS32R2)
./tools/qemu-xen/hw/mips_timer.c:        env->CP0_Cause &= ~(1 << CP0Ca_TI);
./tools/qemu-xen/hw/mips_timer.c:    qemu_irq_lower(env->irq[(env->CP0_IntCtl >> CP0IntCtl_IPTI) & 0x7]);
./tools/qemu-xen/hw/mips_timer.c:    cpu_mips_store_count(env, env->CP0_Count);
./tools/qemu-xen/hw/mips_timer.c:    env->CP0_Count += (uint32_t)muldiv64(qemu_get_clock_ns(vm_clock),
./tools/qemu-xen/hw/mips_timer.c:    if (env->CP0_Cause & (1 << CP0Ca_DC))
./tools/qemu-xen/hw/mips_timer.c:    env->CP0_Count++;
./tools/qemu-xen/hw/mips_timer.c:    env->CP0_Count--;
./tools/qemu-xen/hw/mips_timer.c:    env->timer = qemu_new_timer_ns(vm_clock, &mips_timer_cb, env);
./tools/qemu-xen/hw/mips_timer.c:    env->CP0_Compare = 0;
./tools/qemu-xen/hw/usb-net.c:    add_boot_device_path(s->conf.bootindex, &dev->qdev, "/ethernet@0");
./tools/qemu-xen/hw/usb-net.c:    qdev_set_nic_properties(&dev->qdev, &nd_table[idx]);
./tools/qemu-xen/hw/usb-net.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/smc91c111.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/qdev-addr.c:#include "qdev-addr.h"
./tools/qemu-xen/hw/ppc440.c:    irqs[PPCUIC_OUTPUT_INT] = ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_INT];
./tools/qemu-xen/hw/ppc440.c:    irqs[PPCUIC_OUTPUT_CINT] = ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_CINT];
./tools/qemu-xen/hw/sun4u.c:    uint32_t pil = env->pil_in |
./tools/qemu-xen/hw/sun4u.c:                  (env->softint & ~(SOFTINT_TIMER | SOFTINT_STIMER));
./tools/qemu-xen/hw/sun4u.c:    if (env->softint & (SOFTINT_TIMER | SOFTINT_STIMER)) {
./tools/qemu-xen/hw/sun4u.c:    if (pil < (2 << env->psrpil)){
./tools/qemu-xen/hw/sun4u.c:        if (env->interrupt_request & CPU_INTERRUPT_HARD) {
./tools/qemu-xen/hw/sun4u.c:                           env->interrupt_index);
./tools/qemu-xen/hw/sun4u.c:            env->interrupt_index = 0;
./tools/qemu-xen/hw/sun4u.c:        for (i = 15; i > env->psrpil; i--) {
./tools/qemu-xen/hw/sun4u.c:                int old_interrupt = env->interrupt_index;
./tools/qemu-xen/hw/sun4u.c:                if (env->tl > 0 && cpu_tsptr(env)->tt > new_interrupt) {
./tools/qemu-xen/hw/sun4u.c:                                   env->tl, cpu_tsptr(env)->tt, new_interrupt);
./tools/qemu-xen/hw/sun4u.c:                    env->interrupt_index = new_interrupt;
./tools/qemu-xen/hw/sun4u.c:    } else if (env->interrupt_request & CPU_INTERRUPT_HARD) {
./tools/qemu-xen/hw/sun4u.c:                       pil, env->pil_in, env->softint, env->interrupt_index);
./tools/qemu-xen/hw/sun4u.c:        env->interrupt_index = 0;
./tools/qemu-xen/hw/sun4u.c:    env->halted = 0;
./tools/qemu-xen/hw/sun4u.c:        env->pil_in |= 1 << irq;
./tools/qemu-xen/hw/sun4u.c:        env->pil_in &= ~(1 << irq);
./tools/qemu-xen/hw/sun4u.c:    cpu_timer_reset(env->tick);
./tools/qemu-xen/hw/sun4u.c:    cpu_timer_reset(env->stick);
./tools/qemu-xen/hw/sun4u.c:    cpu_timer_reset(env->hstick);
./tools/qemu-xen/hw/sun4u.c:    env->gregs[1] = 0; // Memory start
./tools/qemu-xen/hw/sun4u.c:    env->gregs[2] = ram_size; // Memory size
./tools/qemu-xen/hw/sun4u.c:    env->gregs[3] = 0; // Machine description XXX
./tools/qemu-xen/hw/sun4u.c:        env->pc = s->prom_addr + 0x20ULL;
./tools/qemu-xen/hw/sun4u.c:        env->pc = s->prom_addr + 0x40ULL;
./tools/qemu-xen/hw/sun4u.c:    env->npc = env->pc + 4;
./tools/qemu-xen/hw/sun4u.c:    CPUTimer* timer = env->tick;
./tools/qemu-xen/hw/sun4u.c:    env->softint |= SOFTINT_TIMER;
./tools/qemu-xen/hw/sun4u.c:    CPUTimer* timer = env->stick;
./tools/qemu-xen/hw/sun4u.c:    env->softint |= SOFTINT_STIMER;
./tools/qemu-xen/hw/sun4u.c:    CPUTimer* timer = env->hstick;
./tools/qemu-xen/hw/sun4u.c:    env->softint |= SOFTINT_STIMER;
./tools/qemu-xen/hw/sun4u.c:    isa_bus_new(&pci_dev->qdev, pci_address_space_io(pci_dev));
./tools/qemu-xen/hw/sun4u.c:    pci_dev->config[0x04] = 0x06; // command = bus master, pci mem
./tools/qemu-xen/hw/sun4u.c:    pci_dev->config[0x05] = 0x00;
./tools/qemu-xen/hw/sun4u.c:    pci_dev->config[0x06] = 0xa0; // status = fast back-to-back, 66MHz, no error
./tools/qemu-xen/hw/sun4u.c:    pci_dev->config[0x07] = 0x03; // status = medium devsel
./tools/qemu-xen/hw/sun4u.c:    pci_dev->config[0x09] = 0x00; // programming i/f
./tools/qemu-xen/hw/sun4u.c:    pci_dev->config[0x0D] = 0x0a; // latency_timer
./tools/qemu-xen/hw/sun4u.c:    env->tick = cpu_timer_create("tick", env, tick_irq,
./tools/qemu-xen/hw/sun4u.c:    env->stick = cpu_timer_create("stick", env, stick_irq,
./tools/qemu-xen/hw/sun4u.c:    env->hstick = cpu_timer_create("hstick", env, hstick_irq,
./tools/qemu-xen/hw/lm32_boards.c:    env->pc = (uint32_t)reset_info->bootstrap_pc;
./tools/qemu-xen/hw/lm32_boards.c:    env->regs[R_R1] = (uint32_t)reset_info->hwsetup_base;
./tools/qemu-xen/hw/lm32_boards.c:    env->regs[R_R2] = (uint32_t)reset_info->cmdline_base;
./tools/qemu-xen/hw/lm32_boards.c:    env->regs[R_R3] = (uint32_t)reset_info->initrd_base;
./tools/qemu-xen/hw/lm32_boards.c:    env->regs[R_R4] = (uint32_t)(reset_info->initrd_base +
./tools/qemu-xen/hw/lm32_boards.c:    env->eba = reset_info->flash_base;
./tools/qemu-xen/hw/lm32_boards.c:    env->deba = reset_info->flash_base;
./tools/qemu-xen/hw/lm32_boards.c:    env->pic_state = lm32_pic_init(*cpu_irq);
./tools/qemu-xen/hw/lm32_boards.c:        irq[i] = qdev_get_gpio_in(env->pic_state, i);
./tools/qemu-xen/hw/lm32_boards.c:    env->juart_state = lm32_juart_init();
./tools/qemu-xen/hw/lm32_boards.c:    env->pic_state = lm32_pic_init(*cpu_irq);
./tools/qemu-xen/hw/lm32_boards.c:        irq[i] = qdev_get_gpio_in(env->pic_state, i);
./tools/qemu-xen/hw/lm32_boards.c:    env->juart_state = lm32_juart_init();
./tools/qemu-xen/hw/versatile_pci.c:    bus = pci_register_bus(&dev->qdev, "pci",
./tools/qemu-xen/hw/dec_pci.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/sm501.c:#include "qdev-addr.h"
./tools/qemu-xen/hw/usb-serial.c:            qemu_chr_fe_write(s->cs, iov->iov_base, iov->iov_len);
./tools/qemu-xen/hw/usb-serial.c:    qdev_prop_set_chr(&dev->qdev, "chardev", cdrv);
./tools/qemu-xen/hw/usb-serial.c:        qdev_prop_set_uint16(&dev->qdev, "vendorid", vendorid);
./tools/qemu-xen/hw/usb-serial.c:        qdev_prop_set_uint16(&dev->qdev, "productid", productid);
./tools/qemu-xen/hw/usb-serial.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/usb-serial.c:    qdev_prop_set_chr(&dev->qdev, "chardev", cdrv);
./tools/qemu-xen/hw/usb-serial.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/ads7846.c:    qdev_init_gpio_out(&dev->qdev, &s->interrupt, 1);
./tools/qemu-xen/hw/sun4c_intctl.c:    qdev_init_gpio_in(&dev->qdev, sun4c_set_irq, 8);
./tools/qemu-xen/hw/spapr_vio.c:        if (dev->reg == reg) {
./tools/qemu-xen/hw/spapr_vio.c:    VIOsPAPRDeviceInfo *info = (VIOsPAPRDeviceInfo *)dev->qdev.info;
./tools/qemu-xen/hw/spapr_vio.c:    if (asprintf(&name, "%s@%x", info->dt_name, dev->reg) < 0) {
./tools/qemu-xen/hw/spapr_vio.c:    VIOsPAPRDeviceInfo *info = (VIOsPAPRDeviceInfo *)dev->qdev.info;
./tools/qemu-xen/hw/spapr_vio.c:    ret = fdt_setprop_cell(fdt, node_off, "reg", dev->reg);
./tools/qemu-xen/hw/spapr_vio.c:    if (dev->qirq) {
./tools/qemu-xen/hw/spapr_vio.c:        uint32_t ints_prop[] = {cpu_to_be32(dev->vio_irq_num), 0};
./tools/qemu-xen/hw/spapr_vio.c:    if (dev->rtce_window_size) {
./tools/qemu-xen/hw/spapr_vio.c:        uint32_t dma_prop[] = {cpu_to_be32(dev->reg),
./tools/qemu-xen/hw/spapr_vio.c:                               0, cpu_to_be32(dev->rtce_window_size)};
./tools/qemu-xen/hw/spapr_vio.c:    size_t size = (dev->rtce_window_size >> SPAPR_VIO_TCE_PAGE_SHIFT)
./tools/qemu-xen/hw/spapr_vio.c:        dev->rtce_table = kvmppc_create_spapr_tce(dev->reg,
./tools/qemu-xen/hw/spapr_vio.c:                                                  dev->rtce_window_size,
./tools/qemu-xen/hw/spapr_vio.c:                                                  &dev->kvmtce_fd);
./tools/qemu-xen/hw/spapr_vio.c:        if (!dev->rtce_table) {
./tools/qemu-xen/hw/spapr_vio.c:            dev->rtce_table = g_malloc0(size);
./tools/qemu-xen/hw/spapr_vio.c:            "  TCE 0x" TARGET_FMT_lx "\n", dev->qdev.id, ioba, tce);
./tools/qemu-xen/hw/spapr_vio.c:    if (ioba >= dev->rtce_window_size) {
./tools/qemu-xen/hw/spapr_vio.c:    rtce = dev->rtce_table + (ioba >> SPAPR_VIO_TCE_PAGE_SHIFT);
./tools/qemu-xen/hw/spapr_vio.c:        if ((dev->rtce_table[i].tce & access) != access) {
./tools/qemu-xen/hw/spapr_vio.c:    if (dev->flags & VIO_PAPR_FLAG_DMA_BYPASS) {
./tools/qemu-xen/hw/spapr_vio.c:        if (taddr >= dev->rtce_window_size) {
./tools/qemu-xen/hw/spapr_vio.c:        tce = dev->rtce_table[taddr >> SPAPR_VIO_TCE_PAGE_SHIFT].tce;
./tools/qemu-xen/hw/spapr_vio.c:    if (dev->flags & VIO_PAPR_FLAG_DMA_BYPASS) {
./tools/qemu-xen/hw/spapr_vio.c:        if (taddr >= dev->rtce_window_size) {
./tools/qemu-xen/hw/spapr_vio.c:        tce = dev->rtce_table[taddr >> SPAPR_VIO_TCE_PAGE_SHIFT].tce;
./tools/qemu-xen/hw/spapr_vio.c:    if (!dev->crq.SendFunc) {
./tools/qemu-xen/hw/spapr_vio.c:    if (dev->crq.qsize) {
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qladdr = queue_addr;
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qsize = queue_len;
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qnext = 0;
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qladdr = 0;
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qsize = 0;
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qnext = 0;
./tools/qemu-xen/hw/spapr_vio.c:    if (dev->crq.SendFunc) {
./tools/qemu-xen/hw/spapr_vio.c:        return dev->crq.SendFunc(dev, (uint8_t *)crq_mangle);
./tools/qemu-xen/hw/spapr_vio.c:    if (!dev->crq.qsize) {
./tools/qemu-xen/hw/spapr_vio.c:    rc = spapr_tce_dma_read(dev, dev->crq.qladdr + dev->crq.qnext, &byte, 1);
./tools/qemu-xen/hw/spapr_vio.c:    rc = spapr_tce_dma_write(dev, dev->crq.qladdr + dev->crq.qnext + 8,
./tools/qemu-xen/hw/spapr_vio.c:    rc = spapr_tce_dma_write(dev, dev->crq.qladdr + dev->crq.qnext, crq, 8);
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qnext = (dev->crq.qnext + 16) % dev->crq.qsize;
./tools/qemu-xen/hw/spapr_vio.c:    if (dev->signal_state & 1) {
./tools/qemu-xen/hw/spapr_vio.c:        qemu_irq_pulse(dev->qirq);
./tools/qemu-xen/hw/spapr_vio.c:    dev->flags &= ~VIO_PAPR_FLAG_DMA_BYPASS;
./tools/qemu-xen/hw/spapr_vio.c:    if (dev->rtce_table) {
./tools/qemu-xen/hw/spapr_vio.c:        size_t size = (dev->rtce_window_size >> SPAPR_VIO_TCE_PAGE_SHIFT)
./tools/qemu-xen/hw/spapr_vio.c:        memset(dev->rtce_table, 0, size);
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qladdr = 0;
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qsize = 0;
./tools/qemu-xen/hw/spapr_vio.c:    dev->crq.qnext = 0;
./tools/qemu-xen/hw/spapr_vio.c:        dev->flags |= VIO_PAPR_FLAG_DMA_BYPASS;
./tools/qemu-xen/hw/spapr_vio.c:        dev->flags &= ~VIO_PAPR_FLAG_DMA_BYPASS;
./tools/qemu-xen/hw/spapr_vio.c:    if (!dev->qdev.id) {
./tools/qemu-xen/hw/spapr_vio.c:        dev->qdev.id = id;
./tools/qemu-xen/hw/spapr_vio.c:    dev->qirq = spapr_allocate_irq(dev->vio_irq_num, &dev->vio_irq_num);
./tools/qemu-xen/hw/spapr_vio.c:    if (!dev->qirq) {
./tools/qemu-xen/hw/spapr_vio.c:    info = (VIOsPAPRDeviceInfo *)dev->qdev.info;
./tools/qemu-xen/hw/spapr_vio.c:    dev->signal_state = mode;
./tools/qemu-xen/hw/integratorcp.c:    qdev_init_gpio_in(&dev->qdev, icp_pic_set_irq, 32);
./tools/qemu-xen/hw/pl011.c:    s->chr = qdev_init_chardev(&dev->qdev);
./tools/qemu-xen/hw/pl011.c:    vmstate_register(&dev->qdev, -1, &vmstate_pl011, s);
./tools/qemu-xen/hw/ppc405_uc.c:    env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen/hw/ppc405_uc.c:    dbsr = env->spr[SPR_40x_DBSR];
./tools/qemu-xen/hw/ppc405_uc.c:    env->spr[SPR_40x_DBSR] = dbsr;
./tools/qemu-xen/hw/ppc405_uc.c:    env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen/hw/ppc405_uc.c:    dbsr = env->spr[SPR_40x_DBSR];
./tools/qemu-xen/hw/ppc405_uc.c:    env->spr[SPR_40x_DBSR] = dbsr;
./tools/qemu-xen/hw/ppc405_uc.c:        ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_INT];
./tools/qemu-xen/hw/ppc405_uc.c:        ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_CINT];
./tools/qemu-xen/hw/ppc405_uc.c:        ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_INT];
./tools/qemu-xen/hw/ppc405_uc.c:        ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_CINT];
./tools/qemu-xen/hw/xtensa_pic.c:    uint32_t old_ccount = env->sregs[CCOUNT];
./tools/qemu-xen/hw/xtensa_pic.c:    env->sregs[CCOUNT] += d;
./tools/qemu-xen/hw/xtensa_pic.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_TIMER_INTERRUPT)) {
./tools/qemu-xen/hw/xtensa_pic.c:        for (i = 0; i < env->config->nccompare; ++i) {
./tools/qemu-xen/hw/xtensa_pic.c:            if (env->sregs[CCOMPARE + i] - old_ccount <= d) {
./tools/qemu-xen/hw/xtensa_pic.c:    uint32_t int_set_enabled = env->sregs[INTSET] & env->sregs[INTENABLE];
./tools/qemu-xen/hw/xtensa_pic.c:    if (env->halted) {
./tools/qemu-xen/hw/xtensa_pic.c:                muldiv64(now - env->halt_clock,
./tools/qemu-xen/hw/xtensa_pic.c:                    env->config->clock_freq_khz, 1000000));
./tools/qemu-xen/hw/xtensa_pic.c:        env->halt_clock = now;
./tools/qemu-xen/hw/xtensa_pic.c:    for (level = env->config->nlevel; level > minlevel; --level) {
./tools/qemu-xen/hw/xtensa_pic.c:        if (env->config->level_mask[level] & int_set_enabled) {
./tools/qemu-xen/hw/xtensa_pic.c:            env->pending_irq_level = level;
./tools/qemu-xen/hw/xtensa_pic.c:                    env->pc, env->regs[0], env->sregs[PS],
./tools/qemu-xen/hw/xtensa_pic.c:                    env->sregs[INTSET], env->sregs[INTENABLE],
./tools/qemu-xen/hw/xtensa_pic.c:                    env->sregs[CCOUNT]);
./tools/qemu-xen/hw/xtensa_pic.c:    env->pending_irq_level = 0;
./tools/qemu-xen/hw/xtensa_pic.c:    if (irq >= env->config->ninterrupt) {
./tools/qemu-xen/hw/xtensa_pic.c:            env->sregs[INTSET] |= irq_bit;
./tools/qemu-xen/hw/xtensa_pic.c:        } else if (env->config->interrupt[irq].inttype == INTTYPE_LEVEL) {
./tools/qemu-xen/hw/xtensa_pic.c:            env->sregs[INTSET] &= ~irq_bit;
./tools/qemu-xen/hw/xtensa_pic.c:    qemu_set_irq(env->irq_inputs[env->config->timerint[id]], active);
./tools/qemu-xen/hw/xtensa_pic.c:    uint32_t wake_ccount = env->sregs[CCOUNT] - 1;
./tools/qemu-xen/hw/xtensa_pic.c:    for (i = 0; i < env->config->nccompare; ++i) {
./tools/qemu-xen/hw/xtensa_pic.c:        if (env->sregs[CCOMPARE + i] - env->sregs[CCOUNT] <
./tools/qemu-xen/hw/xtensa_pic.c:                wake_ccount - env->sregs[CCOUNT]) {
./tools/qemu-xen/hw/xtensa_pic.c:            wake_ccount = env->sregs[CCOMPARE + i];
./tools/qemu-xen/hw/xtensa_pic.c:    env->wake_ccount = wake_ccount;
./tools/qemu-xen/hw/xtensa_pic.c:    qemu_mod_timer(env->ccompare_timer, env->halt_clock +
./tools/qemu-xen/hw/xtensa_pic.c:            muldiv64(wake_ccount - env->sregs[CCOUNT],
./tools/qemu-xen/hw/xtensa_pic.c:                1000000, env->config->clock_freq_khz));
./tools/qemu-xen/hw/xtensa_pic.c:    if (env->halted) {
./tools/qemu-xen/hw/xtensa_pic.c:        env->halt_clock = qemu_get_clock_ns(vm_clock);
./tools/qemu-xen/hw/xtensa_pic.c:        xtensa_advance_ccount(env, env->wake_ccount - env->sregs[CCOUNT]);
./tools/qemu-xen/hw/xtensa_pic.c:            env->sregs[CCOUNT] = env->wake_ccount + 1;
./tools/qemu-xen/hw/xtensa_pic.c:    env->irq_inputs = (void **)qemu_allocate_irqs(
./tools/qemu-xen/hw/xtensa_pic.c:            xtensa_set_irq, env, env->config->ninterrupt);
./tools/qemu-xen/hw/xtensa_pic.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_TIMER_INTERRUPT) &&
./tools/qemu-xen/hw/xtensa_pic.c:            env->config->nccompare > 0) {
./tools/qemu-xen/hw/xtensa_pic.c:        env->ccompare_timer =
./tools/qemu-xen/hw/xtensa_pic.c:    if (extint < env->config->nextint) {
./tools/qemu-xen/hw/xtensa_pic.c:        unsigned irq = env->config->extint[extint];
./tools/qemu-xen/hw/xtensa_pic.c:        return env->irq_inputs[irq];
./tools/qemu-xen/hw/ivshmem.c:    unregister_savevm(&dev->qdev, "ivshmem", s);
./tools/qemu-xen/hw/syborg_pointer.c:    vmstate_register(&dev->qdev, -1, &vmstate_syborg_pointer, s);
./tools/qemu-xen/hw/usb-hub.c:    if (port->port.dev->speed == USB_SPEED_LOW) {
./tools/qemu-xen/hw/usb-hub.c:        if (port->port.dev && port->port.dev->attached) {
./tools/qemu-xen/hw/usb-hub.c:            if (port->port.dev->speed == USB_SPEED_LOW) {
./tools/qemu-xen/hw/usb-hub.c:                if (dev && dev->attached) {
./tools/qemu-xen/hw/usb-hub.c:        if (dev && dev->attached && (port->wPortStatus & PORT_STAT_ENABLE)) {
./tools/qemu-xen/hw/usb-hub.c:    if (dev->state == USB_STATE_DEFAULT &&
./tools/qemu-xen/hw/usb-hub.c:        dev->addr != 0 &&
./tools/qemu-xen/hw/usb-hub.c:        p->devaddr != dev->addr &&
./tools/qemu-xen/hw/usb-hub.c:        usb_port_location(&port->port, dev->port, i+1);
./tools/qemu-xen/hw/msix.c:    pdev->msix_bar_size = new_size;
./tools/qemu-xen/hw/msix.c:    config = pdev->config + config_offset;
./tools/qemu-xen/hw/msix.c:    pdev->msix_cap = config_offset;
./tools/qemu-xen/hw/msix.c:    pdev->wmask[config_offset + MSIX_CONTROL_OFFSET] |= MSIX_ENABLE_MASK |
./tools/qemu-xen/hw/msix.c:    pdev->msix_function_masked = true;
./tools/qemu-xen/hw/msix.c:    void *page = dev->msix_table_page;
./tools/qemu-xen/hw/msix.c:    return dev->msix_table_page + MSIX_PAGE_PENDING + vector / 8;
./tools/qemu-xen/hw/msix.c:    return fmask || dev->msix_table_page[offset] & PCI_MSIX_ENTRY_CTRL_MASKBIT;
./tools/qemu-xen/hw/msix.c:    return msix_vector_masked(dev, vector, dev->msix_function_masked);
./tools/qemu-xen/hw/msix.c:    dev->msix_function_masked = !msix_enabled(dev) ||
./tools/qemu-xen/hw/msix.c:        (dev->config[dev->msix_cap + MSIX_CONTROL_OFFSET] & MSIX_MASKALL_MASK);
./tools/qemu-xen/hw/msix.c:    unsigned enable_pos = dev->msix_cap + MSIX_CONTROL_OFFSET;
./tools/qemu-xen/hw/msix.c:    was_masked = dev->msix_function_masked;
./tools/qemu-xen/hw/msix.c:    if (dev->msix_function_masked == was_masked) {
./tools/qemu-xen/hw/msix.c:    for (vector = 0; vector < dev->msix_entries_nr; ++vector) {
./tools/qemu-xen/hw/msix.c:    if (vector >= dev->msix_entries_nr) {
./tools/qemu-xen/hw/msix.c:    pci_set_long(dev->msix_table_page + offset, val);
./tools/qemu-xen/hw/msix.c:        dev->msix_table_page[offset] |= PCI_MSIX_ENTRY_CTRL_MASKBIT;
./tools/qemu-xen/hw/msix.c:    dev->msix_entry_used = g_malloc0(MSIX_MAX_ENTRIES *
./tools/qemu-xen/hw/msix.c:                                        sizeof *dev->msix_entry_used);
./tools/qemu-xen/hw/msix.c:    dev->msix_table_page = g_malloc0(MSIX_PAGE_SIZE);
./tools/qemu-xen/hw/msix.c:    memory_region_init_io(&dev->msix_mmio, &msix_mmio_ops, dev,
./tools/qemu-xen/hw/msix.c:    dev->msix_entries_nr = nentries;
./tools/qemu-xen/hw/msix.c:    dev->cap_present |= QEMU_PCI_CAP_MSIX;
./tools/qemu-xen/hw/msix.c:    dev->msix_entries_nr = 0;
./tools/qemu-xen/hw/msix.c:    memory_region_destroy(&dev->msix_mmio);
./tools/qemu-xen/hw/msix.c:    g_free(dev->msix_table_page);
./tools/qemu-xen/hw/msix.c:    dev->msix_table_page = NULL;
./tools/qemu-xen/hw/msix.c:    g_free(dev->msix_entry_used);
./tools/qemu-xen/hw/msix.c:    dev->msix_entry_used = NULL;
./tools/qemu-xen/hw/msix.c:    for (vector = 0; vector < dev->msix_entries_nr; ++vector) {
./tools/qemu-xen/hw/msix.c:        dev->msix_entry_used[vector] = 0;
./tools/qemu-xen/hw/msix.c:    if (!(dev->cap_present & QEMU_PCI_CAP_MSIX))
./tools/qemu-xen/hw/msix.c:    dev->msix_cap = 0;
./tools/qemu-xen/hw/msix.c:    dev->msix_entries_nr = 0;
./tools/qemu-xen/hw/msix.c:    memory_region_del_subregion(bar, &dev->msix_mmio);
./tools/qemu-xen/hw/msix.c:    memory_region_destroy(&dev->msix_mmio);
./tools/qemu-xen/hw/msix.c:    g_free(dev->msix_table_page);
./tools/qemu-xen/hw/msix.c:    dev->msix_table_page = NULL;
./tools/qemu-xen/hw/msix.c:    g_free(dev->msix_entry_used);
./tools/qemu-xen/hw/msix.c:    dev->msix_entry_used = NULL;
./tools/qemu-xen/hw/msix.c:    dev->cap_present &= ~QEMU_PCI_CAP_MSIX;
./tools/qemu-xen/hw/msix.c:    unsigned n = dev->msix_entries_nr;
./tools/qemu-xen/hw/msix.c:    if (!(dev->cap_present & QEMU_PCI_CAP_MSIX)) {
./tools/qemu-xen/hw/msix.c:    qemu_put_buffer(f, dev->msix_table_page, n * PCI_MSIX_ENTRY_SIZE);
./tools/qemu-xen/hw/msix.c:    qemu_put_buffer(f, dev->msix_table_page + MSIX_PAGE_PENDING, (n + 7) / 8);
./tools/qemu-xen/hw/msix.c:    unsigned n = dev->msix_entries_nr;
./tools/qemu-xen/hw/msix.c:    if (!(dev->cap_present & QEMU_PCI_CAP_MSIX)) {
./tools/qemu-xen/hw/msix.c:    qemu_get_buffer(f, dev->msix_table_page, n * PCI_MSIX_ENTRY_SIZE);
./tools/qemu-xen/hw/msix.c:    qemu_get_buffer(f, dev->msix_table_page + MSIX_PAGE_PENDING, (n + 7) / 8);
./tools/qemu-xen/hw/msix.c:    return dev->cap_present & QEMU_PCI_CAP_MSIX;
./tools/qemu-xen/hw/msix.c:    return (dev->cap_present & QEMU_PCI_CAP_MSIX) &&
./tools/qemu-xen/hw/msix.c:        (dev->config[dev->msix_cap + MSIX_CONTROL_OFFSET] &
./tools/qemu-xen/hw/msix.c:    return (dev->cap_present & QEMU_PCI_CAP_MSIX) ?
./tools/qemu-xen/hw/msix.c:        dev->msix_bar_size : 0;
./tools/qemu-xen/hw/msix.c:    uint8_t *table_entry = dev->msix_table_page + vector * PCI_MSIX_ENTRY_SIZE;
./tools/qemu-xen/hw/msix.c:    if (vector >= dev->msix_entries_nr || !dev->msix_entry_used[vector])
./tools/qemu-xen/hw/msix.c:    if (!(dev->cap_present & QEMU_PCI_CAP_MSIX))
./tools/qemu-xen/hw/msix.c:    dev->config[dev->msix_cap + MSIX_CONTROL_OFFSET] &=
./tools/qemu-xen/hw/msix.c:	    ~dev->wmask[dev->msix_cap + MSIX_CONTROL_OFFSET];
./tools/qemu-xen/hw/msix.c:    memset(dev->msix_table_page, 0, MSIX_PAGE_SIZE);
./tools/qemu-xen/hw/msix.c:    msix_mask_all(dev, dev->msix_entries_nr);
./tools/qemu-xen/hw/msix.c:    if (vector >= dev->msix_entries_nr)
./tools/qemu-xen/hw/msix.c:    dev->msix_entry_used[vector]++;
./tools/qemu-xen/hw/msix.c:    if (vector >= dev->msix_entries_nr || !dev->msix_entry_used[vector]) {
./tools/qemu-xen/hw/msix.c:    if (--dev->msix_entry_used[vector]) {
./tools/qemu-xen/hw/msix.c:    if (!(dev->cap_present & QEMU_PCI_CAP_MSIX))
./tools/qemu-xen/hw/spapr_pci.c:            if (dev->devfn == devfn) {
./tools/qemu-xen/hw/spapr_pci.c:    return (pci_dev->devfn >> 3) % SPAPR_PCI_NUM_LSI;
./tools/qemu-xen/hw/spapr_pci.c:        uint8_t *config = dev->config;
./tools/qemu-xen/hw/spapr_pci.c:        devid = dev->devfn >> 3;
./tools/qemu-xen/hw/spapr_pci.c:        fn = dev->devfn & 7;
./tools/qemu-xen/hw/spapr_pci.c:            if (0 == dev->io_regions[i].size) {
./tools/qemu-xen/hw/spapr_pci.c:                b_ss(regtype_to_ss(dev->io_regions[i].type)) |
./tools/qemu-xen/hw/spapr_pci.c:            reg[n+1].size = cpu_to_be64(dev->io_regions[i].size);
./tools/qemu-xen/hw/spapr_pci.c:                b_ss(regtype_to_ss(dev->io_regions[i].type)) |
./tools/qemu-xen/hw/spapr_pci.c:            assigned_addresses[n].addr = cpu_to_be64(dev->io_regions[i].addr);
./tools/qemu-xen/hw/tusb6010.c:    qdev_init_gpio_in(&dev->qdev, tusb6010_irq, musb_irq_max + 1);
./tools/qemu-xen/hw/tusb6010.c:    s->musb = musb_init(&dev->qdev, 1);
./tools/qemu-xen/hw/virtio-blk.c:    BlockErrorAction action = bdrv_get_on_error(req->dev->bs, is_read);
./tools/qemu-xen/hw/virtio-blk.c:    bdrv_acct_done(req->dev->bs, &req->acct);
./tools/qemu-xen/hw/virtio-blk.c:    bdrv_acct_done(req->dev->bs, &req->acct);
./tools/qemu-xen/hw/virtio-blk.c:    ret = bdrv_ioctl(req->dev->bs, SG_IO, &hdr);
./tools/qemu-xen/hw/virtio-blk.c:    bdrv_acct_start(req->dev->bs, &req->acct, 0, BDRV_ACCT_FLUSH);
./tools/qemu-xen/hw/virtio-blk.c:    virtio_submit_multiwrite(req->dev->bs, mrb);
./tools/qemu-xen/hw/virtio-blk.c:    acb = bdrv_aio_flush(req->dev->bs, virtio_blk_flush_complete, req);
./tools/qemu-xen/hw/virtio-blk.c:    bdrv_acct_start(req->dev->bs, &req->acct, req->qiov.size, BDRV_ACCT_WRITE);
./tools/qemu-xen/hw/virtio-blk.c:    if (sector & req->dev->sector_mask) {
./tools/qemu-xen/hw/virtio-blk.c:    if (req->qiov.size % req->dev->conf->logical_block_size) {
./tools/qemu-xen/hw/virtio-blk.c:        virtio_submit_multiwrite(req->dev->bs, mrb);
./tools/qemu-xen/hw/virtio-blk.c:    bdrv_acct_start(req->dev->bs, &req->acct, req->qiov.size, BDRV_ACCT_READ);
./tools/qemu-xen/hw/virtio-blk.c:    if (sector & req->dev->sector_mask) {
./tools/qemu-xen/hw/virtio-blk.c:    if (req->qiov.size % req->dev->conf->logical_block_size) {
./tools/qemu-xen/hw/virtio-blk.c:    acb = bdrv_aio_readv(req->dev->bs, sector, &req->qiov,
./tools/qemu-xen/hw/esp.c:    current_lun = scsi_device_find(&s->bus, 0, s->current_dev->id, lun);
./tools/qemu-xen/hw/esp.c:    qdev_init_gpio_in(&dev->qdev, esp_gpio_demux, 2);
./tools/qemu-xen/hw/esp.c:    scsi_bus_new(&s->bus, &dev->qdev, &esp_scsi_info);
./tools/qemu-xen/hw/smbus.c:do { printf("smbus(%02x): " fmt , dev->i2c.address, ## __VA_ARGS__); } while (0)
./tools/qemu-xen/hw/smbus.c:    SMBusDeviceInfo *t = container_of(dev->i2c.info, SMBusDeviceInfo, i2c);
./tools/qemu-xen/hw/smbus.c:    SMBusDeviceInfo *t = container_of(dev->i2c.info, SMBusDeviceInfo, i2c);
./tools/qemu-xen/hw/smbus.c:    if (dev->data_len == 0) {
./tools/qemu-xen/hw/smbus.c:    } else if (dev->data_len == 1) {
./tools/qemu-xen/hw/smbus.c:            t->send_byte(dev, dev->data_buf[0]);
./tools/qemu-xen/hw/smbus.c:        dev->command = dev->data_buf[0];
./tools/qemu-xen/hw/smbus.c:        DPRINTF("Command %d len %d\n", dev->command, dev->data_len - 1);
./tools/qemu-xen/hw/smbus.c:            t->write_data(dev, dev->command, dev->data_buf + 1,
./tools/qemu-xen/hw/smbus.c:                          dev->data_len - 1);
./tools/qemu-xen/hw/smbus.c:        switch (dev->mode) {
./tools/qemu-xen/hw/smbus.c:            dev->mode = SMBUS_WRITE_DATA;
./tools/qemu-xen/hw/smbus.c:            BADF("Unexpected send start condition in state %d\n", dev->mode);
./tools/qemu-xen/hw/smbus.c:            dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen/hw/smbus.c:        switch (dev->mode) {
./tools/qemu-xen/hw/smbus.c:            dev->mode = SMBUS_RECV_BYTE;
./tools/qemu-xen/hw/smbus.c:            if (dev->data_len == 0) {
./tools/qemu-xen/hw/smbus.c:                dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen/hw/smbus.c:                if (dev->data_len > 1) {
./tools/qemu-xen/hw/smbus.c:                    dev->command = dev->data_buf[0];
./tools/qemu-xen/hw/smbus.c:                    DPRINTF("%02x: Command %d\n", dev->i2c.address,
./tools/qemu-xen/hw/smbus.c:                            dev->command);
./tools/qemu-xen/hw/smbus.c:                dev->data_len = 0;
./tools/qemu-xen/hw/smbus.c:                dev->mode = SMBUS_READ_DATA;
./tools/qemu-xen/hw/smbus.c:            BADF("Unexpected recv start condition in state %d\n", dev->mode);
./tools/qemu-xen/hw/smbus.c:            dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen/hw/smbus.c:        switch (dev->mode) {
./tools/qemu-xen/hw/smbus.c:        dev->mode = SMBUS_IDLE;
./tools/qemu-xen/hw/smbus.c:        dev->data_len = 0;
./tools/qemu-xen/hw/smbus.c:        switch (dev->mode) {
./tools/qemu-xen/hw/smbus.c:            dev->mode = SMBUS_DONE;
./tools/qemu-xen/hw/smbus.c:            BADF("Unexpected NACK in state %d\n", dev->mode);
./tools/qemu-xen/hw/smbus.c:            dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen/hw/smbus.c:    switch (dev->mode) {
./tools/qemu-xen/hw/smbus.c:        dev->mode = SMBUS_DONE;
./tools/qemu-xen/hw/smbus.c:            ret = t->read_data(dev, dev->command, dev->data_len);
./tools/qemu-xen/hw/smbus.c:            dev->data_len++;
./tools/qemu-xen/hw/smbus.c:        BADF("Unexpected read in state %d\n", dev->mode);
./tools/qemu-xen/hw/smbus.c:        dev->mode = SMBUS_CONFUSED;
./tools/qemu-xen/hw/smbus.c:    switch (dev->mode) {
./tools/qemu-xen/hw/smbus.c:        dev->data_buf[dev->data_len++] = data;
./tools/qemu-xen/hw/smbus.c:        BADF("Unexpected write in state %d\n", dev->mode);
./tools/qemu-xen/hw/vmware_vga.c:    if (!dev->rom_bar) {
./tools/qemu-xen/hw/armv7m.c:    env->nvic = nvic;
./tools/qemu-xen/hw/xtensa_lx60.c:        env->sregs[PRID] = n;
./tools/qemu-xen/hw/xtensa_lx60.c:            env->regs[2] = tagptr;
./tools/qemu-xen/hw/xtensa_lx60.c:            env->pc = elf_entry;
./tools/qemu-xen/hw/pci_host.c:    pci_dev->config_write(pci_dev, addr, val, MIN(len, limit - addr));
./tools/qemu-xen/hw/pci_host.c:    return pci_dev->config_read(pci_dev, addr, MIN(len, limit - addr));
./tools/qemu-xen/hw/pci_host.c:                __func__, pci_dev->name, config_addr, val, len);
./tools/qemu-xen/hw/pci_host.c:                __func__, pci_dev->name, config_addr, val, len);
./tools/qemu-xen/hw/syborg_interrupt.c:    qdev_init_gpio_in(&dev->qdev, syborg_int_set_irq, s->num_irqs);
./tools/qemu-xen/hw/syborg_interrupt.c:    register_savevm(&dev->qdev, "syborg_int", -1, 1, syborg_int_save,
./tools/qemu-xen/hw/bt-sdp.c:    /* TODO: extract from hid->usbdev->report_desc */
./tools/qemu-xen/hw/sysbus.c:    assert(n >= 0 && n < dev->num_irq);
./tools/qemu-xen/hw/sysbus.c:    dev->irqs[n] = NULL;
./tools/qemu-xen/hw/sysbus.c:    if (dev->irqp[n]) {
./tools/qemu-xen/hw/sysbus.c:        *dev->irqp[n] = irq;
./tools/qemu-xen/hw/sysbus.c:    assert(n >= 0 && n < dev->num_mmio);
./tools/qemu-xen/hw/sysbus.c:    if (dev->mmio[n].addr == addr) {
./tools/qemu-xen/hw/sysbus.c:    if (dev->mmio[n].addr != (target_phys_addr_t)-1) {
./tools/qemu-xen/hw/sysbus.c:        if (dev->mmio[n].memory) {
./tools/qemu-xen/hw/sysbus.c:                                        dev->mmio[n].memory);
./tools/qemu-xen/hw/sysbus.c:        } else if (dev->mmio[n].unmap) {
./tools/qemu-xen/hw/sysbus.c:            dev->mmio[n].unmap(dev, dev->mmio[n].addr);
./tools/qemu-xen/hw/sysbus.c:            cpu_register_physical_memory(dev->mmio[n].addr, dev->mmio[n].size,
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].addr = addr;
./tools/qemu-xen/hw/sysbus.c:    if (dev->mmio[n].memory) {
./tools/qemu-xen/hw/sysbus.c:                                    dev->mmio[n].memory);
./tools/qemu-xen/hw/sysbus.c:    } else if (dev->mmio[n].cb) {
./tools/qemu-xen/hw/sysbus.c:        dev->mmio[n].cb(dev, addr);
./tools/qemu-xen/hw/sysbus.c:        cpu_register_physical_memory(addr, dev->mmio[n].size,
./tools/qemu-xen/hw/sysbus.c:                                     dev->mmio[n].iofunc);
./tools/qemu-xen/hw/sysbus.c:    assert(dev->num_irq < QDEV_MAX_IRQ);
./tools/qemu-xen/hw/sysbus.c:    n = dev->num_irq++;
./tools/qemu-xen/hw/sysbus.c:    dev->irqp[n] = p;
./tools/qemu-xen/hw/sysbus.c:    assert(dev->num_irq == 0);
./tools/qemu-xen/hw/sysbus.c:    dev->num_irq = target->num_irq;
./tools/qemu-xen/hw/sysbus.c:    for (i = 0; i < dev->num_irq; i++) {
./tools/qemu-xen/hw/sysbus.c:        dev->irqp[i] = target->irqp[i];
./tools/qemu-xen/hw/sysbus.c:    assert(dev->num_mmio < QDEV_MAX_MMIO);
./tools/qemu-xen/hw/sysbus.c:    n = dev->num_mmio++;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].addr = -1;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].size = size;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].iofunc = iofunc;
./tools/qemu-xen/hw/sysbus.c:    assert(dev->num_mmio < QDEV_MAX_MMIO);
./tools/qemu-xen/hw/sysbus.c:    n = dev->num_mmio++;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].addr = -1;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].size = 0;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].cb = cb;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].unmap = unmap;
./tools/qemu-xen/hw/sysbus.c:    assert(dev->num_mmio < QDEV_MAX_MMIO);
./tools/qemu-xen/hw/sysbus.c:    n = dev->num_mmio++;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].addr = -1;
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].size = memory_region_size(memory);
./tools/qemu-xen/hw/sysbus.c:    dev->mmio[n].memory = memory;
./tools/qemu-xen/hw/sysbus.c:    return dev->mmio[n].memory;
./tools/qemu-xen/hw/sysbus.c:        assert(dev->num_pio < QDEV_MAX_PIO);
./tools/qemu-xen/hw/sysbus.c:        dev->pio[dev->num_pio++] = ioport++;
./tools/qemu-xen/hw/mpc8544_guts.c:        value = env->spr[SPR_PVR];
./tools/qemu-xen/hw/mpc8544_guts.c:        value = env->spr[SPR_E500_SVR];
./tools/qemu-xen/hw/xilinx_intc.c:    qdev_init_gpio_in(&dev->qdev, irq_handler, 32);
./tools/qemu-xen/hw/syborg_fb.c:    register_savevm(&dev->qdev, "syborg_framebuffer", -1, 1,
./tools/qemu-xen/hw/ppc_oldworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_INT];
./tools/qemu-xen/hw/syborg_serial.c:    s->chr = qdev_init_chardev(&dev->qdev);
./tools/qemu-xen/hw/usb-desc.c:    dest[0x02] = usb_lo(dev->bcdUSB);
./tools/qemu-xen/hw/usb-desc.c:    dest[0x03] = usb_hi(dev->bcdUSB);
./tools/qemu-xen/hw/usb-desc.c:    dest[0x04] = dev->bDeviceClass;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x05] = dev->bDeviceSubClass;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x06] = dev->bDeviceProtocol;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x07] = dev->bMaxPacketSize0;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x11] = dev->bNumConfigurations;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x02] = usb_lo(dev->bcdUSB);
./tools/qemu-xen/hw/usb-desc.c:    dest[0x03] = usb_hi(dev->bcdUSB);
./tools/qemu-xen/hw/usb-desc.c:    dest[0x04] = dev->bDeviceClass;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x05] = dev->bDeviceSubClass;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x06] = dev->bDeviceProtocol;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x07] = dev->bMaxPacketSize0;
./tools/qemu-xen/hw/usb-desc.c:    dest[0x08] = dev->bNumConfigurations;
./tools/qemu-xen/hw/usb-desc.c:    const USBDesc *desc = dev->info->usb_desc;
./tools/qemu-xen/hw/usb-desc.c:    switch (dev->speed) {
./tools/qemu-xen/hw/usb-desc.c:        dev->device = desc->full;
./tools/qemu-xen/hw/usb-desc.c:        dev->device = desc->high;
./tools/qemu-xen/hw/usb-desc.c:    dev->config = dev->device->confs;
./tools/qemu-xen/hw/usb-desc.c:    const USBDesc *desc = dev->info->usb_desc;
./tools/qemu-xen/hw/usb-desc.c:    dev->speed = USB_SPEED_FULL;
./tools/qemu-xen/hw/usb-desc.c:    dev->speedmask = 0;
./tools/qemu-xen/hw/usb-desc.c:        dev->speedmask |= USB_SPEED_MASK_FULL;
./tools/qemu-xen/hw/usb-desc.c:        dev->speedmask |= USB_SPEED_MASK_HIGH;
./tools/qemu-xen/hw/usb-desc.c:    const USBDesc *desc = dev->info->usb_desc;
./tools/qemu-xen/hw/usb-desc.c:    if (desc->high && (dev->port->speedmask & USB_SPEED_MASK_HIGH)) {
./tools/qemu-xen/hw/usb-desc.c:        dev->speed = USB_SPEED_HIGH;
./tools/qemu-xen/hw/usb-desc.c:    } else if (desc->full && (dev->port->speedmask & USB_SPEED_MASK_FULL)) {
./tools/qemu-xen/hw/usb-desc.c:        dev->speed = USB_SPEED_FULL;
./tools/qemu-xen/hw/usb-desc.c:                dev->info->product_desc);
./tools/qemu-xen/hw/usb-desc.c:    QLIST_FOREACH(s, &dev->strings, next) {
./tools/qemu-xen/hw/usb-desc.c:        QLIST_INSERT_HEAD(&dev->strings, s, next);
./tools/qemu-xen/hw/usb-desc.c:    QLIST_FOREACH(s, &dev->strings, next) {
./tools/qemu-xen/hw/usb-desc.c:        str = dev->info->usb_desc->str[index];
./tools/qemu-xen/hw/usb-desc.c:    const USBDesc *desc = dev->info->usb_desc;
./tools/qemu-xen/hw/usb-desc.c:    if (dev->speed == USB_SPEED_HIGH) {
./tools/qemu-xen/hw/usb-desc.c:        other_dev = dev->info->usb_desc->full;
./tools/qemu-xen/hw/usb-desc.c:        other_dev = dev->info->usb_desc->high;
./tools/qemu-xen/hw/usb-desc.c:        ret = usb_desc_device(&desc->id, dev->device, buf, sizeof(buf));
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_desc_device(dev->addr, len, ret);
./tools/qemu-xen/hw/usb-desc.c:        if (index < dev->device->bNumConfigurations) {
./tools/qemu-xen/hw/usb-desc.c:            ret = usb_desc_config(dev->device->confs + index, buf, sizeof(buf));
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_desc_config(dev->addr, index, len, ret);
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_desc_string(dev->addr, index, len, ret);
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_desc_device_qualifier(dev->addr, len, ret);
./tools/qemu-xen/hw/usb-desc.c:        if (other_dev != NULL && index < other_dev->bNumConfigurations) {
./tools/qemu-xen/hw/usb-desc.c:            ret = usb_desc_config(other_dev->confs + index, buf, sizeof(buf));
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_desc_other_speed_config(dev->addr, index, len, ret);
./tools/qemu-xen/hw/usb-desc.c:                dev->addr, type, len);
./tools/qemu-xen/hw/usb-desc.c:    const USBDesc *desc = dev->info->usb_desc;
./tools/qemu-xen/hw/usb-desc.c:        dev->addr = value;
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_set_addr(dev->addr);
./tools/qemu-xen/hw/usb-desc.c:        data[0] = dev->config->bConfigurationValue;
./tools/qemu-xen/hw/usb-desc.c:        for (i = 0; i < dev->device->bNumConfigurations; i++) {
./tools/qemu-xen/hw/usb-desc.c:            if (dev->device->confs[i].bConfigurationValue == value) {
./tools/qemu-xen/hw/usb-desc.c:                dev->config = dev->device->confs + i;
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_set_config(dev->addr, value, ret);
./tools/qemu-xen/hw/usb-desc.c:        if (dev->config->bmAttributes & 0x40) {
./tools/qemu-xen/hw/usb-desc.c:        if (dev->remote_wakeup) {
./tools/qemu-xen/hw/usb-desc.c:            dev->remote_wakeup = 0;
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_clear_device_feature(dev->addr, value, ret);
./tools/qemu-xen/hw/usb-desc.c:            dev->remote_wakeup = 1;
./tools/qemu-xen/hw/usb-desc.c:        trace_usb_set_device_feature(dev->addr, value, ret);
./tools/qemu-xen/hw/syborg_timer.c:    vmstate_register(&dev->qdev, -1, &vmstate_syborg_timer, s);
./tools/qemu-xen/hw/omap_intc.c:    qdev_init_gpio_in(&dev->qdev, omap_set_intr, s->nbanks * 32);
./tools/qemu-xen/hw/omap_intc.c:    qdev_init_gpio_in(&dev->qdev, omap_set_intr_noedge, s->nbanks * 32);
./tools/qemu-xen/hw/i2c.c:    bus->saved_address = bus->current_dev ? bus->current_dev->address : -1;
./tools/qemu-xen/hw/i2c.c:    dev->address = address;
./tools/qemu-xen/hw/i2c.c:    dev->info->event(dev, I2C_FINISH);
./tools/qemu-xen/hw/i2c.c:    return dev->info->send(dev, data);
./tools/qemu-xen/hw/i2c.c:    return dev->info->recv(dev);
./tools/qemu-xen/hw/i2c.c:    dev->info->event(dev, I2C_NACK);
./tools/qemu-xen/hw/i2c.c:    bus = FROM_QBUS(i2c_bus, qdev_get_parent_bus(&dev->qdev));
./tools/qemu-xen/hw/i2c.c:    if (bus->saved_address == dev->address) {
./tools/qemu-xen/hw/bt-l2cap.c:            l2cap->dev->device.lmp_disconnect_slave(l2cap->link);
./tools/qemu-xen/hw/bt-l2cap.c:            l2cap->dev->device.lmp_disconnect_master(l2cap->link);
./tools/qemu-xen/hw/bt-l2cap.c:    /* Always accept - we only get called if (dev->device->page_scan).  */
./tools/qemu-xen/hw/bt-l2cap.c:    l2cap->link.slave = &dev->device;
./tools/qemu-xen/hw/bt-l2cap.c:    if (dev->device.reject_reason) {
./tools/qemu-xen/hw/bt-l2cap.c:    bt_device_init(&dev->device, net);
./tools/qemu-xen/hw/bt-l2cap.c:    dev->device.lmp_connection_request = l2cap_lmp_connection_request;
./tools/qemu-xen/hw/bt-l2cap.c:    dev->device.lmp_connection_complete = l2cap_lmp_connection_complete;
./tools/qemu-xen/hw/bt-l2cap.c:    dev->device.lmp_disconnect_master = l2cap_lmp_disconnect_host;
./tools/qemu-xen/hw/bt-l2cap.c:    dev->device.lmp_disconnect_slave = l2cap_lmp_disconnect_slave;
./tools/qemu-xen/hw/bt-l2cap.c:    dev->device.lmp_acl_data = l2cap_lmp_acl_data_slave;
./tools/qemu-xen/hw/bt-l2cap.c:    dev->device.lmp_acl_resp = l2cap_lmp_acl_data_host;
./tools/qemu-xen/hw/bt-l2cap.c:    dev->device.handle_destroy = l2cap_dummy_destroy;
./tools/qemu-xen/hw/bt-l2cap.c:    bt_device_done(&dev->device);
./tools/qemu-xen/hw/bt-l2cap.c:                        __FUNCTION__, psm, dev->device.lmp_name);
./tools/qemu-xen/hw/bt-l2cap.c:    new_psm->next = dev->first_psm;
./tools/qemu-xen/hw/bt-l2cap.c:    dev->first_psm = new_psm;
./tools/qemu-xen/hw/xilinx_axienet.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/slavio_intctl.c:    qdev_init_gpio_in(&dev->qdev, slavio_set_irq_all, 32 + MAX_CPUS);
./tools/qemu-xen/hw/i8254.c:    qdev_set_legacy_instance_id(&dev->qdev, pit->iobase, 2);
./tools/qemu-xen/hw/etraxfs_ser.c:    s->chr = qdev_init_chardev(&dev->qdev);
./tools/qemu-xen/hw/spapr_hcall.c:    if ((pte_index * HASH_PTE_SIZE_64) & ~env->htab_mask) {
./tools/qemu-xen/hw/spapr_hcall.c:        hpte = env->external_htab + (pte_index * HASH_PTE_SIZE_64);
./tools/qemu-xen/hw/spapr_hcall.c:        hpte = env->external_htab + (pte_index * HASH_PTE_SIZE_64);
./tools/qemu-xen/hw/spapr_hcall.c:    if ((ptex * HASH_PTE_SIZE_64) & ~env->htab_mask) {
./tools/qemu-xen/hw/spapr_hcall.c:    hpte = env->external_htab + (ptex * HASH_PTE_SIZE_64);
./tools/qemu-xen/hw/spapr_hcall.c:    if ((pte_index * HASH_PTE_SIZE_64) & ~env->htab_mask) {
./tools/qemu-xen/hw/spapr_hcall.c:    hpte = env->external_htab + (pte_index * HASH_PTE_SIZE_64);
./tools/qemu-xen/hw/spapr_hcall.c:    if (vpa % env->dcache_line_size) {
./tools/qemu-xen/hw/spapr_hcall.c:    env->vpa = vpa;
./tools/qemu-xen/hw/spapr_hcall.c:    tmp = ldub_phys(env->vpa + VPA_SHARED_PROC_OFFSET);
./tools/qemu-xen/hw/spapr_hcall.c:    stb_phys(env->vpa + VPA_SHARED_PROC_OFFSET, tmp);
./tools/qemu-xen/hw/spapr_hcall.c:    if (env->slb_shadow) {
./tools/qemu-xen/hw/spapr_hcall.c:    if (env->dispatch_trace_log) {
./tools/qemu-xen/hw/spapr_hcall.c:    env->vpa = 0;
./tools/qemu-xen/hw/spapr_hcall.c:    if (!env->vpa) {
./tools/qemu-xen/hw/spapr_hcall.c:    env->slb_shadow = addr;
./tools/qemu-xen/hw/spapr_hcall.c:    env->slb_shadow = 0;
./tools/qemu-xen/hw/spapr_hcall.c:    if (!env->vpa) {
./tools/qemu-xen/hw/spapr_hcall.c:    env->dispatch_trace_log = addr;
./tools/qemu-xen/hw/spapr_hcall.c:    env->dtl_size = size;
./tools/qemu-xen/hw/spapr_hcall.c:    env->dispatch_trace_log = 0;
./tools/qemu-xen/hw/spapr_hcall.c:    env->dtl_size = 0;
./tools/qemu-xen/hw/spapr_hcall.c:    for (tenv = first_cpu; tenv; tenv = tenv->next_cpu) {
./tools/qemu-xen/hw/spapr_hcall.c:        if (tenv->cpu_index == procno) {
./tools/qemu-xen/hw/spapr_hcall.c:    env->msr |= (1ULL << MSR_EE);
./tools/qemu-xen/hw/spapr_hcall.c:        env->halted = 1;
./tools/qemu-xen/hw/xilinx_axidma.c:#include "qdev-addr.h"
./tools/qemu-xen/hw/etraxfs_pic.c:    qdev_init_gpio_in(&dev->qdev, irq_handler, 32);
./tools/qemu-xen/hw/smbus_eeprom.c:    printf("eeprom_quick_cmd: addr=0x%02x read=%d\n", dev->i2c.address, read);
./tools/qemu-xen/hw/smbus_eeprom.c:           dev->i2c.address, val);
./tools/qemu-xen/hw/smbus_eeprom.c:           dev->i2c.address, val);
./tools/qemu-xen/hw/smbus_eeprom.c:           dev->i2c.address, cmd, buf[0]);
./tools/qemu-xen/hw/applesmc.c:    qdev_applesmc_isa_reset(&dev->qdev);
./tools/qemu-xen/hw/xen_disk.c:    if (QLIST_EMPTY(&blkdev->freelist)) {
./tools/qemu-xen/hw/xen_disk.c:        if (blkdev->requests_total >= max_requests) {
./tools/qemu-xen/hw/xen_disk.c:        blkdev->requests_total++;
./tools/qemu-xen/hw/xen_disk.c:        ioreq = QLIST_FIRST(&blkdev->freelist);
./tools/qemu-xen/hw/xen_disk.c:    QLIST_INSERT_HEAD(&blkdev->inflight, ioreq, list);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->requests_inflight++;
./tools/qemu-xen/hw/xen_disk.c:    QLIST_INSERT_HEAD(&blkdev->finished, ioreq, list);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->requests_inflight--;
./tools/qemu-xen/hw/xen_disk.c:    blkdev->requests_finished++;
./tools/qemu-xen/hw/xen_disk.c:    QLIST_INSERT_HEAD(&blkdev->freelist, ioreq, list);
./tools/qemu-xen/hw/xen_disk.c:        blkdev->requests_finished--;
./tools/qemu-xen/hw/xen_disk.c:        blkdev->requests_inflight--;
./tools/qemu-xen/hw/xen_disk.c:    xen_be_printf(&blkdev->xendev, 3,
./tools/qemu-xen/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 0, "error: unknown operation (%d)\n",
./tools/qemu-xen/hw/xen_disk.c:    if (ioreq->req.operation != BLKIF_OP_READ && blkdev->mode[0] != 'w') {
./tools/qemu-xen/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 0, "error: write req for ro device\n");
./tools/qemu-xen/hw/xen_disk.c:    ioreq->start = ioreq->req.sector_number * blkdev->file_blk;
./tools/qemu-xen/hw/xen_disk.c:            xen_be_printf(&blkdev->xendev, 0, "error: nr_segments too big\n");
./tools/qemu-xen/hw/xen_disk.c:            xen_be_printf(&blkdev->xendev, 0, "error: first > last sector\n");
./tools/qemu-xen/hw/xen_disk.c:            xen_be_printf(&blkdev->xendev, 0, "error: page crossing\n");
./tools/qemu-xen/hw/xen_disk.c:        ioreq->domids[i] = blkdev->xendev.dom;
./tools/qemu-xen/hw/xen_disk.c:        mem = ioreq->req.seg[i].first_sect * blkdev->file_blk;
./tools/qemu-xen/hw/xen_disk.c:        len = (ioreq->req.seg[i].last_sect - ioreq->req.seg[i].first_sect + 1) * blkdev->file_blk;
./tools/qemu-xen/hw/xen_disk.c:    if (ioreq->start + ioreq->v.size > blkdev->file_size) {
./tools/qemu-xen/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 0, "error: access beyond end of file\n");
./tools/qemu-xen/hw/xen_disk.c:    XenGnttab gnt = ioreq->blkdev->xendev.gnttabdev;
./tools/qemu-xen/hw/xen_disk.c:            xen_be_printf(&ioreq->blkdev->xendev, 0, "xc_gnttab_munmap failed: %s\n",
./tools/qemu-xen/hw/xen_disk.c:        ioreq->blkdev->cnt_map -= ioreq->v.niov;
./tools/qemu-xen/hw/xen_disk.c:                xen_be_printf(&ioreq->blkdev->xendev, 0, "xc_gnttab_munmap failed: %s\n",
./tools/qemu-xen/hw/xen_disk.c:            ioreq->blkdev->cnt_map--;
./tools/qemu-xen/hw/xen_disk.c:    XenGnttab gnt = ioreq->blkdev->xendev.gnttabdev;
./tools/qemu-xen/hw/xen_disk.c:            xen_be_printf(&ioreq->blkdev->xendev, 0,
./tools/qemu-xen/hw/xen_disk.c:                          ioreq->v.niov, strerror(errno), ioreq->blkdev->cnt_map);
./tools/qemu-xen/hw/xen_disk.c:        ioreq->blkdev->cnt_map += ioreq->v.niov;
./tools/qemu-xen/hw/xen_disk.c:                xen_be_printf(&ioreq->blkdev->xendev, 0,
./tools/qemu-xen/hw/xen_disk.c:                              ioreq->refs[i], strerror(errno), ioreq->blkdev->cnt_map);
./tools/qemu-xen/hw/xen_disk.c:            ioreq->blkdev->cnt_map++;
./tools/qemu-xen/hw/xen_disk.c:        xen_be_printf(&ioreq->blkdev->xendev, 0, "%s I/O error\n",
./tools/qemu-xen/hw/xen_disk.c:        bdrv_aio_flush(ioreq->blkdev->bs, qemu_aio_complete, ioreq);
./tools/qemu-xen/hw/xen_disk.c:    bdrv_acct_done(ioreq->blkdev->bs, &ioreq->acct);
./tools/qemu-xen/hw/xen_disk.c:    qemu_bh_schedule(ioreq->blkdev->bh);
./tools/qemu-xen/hw/xen_disk.c:        bdrv_aio_flush(ioreq->blkdev->bs, qemu_aio_complete, ioreq);
./tools/qemu-xen/hw/xen_disk.c:        bdrv_acct_start(blkdev->bs, &ioreq->acct, ioreq->v.size, BDRV_ACCT_READ);
./tools/qemu-xen/hw/xen_disk.c:        bdrv_aio_readv(blkdev->bs, ioreq->start / BLOCK_SIZE,
./tools/qemu-xen/hw/xen_disk.c:        bdrv_acct_start(blkdev->bs, &ioreq->acct, ioreq->v.size, BDRV_ACCT_WRITE);
./tools/qemu-xen/hw/xen_disk.c:        bdrv_aio_writev(blkdev->bs, ioreq->start / BLOCK_SIZE,
./tools/qemu-xen/hw/xen_disk.c:    switch (blkdev->protocol) {
./tools/qemu-xen/hw/xen_disk.c:        dst = RING_GET_RESPONSE(&blkdev->rings.native, blkdev->rings.native.rsp_prod_pvt);
./tools/qemu-xen/hw/xen_disk.c:        dst = RING_GET_RESPONSE(&blkdev->rings.x86_32_part,
./tools/qemu-xen/hw/xen_disk.c:                                blkdev->rings.x86_32_part.rsp_prod_pvt);
./tools/qemu-xen/hw/xen_disk.c:        dst = RING_GET_RESPONSE(&blkdev->rings.x86_64_part,
./tools/qemu-xen/hw/xen_disk.c:                                blkdev->rings.x86_64_part.rsp_prod_pvt);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->rings.common.rsp_prod_pvt++;
./tools/qemu-xen/hw/xen_disk.c:    RING_PUSH_RESPONSES_AND_CHECK_NOTIFY(&blkdev->rings.common, send_notify);
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->rings.common.rsp_prod_pvt == blkdev->rings.common.req_cons) {
./tools/qemu-xen/hw/xen_disk.c:        RING_FINAL_CHECK_FOR_REQUESTS(&blkdev->rings.common, have_requests);
./tools/qemu-xen/hw/xen_disk.c:    } else if (RING_HAS_UNCONSUMED_REQUESTS(&blkdev->rings.common)) {
./tools/qemu-xen/hw/xen_disk.c:        blkdev->more_work++;
./tools/qemu-xen/hw/xen_disk.c:    while (!QLIST_EMPTY(&blkdev->finished)) {
./tools/qemu-xen/hw/xen_disk.c:        ioreq = QLIST_FIRST(&blkdev->finished);
./tools/qemu-xen/hw/xen_disk.c:        xen_be_send_notify(&blkdev->xendev);
./tools/qemu-xen/hw/xen_disk.c:    switch (blkdev->protocol) {
./tools/qemu-xen/hw/xen_disk.c:        memcpy(&ioreq->req, RING_GET_REQUEST(&blkdev->rings.native, rc),
./tools/qemu-xen/hw/xen_disk.c:                             RING_GET_REQUEST(&blkdev->rings.x86_32_part, rc));
./tools/qemu-xen/hw/xen_disk.c:                             RING_GET_REQUEST(&blkdev->rings.x86_64_part, rc));
./tools/qemu-xen/hw/xen_disk.c:    blkdev->more_work = 0;
./tools/qemu-xen/hw/xen_disk.c:    rc = blkdev->rings.common.req_cons;
./tools/qemu-xen/hw/xen_disk.c:    rp = blkdev->rings.common.sring->req_prod;
./tools/qemu-xen/hw/xen_disk.c:        if (RING_REQUEST_CONS_OVERFLOW(&blkdev->rings.common, rc)) {
./tools/qemu-xen/hw/xen_disk.c:            blkdev->more_work++;
./tools/qemu-xen/hw/xen_disk.c:        blkdev->rings.common.req_cons = ++rc;
./tools/qemu-xen/hw/xen_disk.c:                xen_be_send_notify(&blkdev->xendev);
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->more_work && blkdev->requests_inflight < max_requests) {
./tools/qemu-xen/hw/xen_disk.c:        qemu_bh_schedule(blkdev->bh);
./tools/qemu-xen/hw/xen_disk.c:    QLIST_INIT(&blkdev->inflight);
./tools/qemu-xen/hw/xen_disk.c:    QLIST_INIT(&blkdev->finished);
./tools/qemu-xen/hw/xen_disk.c:    QLIST_INIT(&blkdev->freelist);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->bh = qemu_bh_new(blk_bh, blkdev);
./tools/qemu-xen/hw/xen_disk.c:    if (xc_gnttab_set_max_grants(xendev->gnttabdev,
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->params == NULL) {
./tools/qemu-xen/hw/xen_disk.c:        blkdev->params = xenstore_read_be_str(&blkdev->xendev, "params");
./tools/qemu-xen/hw/xen_disk.c:        if (blkdev->params != NULL) {
./tools/qemu-xen/hw/xen_disk.c:            h = strchr(blkdev->params, ':');
./tools/qemu-xen/hw/xen_disk.c:            blkdev->fileproto = blkdev->params;
./tools/qemu-xen/hw/xen_disk.c:            blkdev->filename  = h+1;
./tools/qemu-xen/hw/xen_disk.c:            blkdev->fileproto = "<unset>";
./tools/qemu-xen/hw/xen_disk.c:            blkdev->filename  = blkdev->params;
./tools/qemu-xen/hw/xen_disk.c:    if (!strcmp("aio", blkdev->fileproto)) {
./tools/qemu-xen/hw/xen_disk.c:        blkdev->fileproto = "raw";
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->mode == NULL) {
./tools/qemu-xen/hw/xen_disk.c:        blkdev->mode = xenstore_read_be_str(&blkdev->xendev, "mode");
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->type == NULL) {
./tools/qemu-xen/hw/xen_disk.c:        blkdev->type = xenstore_read_be_str(&blkdev->xendev, "type");
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->dev == NULL) {
./tools/qemu-xen/hw/xen_disk.c:        blkdev->dev = xenstore_read_be_str(&blkdev->xendev, "dev");
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->devtype == NULL) {
./tools/qemu-xen/hw/xen_disk.c:        blkdev->devtype = xenstore_read_be_str(&blkdev->xendev, "device-type");
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->params == NULL ||
./tools/qemu-xen/hw/xen_disk.c:        blkdev->mode == NULL   ||
./tools/qemu-xen/hw/xen_disk.c:        blkdev->type == NULL   ||
./tools/qemu-xen/hw/xen_disk.c:        blkdev->dev == NULL) {
./tools/qemu-xen/hw/xen_disk.c:    if (strcmp(blkdev->mode, "w") == 0) {
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->devtype && !strcmp(blkdev->devtype, "cdrom")) {
./tools/qemu-xen/hw/xen_disk.c:    index = (blkdev->xendev.dev - 202 * 256) / 16;
./tools/qemu-xen/hw/xen_disk.c:    blkdev->dinfo = drive_get(IF_XEN, 0, index);
./tools/qemu-xen/hw/xen_disk.c:    if (!blkdev->dinfo) {
./tools/qemu-xen/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 2, "create new bdrv (xenbus setup)\n");
./tools/qemu-xen/hw/xen_disk.c:        blkdev->bs = bdrv_new(blkdev->dev);
./tools/qemu-xen/hw/xen_disk.c:        if (blkdev->bs) {
./tools/qemu-xen/hw/xen_disk.c:            if (bdrv_open(blkdev->bs, blkdev->filename, qflags,
./tools/qemu-xen/hw/xen_disk.c:                        bdrv_find_whitelisted_format(blkdev->fileproto)) != 0) {
./tools/qemu-xen/hw/xen_disk.c:                bdrv_delete(blkdev->bs);
./tools/qemu-xen/hw/xen_disk.c:                blkdev->bs = NULL;
./tools/qemu-xen/hw/xen_disk.c:        if (!blkdev->bs) {
./tools/qemu-xen/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 2, "get configured bdrv (cmdline setup)\n");
./tools/qemu-xen/hw/xen_disk.c:        blkdev->bs = blkdev->dinfo->bdrv;
./tools/qemu-xen/hw/xen_disk.c:    bdrv_attach_dev_nofail(blkdev->bs, blkdev);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->file_blk  = BLOCK_SIZE;
./tools/qemu-xen/hw/xen_disk.c:    blkdev->file_size = bdrv_getlength(blkdev->bs);
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->file_size < 0) {
./tools/qemu-xen/hw/xen_disk.c:        xen_be_printf(&blkdev->xendev, 1, "bdrv_getlength: %d (%s) | drv %s\n",
./tools/qemu-xen/hw/xen_disk.c:                      (int)blkdev->file_size, strerror(-blkdev->file_size),
./tools/qemu-xen/hw/xen_disk.c:                      blkdev->bs->drv ? blkdev->bs->drv->format_name : "-");
./tools/qemu-xen/hw/xen_disk.c:        blkdev->file_size = 0;
./tools/qemu-xen/hw/xen_disk.c:                  blkdev->type, blkdev->fileproto, blkdev->filename,
./tools/qemu-xen/hw/xen_disk.c:                  blkdev->file_size, blkdev->file_size >> 20);
./tools/qemu-xen/hw/xen_disk.c:    xenstore_write_be_int(&blkdev->xendev, "feature-barrier", 1);
./tools/qemu-xen/hw/xen_disk.c:    xenstore_write_be_int(&blkdev->xendev, "info",            info);
./tools/qemu-xen/hw/xen_disk.c:    xenstore_write_be_int(&blkdev->xendev, "sector-size",     blkdev->file_blk);
./tools/qemu-xen/hw/xen_disk.c:    xenstore_write_be_int(&blkdev->xendev, "sectors",
./tools/qemu-xen/hw/xen_disk.c:                          blkdev->file_size / blkdev->file_blk);
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->params);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->params = NULL;
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->mode);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->mode = NULL;
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->type);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->type = NULL;
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->dev);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->dev = NULL;
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->devtype);
./tools/qemu-xen/hw/xen_disk.c:    blkdev->devtype = NULL;
./tools/qemu-xen/hw/xen_disk.c:    if (xenstore_read_fe_int(&blkdev->xendev, "ring-ref", &blkdev->ring_ref) == -1) {
./tools/qemu-xen/hw/xen_disk.c:    if (xenstore_read_fe_int(&blkdev->xendev, "event-channel",
./tools/qemu-xen/hw/xen_disk.c:                             &blkdev->xendev.remote_port) == -1) {
./tools/qemu-xen/hw/xen_disk.c:    blkdev->protocol = BLKIF_PROTOCOL_NATIVE;
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->xendev.protocol) {
./tools/qemu-xen/hw/xen_disk.c:        if (strcmp(blkdev->xendev.protocol, XEN_IO_PROTO_ABI_X86_32) == 0) {
./tools/qemu-xen/hw/xen_disk.c:            blkdev->protocol = BLKIF_PROTOCOL_X86_32;
./tools/qemu-xen/hw/xen_disk.c:        if (strcmp(blkdev->xendev.protocol, XEN_IO_PROTO_ABI_X86_64) == 0) {
./tools/qemu-xen/hw/xen_disk.c:            blkdev->protocol = BLKIF_PROTOCOL_X86_64;
./tools/qemu-xen/hw/xen_disk.c:    blkdev->sring = xc_gnttab_map_grant_ref(blkdev->xendev.gnttabdev,
./tools/qemu-xen/hw/xen_disk.c:                                            blkdev->xendev.dom,
./tools/qemu-xen/hw/xen_disk.c:                                            blkdev->ring_ref,
./tools/qemu-xen/hw/xen_disk.c:    if (!blkdev->sring) {
./tools/qemu-xen/hw/xen_disk.c:    blkdev->cnt_map++;
./tools/qemu-xen/hw/xen_disk.c:    switch (blkdev->protocol) {
./tools/qemu-xen/hw/xen_disk.c:        blkif_sring_t *sring_native = blkdev->sring;
./tools/qemu-xen/hw/xen_disk.c:        BACK_RING_INIT(&blkdev->rings.native, sring_native, XC_PAGE_SIZE);
./tools/qemu-xen/hw/xen_disk.c:        blkif_x86_32_sring_t *sring_x86_32 = blkdev->sring;
./tools/qemu-xen/hw/xen_disk.c:        BACK_RING_INIT(&blkdev->rings.x86_32_part, sring_x86_32, XC_PAGE_SIZE);
./tools/qemu-xen/hw/xen_disk.c:        blkif_x86_64_sring_t *sring_x86_64 = blkdev->sring;
./tools/qemu-xen/hw/xen_disk.c:        BACK_RING_INIT(&blkdev->rings.x86_64_part, sring_x86_64, XC_PAGE_SIZE);
./tools/qemu-xen/hw/xen_disk.c:    xen_be_bind_evtchn(&blkdev->xendev);
./tools/qemu-xen/hw/xen_disk.c:    xen_be_printf(&blkdev->xendev, 1, "ok: proto %s, ring-ref %d, "
./tools/qemu-xen/hw/xen_disk.c:                  blkdev->xendev.protocol, blkdev->ring_ref,
./tools/qemu-xen/hw/xen_disk.c:                  blkdev->xendev.remote_port, blkdev->xendev.local_port);
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->bs) {
./tools/qemu-xen/hw/xen_disk.c:        if (!blkdev->dinfo) {
./tools/qemu-xen/hw/xen_disk.c:            bdrv_close(blkdev->bs);
./tools/qemu-xen/hw/xen_disk.c:            bdrv_detach_dev(blkdev->bs, blkdev);
./tools/qemu-xen/hw/xen_disk.c:            bdrv_delete(blkdev->bs);
./tools/qemu-xen/hw/xen_disk.c:        blkdev->bs = NULL;
./tools/qemu-xen/hw/xen_disk.c:    xen_be_unbind_evtchn(&blkdev->xendev);
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->sring) {
./tools/qemu-xen/hw/xen_disk.c:        xc_gnttab_munmap(blkdev->xendev.gnttabdev, blkdev->sring, 1);
./tools/qemu-xen/hw/xen_disk.c:        blkdev->cnt_map--;
./tools/qemu-xen/hw/xen_disk.c:        blkdev->sring = NULL;
./tools/qemu-xen/hw/xen_disk.c:    if (blkdev->bs || blkdev->sring) {
./tools/qemu-xen/hw/xen_disk.c:    while (!QLIST_EMPTY(&blkdev->freelist)) {
./tools/qemu-xen/hw/xen_disk.c:        ioreq = QLIST_FIRST(&blkdev->freelist);
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->params);
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->mode);
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->type);
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->dev);
./tools/qemu-xen/hw/xen_disk.c:    g_free(blkdev->devtype);
./tools/qemu-xen/hw/xen_disk.c:    qemu_bh_delete(blkdev->bh);
./tools/qemu-xen/hw/xen_disk.c:    qemu_bh_schedule(blkdev->bh);
./tools/qemu-xen/hw/pl190.c:    qdev_init_gpio_in(&dev->qdev, pl190_set_irq, 32);
./tools/qemu-xen/hw/pc.c:        smm_set(!!(env->hflags & HF_SMM_MASK), smm_arg);
./tools/qemu-xen/hw/pc.c:    intno = apic_get_interrupt(env->apic_state);
./tools/qemu-xen/hw/pc.c:    if (!apic_accept_pic_intr(env->apic_state)) {
./tools/qemu-xen/hw/pc.c:    if (env->apic_state) {
./tools/qemu-xen/hw/pc.c:            if (apic_accept_pic_intr(env->apic_state)) {
./tools/qemu-xen/hw/pc.c:                apic_deliver_pic_intr(env->apic_state, level);
./tools/qemu-xen/hw/pc.c:            env = env->next_cpu;
./tools/qemu-xen/hw/pc.c:    return env->cpu_index == 0;
./tools/qemu-xen/hw/pc.c:        return cpu_single_env->apic_state;
./tools/qemu-xen/hw/pc.c:    env->halted = !cpu_is_bsp(env);
./tools/qemu-xen/hw/pc.c:    if ((env->cpuid_features & CPUID_APIC) || smp_cpus > 1) {
./tools/qemu-xen/hw/pc.c:        env->apic_state = apic_init(env, env->cpuid_apic_id);
./tools/qemu-xen/hw/virtio-pci.c:        qemu_set_irq(proxy->pci_dev.irq[0], proxy->vdev->isr & 1);
./tools/qemu-xen/hw/virtio-pci.c:        qemu_put_be16(f, proxy->vdev->config_vector);
./tools/qemu-xen/hw/virtio-pci.c:        qemu_get_be16s(f, &proxy->vdev->config_vector);
./tools/qemu-xen/hw/virtio-pci.c:        proxy->vdev->config_vector = VIRTIO_NO_VECTOR;
./tools/qemu-xen/hw/virtio-pci.c:    if (proxy->vdev->config_vector != VIRTIO_NO_VECTOR) {
./tools/qemu-xen/hw/virtio-pci.c:        return msix_vector_use(&proxy->pci_dev, proxy->vdev->config_vector);
./tools/qemu-xen/hw/virtio-pci.c:            val = vdev->bad_features ? vdev->bad_features(vdev) : 0;
./tools/qemu-xen/hw/virtio-pci.c:            virtio_queue_set_addr(vdev, vdev->queue_sel, pa);
./tools/qemu-xen/hw/virtio-pci.c:            vdev->queue_sel = val;
./tools/qemu-xen/hw/virtio-pci.c:        if (vdev->status == 0) {
./tools/qemu-xen/hw/virtio-pci.c:        msix_vector_unuse(&proxy->pci_dev, vdev->config_vector);
./tools/qemu-xen/hw/virtio-pci.c:        vdev->config_vector = val;
./tools/qemu-xen/hw/virtio-pci.c:                          virtio_queue_vector(vdev, vdev->queue_sel));
./tools/qemu-xen/hw/virtio-pci.c:        virtio_queue_set_vector(vdev, vdev->queue_sel, val);
./tools/qemu-xen/hw/virtio-pci.c:        ret = vdev->guest_features;
./tools/qemu-xen/hw/virtio-pci.c:        ret = virtio_queue_get_addr(vdev, vdev->queue_sel)
./tools/qemu-xen/hw/virtio-pci.c:        ret = virtio_queue_get_num(vdev, vdev->queue_sel);
./tools/qemu-xen/hw/virtio-pci.c:        ret = vdev->queue_sel;
./tools/qemu-xen/hw/virtio-pci.c:        ret = vdev->status;
./tools/qemu-xen/hw/virtio-pci.c:        ret = vdev->isr;
./tools/qemu-xen/hw/virtio-pci.c:        vdev->isr = 0;
./tools/qemu-xen/hw/virtio-pci.c:        ret = vdev->config_vector;
./tools/qemu-xen/hw/virtio-pci.c:        ret = virtio_queue_vector(vdev, vdev->queue_sel);
./tools/qemu-xen/hw/virtio-pci.c:        !(pci_dev->config[PCI_COMMAND] & PCI_COMMAND_MASTER) &&
./tools/qemu-xen/hw/virtio-pci.c:                          proxy->vdev->status & ~VIRTIO_CONFIG_S_DRIVER_OK);
./tools/qemu-xen/hw/virtio-pci.c:        if ((proxy->vdev->status & VIRTIO_CONFIG_S_DRIVER_OK) &&
./tools/qemu-xen/hw/virtio-pci.c:    pci_set_word(config + 0x2e, vdev->device_id);
./tools/qemu-xen/hw/virtio-pci.c:    if (vdev->nvectors && !msix_init(&proxy->pci_dev, vdev->nvectors,
./tools/qemu-xen/hw/virtio-pci.c:        vdev->nvectors = 0;
./tools/qemu-xen/hw/virtio-pci.c:    size = VIRTIO_PCI_REGION_SIZE(&proxy->pci_dev) + vdev->config_len;
./tools/qemu-xen/hw/virtio-pci.c:    proxy->host_features = vdev->get_features(vdev, proxy->host_features);
./tools/qemu-xen/hw/virtio-pci.c:    vdev = virtio_blk_init(&pci_dev->qdev, &proxy->block,
./tools/qemu-xen/hw/virtio-pci.c:    vdev->nvectors = proxy->nvectors;
./tools/qemu-xen/hw/virtio-pci.c:    proxy->nvectors = vdev->nvectors;
./tools/qemu-xen/hw/virtio-pci.c:    vdev = virtio_serial_init(&pci_dev->qdev, &proxy->serial);
./tools/qemu-xen/hw/virtio-pci.c:    vdev->nvectors = proxy->nvectors == DEV_NVECTORS_UNSPECIFIED
./tools/qemu-xen/hw/virtio-pci.c:    proxy->nvectors = vdev->nvectors;
./tools/qemu-xen/hw/virtio-pci.c:    vdev = virtio_net_init(&pci_dev->qdev, &proxy->nic, &proxy->net);
./tools/qemu-xen/hw/virtio-pci.c:    vdev->nvectors = proxy->nvectors;
./tools/qemu-xen/hw/virtio-pci.c:    proxy->nvectors = vdev->nvectors;
./tools/qemu-xen/hw/virtio-pci.c:    vdev = virtio_balloon_init(&pci_dev->qdev);
./tools/qemu-xen/hw/max111x.c:    qdev_init_gpio_out(&dev->qdev, &s->interrupt, 1);
./tools/qemu-xen/hw/max111x.c:    vmstate_register(&dev->qdev, -1, &vmstate_max111x, s);
./tools/qemu-xen/hw/xen_nic.c:    RING_IDX i = netdev->tx_ring.rsp_prod_pvt;
./tools/qemu-xen/hw/xen_nic.c:    resp = RING_GET_RESPONSE(&netdev->tx_ring, i);
./tools/qemu-xen/hw/xen_nic.c:        RING_GET_RESPONSE(&netdev->tx_ring, ++i)->status = NETIF_RSP_NULL;
./tools/qemu-xen/hw/xen_nic.c:    netdev->tx_ring.rsp_prod_pvt = ++i;
./tools/qemu-xen/hw/xen_nic.c:    RING_PUSH_RESPONSES_AND_CHECK_NOTIFY(&netdev->tx_ring, notify);
./tools/qemu-xen/hw/xen_nic.c:        xen_be_send_notify(&netdev->xendev);
./tools/qemu-xen/hw/xen_nic.c:    if (i == netdev->tx_ring.req_cons) {
./tools/qemu-xen/hw/xen_nic.c:        RING_FINAL_CHECK_FOR_REQUESTS(&netdev->tx_ring, more_to_do);
./tools/qemu-xen/hw/xen_nic.c:            netdev->tx_work++;
./tools/qemu-xen/hw/xen_nic.c:    RING_IDX cons = netdev->tx_ring.req_cons;
./tools/qemu-xen/hw/xen_nic.c:        txp = RING_GET_REQUEST(&netdev->tx_ring, cons++);
./tools/qemu-xen/hw/xen_nic.c:    netdev->tx_ring.req_cons = cons;
./tools/qemu-xen/hw/xen_nic.c:        rc = netdev->tx_ring.req_cons;
./tools/qemu-xen/hw/xen_nic.c:        rp = netdev->tx_ring.sring->req_prod;
./tools/qemu-xen/hw/xen_nic.c:            if (RING_REQUEST_CONS_OVERFLOW(&netdev->tx_ring, rc)) {
./tools/qemu-xen/hw/xen_nic.c:            memcpy(&txreq, RING_GET_REQUEST(&netdev->tx_ring, rc), sizeof(txreq));
./tools/qemu-xen/hw/xen_nic.c:            netdev->tx_ring.req_cons = ++rc;
./tools/qemu-xen/hw/xen_nic.c:                xen_be_printf(&netdev->xendev, 0, "FIXME: extra info flag\n");
./tools/qemu-xen/hw/xen_nic.c:                xen_be_printf(&netdev->xendev, 0, "FIXME: more data flag\n");
./tools/qemu-xen/hw/xen_nic.c:                xen_be_printf(&netdev->xendev, 0, "bad packet size: %d\n", txreq.size);
./tools/qemu-xen/hw/xen_nic.c:                xen_be_printf(&netdev->xendev, 0, "error: page crossing\n");
./tools/qemu-xen/hw/xen_nic.c:            xen_be_printf(&netdev->xendev, 3, "tx packet ref %d, off %d, len %d, flags 0x%x%s%s%s%s\n",
./tools/qemu-xen/hw/xen_nic.c:            page = xc_gnttab_map_grant_ref(netdev->xendev.gnttabdev,
./tools/qemu-xen/hw/xen_nic.c:                                           netdev->xendev.dom,
./tools/qemu-xen/hw/xen_nic.c:                xen_be_printf(&netdev->xendev, 0, "error: tx gref dereference failed (%d)\n",
./tools/qemu-xen/hw/xen_nic.c:                qemu_send_packet(&netdev->nic->nc, tmpbuf, txreq.size);
./tools/qemu-xen/hw/xen_nic.c:                qemu_send_packet(&netdev->nic->nc, page + txreq.offset, txreq.size);
./tools/qemu-xen/hw/xen_nic.c:            xc_gnttab_munmap(netdev->xendev.gnttabdev, page, 1);
./tools/qemu-xen/hw/xen_nic.c:        if (!netdev->tx_work) {
./tools/qemu-xen/hw/xen_nic.c:        netdev->tx_work = 0;
./tools/qemu-xen/hw/xen_nic.c:    RING_IDX i = netdev->rx_ring.rsp_prod_pvt;
./tools/qemu-xen/hw/xen_nic.c:    resp = RING_GET_RESPONSE(&netdev->rx_ring, i);
./tools/qemu-xen/hw/xen_nic.c:    xen_be_printf(&netdev->xendev, 3, "rx response: idx %d, status %d, flags 0x%x\n",
./tools/qemu-xen/hw/xen_nic.c:    netdev->rx_ring.rsp_prod_pvt = ++i;
./tools/qemu-xen/hw/xen_nic.c:    RING_PUSH_RESPONSES_AND_CHECK_NOTIFY(&netdev->rx_ring, notify);
./tools/qemu-xen/hw/xen_nic.c:        xen_be_send_notify(&netdev->xendev);
./tools/qemu-xen/hw/xen_nic.c:    if (netdev->xendev.be_state != XenbusStateConnected) {
./tools/qemu-xen/hw/xen_nic.c:    rc = netdev->rx_ring.req_cons;
./tools/qemu-xen/hw/xen_nic.c:    rp = netdev->rx_ring.sring->req_prod;
./tools/qemu-xen/hw/xen_nic.c:    if (rc == rp || RING_REQUEST_CONS_OVERFLOW(&netdev->rx_ring, rc)) {
./tools/qemu-xen/hw/xen_nic.c:        xen_be_printf(&netdev->xendev, 2, "%s: no rx buffers (%d/%d)\n",
./tools/qemu-xen/hw/xen_nic.c:    if (netdev->xendev.be_state != XenbusStateConnected) {
./tools/qemu-xen/hw/xen_nic.c:    rc = netdev->rx_ring.req_cons;
./tools/qemu-xen/hw/xen_nic.c:    rp = netdev->rx_ring.sring->req_prod;
./tools/qemu-xen/hw/xen_nic.c:    if (rc == rp || RING_REQUEST_CONS_OVERFLOW(&netdev->rx_ring, rc)) {
./tools/qemu-xen/hw/xen_nic.c:        xen_be_printf(&netdev->xendev, 2, "no buffer, drop packet\n");
./tools/qemu-xen/hw/xen_nic.c:        xen_be_printf(&netdev->xendev, 0, "packet too big (%lu > %ld)",
./tools/qemu-xen/hw/xen_nic.c:    memcpy(&rxreq, RING_GET_REQUEST(&netdev->rx_ring, rc), sizeof(rxreq));
./tools/qemu-xen/hw/xen_nic.c:    netdev->rx_ring.req_cons = ++rc;
./tools/qemu-xen/hw/xen_nic.c:    page = xc_gnttab_map_grant_ref(netdev->xendev.gnttabdev,
./tools/qemu-xen/hw/xen_nic.c:                                   netdev->xendev.dom,
./tools/qemu-xen/hw/xen_nic.c:        xen_be_printf(&netdev->xendev, 0, "error: rx gref dereference failed (%d)\n",
./tools/qemu-xen/hw/xen_nic.c:    xc_gnttab_munmap(netdev->xendev.gnttabdev, page, 1);
./tools/qemu-xen/hw/xen_nic.c:    if (netdev->mac == NULL) {
./tools/qemu-xen/hw/xen_nic.c:        netdev->mac = xenstore_read_be_str(&netdev->xendev, "mac");
./tools/qemu-xen/hw/xen_nic.c:    if (netdev->mac == NULL) {
./tools/qemu-xen/hw/xen_nic.c:    if (net_parse_macaddr(netdev->conf.macaddr.a, netdev->mac) < 0) {
./tools/qemu-xen/hw/xen_nic.c:    netdev->conf.vlan = qemu_find_vlan(netdev->xendev.dev, 1);
./tools/qemu-xen/hw/xen_nic.c:    netdev->conf.peer = NULL;
./tools/qemu-xen/hw/xen_nic.c:    netdev->nic = qemu_new_nic(&net_xen_info, &netdev->conf,
./tools/qemu-xen/hw/xen_nic.c:    snprintf(netdev->nic->nc.info_str, sizeof(netdev->nic->nc.info_str),
./tools/qemu-xen/hw/xen_nic.c:             "nic: xenbus vif macaddr=%s", netdev->mac);
./tools/qemu-xen/hw/xen_nic.c:    xenstore_write_be_int(&netdev->xendev, "feature-rx-copy", 1);
./tools/qemu-xen/hw/xen_nic.c:    xenstore_write_be_int(&netdev->xendev, "feature-rx-flip", 0);
./tools/qemu-xen/hw/xen_nic.c:    if (xenstore_read_fe_int(&netdev->xendev, "tx-ring-ref",
./tools/qemu-xen/hw/xen_nic.c:                             &netdev->tx_ring_ref) == -1) {
./tools/qemu-xen/hw/xen_nic.c:    if (xenstore_read_fe_int(&netdev->xendev, "rx-ring-ref",
./tools/qemu-xen/hw/xen_nic.c:                             &netdev->rx_ring_ref) == -1) {
./tools/qemu-xen/hw/xen_nic.c:    if (xenstore_read_fe_int(&netdev->xendev, "event-channel",
./tools/qemu-xen/hw/xen_nic.c:                             &netdev->xendev.remote_port) == -1) {
./tools/qemu-xen/hw/xen_nic.c:    if (xenstore_read_fe_int(&netdev->xendev, "request-rx-copy", &rx_copy) == -1) {
./tools/qemu-xen/hw/xen_nic.c:        xen_be_printf(&netdev->xendev, 0, "frontend doesn't support rx-copy.\n");
./tools/qemu-xen/hw/xen_nic.c:    netdev->txs = xc_gnttab_map_grant_ref(netdev->xendev.gnttabdev,
./tools/qemu-xen/hw/xen_nic.c:                                          netdev->xendev.dom,
./tools/qemu-xen/hw/xen_nic.c:                                          netdev->tx_ring_ref,
./tools/qemu-xen/hw/xen_nic.c:    netdev->rxs = xc_gnttab_map_grant_ref(netdev->xendev.gnttabdev,
./tools/qemu-xen/hw/xen_nic.c:                                          netdev->xendev.dom,
./tools/qemu-xen/hw/xen_nic.c:                                          netdev->rx_ring_ref,
./tools/qemu-xen/hw/xen_nic.c:    if (!netdev->txs || !netdev->rxs) {
./tools/qemu-xen/hw/xen_nic.c:    BACK_RING_INIT(&netdev->tx_ring, netdev->txs, XC_PAGE_SIZE);
./tools/qemu-xen/hw/xen_nic.c:    BACK_RING_INIT(&netdev->rx_ring, netdev->rxs, XC_PAGE_SIZE);
./tools/qemu-xen/hw/xen_nic.c:    xen_be_bind_evtchn(&netdev->xendev);
./tools/qemu-xen/hw/xen_nic.c:    xen_be_printf(&netdev->xendev, 1, "ok: tx-ring-ref %d, rx-ring-ref %d, "
./tools/qemu-xen/hw/xen_nic.c:                  netdev->tx_ring_ref, netdev->rx_ring_ref,
./tools/qemu-xen/hw/xen_nic.c:                  netdev->xendev.remote_port, netdev->xendev.local_port);
./tools/qemu-xen/hw/xen_nic.c:    xen_be_unbind_evtchn(&netdev->xendev);
./tools/qemu-xen/hw/xen_nic.c:    if (netdev->txs) {
./tools/qemu-xen/hw/xen_nic.c:        xc_gnttab_munmap(netdev->xendev.gnttabdev, netdev->txs, 1);
./tools/qemu-xen/hw/xen_nic.c:        netdev->txs = NULL;
./tools/qemu-xen/hw/xen_nic.c:    if (netdev->rxs) {
./tools/qemu-xen/hw/xen_nic.c:        xc_gnttab_munmap(netdev->xendev.gnttabdev, netdev->rxs, 1);
./tools/qemu-xen/hw/xen_nic.c:        netdev->rxs = NULL;
./tools/qemu-xen/hw/xen_nic.c:    if (netdev->nic) {
./tools/qemu-xen/hw/xen_nic.c:        qemu_del_vlan_client(&netdev->nic->nc);
./tools/qemu-xen/hw/xen_nic.c:        netdev->nic = NULL;
./tools/qemu-xen/hw/xen_nic.c:    g_free(netdev->mac);
./tools/qemu-xen/hw/xilinx_ethlite.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/pc_piix.c:        idebus[0] = qdev_get_child_bus(&dev->qdev, "ide.0");
./tools/qemu-xen/hw/pc_piix.c:        idebus[1] = qdev_get_child_bus(&dev->qdev, "ide.1");
./tools/qemu-xen/hw/pc_piix.c:            idebus[i] = qdev_get_child_bus(&dev->qdev, "ide.0");
./tools/qemu-xen/hw/usb-msd.c:    if (qdev_prop_set_drive(&dev->qdev, "drive", dinfo->bdrv) < 0) {
./tools/qemu-xen/hw/usb-msd.c:        qdev_free(&dev->qdev);
./tools/qemu-xen/hw/usb-msd.c:    if (qdev_init(&dev->qdev) < 0)
./tools/qemu-xen/hw/apb_pci.c:    return ((pci_dev->devfn & 0x18) >> 1) + irq_num;
./tools/qemu-xen/hw/apb_pci.c:    if (pci_dev->devfn & 1)
./tools/qemu-xen/hw/apb_pci.c:    pci_set_word(dev->config + PCI_COMMAND,
./tools/qemu-xen/hw/apb_pci.c:    pci_set_word(dev->config + PCI_STATUS,
./tools/qemu-xen/hw/apb_pci.c:    qdev_init_nofail(&pci_dev->qdev);
./tools/qemu-xen/hw/apb_pci.c:    qdev_init_nofail(&pci_dev->qdev);
./tools/qemu-xen/hw/usb-musb.c:        if (s->port.dev->speed == USB_SPEED_LOW) {
./tools/qemu-xen/hw/usb-musb.c:                            s->port.dev->speed == USB_SPEED_HIGH)
./tools/qemu-xen/hw/lm32_pic.c:    qdev_init_gpio_in(&dev->qdev, irq_handler, 32);
./tools/qemu-xen/hw/mips_r4k.c:    env->active_tc.PC = s->vector;
./tools/qemu-xen/hw/mips_r4k.c:    reset_info->vector = env->active_tc.PC;
./tools/qemu-xen/hw/mips_r4k.c:    i8259 = i8259_init(env->irq[2]);
./tools/qemu-xen/hw/pxa2xx_dma.c:    qdev_init_gpio_in(&dev->qdev, pxa2xx_dma_request, PXA2XX_DMA_NUM_REQUESTS);
./tools/qemu-xen/hw/gt64xxx.c:    slot = (pci_dev->devfn >> 3);
./tools/qemu-xen/hw/gt64xxx.c:    pic_irq = piix4_dev->config[0x60 + irq_num];
./tools/qemu-xen/hw/gt64xxx.c:            if (pic_irq == piix4_dev->config[0x60 + i])
./tools/qemu-xen/hw/ppc440_bamboo.c:        env->gpr[1] = (16<<20) - 8;
./tools/qemu-xen/hw/ppc440_bamboo.c:        env->gpr[3] = FDT_ADDR;
./tools/qemu-xen/hw/ppc440_bamboo.c:        env->nip = entry;
./tools/qemu-xen/hw/mips_fulong2e.c:    stl_raw(p++, 0x3c070000 | (loaderparams.ram_size >> 16));      /* lui a3, high(env->ram_size) */
./tools/qemu-xen/hw/mips_fulong2e.c:    stl_raw(p++, 0x34e70000 | (loaderparams.ram_size & 0xffff));   /* ori a3, a3, low(env->ram_size) */
./tools/qemu-xen/hw/mips_fulong2e.c:        env->CP0_Status &= ~((1 << CP0St_BEV) | (1 << CP0St_ERL));
./tools/qemu-xen/hw/mips_fulong2e.c:    pci_bus = bonito_init((qemu_irq *)&(env->irq[2]));
./tools/qemu-xen/hw/mips_fulong2e.c:    i8259 = i8259_init(env->irq[5]);
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->regs[5] = boot_info.cmdline;
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->regs[7] = boot_info.fdt;
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->sregs[SR_PC] = boot_info.bootstrap_pc;
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->pvr.regs[10] = 0x0e000000; /* virtex 6 */
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->pvr.regs[5] |= PVR5_DCACHE_WRITEBACK_MASK;
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->pvr.regs[0] |= PVR0_USE_FPU_MASK | PVR0_ENDI;
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->pvr.regs[0] = (env->pvr.regs[0] & ~PVR0_VERSION_MASK) | (0x14 << 8);
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->pvr.regs[2] ^= PVR2_USE_FPU2_MASK;
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->pvr.regs[4] = 0xc56b8000;
./tools/qemu-xen/hw/petalogix_ml605_mmu.c:    env->pvr.regs[5] = 0xc56be000;
./tools/qemu-xen/hw/xen_devconfig.c:    snprintf(disk->bdrv->device_name, sizeof(disk->bdrv->device_name),
./tools/qemu-xen/hw/xen_devconfig.c:                  disk->unit, disk->bdrv->device_name, disk->bdrv->filename);
./tools/qemu-xen/hw/xen_devconfig.c:    xenstore_write_str(be, "dev",             disk->bdrv->device_name);
./tools/qemu-xen/hw/xen_devconfig.c:    xenstore_write_str(be, "params",          disk->bdrv->filename);
./tools/qemu-xen/hw/usb-ccid.c:    h->b.hdr.bSlot = recv->bSlot;
./tools/qemu-xen/hw/usb-ccid.c:    h->b.hdr.bSeq = recv->bSeq;
./tools/qemu-xen/hw/usb-ccid.c:    h->b.hdr.bSlot = recv->bSlot;
./tools/qemu-xen/hw/usb-ccid.c:    h->b.hdr.bSeq = recv->bSeq;
./tools/qemu-xen/hw/usb-ccid.c:    ccid_write_data_block(s, recv->bSlot, recv->bSeq, atr, len);
./tools/qemu-xen/hw/usb-ccid.c:        ccid_write_data_block_error(s, recv->hdr.bSlot, recv->hdr.bSeq);
./tools/qemu-xen/hw/usb-ccid.c:    len = le32_to_cpu(recv->hdr.dwLength);
./tools/qemu-xen/hw/usb-ccid.c:                recv->hdr.bSeq, len);
./tools/qemu-xen/hw/usb-ccid.c:        s->cardinfo->apdu_from_guest(s->card, recv->abData, len);
./tools/qemu-xen/hw/usb-ccid.c:    CCIDCardInfo *info = DO_UPCAST(CCIDCardInfo, qdev, qdev->info);
./tools/qemu-xen/hw/usb-ccid.c:    qbus_create_inplace(&s->bus.qbus, &ccid_bus_info, &dev->qdev, NULL);
./tools/qemu-xen/hw/pl022.c:    s->ssi = ssi_create_bus(&dev->qdev, "ssi");
./tools/qemu-xen/hw/pl022.c:    vmstate_register(&dev->qdev, -1, &vmstate_pl022, s);
./tools/qemu-xen/hw/bt.c:    dev->inquiry_scan = 1;
./tools/qemu-xen/hw/bt.c:    dev->page_scan = 1;
./tools/qemu-xen/hw/bt.c:    dev->bd_addr.b[0] = bt_dev_idx & 0xff;
./tools/qemu-xen/hw/bt.c:    dev->bd_addr.b[1] = bt_dev_idx >> 8;
./tools/qemu-xen/hw/bt.c:    dev->bd_addr.b[2] = 0xd0;
./tools/qemu-xen/hw/bt.c:    dev->bd_addr.b[3] = 0xba;
./tools/qemu-xen/hw/bt.c:    dev->bd_addr.b[4] = 0xbe;
./tools/qemu-xen/hw/bt.c:    dev->bd_addr.b[5] = 0xba;
./tools/qemu-xen/hw/bt.c:    dev->lmp_connection_complete = bt_dummy_lmp_connection_complete;
./tools/qemu-xen/hw/bt.c:    dev->lmp_disconnect_master = bt_dummy_lmp_disconnect_master;
./tools/qemu-xen/hw/bt.c:    dev->lmp_acl_resp = bt_dummy_lmp_acl_resp;
./tools/qemu-xen/hw/bt.c:    dev->lmp_mode_change = bt_dummy_lmp_mode_change;
./tools/qemu-xen/hw/bt.c:    dev->lmp_connection_request = bt_dummy_lmp_connection_request;
./tools/qemu-xen/hw/bt.c:    dev->lmp_disconnect_slave = bt_dummy_lmp_disconnect_slave;
./tools/qemu-xen/hw/bt.c:    dev->handle_destroy = bt_dummy_destroy;
./tools/qemu-xen/hw/bt.c:    dev->net = net;
./tools/qemu-xen/hw/bt.c:    dev->next = net->slave;
./tools/qemu-xen/hw/bt.c:    struct bt_device_s **p = &dev->net->slave;
./tools/qemu-xen/hw/bt.c:                        dev->lmp_name ?: "(null)");
./tools/qemu-xen/hw/bt.c:    *p = dev->next;
./tools/qemu-xen/hw/ioapic.c:    qdev_init_gpio_in(&dev->qdev, ioapic_set_irq, IOAPIC_NUM_PINS);
./tools/qemu-xen/hw/spapr_vscsi.c:    dev->crq.SendFunc = vscsi_do_crq;
./tools/qemu-xen/hw/spapr_vscsi.c:    scsi_bus_new(&s->bus, &dev->qdev, &vscsi_scsi_info);
./tools/qemu-xen/hw/spapr_vscsi.c:    if (!dev->qdev.hotplugged) {
./tools/qemu-xen/hw/spapr_vscsi.c:    .dt_name = "v-scsi",
./tools/qemu-xen/hw/spapr_vscsi.c:    .dt_compatible = "IBM,v-scsi",
./tools/qemu-xen/hw/an5206.c:    env->vbr = 0;
./tools/qemu-xen/hw/an5206.c:    env->mbar = AN5206_MBAR_ADDR | 1;
./tools/qemu-xen/hw/an5206.c:    env->rambar0 = AN5206_RAMBAR_ADDR | 1;
./tools/qemu-xen/hw/an5206.c:    env->pc = entry;
./tools/qemu-xen/hw/pxa2xx_pic.c:    if (s->cpu_env->halted) {
./tools/qemu-xen/hw/omap_gpio.c:    qdev_init_gpio_in(&dev->qdev, omap_gpio_set, 16);
./tools/qemu-xen/hw/omap_gpio.c:    qdev_init_gpio_out(&dev->qdev, s->omap1.handler, 16);
./tools/qemu-xen/hw/omap_gpio.c:    qdev_init_gpio_in(&dev->qdev, omap2_gpio_set, s->modulecount * 32);
./tools/qemu-xen/hw/omap_gpio.c:    qdev_init_gpio_out(&dev->qdev, s->handler, s->modulecount * 32);
./tools/qemu-xen/hw/spapr_rtas.c:    for (env = first_cpu; env; env = env->next_cpu) {
./tools/qemu-xen/hw/spapr_rtas.c:        if (env->cpu_index != id) {
./tools/qemu-xen/hw/spapr_rtas.c:        if (env->halted) {
./tools/qemu-xen/hw/spapr_rtas.c:    for (env = first_cpu; env; env = env->next_cpu) {
./tools/qemu-xen/hw/spapr_rtas.c:        if (env->cpu_index != id) {
./tools/qemu-xen/hw/spapr_rtas.c:        if (!env->halted) {
./tools/qemu-xen/hw/spapr_rtas.c:        env->msr = (1ULL << MSR_SF) | (1ULL << MSR_ME);
./tools/qemu-xen/hw/spapr_rtas.c:        env->nip = start;
./tools/qemu-xen/hw/spapr_rtas.c:        env->gpr[3] = r3;
./tools/qemu-xen/hw/spapr_rtas.c:        env->halted = 0;
./tools/qemu-xen/hw/milkymist-minimac2.c:#include "qdev-addr.h"
./tools/qemu-xen/hw/milkymist-minimac2.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/pl061.c:    qdev_init_gpio_in(&dev->qdev, pl061_set_irq, 8);
./tools/qemu-xen/hw/pl061.c:    qdev_init_gpio_out(&dev->qdev, s->out, 8);
./tools/qemu-xen/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_INT];
./tools/qemu-xen/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_INT];
./tools/qemu-xen/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_MCP];
./tools/qemu-xen/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC6xx_INPUT_HRESET];
./tools/qemu-xen/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_INT];
./tools/qemu-xen/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_INT];
./tools/qemu-xen/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_MCP];
./tools/qemu-xen/hw/ppc_newworld.c:                ((qemu_irq *)env->irq_inputs)[PPC970_INPUT_HRESET];
./tools/qemu-xen/hw/pcnet.c:    s->nic = qemu_new_nic(info, &s->conf, dev->info->name, dev->id, s);
./tools/qemu-xen/hw/intel-hda.c:    HDACodecBus *bus = DO_UPCAST(HDACodecBus, qbus, qdev->parent_bus);
./tools/qemu-xen/hw/intel-hda.c:    dev->info = info;
./tools/qemu-xen/hw/intel-hda.c:    if (dev->cad == -1) {
./tools/qemu-xen/hw/intel-hda.c:        dev->cad = bus->next_cad;
./tools/qemu-xen/hw/intel-hda.c:    if (dev->cad >= 15) {
./tools/qemu-xen/hw/intel-hda.c:    bus->next_cad = dev->cad + 1;
./tools/qemu-xen/hw/intel-hda.c:    if (dev->info->exit) {
./tools/qemu-xen/hw/intel-hda.c:        dev->info->exit(dev);
./tools/qemu-xen/hw/intel-hda.c:        if (cdev->cad == cad) {
./tools/qemu-xen/hw/intel-hda.c:    HDACodecBus *bus = DO_UPCAST(HDACodecBus, qbus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/intel-hda.c:    HDACodecBus *bus = DO_UPCAST(HDACodecBus, qbus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/intel-hda.c:    HDACodecBus *bus = DO_UPCAST(HDACodecBus, qbus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/intel-hda.c:               __FUNCTION__, response, dev->cad);
./tools/qemu-xen/hw/intel-hda.c:        d->ics |= (ICH6_IRS_VALID | (dev->cad << 4));
./tools/qemu-xen/hw/intel-hda.c:    ex = (solicited ? 0 : (1 << 4)) | dev->cad;
./tools/qemu-xen/hw/intel-hda.c:    HDACodecBus *bus = DO_UPCAST(HDACodecBus, qbus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/intel-hda.c:        if (cdev->info->stream) {
./tools/qemu-xen/hw/intel-hda.c:            cdev->info->stream(cdev, stream, running, output);
./tools/qemu-xen/hw/intel-hda.c:        if (qdev->info->reset) {
./tools/qemu-xen/hw/intel-hda.c:            qdev->info->reset(qdev);
./tools/qemu-xen/hw/intel-hda.c:        d->state_sts |= (1 << cdev->cad);
./tools/qemu-xen/hw/musicpal.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/musicpal.c:    qdev_init_gpio_in(&dev->qdev, musicpal_lcd_gpio_brigthness_in, 3);
./tools/qemu-xen/hw/musicpal.c:    qdev_init_gpio_in(&dev->qdev, mv88w8618_pic_set_irq, 32);
./tools/qemu-xen/hw/musicpal.c:    qdev_init_gpio_out(&dev->qdev, s->out, ARRAY_SIZE(s->out));
./tools/qemu-xen/hw/musicpal.c:    qdev_init_gpio_in(&dev->qdev, musicpal_gpio_pin_event, 32);
./tools/qemu-xen/hw/musicpal.c:    qdev_init_gpio_out(&dev->qdev, s->out, ARRAY_SIZE(s->out));
./tools/qemu-xen/hw/arm_timer.c:    vmstate_register(&dev->qdev, -1, &vmstate_sp804, s);
./tools/qemu-xen/hw/pci.c:        bus = pci_dev->bus;
./tools/qemu-xen/hw/pci.c:    if (dev->irq_state) {
./tools/qemu-xen/hw/pci.c:        dev->config[PCI_STATUS] |= PCI_STATUS_INTERRUPT;
./tools/qemu-xen/hw/pci.c:        dev->config[PCI_STATUS] &= ~PCI_STATUS_INTERRUPT;
./tools/qemu-xen/hw/pci.c:        qemu_set_irq(dev->irq[i], 0);
./tools/qemu-xen/hw/pci.c:    if (dev->qdev.info) {
./tools/qemu-xen/hw/pci.c:        qdev_reset_all(&dev->qdev);
./tools/qemu-xen/hw/pci.c:    dev->irq_state = 0;
./tools/qemu-xen/hw/pci.c:    pci_word_test_and_clear_mask(dev->config + PCI_COMMAND,
./tools/qemu-xen/hw/pci.c:                                 pci_get_word(dev->wmask + PCI_COMMAND) |
./tools/qemu-xen/hw/pci.c:                                 pci_get_word(dev->w1cmask + PCI_COMMAND));
./tools/qemu-xen/hw/pci.c:    pci_word_test_and_clear_mask(dev->config + PCI_STATUS,
./tools/qemu-xen/hw/pci.c:                                 pci_get_word(dev->wmask + PCI_STATUS) |
./tools/qemu-xen/hw/pci.c:                                 pci_get_word(dev->w1cmask + PCI_STATUS));
./tools/qemu-xen/hw/pci.c:    dev->config[PCI_CACHE_LINE_SIZE] = 0x0;
./tools/qemu-xen/hw/pci.c:    dev->config[PCI_INTERRUPT_LINE] = 0x0;
./tools/qemu-xen/hw/pci.c:        PCIIORegion *region = &dev->io_regions[r];
./tools/qemu-xen/hw/pci.c:            pci_set_quad(dev->config + pci_bar(dev, r), region->type);
./tools/qemu-xen/hw/pci.c:            pci_set_long(dev->config + pci_bar(dev, r), region->type);
./tools/qemu-xen/hw/pci.c:    return s->parent_dev->config[PCI_SECONDARY_BUS];
./tools/qemu-xen/hw/pci.c:    pci_set_word(pci_dev->config + PCI_SUBSYSTEM_VENDOR_ID,
./tools/qemu-xen/hw/pci.c:    pci_set_word(pci_dev->config + PCI_SUBSYSTEM_ID,
./tools/qemu-xen/hw/pci.c:    pci_set_word(dev->cmask + PCI_VENDOR_ID, 0xffff);
./tools/qemu-xen/hw/pci.c:    pci_set_word(dev->cmask + PCI_DEVICE_ID, 0xffff);
./tools/qemu-xen/hw/pci.c:    dev->cmask[PCI_STATUS] = PCI_STATUS_CAP_LIST;
./tools/qemu-xen/hw/pci.c:    dev->cmask[PCI_REVISION_ID] = 0xff;
./tools/qemu-xen/hw/pci.c:    dev->cmask[PCI_CLASS_PROG] = 0xff;
./tools/qemu-xen/hw/pci.c:    pci_set_word(dev->cmask + PCI_CLASS_DEVICE, 0xffff);
./tools/qemu-xen/hw/pci.c:    dev->cmask[PCI_HEADER_TYPE] = 0xff;
./tools/qemu-xen/hw/pci.c:    dev->cmask[PCI_CAPABILITY_LIST] = 0xff;
./tools/qemu-xen/hw/pci.c:    dev->wmask[PCI_CACHE_LINE_SIZE] = 0xff;
./tools/qemu-xen/hw/pci.c:    dev->wmask[PCI_INTERRUPT_LINE] = 0xff;
./tools/qemu-xen/hw/pci.c:    pci_set_word(dev->wmask + PCI_COMMAND,
./tools/qemu-xen/hw/pci.c:    if (dev->cap_present & QEMU_PCI_CAP_SERR) {
./tools/qemu-xen/hw/pci.c:        pci_word_test_and_set_mask(dev->wmask + PCI_COMMAND, PCI_COMMAND_SERR);
./tools/qemu-xen/hw/pci.c:    memset(dev->wmask + PCI_CONFIG_HEADER_SIZE, 0xff,
./tools/qemu-xen/hw/pci.c:    pci_set_word(dev->w1cmask + PCI_STATUS,
./tools/qemu-xen/hw/pci.c:    uint8_t slot = PCI_SLOT(dev->devfn);
./tools/qemu-xen/hw/pci.c:    if (dev->cap_present & QEMU_PCI_CAP_MULTIFUNCTION) {
./tools/qemu-xen/hw/pci.c:        dev->config[PCI_HEADER_TYPE] |= PCI_HEADER_TYPE_MULTI_FUNCTION;
./tools/qemu-xen/hw/pci.c:    if (PCI_FUNC(dev->devfn)) {
./tools/qemu-xen/hw/pci.c:                         "in function %x.%x", slot, PCI_FUNC(dev->devfn));
./tools/qemu-xen/hw/pci.c:    if (dev->cap_present & QEMU_PCI_CAP_MULTIFUNCTION) {
./tools/qemu-xen/hw/pci.c:    pci_dev->config = g_malloc0(config_size);
./tools/qemu-xen/hw/pci.c:    pci_dev->cmask = g_malloc0(config_size);
./tools/qemu-xen/hw/pci.c:    pci_dev->wmask = g_malloc0(config_size);
./tools/qemu-xen/hw/pci.c:    pci_dev->w1cmask = g_malloc0(config_size);
./tools/qemu-xen/hw/pci.c:    pci_dev->used = g_malloc0(config_size);
./tools/qemu-xen/hw/pci.c:    g_free(pci_dev->config);
./tools/qemu-xen/hw/pci.c:    g_free(pci_dev->cmask);
./tools/qemu-xen/hw/pci.c:    g_free(pci_dev->wmask);
./tools/qemu-xen/hw/pci.c:    g_free(pci_dev->w1cmask);
./tools/qemu-xen/hw/pci.c:    g_free(pci_dev->used);
./tools/qemu-xen/hw/pci.c:    pci_dev->bus = bus;
./tools/qemu-xen/hw/pci.c:    pci_dev->devfn = devfn;
./tools/qemu-xen/hw/pci.c:    pstrcpy(pci_dev->name, sizeof(pci_dev->name), name);
./tools/qemu-xen/hw/pci.c:    pci_dev->irq_state = 0;
./tools/qemu-xen/hw/pci.c:    pci_config_set_vendor_id(pci_dev->config, info->vendor_id);
./tools/qemu-xen/hw/pci.c:    pci_config_set_device_id(pci_dev->config, info->device_id);
./tools/qemu-xen/hw/pci.c:    pci_config_set_revision(pci_dev->config, info->revision);
./tools/qemu-xen/hw/pci.c:    pci_config_set_class(pci_dev->config, info->class_id);
./tools/qemu-xen/hw/pci.c:            pci_set_word(pci_dev->config + PCI_SUBSYSTEM_VENDOR_ID,
./tools/qemu-xen/hw/pci.c:            pci_set_word(pci_dev->config + PCI_SUBSYSTEM_ID,
./tools/qemu-xen/hw/pci.c:    pci_dev->config_read = config_read;
./tools/qemu-xen/hw/pci.c:    pci_dev->config_write = config_write;
./tools/qemu-xen/hw/pci.c:    pci_dev->irq = qemu_allocate_irqs(pci_set_irq, pci_dev, PCI_NUM_PINS);
./tools/qemu-xen/hw/pci.c:    pci_dev->version_id = 2; /* Current pci device vmstate version */
./tools/qemu-xen/hw/pci.c:    qemu_free_irqs(pci_dev->irq);
./tools/qemu-xen/hw/pci.c:    pci_dev->bus->devices[pci_dev->devfn] = NULL;
./tools/qemu-xen/hw/pci.c:        r = &pci_dev->io_regions[i];
./tools/qemu-xen/hw/pci.c:    PCIDeviceInfo *info = DO_UPCAST(PCIDeviceInfo, qdev, dev->info);
./tools/qemu-xen/hw/pci.c:    g_free(pci_dev->romfile);
./tools/qemu-xen/hw/pci.c:    r = &pci_dev->io_regions[region_num];
./tools/qemu-xen/hw/pci.c:    pci_set_long(pci_dev->config + addr, type);
./tools/qemu-xen/hw/pci.c:        pci_set_quad(pci_dev->wmask + addr, wmask);
./tools/qemu-xen/hw/pci.c:        pci_set_quad(pci_dev->cmask + addr, ~0ULL);
./tools/qemu-xen/hw/pci.c:        pci_set_long(pci_dev->wmask + addr, wmask & 0xffffffff);
./tools/qemu-xen/hw/pci.c:        pci_set_long(pci_dev->cmask + addr, 0xffffffff);
./tools/qemu-xen/hw/pci.c:    pci_dev->io_regions[region_num].memory = memory;
./tools/qemu-xen/hw/pci.c:    pci_dev->io_regions[region_num].address_space
./tools/qemu-xen/hw/pci.c:        ? pci_dev->bus->address_space_io
./tools/qemu-xen/hw/pci.c:        : pci_dev->bus->address_space_mem;
./tools/qemu-xen/hw/pci.c:    return pci_dev->io_regions[region_num].addr;
./tools/qemu-xen/hw/pci.c:        const PCIIORegion *r = &dev->io_regions[i];
./tools/qemu-xen/hw/pci.c:    info->bus.number = dev->config[PCI_PRIMARY_BUS];
./tools/qemu-xen/hw/pci.c:    info->bus.secondary = dev->config[PCI_SECONDARY_BUS];
./tools/qemu-xen/hw/pci.c:    info->bus.subordinate = dev->config[PCI_SUBORDINATE_BUS];
./tools/qemu-xen/hw/pci.c:    if (dev->config[PCI_SECONDARY_BUS] != 0) {
./tools/qemu-xen/hw/pci.c:        PCIBus *child_bus = pci_find_bus(bus, dev->config[PCI_SECONDARY_BUS]);
./tools/qemu-xen/hw/pci.c:            info->devices = qmp_query_pci_devices(child_bus, dev->config[PCI_SECONDARY_BUS]);
./tools/qemu-xen/hw/pci.c:    info->slot = PCI_SLOT(dev->devfn);
./tools/qemu-xen/hw/pci.c:    info->function = PCI_FUNC(dev->devfn);
./tools/qemu-xen/hw/pci.c:    class = pci_get_word(dev->config + PCI_CLASS_DEVICE);
./tools/qemu-xen/hw/pci.c:    info->id.vendor = pci_get_word(dev->config + PCI_VENDOR_ID);
./tools/qemu-xen/hw/pci.c:    info->id.device = pci_get_word(dev->config + PCI_DEVICE_ID);
./tools/qemu-xen/hw/pci.c:    info->qdev_id = g_strdup(dev->qdev.id ? dev->qdev.id : "");
./tools/qemu-xen/hw/pci.c:    if (dev->config[PCI_INTERRUPT_PIN] != 0) {
./tools/qemu-xen/hw/pci.c:        info->irq = dev->config[PCI_INTERRUPT_LINE];
./tools/qemu-xen/hw/pci.c:    type = dev->config[PCI_HEADER_TYPE] & ~PCI_HEADER_TYPE_MULTI_FUNCTION;
./tools/qemu-xen/hw/pci.c:    dev = &pci_dev->qdev;
./tools/qemu-xen/hw/pci.c:    return !(pci_get_word(dev->config + PCI_BRIDGE_CONTROL) &
./tools/qemu-xen/hw/pci.c:        dev->config[PCI_SECONDARY_BUS] < bus_num &&
./tools/qemu-xen/hw/pci.c:        bus_num <= dev->config[PCI_SUBORDINATE_BUS];
./tools/qemu-xen/hw/pci.c:            if (sec->parent_dev->config[PCI_SECONDARY_BUS] == bus_num) {
./tools/qemu-xen/hw/pci.c:        pci_dev->cap_present |= QEMU_PCI_CAP_EXPRESS;
./tools/qemu-xen/hw/pci.c:                                     pci_dev->devfn, info);
./tools/qemu-xen/hw/pci.c:    if (qdev->hotplugged && info->no_hotplug) {
./tools/qemu-xen/hw/pci.c:    if (pci_dev->romfile == NULL && info->romfile != NULL) {
./tools/qemu-xen/hw/pci.c:        pci_dev->romfile = g_strdup(info->romfile);
./tools/qemu-xen/hw/pci.c:                          qdev->hotplugged ? PCI_HOTPLUG_ENABLED:
./tools/qemu-xen/hw/pci.c:            int r = pci_unregister_device(&pci_dev->qdev);
./tools/qemu-xen/hw/pci.c:    PCIDeviceInfo *info = container_of(qdev->info, PCIDeviceInfo, qdev);
./tools/qemu-xen/hw/pci.c:    return dev->bus->hotplug(dev->bus->hotplug_qdev, dev,
./tools/qemu-xen/hw/pci.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/pci.c:        if (pdev->used[i])
./tools/qemu-xen/hw/pci.c:    if (!(pdev->config[PCI_STATUS] & PCI_STATUS_CAP_LIST))
./tools/qemu-xen/hw/pci.c:    for (prev = PCI_CAPABILITY_LIST; (next = pdev->config[prev]);
./tools/qemu-xen/hw/pci.c:        if (pdev->config[next + PCI_CAP_LIST_ID] == cap_id)
./tools/qemu-xen/hw/pci.c:    if (!(pdev->used[offset])) {
./tools/qemu-xen/hw/pci.c:    assert(pdev->config[PCI_STATUS] & PCI_STATUS_CAP_LIST);
./tools/qemu-xen/hw/pci.c:    for (prev = PCI_CAPABILITY_LIST; (next = pdev->config[prev]);
./tools/qemu-xen/hw/pci.c:    vendor_id = pci_get_word(pdev->config + PCI_VENDOR_ID);
./tools/qemu-xen/hw/pci.c:    device_id = pci_get_word(pdev->config + PCI_DEVICE_ID);
./tools/qemu-xen/hw/pci.c:    PCI_DPRINTF("%s: ROM id %04x%04x / PCI id %04x%04x\n", pdev->romfile,
./tools/qemu-xen/hw/pci.c:    if (!pdev->romfile)
./tools/qemu-xen/hw/pci.c:    if (strlen(pdev->romfile) == 0)
./tools/qemu-xen/hw/pci.c:    if (!pdev->rom_bar) {
./tools/qemu-xen/hw/pci.c:        int class = pci_get_word(pdev->config + PCI_CLASS_DEVICE);
./tools/qemu-xen/hw/pci.c:            rom_add_vga(pdev->romfile);
./tools/qemu-xen/hw/pci.c:            rom_add_option(pdev->romfile, -1);
./tools/qemu-xen/hw/pci.c:    path = qemu_find_file(QEMU_FILE_TYPE_BIOS, pdev->romfile);
./tools/qemu-xen/hw/pci.c:        path = g_strdup(pdev->romfile);
./tools/qemu-xen/hw/pci.c:                     __FUNCTION__, pdev->romfile);
./tools/qemu-xen/hw/pci.c:    if (pdev->qdev.info->vmsd)
./tools/qemu-xen/hw/pci.c:        snprintf(name, sizeof(name), "%s.rom", pdev->qdev.info->vmsd->name);
./tools/qemu-xen/hw/pci.c:        snprintf(name, sizeof(name), "%s.rom", pdev->qdev.info->name);
./tools/qemu-xen/hw/pci.c:    pdev->has_rom = true;
./tools/qemu-xen/hw/pci.c:    memory_region_init_ram(&pdev->rom, &pdev->qdev, name, size);
./tools/qemu-xen/hw/pci.c:    ptr = memory_region_get_ram_ptr(&pdev->rom);
./tools/qemu-xen/hw/pci.c:    pci_register_bar(pdev, PCI_ROM_SLOT, 0, &pdev->rom);
./tools/qemu-xen/hw/pci.c:    if (!pdev->has_rom)
./tools/qemu-xen/hw/pci.c:    memory_region_destroy(&pdev->rom);
./tools/qemu-xen/hw/pci.c:    pdev->has_rom = false;
./tools/qemu-xen/hw/pci.c:                        pci_find_domain(pdev->bus), pci_bus_num(pdev->bus),
./tools/qemu-xen/hw/pci.c:                        PCI_SLOT(pdev->devfn), PCI_FUNC(pdev->devfn),
./tools/qemu-xen/hw/pci.c:    config = pdev->config + offset;
./tools/qemu-xen/hw/pci.c:    config[PCI_CAP_LIST_NEXT] = pdev->config[PCI_CAPABILITY_LIST];
./tools/qemu-xen/hw/pci.c:    pdev->config[PCI_CAPABILITY_LIST] = offset;
./tools/qemu-xen/hw/pci.c:    pdev->config[PCI_STATUS] |= PCI_STATUS_CAP_LIST;
./tools/qemu-xen/hw/pci.c:    memset(pdev->used + offset, 0xFF, size);
./tools/qemu-xen/hw/pci.c:    memset(pdev->wmask + offset, 0, size);
./tools/qemu-xen/hw/pci.c:    memset(pdev->cmask + offset, 0xFF, size);
./tools/qemu-xen/hw/pci.c:    pdev->config[prev] = pdev->config[offset + PCI_CAP_LIST_NEXT];
./tools/qemu-xen/hw/pci.c:    memset(pdev->wmask + offset, 0xff, size);
./tools/qemu-xen/hw/pci.c:    memset(pdev->w1cmask + offset, 0, size);
./tools/qemu-xen/hw/pci.c:    memset(pdev->cmask + offset, 0, size);
./tools/qemu-xen/hw/pci.c:    memset(pdev->used + offset, 0, size);
./tools/qemu-xen/hw/pci.c:    if (!pdev->config[PCI_CAPABILITY_LIST])
./tools/qemu-xen/hw/pci.c:        pdev->config[PCI_STATUS] &= ~PCI_STATUS_CAP_LIST;
./tools/qemu-xen/hw/pci.c:    if (qdev->info->init == &pci_qdev_init &&
./tools/qemu-xen/hw/pci.c:        qdev->parent_bus->info == &pci_bus_info) {
./tools/qemu-xen/hw/pci.c:    return dev->bus->address_space_mem;
./tools/qemu-xen/hw/pci.c:    return dev->bus->address_space_io;
./tools/qemu-xen/hw/xics.c:    icp_set_cppr(spapr->icp, env->cpu_index, cppr);
./tools/qemu-xen/hw/xics.c:    uint32_t xirr = icp_accept(spapr->icp->ss + env->cpu_index);
./tools/qemu-xen/hw/xics.c:    icp_eoi(spapr->icp, env->cpu_index, xirr);
./tools/qemu-xen/hw/xics.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/hw/xics.c:        if (env->cpu_index > max_server_num) {
./tools/qemu-xen/hw/xics.c:            max_server_num = env->cpu_index;
./tools/qemu-xen/hw/xics.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/hw/xics.c:        struct icp_server_state *ss = &icp->ss[env->cpu_index];
./tools/qemu-xen/hw/xics.c:            ss->output = env->irq_inputs[POWER7_INPUT_INT];
./tools/qemu-xen/hw/xics.c:            ss->output = env->irq_inputs[PPC970_INPUT_INT];
./tools/qemu-xen/hw/mcf5208.c:    env->vbr = 0;
./tools/qemu-xen/hw/mcf5208.c:    env->pc = entry;
./tools/qemu-xen/hw/ppc405_boards.c:        env->gpr[3] = bdloc;
./tools/qemu-xen/hw/ppc405_boards.c:        env->gpr[4] = initrd_base;
./tools/qemu-xen/hw/ppc405_boards.c:        env->gpr[5] = initrd_size;
./tools/qemu-xen/hw/ppc405_boards.c:            env->gpr[6] = bdloc;
./tools/qemu-xen/hw/ppc405_boards.c:            env->gpr[7] = bdloc + len;
./tools/qemu-xen/hw/ppc405_boards.c:            env->gpr[6] = 0;
./tools/qemu-xen/hw/ppc405_boards.c:            env->gpr[7] = 0;
./tools/qemu-xen/hw/ppc405_boards.c:        env->nip = KERNEL_LOAD_ADDR;
./tools/qemu-xen/hw/syborg_virtio.c:        ret = vdev->guest_features;
./tools/qemu-xen/hw/syborg_virtio.c:        ret = virtio_queue_get_addr(vdev, vdev->queue_sel);
./tools/qemu-xen/hw/syborg_virtio.c:        ret = virtio_queue_get_num(vdev, vdev->queue_sel);
./tools/qemu-xen/hw/syborg_virtio.c:        ret = vdev->queue_sel;
./tools/qemu-xen/hw/syborg_virtio.c:        ret = vdev->status;
./tools/qemu-xen/hw/syborg_virtio.c:        ret = vdev->isr;
./tools/qemu-xen/hw/syborg_virtio.c:            virtio_queue_set_addr(vdev, vdev->queue_sel, value);
./tools/qemu-xen/hw/syborg_virtio.c:            vdev->queue_sel = value;
./tools/qemu-xen/hw/syborg_virtio.c:        if (vdev->status == 0)
./tools/qemu-xen/hw/syborg_virtio.c:        vdev->isr &= ~value;
./tools/qemu-xen/hw/syborg_virtio.c:    level = proxy->int_enable & proxy->vdev->isr;
./tools/qemu-xen/hw/syborg_virtio.c:    proxy->vdev->nvectors = 0;
./tools/qemu-xen/hw/syborg_virtio.c:    proxy->id = ((uint32_t)0x1af4 << 16) | vdev->device_id;
./tools/qemu-xen/hw/syborg_virtio.c:    proxy->host_features = vdev->get_features(vdev, proxy->host_features);
./tools/qemu-xen/hw/syborg_virtio.c:    vdev = virtio_net_init(&dev->qdev, &proxy->nic, &proxy->net);
./tools/qemu-xen/hw/usb.c:    assert(dev->attached);
./tools/qemu-xen/hw/usb.c:    assert(dev->state == USB_STATE_NOTATTACHED);
./tools/qemu-xen/hw/usb.c:    assert(dev->state != USB_STATE_NOTATTACHED);
./tools/qemu-xen/hw/usb.c:    if (dev->remote_wakeup && dev->port && dev->port->ops->wakeup) {
./tools/qemu-xen/hw/usb.c:        dev->port->ops->wakeup(dev->port);
./tools/qemu-xen/hw/usb.c:    ret = dev->info->handle_packet(dev, p);
./tools/qemu-xen/hw/usb.c:    dev->port->ops->complete(dev->port, p);
./tools/qemu-xen/hw/arm_boot.c:    const struct arm_boot_info *info = env->boot_info;
./tools/qemu-xen/hw/arm_boot.c:            env->regs[15] = info->entry & 0xfffffffe;
./tools/qemu-xen/hw/arm_boot.c:            env->thumb = info->entry & 1;
./tools/qemu-xen/hw/arm_boot.c:                env->regs[15] = info->loader_start;
./tools/qemu-xen/hw/arm_boot.c:                env->regs[15] = info->smp_loader_start;
./tools/qemu-xen/hw/arm_boot.c:    for (; env; env = env->next_cpu) {
./tools/qemu-xen/hw/arm_boot.c:        env->boot_info = info;
./tools/qemu-xen/hw/sh_pci.c:        cpu_to_le32w((uint32_t*)(pcic->dev->config + addr), val);
./tools/qemu-xen/hw/sh_pci.c:        return le32_to_cpup((uint32_t*)(pcic->dev->config + addr));
./tools/qemu-xen/hw/ppc.c:    unsigned int old_pending = env->pending_interrupts;
./tools/qemu-xen/hw/ppc.c:        env->pending_interrupts |= 1 << n_IRQ;
./tools/qemu-xen/hw/ppc.c:        env->pending_interrupts &= ~(1 << n_IRQ);
./tools/qemu-xen/hw/ppc.c:        if (env->pending_interrupts == 0)
./tools/qemu-xen/hw/ppc.c:    if (old_pending != env->pending_interrupts) {
./tools/qemu-xen/hw/ppc.c:                env->pending_interrupts, env->interrupt_request);
./tools/qemu-xen/hw/ppc.c:    cur_level = (env->irq_input_state >> pin) & 1;
./tools/qemu-xen/hw/ppc.c:                env->halted = 1;
./tools/qemu-xen/hw/ppc.c:                env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen/hw/ppc.c:            env->irq_input_state |= 1 << pin;
./tools/qemu-xen/hw/ppc.c:            env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&ppc6xx_set_irq, env,
./tools/qemu-xen/hw/ppc.c:    cur_level = (env->irq_input_state >> pin) & 1;
./tools/qemu-xen/hw/ppc.c:                env->halted = 1;
./tools/qemu-xen/hw/ppc.c:                env->halted = 0;
./tools/qemu-xen/hw/ppc.c:            env->irq_input_state |= 1 << pin;
./tools/qemu-xen/hw/ppc.c:            env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&ppc970_set_irq, env,
./tools/qemu-xen/hw/ppc.c:        env->irq_input_state |= 1 << pin;
./tools/qemu-xen/hw/ppc.c:        env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&power7_set_irq, env,
./tools/qemu-xen/hw/ppc.c:    cur_level = (env->irq_input_state >> pin) & 1;
./tools/qemu-xen/hw/ppc.c:                env->halted = 1;
./tools/qemu-xen/hw/ppc.c:                env->halted = 0;
./tools/qemu-xen/hw/ppc.c:            env->irq_input_state |= 1 << pin;
./tools/qemu-xen/hw/ppc.c:            env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&ppc40x_set_irq,
./tools/qemu-xen/hw/ppc.c:    cur_level = (env->irq_input_state >> pin) & 1;
./tools/qemu-xen/hw/ppc.c:            env->irq_input_state |= 1 << pin;
./tools/qemu-xen/hw/ppc.c:            env->irq_input_state &= ~(1 << pin);
./tools/qemu-xen/hw/ppc.c:    env->irq_inputs = (void **)qemu_allocate_irqs(&ppce500_set_irq,
./tools/qemu-xen/hw/ppc.c:    return muldiv64(vmclk, tb_env->tb_freq, get_ticks_per_sec()) + tb_offset;
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:        return env->spr[SPR_TBL];
./tools/qemu-xen/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock_ns(vm_clock), tb_env->tb_offset);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock_ns(vm_clock), tb_env->tb_offset);
./tools/qemu-xen/hw/ppc.c:        return env->spr[SPR_TBU];
./tools/qemu-xen/hw/ppc.c:    *tb_offsetp = value - muldiv64(vmclk, tb_env->tb_freq, get_ticks_per_sec());
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock_ns(vm_clock), tb_env->tb_offset);
./tools/qemu-xen/hw/ppc.c:                     &tb_env->tb_offset, tb | (uint64_t)value);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock_ns(vm_clock), tb_env->tb_offset);
./tools/qemu-xen/hw/ppc.c:                     &tb_env->tb_offset, ((uint64_t)value << 32) | tb);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock_ns(vm_clock), tb_env->atb_offset);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock_ns(vm_clock), tb_env->atb_offset);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock_ns(vm_clock), tb_env->atb_offset);
./tools/qemu-xen/hw/ppc.c:                     &tb_env->atb_offset, tb | (uint64_t)value);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb = cpu_ppc_get_tb(tb_env, qemu_get_clock_ns(vm_clock), tb_env->atb_offset);
./tools/qemu-xen/hw/ppc.c:                     &tb_env->atb_offset, ((uint64_t)value << 32) | tb);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    if (tb_env->tb_freq != 0) {
./tools/qemu-xen/hw/ppc.c:        tb = cpu_ppc_get_tb(tb_env, vmclk, tb_env->tb_offset);
./tools/qemu-xen/hw/ppc.c:        atb = cpu_ppc_get_tb(tb_env, vmclk, tb_env->atb_offset);
./tools/qemu-xen/hw/ppc.c:        cpu_ppc_store_tb(tb_env, vmclk, &tb_env->tb_offset, tb);
./tools/qemu-xen/hw/ppc.c:        cpu_ppc_store_tb(tb_env, vmclk, &tb_env->atb_offset, atb);
./tools/qemu-xen/hw/ppc.c:        tb_env->tb_freq = 0;
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    if (tb_env->tb_freq == 0) {
./tools/qemu-xen/hw/ppc.c:        tb = tb_env->tb_offset;
./tools/qemu-xen/hw/ppc.c:        atb = tb_env->atb_offset;
./tools/qemu-xen/hw/ppc.c:        tb_env->tb_freq = tb_env->decr_freq;
./tools/qemu-xen/hw/ppc.c:        cpu_ppc_store_tb(tb_env, vmclk, &tb_env->tb_offset, tb);
./tools/qemu-xen/hw/ppc.c:        cpu_ppc_store_tb(tb_env, vmclk, &tb_env->atb_offset, atb);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:        decr = muldiv64(diff, tb_env->decr_freq, get_ticks_per_sec());
./tools/qemu-xen/hw/ppc.c:    } else if (tb_env->flags & PPC_TIMER_BOOKE) {
./tools/qemu-xen/hw/ppc.c:        decr = -muldiv64(-diff, tb_env->decr_freq, get_ticks_per_sec());
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:        return env->spr[SPR_DECR];
./tools/qemu-xen/hw/ppc.c:    return _cpu_ppc_load_decr(env, tb_env->decr_next);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    return _cpu_ppc_load_decr(env, tb_env->hdecr_next);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    diff = qemu_get_clock_ns(vm_clock) - tb_env->purr_start;
./tools/qemu-xen/hw/ppc.c:    return tb_env->purr_load + muldiv64(diff, tb_env->tb_freq, get_ticks_per_sec());
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    next = now + muldiv64(value, get_ticks_per_sec(), tb_env->decr_freq);
./tools/qemu-xen/hw/ppc.c:    if ((tb_env->flags & PPC_DECR_UNDERFLOW_TRIGGERED)
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    __cpu_ppc_store_decr(env, &tb_env->decr_next, tb_env->decr_timer,
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    if (tb_env->hdecr_timer != NULL) {
./tools/qemu-xen/hw/ppc.c:        __cpu_ppc_store_decr(env, &tb_env->hdecr_next, tb_env->hdecr_timer,
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb_env->purr_load = value;
./tools/qemu-xen/hw/ppc.c:    tb_env->purr_start = qemu_get_clock_ns(vm_clock);
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb_env->tb_freq = freq;
./tools/qemu-xen/hw/ppc.c:    tb_env->decr_freq = freq;
./tools/qemu-xen/hw/ppc.c:    env->tb_env = tb_env;
./tools/qemu-xen/hw/ppc.c:    tb_env->flags = PPC_DECR_UNDERFLOW_TRIGGERED;
./tools/qemu-xen/hw/ppc.c:    tb_env->decr_timer = qemu_new_timer_ns(vm_clock, &cpu_ppc_decr_cb, env);
./tools/qemu-xen/hw/ppc.c:        tb_env->hdecr_timer = qemu_new_timer_ns(vm_clock, &cpu_ppc_hdecr_cb, env);
./tools/qemu-xen/hw/ppc.c:        tb_env->hdecr_timer = NULL;
./tools/qemu-xen/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    ppc40x_timer = tb_env->opaque;
./tools/qemu-xen/hw/ppc.c:    switch ((env->spr[SPR_40x_TCR] >> 24) & 0x3) {
./tools/qemu-xen/hw/ppc.c:    next = now + muldiv64(next, get_ticks_per_sec(), tb_env->tb_freq);
./tools/qemu-xen/hw/ppc.c:    env->spr[SPR_40x_TSR] |= 1 << 26;
./tools/qemu-xen/hw/ppc.c:    if ((env->spr[SPR_40x_TCR] >> 23) & 0x1)
./tools/qemu-xen/hw/ppc.c:           (int)((env->spr[SPR_40x_TCR] >> 23) & 0x1),
./tools/qemu-xen/hw/ppc.c:           env->spr[SPR_40x_TCR], env->spr[SPR_40x_TSR]);
./tools/qemu-xen/hw/ppc.c:    ppc40x_timer = tb_env->opaque;
./tools/qemu-xen/hw/ppc.c:        !((env->spr[SPR_40x_TCR] >> 26) & 0x1) ||
./tools/qemu-xen/hw/ppc.c:        (is_excp && !((env->spr[SPR_40x_TCR] >> 22) & 0x1))) {
./tools/qemu-xen/hw/ppc.c:        qemu_del_timer(tb_env->decr_timer);
./tools/qemu-xen/hw/ppc.c:                              get_ticks_per_sec(), tb_env->decr_freq);
./tools/qemu-xen/hw/ppc.c:            next += tb_env->decr_next - now;
./tools/qemu-xen/hw/ppc.c:        qemu_mod_timer(tb_env->decr_timer, next);
./tools/qemu-xen/hw/ppc.c:        tb_env->decr_next = next;
./tools/qemu-xen/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    ppc40x_timer = tb_env->opaque;
./tools/qemu-xen/hw/ppc.c:    env->spr[SPR_40x_TSR] |= 1 << 27;
./tools/qemu-xen/hw/ppc.c:    if ((env->spr[SPR_40x_TCR] >> 26) & 0x1)
./tools/qemu-xen/hw/ppc.c:           (int)((env->spr[SPR_40x_TCR] >> 22) & 0x1),
./tools/qemu-xen/hw/ppc.c:           (int)((env->spr[SPR_40x_TCR] >> 26) & 0x1),
./tools/qemu-xen/hw/ppc.c:           env->spr[SPR_40x_TCR], env->spr[SPR_40x_TSR],
./tools/qemu-xen/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    ppc40x_timer = tb_env->opaque;
./tools/qemu-xen/hw/ppc.c:    switch ((env->spr[SPR_40x_TCR] >> 30) & 0x3) {
./tools/qemu-xen/hw/ppc.c:    next = now + muldiv64(next, get_ticks_per_sec(), tb_env->decr_freq);
./tools/qemu-xen/hw/ppc.c:           env->spr[SPR_40x_TCR], env->spr[SPR_40x_TSR]);
./tools/qemu-xen/hw/ppc.c:    switch ((env->spr[SPR_40x_TSR] >> 30) & 0x3) {
./tools/qemu-xen/hw/ppc.c:        env->spr[SPR_40x_TSR] |= 1 << 31;
./tools/qemu-xen/hw/ppc.c:        env->spr[SPR_40x_TSR] |= 1 << 30;
./tools/qemu-xen/hw/ppc.c:        if ((env->spr[SPR_40x_TCR] >> 27) & 0x1)
./tools/qemu-xen/hw/ppc.c:        env->spr[SPR_40x_TSR] &= ~0x30000000;
./tools/qemu-xen/hw/ppc.c:        env->spr[SPR_40x_TSR] |= env->spr[SPR_40x_TCR] & 0x30000000;
./tools/qemu-xen/hw/ppc.c:        switch ((env->spr[SPR_40x_TCR] >> 28) & 0x3) {
./tools/qemu-xen/hw/ppc.c:    tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    ppc40x_timer = tb_env->opaque;
./tools/qemu-xen/hw/ppc.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc.c:    tb_env->tb_freq = freq;
./tools/qemu-xen/hw/ppc.c:    tb_env->decr_freq = freq;
./tools/qemu-xen/hw/ppc.c:    env->tb_env = tb_env;
./tools/qemu-xen/hw/ppc.c:    tb_env->flags = PPC_DECR_UNDERFLOW_TRIGGERED;
./tools/qemu-xen/hw/ppc.c:    tb_env->tb_freq = freq;
./tools/qemu-xen/hw/ppc.c:    tb_env->decr_freq = freq;
./tools/qemu-xen/hw/ppc.c:    tb_env->opaque = ppc40x_timer;
./tools/qemu-xen/hw/ppc.c:        tb_env->decr_timer = qemu_new_timer_ns(vm_clock, &cpu_4xx_pit_cb, env);
./tools/qemu-xen/hw/ppc.c:    dcr = &dcr_env->dcrn[dcrn];
./tools/qemu-xen/hw/ppc.c:    if (dcr_env->read_error != NULL)
./tools/qemu-xen/hw/ppc.c:        return (*dcr_env->read_error)(dcrn);
./tools/qemu-xen/hw/ppc.c:    dcr = &dcr_env->dcrn[dcrn];
./tools/qemu-xen/hw/ppc.c:    if (dcr_env->write_error != NULL)
./tools/qemu-xen/hw/ppc.c:        return (*dcr_env->write_error)(dcrn);
./tools/qemu-xen/hw/ppc.c:    dcr_env = env->dcr_env;
./tools/qemu-xen/hw/ppc.c:    dcr = &dcr_env->dcrn[dcrn];
./tools/qemu-xen/hw/ppc.c:    dcr_env->read_error = read_error;
./tools/qemu-xen/hw/ppc.c:    dcr_env->write_error = write_error;
./tools/qemu-xen/hw/ppc.c:    env->dcr_env = dcr_env;
./tools/qemu-xen/hw/virtio.c:    if (vq->vdev->guest_features & (1 << VIRTIO_RING_F_EVENT_IDX)) {
./tools/qemu-xen/hw/virtio.c:    if (vq->vdev->guest_features & (1 << VIRTIO_RING_F_EVENT_IDX)) {
./tools/qemu-xen/hw/virtio.c:    if (vdev->binding->notify) {
./tools/qemu-xen/hw/virtio.c:        vdev->binding->notify(vdev->binding_opaque, vector);
./tools/qemu-xen/hw/virtio.c:    if (vdev->set_status) {
./tools/qemu-xen/hw/virtio.c:        vdev->set_status(vdev, val);
./tools/qemu-xen/hw/virtio.c:    vdev->status = val;
./tools/qemu-xen/hw/virtio.c:    if (vdev->reset)
./tools/qemu-xen/hw/virtio.c:        vdev->reset(vdev);
./tools/qemu-xen/hw/virtio.c:    vdev->guest_features = 0;
./tools/qemu-xen/hw/virtio.c:    vdev->queue_sel = 0;
./tools/qemu-xen/hw/virtio.c:    vdev->status = 0;
./tools/qemu-xen/hw/virtio.c:    vdev->isr = 0;
./tools/qemu-xen/hw/virtio.c:    vdev->config_vector = VIRTIO_NO_VECTOR;
./tools/qemu-xen/hw/virtio.c:    virtio_notify_vector(vdev, vdev->config_vector);
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].vring.desc = 0;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].vring.avail = 0;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].vring.used = 0;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].last_avail_idx = 0;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].pa = 0;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].vector = VIRTIO_NO_VECTOR;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].signalled_used = 0;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].signalled_used_valid = false;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].notification = true;
./tools/qemu-xen/hw/virtio.c:    vdev->get_config(vdev, vdev->config);
./tools/qemu-xen/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen/hw/virtio.c:    memcpy(&val, vdev->config + addr, sizeof(val));
./tools/qemu-xen/hw/virtio.c:    vdev->get_config(vdev, vdev->config);
./tools/qemu-xen/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen/hw/virtio.c:    memcpy(&val, vdev->config + addr, sizeof(val));
./tools/qemu-xen/hw/virtio.c:    vdev->get_config(vdev, vdev->config);
./tools/qemu-xen/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen/hw/virtio.c:    memcpy(&val, vdev->config + addr, sizeof(val));
./tools/qemu-xen/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen/hw/virtio.c:    memcpy(vdev->config + addr, &val, sizeof(val));
./tools/qemu-xen/hw/virtio.c:    if (vdev->set_config)
./tools/qemu-xen/hw/virtio.c:        vdev->set_config(vdev, vdev->config);
./tools/qemu-xen/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen/hw/virtio.c:    memcpy(vdev->config + addr, &val, sizeof(val));
./tools/qemu-xen/hw/virtio.c:    if (vdev->set_config)
./tools/qemu-xen/hw/virtio.c:        vdev->set_config(vdev, vdev->config);
./tools/qemu-xen/hw/virtio.c:    if (addr > (vdev->config_len - sizeof(val)))
./tools/qemu-xen/hw/virtio.c:    memcpy(vdev->config + addr, &val, sizeof(val));
./tools/qemu-xen/hw/virtio.c:    if (vdev->set_config)
./tools/qemu-xen/hw/virtio.c:        vdev->set_config(vdev, vdev->config);
./tools/qemu-xen/hw/virtio.c:    vdev->vq[n].pa = addr;
./tools/qemu-xen/hw/virtio.c:    virtqueue_init(&vdev->vq[n]);
./tools/qemu-xen/hw/virtio.c:    return vdev->vq[n].pa;
./tools/qemu-xen/hw/virtio.c:    return vdev->vq[n].vring.num;
./tools/qemu-xen/hw/virtio.c:        trace_virtio_queue_notify(vdev, vq - vdev->vq, vq);
./tools/qemu-xen/hw/virtio.c:    virtio_queue_notify_vq(&vdev->vq[n]);
./tools/qemu-xen/hw/virtio.c:    return n < VIRTIO_PCI_QUEUE_MAX ? vdev->vq[n].vector :
./tools/qemu-xen/hw/virtio.c:        vdev->vq[n].vector = vector;
./tools/qemu-xen/hw/virtio.c:        if (vdev->vq[i].vring.num == 0)
./tools/qemu-xen/hw/virtio.c:    vdev->vq[i].vring.num = queue_size;
./tools/qemu-xen/hw/virtio.c:    vdev->vq[i].handle_output = handle_output;
./tools/qemu-xen/hw/virtio.c:    return &vdev->vq[i];
./tools/qemu-xen/hw/virtio.c:    vq->vdev->isr |= 0x01;
./tools/qemu-xen/hw/virtio.c:    if (((vdev->guest_features & (1 << VIRTIO_F_NOTIFY_ON_EMPTY)) &&
./tools/qemu-xen/hw/virtio.c:    if (!(vdev->guest_features & (1 << VIRTIO_RING_F_EVENT_IDX))) {
./tools/qemu-xen/hw/virtio.c:    vdev->isr |= 0x01;
./tools/qemu-xen/hw/virtio.c:    if (!(vdev->status & VIRTIO_CONFIG_S_DRIVER_OK))
./tools/qemu-xen/hw/virtio.c:    vdev->isr |= 0x03;
./tools/qemu-xen/hw/virtio.c:    virtio_notify_vector(vdev, vdev->config_vector);
./tools/qemu-xen/hw/virtio.c:    if (vdev->binding->save_config)
./tools/qemu-xen/hw/virtio.c:        vdev->binding->save_config(vdev->binding_opaque, f);
./tools/qemu-xen/hw/virtio.c:    qemu_put_8s(f, &vdev->status);
./tools/qemu-xen/hw/virtio.c:    qemu_put_8s(f, &vdev->isr);
./tools/qemu-xen/hw/virtio.c:    qemu_put_be16s(f, &vdev->queue_sel);
./tools/qemu-xen/hw/virtio.c:    qemu_put_be32s(f, &vdev->guest_features);
./tools/qemu-xen/hw/virtio.c:    qemu_put_be32(f, vdev->config_len);
./tools/qemu-xen/hw/virtio.c:    qemu_put_buffer(f, vdev->config, vdev->config_len);
./tools/qemu-xen/hw/virtio.c:        if (vdev->vq[i].vring.num == 0)
./tools/qemu-xen/hw/virtio.c:        if (vdev->vq[i].vring.num == 0)
./tools/qemu-xen/hw/virtio.c:        qemu_put_be32(f, vdev->vq[i].vring.num);
./tools/qemu-xen/hw/virtio.c:        qemu_put_be64(f, vdev->vq[i].pa);
./tools/qemu-xen/hw/virtio.c:        qemu_put_be16s(f, &vdev->vq[i].last_avail_idx);
./tools/qemu-xen/hw/virtio.c:        if (vdev->binding->save_queue)
./tools/qemu-xen/hw/virtio.c:            vdev->binding->save_queue(vdev->binding_opaque, i, f);
./tools/qemu-xen/hw/virtio.c:        vdev->binding->get_features(vdev->binding_opaque);
./tools/qemu-xen/hw/virtio.c:    if (vdev->set_features) {
./tools/qemu-xen/hw/virtio.c:        vdev->set_features(vdev, val);
./tools/qemu-xen/hw/virtio.c:    vdev->guest_features = val;
./tools/qemu-xen/hw/virtio.c:    if (vdev->binding->load_config) {
./tools/qemu-xen/hw/virtio.c:        ret = vdev->binding->load_config(vdev->binding_opaque, f);
./tools/qemu-xen/hw/virtio.c:    qemu_get_8s(f, &vdev->status);
./tools/qemu-xen/hw/virtio.c:    qemu_get_8s(f, &vdev->isr);
./tools/qemu-xen/hw/virtio.c:    qemu_get_be16s(f, &vdev->queue_sel);
./tools/qemu-xen/hw/virtio.c:        supported_features = vdev->binding->get_features(vdev->binding_opaque);
./tools/qemu-xen/hw/virtio.c:    vdev->config_len = qemu_get_be32(f);
./tools/qemu-xen/hw/virtio.c:    qemu_get_buffer(f, vdev->config, vdev->config_len);
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].vring.num = qemu_get_be32(f);
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].pa = qemu_get_be64(f);
./tools/qemu-xen/hw/virtio.c:        qemu_get_be16s(f, &vdev->vq[i].last_avail_idx);
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].signalled_used_valid = false;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].notification = true;
./tools/qemu-xen/hw/virtio.c:        if (vdev->vq[i].pa) {
./tools/qemu-xen/hw/virtio.c:            virtqueue_init(&vdev->vq[i]);
./tools/qemu-xen/hw/virtio.c:            nheads = vring_avail_idx(&vdev->vq[i]) - vdev->vq[i].last_avail_idx;
./tools/qemu-xen/hw/virtio.c:            if (nheads > vdev->vq[i].vring.num) {
./tools/qemu-xen/hw/virtio.c:                             i, vdev->vq[i].vring.num,
./tools/qemu-xen/hw/virtio.c:                             vring_avail_idx(&vdev->vq[i]),
./tools/qemu-xen/hw/virtio.c:                             vdev->vq[i].last_avail_idx, nheads);
./tools/qemu-xen/hw/virtio.c:        } else if (vdev->vq[i].last_avail_idx) {
./tools/qemu-xen/hw/virtio.c:                         i, vdev->vq[i].last_avail_idx);
./tools/qemu-xen/hw/virtio.c:        if (vdev->binding->load_queue) {
./tools/qemu-xen/hw/virtio.c:            ret = vdev->binding->load_queue(vdev->binding_opaque, i, f);
./tools/qemu-xen/hw/virtio.c:    qemu_del_vm_change_state_handler(vdev->vmstate);
./tools/qemu-xen/hw/virtio.c:    if (vdev->config)
./tools/qemu-xen/hw/virtio.c:        g_free(vdev->config);
./tools/qemu-xen/hw/virtio.c:    g_free(vdev->vq);
./tools/qemu-xen/hw/virtio.c:    bool backend_run = running && (vdev->status & VIRTIO_CONFIG_S_DRIVER_OK);
./tools/qemu-xen/hw/virtio.c:    vdev->vm_running = running;
./tools/qemu-xen/hw/virtio.c:        virtio_set_status(vdev, vdev->status);
./tools/qemu-xen/hw/virtio.c:    if (vdev->binding->vmstate_change) {
./tools/qemu-xen/hw/virtio.c:        vdev->binding->vmstate_change(vdev->binding_opaque, backend_run);
./tools/qemu-xen/hw/virtio.c:        virtio_set_status(vdev, vdev->status);
./tools/qemu-xen/hw/virtio.c:    vdev->device_id = device_id;
./tools/qemu-xen/hw/virtio.c:    vdev->status = 0;
./tools/qemu-xen/hw/virtio.c:    vdev->isr = 0;
./tools/qemu-xen/hw/virtio.c:    vdev->queue_sel = 0;
./tools/qemu-xen/hw/virtio.c:    vdev->config_vector = VIRTIO_NO_VECTOR;
./tools/qemu-xen/hw/virtio.c:    vdev->vq = g_malloc0(sizeof(VirtQueue) * VIRTIO_PCI_QUEUE_MAX);
./tools/qemu-xen/hw/virtio.c:    vdev->vm_running = runstate_is_running();
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].vector = VIRTIO_NO_VECTOR;
./tools/qemu-xen/hw/virtio.c:        vdev->vq[i].vdev = vdev;
./tools/qemu-xen/hw/virtio.c:    vdev->name = name;
./tools/qemu-xen/hw/virtio.c:    vdev->config_len = config_size;
./tools/qemu-xen/hw/virtio.c:    if (vdev->config_len)
./tools/qemu-xen/hw/virtio.c:        vdev->config = g_malloc0(config_size);
./tools/qemu-xen/hw/virtio.c:        vdev->config = NULL;
./tools/qemu-xen/hw/virtio.c:    vdev->vmstate = qemu_add_vm_change_state_handler(virtio_vmstate_change, vdev);
./tools/qemu-xen/hw/virtio.c:    vdev->binding = binding;
./tools/qemu-xen/hw/virtio.c:    vdev->binding_opaque = opaque;
./tools/qemu-xen/hw/virtio.c:    return vdev->vq[n].vring.desc;
./tools/qemu-xen/hw/virtio.c:    return vdev->vq[n].vring.avail;
./tools/qemu-xen/hw/virtio.c:    return vdev->vq[n].vring.used;
./tools/qemu-xen/hw/virtio.c:    return vdev->vq[n].vring.desc;
./tools/qemu-xen/hw/virtio.c:    return sizeof(VRingDesc) * vdev->vq[n].vring.num;
./tools/qemu-xen/hw/virtio.c:        sizeof(uint64_t) * vdev->vq[n].vring.num;
./tools/qemu-xen/hw/virtio.c:        sizeof(VRingUsedElem) * vdev->vq[n].vring.num;
./tools/qemu-xen/hw/virtio.c:    return vdev->vq[n].vring.used - vdev->vq[n].vring.desc +
./tools/qemu-xen/hw/virtio.c:    return vdev->vq[n].last_avail_idx;
./tools/qemu-xen/hw/virtio.c:    vdev->vq[n].last_avail_idx = idx;
./tools/qemu-xen/hw/virtio.c:    return vdev->vq + n;
./tools/qemu-xen/hw/mips_jazz.c:    rc4030_opaque = rc4030_init(env->irq[6], env->irq[3], &rc4030, &dmas);
./tools/qemu-xen/hw/mips_jazz.c:    i8259 = i8259_init(env->irq[4]);
./tools/qemu-xen/hw/dummy_m68k.c:    env->vbr = 0;
./tools/qemu-xen/hw/dummy_m68k.c:    env->pc = entry;
./tools/qemu-xen/hw/usb-ohci.c:#include "qdev-addr.h"
./tools/qemu-xen/hw/usb-ohci.c:    if (port->port.dev->speed == USB_SPEED_LOW) {
./tools/qemu-xen/hw/usb-ohci.c:        if (port->port.dev && port->port.dev->attached) {
./tools/qemu-xen/hw/usb-ohci.c:    ohci->name = dev->info->name;
./tools/qemu-xen/hw/usb-ohci.c:    if (usb_ohci_init(&ohci->state, &dev->qdev, ohci->num_ports, 0,
./tools/qemu-xen/hw/usb-ohci.c:    usb_ohci_init(&s->ohci, &dev->qdev, s->num_ports, s->dma_offset, NULL, 0);
./tools/qemu-xen/hw/vt82c686.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/vt82c686.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/vt82c686.c:    qdev_prop_set_uint32(&dev->qdev, "smb_io_base", smb_io_base);
./tools/qemu-xen/hw/vt82c686.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/spapr.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/hw/spapr.c:        int index = env->cpu_index;
./tools/qemu-xen/hw/spapr.c:        _FDT((fdt_property_cell(fdt, "cpu-version", env->spr[SPR_PVR])));
./tools/qemu-xen/hw/spapr.c:                                env->dcache_line_size)));
./tools/qemu-xen/hw/spapr.c:                                env->icache_line_size)));
./tools/qemu-xen/hw/spapr.c:        _FDT((fdt_property_cell(fdt, "ibm,slb-size", env->slb_nr)));
./tools/qemu-xen/hw/spapr.c:        if (env->mmu_model & POWERPC_MMU_1TSEG) {
./tools/qemu-xen/hw/spapr.c:        if (env->insns_flags & PPC_ALTIVEC) {
./tools/qemu-xen/hw/spapr.c:            uint32_t vmx = (env->insns_flags2 & PPC2_VSX) ? 2 : 1;
./tools/qemu-xen/hw/spapr.c:        if (env->insns_flags2 & PPC2_DFP) {
./tools/qemu-xen/hw/spapr.c:    env->gpr[3] = spapr_hypercall(env, env->gpr[3], &env->gpr[4]);
./tools/qemu-xen/hw/spapr.c:        env->hreset_vector = 0x60;
./tools/qemu-xen/hw/spapr.c:        env->hreset_excp_prefix = 0;
./tools/qemu-xen/hw/spapr.c:        env->gpr[3] = env->cpu_index;
./tools/qemu-xen/hw/spapr.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/hw/spapr.c:        env->external_htab = spapr->htab;
./tools/qemu-xen/hw/spapr.c:        env->htab_base = -1;
./tools/qemu-xen/hw/spapr.c:        env->htab_mask = spapr->htab_size - 1;
./tools/qemu-xen/hw/spapr.c:        env->spr[SPR_SDR1] = (unsigned long)spapr->htab |
./tools/qemu-xen/hw/spapr.c:        env->spr[SPR_HIOR] = 0;
./tools/qemu-xen/hw/spapr.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/hw/spapr.c:            env->halted = 1;
./tools/qemu-xen/hw/qdev-properties.c:    prop = qdev_prop_walk(dev->info->props, name);
./tools/qemu-xen/hw/qdev-properties.c:    prop = qdev_prop_walk(dev->parent_bus->info->props, name);
./tools/qemu-xen/hw/qdev-properties.c:        qerror_report(QERR_PROPERTY_NOT_FOUND, dev->info->name, name);
./tools/qemu-xen/hw/qdev-properties.c:                          dev->info->name, name, value);
./tools/qemu-xen/hw/qdev-properties.c:                          dev->info->name, name, value);
./tools/qemu-xen/hw/qdev-properties.c:                          dev->info->name, name, value);
./tools/qemu-xen/hw/qdev-properties.c:                __FUNCTION__, dev->info->name, name);
./tools/qemu-xen/hw/qdev-properties.c:                __FUNCTION__, dev->info->name, name);
./tools/qemu-xen/hw/qdev-properties.c:                     dev->id ? dev->id : dev->info->name,
./tools/qemu-xen/hw/qdev-properties.c:        if (strcmp(dev->info->name, prop->driver) != 0 &&
./tools/qemu-xen/hw/qdev-properties.c:            strcmp(dev->info->bus_info->name, prop->driver) != 0) {
./tools/qemu-xen/hw/ppc_booke.c:                (env->spr[SPR_BOOKE_TSR] & TSR_DIS
./tools/qemu-xen/hw/ppc_booke.c:                 && env->spr[SPR_BOOKE_TCR] & TCR_DIE));
./tools/qemu-xen/hw/ppc_booke.c:                (env->spr[SPR_BOOKE_TSR] & TSR_WIS
./tools/qemu-xen/hw/ppc_booke.c:                 && env->spr[SPR_BOOKE_TCR] & TCR_WIE));
./tools/qemu-xen/hw/ppc_booke.c:                (env->spr[SPR_BOOKE_TSR] & TSR_FIS
./tools/qemu-xen/hw/ppc_booke.c:                 && env->spr[SPR_BOOKE_TCR] & TCR_FIE));
./tools/qemu-xen/hw/ppc_booke.c:    uint8_t fp = (env->spr[SPR_BOOKE_TCR] & TCR_FP_MASK) >> TCR_FP_SHIFT;
./tools/qemu-xen/hw/ppc_booke.c:    if (tb_env->flags & PPC_TIMER_E500) {
./tools/qemu-xen/hw/ppc_booke.c:        uint32_t fpext = (env->spr[SPR_BOOKE_TCR] & TCR_E500_FPEXT_MASK)
./tools/qemu-xen/hw/ppc_booke.c:        fp = env->fit_period[fp];
./tools/qemu-xen/hw/ppc_booke.c:    uint8_t wp = (env->spr[SPR_BOOKE_TCR] & TCR_WP_MASK) >> TCR_WP_SHIFT;
./tools/qemu-xen/hw/ppc_booke.c:    if (tb_env->flags & PPC_TIMER_E500) {
./tools/qemu-xen/hw/ppc_booke.c:        uint32_t wpext = (env->spr[SPR_BOOKE_TCR] & TCR_E500_WPEXT_MASK)
./tools/qemu-xen/hw/ppc_booke.c:        wp = env->wdt_period[wp];
./tools/qemu-xen/hw/ppc_booke.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc_booke.c:    tb  = cpu_ppc_get_tb(tb_env, now, tb_env->tb_offset);
./tools/qemu-xen/hw/ppc_booke.c:    *next = now + muldiv64(lapse, get_ticks_per_sec(), tb_env->tb_freq);
./tools/qemu-xen/hw/ppc_booke.c:    env->spr[SPR_BOOKE_TSR] |= TSR_DIS;
./tools/qemu-xen/hw/ppc_booke.c:    if (env->spr[SPR_BOOKE_TCR] & TCR_ARE) {
./tools/qemu-xen/hw/ppc_booke.c:        cpu_ppc_store_decr(env, env->spr[SPR_BOOKE_DECAR]);
./tools/qemu-xen/hw/ppc_booke.c:    tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc_booke.c:    booke_timer = tb_env->opaque;
./tools/qemu-xen/hw/ppc_booke.c:    env->spr[SPR_BOOKE_TSR] |= TSR_FIS;
./tools/qemu-xen/hw/ppc_booke.c:    tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc_booke.c:    booke_timer = tb_env->opaque;
./tools/qemu-xen/hw/ppc_booke.c:    env->spr[SPR_BOOKE_TSR] &= ~val;
./tools/qemu-xen/hw/ppc_booke.c:    ppc_tb_t *tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc_booke.c:    booke_timer_t *booke_timer = tb_env->opaque;
./tools/qemu-xen/hw/ppc_booke.c:    tb_env = env->tb_env;
./tools/qemu-xen/hw/ppc_booke.c:    env->spr[SPR_BOOKE_TCR] = val;
./tools/qemu-xen/hw/ppc_booke.c:    env->tb_env = tb_env;
./tools/qemu-xen/hw/ppc_booke.c:    tb_env->flags = flags | PPC_TIMER_BOOKE | PPC_DECR_ZERO_TRIGGERED;
./tools/qemu-xen/hw/ppc_booke.c:    tb_env->tb_freq    = freq;
./tools/qemu-xen/hw/ppc_booke.c:    tb_env->decr_freq  = freq;
./tools/qemu-xen/hw/ppc_booke.c:    tb_env->opaque     = booke_timer;
./tools/qemu-xen/hw/ppc_booke.c:    tb_env->decr_timer = qemu_new_timer_ns(vm_clock, &booke_decr_cb, env);
./tools/qemu-xen/hw/usb-uhci.c:        if (port->port.dev && port->port.dev->attached) {
./tools/qemu-xen/hw/usb-uhci.c:                if (dev && dev->attached) {
./tools/qemu-xen/hw/usb-uhci.c:            if (dev && dev->attached) {
./tools/qemu-xen/hw/usb-uhci.c:    if (port->port.dev->speed == USB_SPEED_LOW) {
./tools/qemu-xen/hw/usb-uhci.c:        if (dev && dev->attached && (port->ctrl & UHCI_PORT_EN)) {
./tools/qemu-xen/hw/vmport.c:    eax = env->regs[R_EAX];
./tools/qemu-xen/hw/vmport.c:    command = env->regs[R_ECX];
./tools/qemu-xen/hw/vmport.c:    env->regs[R_EAX] = vmport_ioport_read(opaque, addr);
./tools/qemu-xen/hw/vmport.c:    env->regs[R_EBX] = VMPORT_MAGIC;
./tools/qemu-xen/hw/vmport.c:    env->regs[R_EBX] = 0x1177;
./tools/qemu-xen/hw/vmport.c:    data[0] = env->regs[R_EAX]; data[1] = env->regs[R_EBX];
./tools/qemu-xen/hw/vmport.c:    data[2] = env->regs[R_ECX]; data[3] = env->regs[R_EDX];
./tools/qemu-xen/hw/vmport.c:    data[4] = env->regs[R_ESI]; data[5] = env->regs[R_EDI];
./tools/qemu-xen/hw/vmport.c:    env->regs[R_EAX] = data[0]; env->regs[R_EBX] = data[1];
./tools/qemu-xen/hw/vmport.c:    env->regs[R_ECX] = data[2]; env->regs[R_EDX] = data[3];
./tools/qemu-xen/hw/vmport.c:    env->regs[R_ESI] = data[4]; env->regs[R_EDI] = data[5];
./tools/qemu-xen/hw/ppc4xx_pci.c:    int slot = pci_dev->devfn >> 3;
./tools/qemu-xen/hw/ppc4xx_pci.c:            pci_dev->devfn, irq_num, slot);
./tools/qemu-xen/hw/ppc4xx_pci.c:    pci_conf = controller->pci_dev->config;
./tools/qemu-xen/hw/ppc4xx_pci.c:    vmstate_register(&controller->pci_dev->qdev, ppc4xx_pci_id++,
./tools/qemu-xen/hw/leon3.c:    env->halted = 0;
./tools/qemu-xen/hw/leon3.c:    env->pc     = s->entry;
./tools/qemu-xen/hw/leon3.c:    env->npc    = s->entry + 4;
./tools/qemu-xen/hw/leon3.c:    env->pil_in = pil_in;
./tools/qemu-xen/hw/leon3.c:    if (env->pil_in && (env->interrupt_index == 0 ||
./tools/qemu-xen/hw/leon3.c:                        (env->interrupt_index & ~15) == TT_EXTINT)) {
./tools/qemu-xen/hw/leon3.c:            if (env->pil_in & (1 << i)) {
./tools/qemu-xen/hw/leon3.c:                int old_interrupt = env->interrupt_index;
./tools/qemu-xen/hw/leon3.c:                env->interrupt_index = TT_EXTINT | i;
./tools/qemu-xen/hw/leon3.c:                if (old_interrupt != env->interrupt_index) {
./tools/qemu-xen/hw/leon3.c:    } else if (!env->pil_in && (env->interrupt_index & ~15) == TT_EXTINT) {
./tools/qemu-xen/hw/leon3.c:        trace_leon3_reset_irq(env->interrupt_index & 15);
./tools/qemu-xen/hw/leon3.c:        env->interrupt_index = 0;
./tools/qemu-xen/hw/leon3.c:    env->qemu_irq_ack = leon3_irq_manager;
./tools/qemu-xen/hw/leon3.c:            env->pc = entry;
./tools/qemu-xen/hw/leon3.c:            env->npc = entry + 4;
./tools/qemu-xen/hw/piix_pci.c:    slot_addend = (pci_dev->devfn >> 3) - 1;
./tools/qemu-xen/hw/usb-bt.c:    struct USBBtState *s = (struct USBBtState *) dev->opaque;
./tools/qemu-xen/hw/usb-bt.c:    struct USBBtState *s = (struct USBBtState *) dev->opaque;
./tools/qemu-xen/hw/usb-bt.c:    struct USBBtState *s = (struct USBBtState *) dev->opaque;
./tools/qemu-xen/hw/usb-bt.c:    struct USBBtState *s = (struct USBBtState *) dev->opaque;
./tools/qemu-xen/hw/hpet.c:    qdev_init_gpio_in(&dev->qdev, hpet_handle_rtc_irq, 1);
./tools/qemu-xen/hw/syborg_rtc.c:    vmstate_register(&dev->qdev, -1, &vmstate_syborg_rtc, s);
./tools/qemu-xen/hw/mpcore.c:  return cpu_single_env->cpu_index;
./tools/qemu-xen/hw/mpcore.c:    memory_region_init(&s->container, "mpcode-priv-container", 0x2000);
./tools/qemu-xen/hw/mc146818rtc.c:    qdev_set_legacy_instance_id(&dev->qdev, base, 2);
./tools/qemu-xen/hw/mc146818rtc.c:    qdev_prop_set_int32(&dev->qdev, "base_year", base_year);
./tools/qemu-xen/hw/mc146818rtc.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/ppce500_spin.c:    stl_p(&curspin->pir, env->spr[SPR_PIR]);
./tools/qemu-xen/hw/ppce500_spin.c:    env->nip = ldq_p(&curspin->addr) & (map_size - 1);
./tools/qemu-xen/hw/ppce500_spin.c:    env->gpr[3] = ldq_p(&curspin->r3);
./tools/qemu-xen/hw/ppce500_spin.c:    env->gpr[4] = 0;
./tools/qemu-xen/hw/ppce500_spin.c:    env->gpr[5] = 0;
./tools/qemu-xen/hw/ppce500_spin.c:    env->gpr[6] = 0;
./tools/qemu-xen/hw/ppce500_spin.c:    env->gpr[7] = map_size;
./tools/qemu-xen/hw/ppce500_spin.c:    env->gpr[8] = 0;
./tools/qemu-xen/hw/ppce500_spin.c:    env->gpr[9] = 0;
./tools/qemu-xen/hw/ppce500_spin.c:    env->halted = 0;
./tools/qemu-xen/hw/ppce500_spin.c:    env->exception_index = -1;
./tools/qemu-xen/hw/ppce500_spin.c:    env->stopped = 0;
./tools/qemu-xen/hw/ppce500_spin.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/hw/ppce500_spin.c:        if (env->cpu_index == env_idx) {
./tools/qemu-xen/hw/ppce500_spin.c:    if (!env->cpu_index) {
./tools/qemu-xen/hw/msi.c:    return dev->msi_cap + PCI_MSI_FLAGS;
./tools/qemu-xen/hw/msi.c:    return dev->msi_cap + PCI_MSI_ADDRESS_LO;
./tools/qemu-xen/hw/msi.c:    return dev->msi_cap + PCI_MSI_ADDRESS_HI;
./tools/qemu-xen/hw/msi.c:    return dev->msi_cap + (msi64bit ? PCI_MSI_DATA_64 : PCI_MSI_DATA_32);
./tools/qemu-xen/hw/msi.c:    return dev->msi_cap + (msi64bit ? PCI_MSI_MASK_64 : PCI_MSI_MASK_32);
./tools/qemu-xen/hw/msi.c:    return dev->msi_cap + (msi64bit ? PCI_MSI_PENDING_64 : PCI_MSI_PENDING_32);
./tools/qemu-xen/hw/msi.c:        (pci_get_word(dev->config + msi_flags_off(dev)) &
./tools/qemu-xen/hw/msi.c:    dev->msi_cap = config_offset;
./tools/qemu-xen/hw/msi.c:    dev->cap_present |= QEMU_PCI_CAP_MSI;
./tools/qemu-xen/hw/msi.c:    pci_set_word(dev->config + msi_flags_off(dev), flags);
./tools/qemu-xen/hw/msi.c:    pci_set_word(dev->wmask + msi_flags_off(dev),
./tools/qemu-xen/hw/msi.c:    pci_set_long(dev->wmask + msi_address_lo_off(dev),
./tools/qemu-xen/hw/msi.c:        pci_set_long(dev->wmask + msi_address_hi_off(dev), 0xffffffff);
./tools/qemu-xen/hw/msi.c:    pci_set_word(dev->wmask + msi_data_off(dev, msi64bit), 0xffff);
./tools/qemu-xen/hw/msi.c:        pci_set_long(dev->wmask + msi_mask_off(dev, msi64bit),
./tools/qemu-xen/hw/msi.c:    if (!(dev->cap_present & QEMU_PCI_CAP_MSI)) {
./tools/qemu-xen/hw/msi.c:    flags = pci_get_word(dev->config + msi_flags_off(dev));
./tools/qemu-xen/hw/msi.c:    dev->cap_present &= ~QEMU_PCI_CAP_MSI;
./tools/qemu-xen/hw/msi.c:    flags = pci_get_word(dev->config + msi_flags_off(dev));
./tools/qemu-xen/hw/msi.c:    pci_set_word(dev->config + msi_flags_off(dev), flags);
./tools/qemu-xen/hw/msi.c:    pci_set_long(dev->config + msi_address_lo_off(dev), 0);
./tools/qemu-xen/hw/msi.c:        pci_set_long(dev->config + msi_address_hi_off(dev), 0);
./tools/qemu-xen/hw/msi.c:    pci_set_word(dev->config + msi_data_off(dev, msi64bit), 0);
./tools/qemu-xen/hw/msi.c:        pci_set_long(dev->config + msi_mask_off(dev, msi64bit), 0);
./tools/qemu-xen/hw/msi.c:        pci_set_long(dev->config + msi_pending_off(dev, msi64bit), 0);
./tools/qemu-xen/hw/msi.c:    uint16_t flags = pci_get_word(dev->config + msi_flags_off(dev));
./tools/qemu-xen/hw/msi.c:    mask = pci_get_long(dev->config +
./tools/qemu-xen/hw/msi.c:    uint16_t flags = pci_get_word(dev->config + msi_flags_off(dev));
./tools/qemu-xen/hw/msi.c:            dev->config + msi_pending_off(dev, msi64bit), 1U << vector);
./tools/qemu-xen/hw/msi.c:        address = pci_get_quad(dev->config + msi_address_lo_off(dev));
./tools/qemu-xen/hw/msi.c:        address = pci_get_long(dev->config + msi_address_lo_off(dev));
./tools/qemu-xen/hw/msi.c:    data = pci_get_word(dev->config + msi_data_off(dev, msi64bit));
./tools/qemu-xen/hw/msi.c:    uint16_t flags = pci_get_word(dev->config + msi_flags_off(dev));
./tools/qemu-xen/hw/msi.c:    if (!ranges_overlap(addr, len, dev->msi_cap, msi_cap_sizeof(flags))) {
./tools/qemu-xen/hw/msi.c:                   pci_get_long(dev->config + msi_address_lo_off(dev)));
./tools/qemu-xen/hw/msi.c:                pci_get_long(dev->config + msi_address_hi_off(dev)));
./tools/qemu-xen/hw/msi.c:            pci_get_word(dev->config + msi_data_off(dev, msi64bit)));
./tools/qemu-xen/hw/msi.c:                pci_get_long(dev->config + msi_mask_off(dev, msi64bit)),
./tools/qemu-xen/hw/msi.c:                pci_get_long(dev->config + msi_pending_off(dev, msi64bit)));
./tools/qemu-xen/hw/msi.c:        pci_set_word(dev->config + msi_flags_off(dev), flags);
./tools/qemu-xen/hw/msi.c:    pending = pci_get_long(dev->config + msi_pending_off(dev, msi64bit));
./tools/qemu-xen/hw/msi.c:    pci_set_long(dev->config + msi_pending_off(dev, msi64bit), pending);
./tools/qemu-xen/hw/msi.c:            dev->config + msi_pending_off(dev, msi64bit), 1U << vector);
./tools/qemu-xen/hw/msi.c:    uint16_t flags = pci_get_word(dev->config + msi_flags_off(dev));
./tools/qemu-xen/hw/serial.c:    qdev_set_legacy_instance_id(&dev->qdev, isa->iobase, 3);
./tools/qemu-xen/hw/openpic.c:  return cpu_single_env->cpu_index;
./tools/qemu-xen/hw/spitz.c:    qdev_init_gpio_in(&dev->qdev, spitz_keyboard_strobe, SPITZ_KEY_STROBE_NUM);
./tools/qemu-xen/hw/spitz.c:    qdev_init_gpio_out(&dev->qdev, s->sense, SPITZ_KEY_SENSE_NUM);
./tools/qemu-xen/hw/spitz.c:    qdev_init_gpio_in(&dev->qdev, corgi_ssp_gpio_cs, 3);
./tools/qemu-xen/hw/spitz.c:    s->bus[0] = ssi_create_bus(&dev->qdev, "ssi0");
./tools/qemu-xen/hw/spitz.c:    s->bus[1] = ssi_create_bus(&dev->qdev, "ssi1");
./tools/qemu-xen/hw/spitz.c:    s->bus[2] = ssi_create_bus(&dev->qdev, "ssi2");
./tools/qemu-xen/hw/pcie.c:    dev->exp.exp_cap = pos;
./tools/qemu-xen/hw/pcie.c:    exp_cap = dev->config + pos;
./tools/qemu-xen/hw/pcie.c:    pci_set_word(dev->wmask + pos, PCI_EXP_DEVCTL2_EETLPPB);
./tools/qemu-xen/hw/pcie.c:    uint32_t pos = dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie.c:    return (pci_get_word(dev->config + pos + PCI_EXP_FLAGS) &
./tools/qemu-xen/hw/pcie.c:    uint8_t *exp_cap = dev->config + dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie.c:    return (pci_get_word(dev->config + dev->exp.exp_cap + PCI_EXP_FLAGS) &
./tools/qemu-xen/hw/pcie.c:    uint32_t pos = dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie.c:    pci_long_test_and_set_mask(dev->config + pos + PCI_EXP_DEVCAP,
./tools/qemu-xen/hw/pcie.c:    pci_long_test_and_set_mask(dev->wmask + pos + PCI_EXP_DEVCTL,
./tools/qemu-xen/hw/pcie.c:    pci_long_test_and_set_mask(dev->w1cmask + pos + PCI_EXP_DEVSTA,
./tools/qemu-xen/hw/pcie.c:    uint8_t *devctl = dev->config + dev->exp.exp_cap + PCI_EXP_DEVCTL;
./tools/qemu-xen/hw/pcie.c:    uint32_t pos = dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie.c:    uint8_t *exp_cap = dev->config + pos;
./tools/qemu-xen/hw/pcie.c:    dev->exp.hpev_notified = (sltctl & PCI_EXP_SLTCTL_HPIE) &&
./tools/qemu-xen/hw/pcie.c:    bool prev = dev->exp.hpev_notified;
./tools/qemu-xen/hw/pcie.c:    if (prev == dev->exp.hpev_notified) {
./tools/qemu-xen/hw/pcie.c:        qemu_set_irq(dev->irq[dev->exp.hpev_intx], dev->exp.hpev_notified);
./tools/qemu-xen/hw/pcie.c:    if (!msix_enabled(dev) && !msi_enabled(dev) && !dev->exp.hpev_notified) {
./tools/qemu-xen/hw/pcie.c:        qemu_set_irq(dev->irq[dev->exp.hpev_intx], 0);
./tools/qemu-xen/hw/pcie.c:    if (pci_word_test_and_set_mask(dev->config + dev->exp.exp_cap +
./tools/qemu-xen/hw/pcie.c:    assert(PCI_FUNC(pci_dev->devfn) == 0);
./tools/qemu-xen/hw/pcie.c:        qdev_free(&pci_dev->qdev);
./tools/qemu-xen/hw/pcie.c:    uint32_t pos = dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie.c:    pci_word_test_and_set_mask(dev->config + pos + PCI_EXP_FLAGS,
./tools/qemu-xen/hw/pcie.c:    pci_long_test_and_clear_mask(dev->config + pos + PCI_EXP_SLTCAP,
./tools/qemu-xen/hw/pcie.c:    pci_long_test_and_set_mask(dev->config + pos + PCI_EXP_SLTCAP,
./tools/qemu-xen/hw/pcie.c:    pci_word_test_and_clear_mask(dev->config + pos + PCI_EXP_SLTCTL,
./tools/qemu-xen/hw/pcie.c:    pci_word_test_and_set_mask(dev->config + pos + PCI_EXP_SLTCTL,
./tools/qemu-xen/hw/pcie.c:    pci_word_test_and_set_mask(dev->wmask + pos + PCI_EXP_SLTCTL,
./tools/qemu-xen/hw/pcie.c:    pci_word_test_and_set_mask(dev->wmask + pos + PCI_EXP_SLTCTL,
./tools/qemu-xen/hw/pcie.c:    pci_word_test_and_set_mask(dev->w1cmask + pos + PCI_EXP_SLTSTA,
./tools/qemu-xen/hw/pcie.c:    dev->exp.hpev_notified = false;
./tools/qemu-xen/hw/pcie.c:                    pcie_cap_slot_hotplug, &dev->qdev);
./tools/qemu-xen/hw/pcie.c:    uint8_t *exp_cap = dev->config + dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie.c:    uint32_t pos = dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie.c:    uint8_t *exp_cap = dev->config + pos;
./tools/qemu-xen/hw/pcie.c:    pci_set_word(dev->wmask + dev->exp.exp_cap + PCI_EXP_RTCTL,
./tools/qemu-xen/hw/pcie.c:    pci_set_word(dev->config + dev->exp.exp_cap + PCI_EXP_RTCTL, 0);
./tools/qemu-xen/hw/pcie.c:    pci_long_test_and_set_mask(dev->config + dev->exp.exp_cap + PCI_EXP_DEVCAP,
./tools/qemu-xen/hw/pcie.c:    pci_word_test_and_set_mask(dev->wmask + dev->exp.exp_cap + PCI_EXP_DEVCTL,
./tools/qemu-xen/hw/pcie.c:    uint8_t *devctl = dev->config + dev->exp.exp_cap + PCI_EXP_DEVCTL;
./tools/qemu-xen/hw/pcie.c:    uint32_t pos = dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie.c:    pci_long_test_and_set_mask(dev->config + pos + PCI_EXP_DEVCAP2,
./tools/qemu-xen/hw/pcie.c:    pci_long_test_and_set_mask(dev->wmask + pos + PCI_EXP_DEVCTL2,
./tools/qemu-xen/hw/pcie.c:    uint8_t *devctl2 = dev->config + dev->exp.exp_cap + PCI_EXP_DEVCTL2;
./tools/qemu-xen/hw/pcie.c:    if (!dev->exp.exp_cap) {
./tools/qemu-xen/hw/pcie.c:    return pci_get_long(dev->config + dev->exp.exp_cap + PCI_EXP_DEVCTL2) &
./tools/qemu-xen/hw/pcie.c:    uint32_t header = pci_get_long(dev->config + PCI_CONFIG_SPACE_SIZE);
./tools/qemu-xen/hw/pcie.c:        header = pci_get_long(dev->config + next);
./tools/qemu-xen/hw/pcie.c:    uint16_t header = pci_get_long(dev->config + pos);
./tools/qemu-xen/hw/pcie.c:    pci_set_long(dev->config + pos, header);
./tools/qemu-xen/hw/pcie.c:        header = pci_get_long(dev->config + offset);
./tools/qemu-xen/hw/pcie.c:    pci_set_long(dev->config + offset, PCI_EXT_CAP(cap_id, cap_ver, next));
./tools/qemu-xen/hw/pcie.c:    memset(dev->wmask + offset, 0, size);
./tools/qemu-xen/hw/pcie.c:    memset(dev->w1cmask + offset, 0, size);
./tools/qemu-xen/hw/pcie.c:    memset(dev->cmask + offset, 0xFF, size);
./tools/qemu-xen/hw/pcie.c:    pci_set_long(dev->config + offset + PCI_ARI_CAP, PCI_ARI_CAP_NFN(nextfn));
./tools/qemu-xen/hw/ssi-sd.c:    register_savevm(&dev->qdev, "ssi_sd", -1, 1, ssi_sd_save, ssi_sd_load, s);
./tools/qemu-xen/hw/sun4m.c:#include "qdev-addr.h"
./tools/qemu-xen/hw/sun4m.c:    if (env->pil_in && (env->interrupt_index == 0 ||
./tools/qemu-xen/hw/sun4m.c:                        (env->interrupt_index & ~15) == TT_EXTINT)) {
./tools/qemu-xen/hw/sun4m.c:            if (env->pil_in & (1 << i)) {
./tools/qemu-xen/hw/sun4m.c:                int old_interrupt = env->interrupt_index;
./tools/qemu-xen/hw/sun4m.c:                env->interrupt_index = TT_EXTINT | i;
./tools/qemu-xen/hw/sun4m.c:                if (old_interrupt != env->interrupt_index) {
./tools/qemu-xen/hw/sun4m.c:    } else if (!env->pil_in && (env->interrupt_index & ~15) == TT_EXTINT) {
./tools/qemu-xen/hw/sun4m.c:        trace_sun4m_cpu_reset_interrupt(env->interrupt_index & 15);
./tools/qemu-xen/hw/sun4m.c:        env->interrupt_index = 0;
./tools/qemu-xen/hw/sun4m.c:    env->halted = 0;
./tools/qemu-xen/hw/sun4m.c:        env->pil_in |= 1 << irq;
./tools/qemu-xen/hw/sun4m.c:        env->pil_in &= ~(1 << irq);
./tools/qemu-xen/hw/sun4m.c:    env->halted = 0;
./tools/qemu-xen/hw/sun4m.c:    env->halted = 1;
./tools/qemu-xen/hw/sun4m.c:        env->halted = 1;
./tools/qemu-xen/hw/sun4m.c:    env->prom_addr = prom_addr;
./tools/qemu-xen/hw/usb-ehci.c:    trace_usb_ehci_port_attach(port->index, port->dev->product_desc);
./tools/qemu-xen/hw/usb-ehci.c:    if (dev && dev->attached) {
./tools/qemu-xen/hw/usb-ehci.c:    if (dev && dev->attached) {
./tools/qemu-xen/hw/usb-ehci.c:        if (dev && dev->attached) {
./tools/qemu-xen/hw/usb-ehci.c:        if (dev && dev->attached && (dev->speedmask & USB_SPEED_MASK_HIGH)) {
./tools/qemu-xen/hw/arm11mpcore.c:    qdev_init_gpio_in(&dev->qdev, mpcore_rirq_set_irq, 64);
./tools/qemu-xen/hw/m48t59.c:    qdev_prop_set_uint32(&dev->qdev, "type", type);
./tools/qemu-xen/hw/m48t59.c:    qdev_prop_set_uint32(&dev->qdev, "size", size);
./tools/qemu-xen/hw/m48t59.c:    qdev_prop_set_uint32(&dev->qdev, "io_base", io_base);
./tools/qemu-xen/hw/m48t59.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/sbi.c:    qdev_init_gpio_in(&dev->qdev, sbi_set_irq, 32 + MAX_CPUS);
./tools/qemu-xen/hw/ne2000.c:                          pci_dev->qdev.info->name, pci_dev->qdev.id, s);
./tools/qemu-xen/hw/ne2000.c:    if (!pci_dev->qdev.hotplugged) {
./tools/qemu-xen/hw/ne2000.c:    add_boot_device_path(s->c.bootindex, &pci_dev->qdev, "/ethernet-phy@0");
./tools/qemu-xen/hw/syborg_keyboard.c:    vmstate_register(&dev->qdev, -1, &vmstate_syborg_keyboard, s);
./tools/qemu-xen/hw/ssd0323.c:    qdev_init_gpio_in(&dev->qdev, ssd0323_cd, 1);
./tools/qemu-xen/hw/ssd0323.c:    register_savevm(&dev->qdev, "ssd0323_oled", -1, 1,
./tools/qemu-xen/hw/mips_malta.c:    env->mvp->CP0_MVPConf0 |= ((smp_cpus - 1) << CP0MVPC0_PVPE) |
./tools/qemu-xen/hw/mips_malta.c:                         ((smp_cpus * env->nr_threads - 1) << CP0MVPC0_PTC);
./tools/qemu-xen/hw/mips_malta.c:        env->CP0_Status &= ~((1 << CP0St_BEV) | (1 << CP0St_ERL));
./tools/qemu-xen/hw/mips_malta.c:    malta_fpga_init(system_memory, 0x1f000000LL, env->irq[2], serial_hds[2]);
./tools/qemu-xen/hw/mips_malta.c:    s->i8259 = i8259_init(env->irq[2]);
./tools/qemu-xen/hw/fdc.c:#include "qdev-addr.h"
./tools/qemu-xen/hw/fdc.c:    drv->drive = FDRIVE_DRV_NONE;
./tools/qemu-xen/hw/fdc.c:    drv->perpendicular = 0;
./tools/qemu-xen/hw/fdc.c:    drv->last_sect = 0;
./tools/qemu-xen/hw/fdc.c:    drv->max_track = 0;
./tools/qemu-xen/hw/fdc.c:    return fd_sector_calc(drv->head, drv->track, drv->sect, drv->last_sect);
./tools/qemu-xen/hw/fdc.c:    if (track > drv->max_track ||
./tools/qemu-xen/hw/fdc.c:        (head != 0 && (drv->flags & FDISK_DBL_SIDES) == 0)) {
./tools/qemu-xen/hw/fdc.c:                       (drv->flags & FDISK_DBL_SIDES) == 0 ? 0 : 1,
./tools/qemu-xen/hw/fdc.c:                       drv->max_track, drv->last_sect);
./tools/qemu-xen/hw/fdc.c:    if (sect > drv->last_sect) {
./tools/qemu-xen/hw/fdc.c:                       (drv->flags & FDISK_DBL_SIDES) == 0 ? 0 : 1,
./tools/qemu-xen/hw/fdc.c:                       drv->max_track, drv->last_sect);
./tools/qemu-xen/hw/fdc.c:    sector = fd_sector_calc(head, track, sect, drv->last_sect);
./tools/qemu-xen/hw/fdc.c:                         head, track, sect, 1, drv->max_track, drv->last_sect);
./tools/qemu-xen/hw/fdc.c:        drv->head = head;
./tools/qemu-xen/hw/fdc.c:        if (drv->track != track)
./tools/qemu-xen/hw/fdc.c:        drv->track = track;
./tools/qemu-xen/hw/fdc.c:        drv->sect = sect;
./tools/qemu-xen/hw/fdc.c:    drv->head = 0;
./tools/qemu-xen/hw/fdc.c:    drv->track = 0;
./tools/qemu-xen/hw/fdc.c:    drv->sect = 1;
./tools/qemu-xen/hw/fdc.c:    if (drv->bs != NULL && bdrv_is_inserted(drv->bs)) {
./tools/qemu-xen/hw/fdc.c:        ro = bdrv_is_read_only(drv->bs);
./tools/qemu-xen/hw/fdc.c:        bdrv_get_floppy_geometry_hint(drv->bs, &nb_heads, &max_track,
./tools/qemu-xen/hw/fdc.c:                                      &last_sect, drv->drive, &drive);
./tools/qemu-xen/hw/fdc.c:            drv->flags &= ~FDISK_DBL_SIDES;
./tools/qemu-xen/hw/fdc.c:            drv->flags |= FDISK_DBL_SIDES;
./tools/qemu-xen/hw/fdc.c:        drv->max_track = max_track;
./tools/qemu-xen/hw/fdc.c:        drv->last_sect = last_sect;
./tools/qemu-xen/hw/fdc.c:        drv->ro = ro;
./tools/qemu-xen/hw/fdc.c:        drv->drive = drive;
./tools/qemu-xen/hw/fdc.c:        drv->last_sect = 0;
./tools/qemu-xen/hw/fdc.c:        drv->max_track = 0;
./tools/qemu-xen/hw/fdc.c:        drv->flags &= ~FDISK_DBL_SIDES;
./tools/qemu-xen/hw/fdc.c:    if (!drv->bs)
./tools/qemu-xen/hw/fdc.c:    if (drv->media_changed) {
./tools/qemu-xen/hw/fdc.c:        drv->media_changed = 0;
./tools/qemu-xen/hw/fdc.c:        ret = bdrv_media_changed(drv->bs);
./tools/qemu-xen/hw/fdc.c:                   cur_drv->head, cur_drv->track, cur_drv->sect,
./tools/qemu-xen/hw/fdc.c:    /* XXX: cur_drv->sect >= cur_drv->last_sect should be an
./tools/qemu-xen/hw/fdc.c:    if (cur_drv->sect >= cur_drv->last_sect ||
./tools/qemu-xen/hw/fdc.c:        cur_drv->sect == fdctrl->eot) {
./tools/qemu-xen/hw/fdc.c:        cur_drv->sect = 1;
./tools/qemu-xen/hw/fdc.c:            if (cur_drv->head == 0 &&
./tools/qemu-xen/hw/fdc.c:                (cur_drv->flags & FDISK_DBL_SIDES) != 0) {
./tools/qemu-xen/hw/fdc.c:                cur_drv->head = 1;
./tools/qemu-xen/hw/fdc.c:                cur_drv->head = 0;
./tools/qemu-xen/hw/fdc.c:                cur_drv->track++;
./tools/qemu-xen/hw/fdc.c:                if ((cur_drv->flags & FDISK_DBL_SIDES) == 0)
./tools/qemu-xen/hw/fdc.c:            cur_drv->track++;
./tools/qemu-xen/hw/fdc.c:                       cur_drv->head, cur_drv->track,
./tools/qemu-xen/hw/fdc.c:                       cur_drv->sect, fd_sector(cur_drv));
./tools/qemu-xen/hw/fdc.c:        cur_drv->sect++;
./tools/qemu-xen/hw/fdc.c:                   status0 | (cur_drv->head << 2) | GET_CUR_DRV(fdctrl));
./tools/qemu-xen/hw/fdc.c:    fdctrl->fifo[0] = status0 | (cur_drv->head << 2) | GET_CUR_DRV(fdctrl);
./tools/qemu-xen/hw/fdc.c:    fdctrl->fifo[3] = cur_drv->track;
./tools/qemu-xen/hw/fdc.c:    fdctrl->fifo[4] = cur_drv->head;
./tools/qemu-xen/hw/fdc.c:    fdctrl->fifo[5] = cur_drv->sect;
./tools/qemu-xen/hw/fdc.c:                   fd_sector_calc(kh, kt, ks, cur_drv->last_sect));
./tools/qemu-xen/hw/fdc.c:                       (cur_drv->last_sect - ks + 1), fdctrl->data_len);
./tools/qemu-xen/hw/fdc.c:    if (cur_drv->bs == NULL) {
./tools/qemu-xen/hw/fdc.c:                       fdctrl->data_len, GET_CUR_DRV(fdctrl), cur_drv->head,
./tools/qemu-xen/hw/fdc.c:                       cur_drv->track, cur_drv->sect, fd_sector(cur_drv),
./tools/qemu-xen/hw/fdc.c:            if (bdrv_read(cur_drv->bs, fd_sector(cur_drv),
./tools/qemu-xen/hw/fdc.c:            if (bdrv_write(cur_drv->bs, fd_sector(cur_drv),
./tools/qemu-xen/hw/fdc.c:            if (bdrv_read(cur_drv->bs, fd_sector(cur_drv), fdctrl->fifo, 1) < 0) {
./tools/qemu-xen/hw/fdc.c:                   fd_sector_calc(kh, kt, ks, cur_drv->last_sect));
./tools/qemu-xen/hw/fdc.c:    if (cur_drv->bs == NULL ||
./tools/qemu-xen/hw/fdc.c:        bdrv_write(cur_drv->bs, fd_sector(cur_drv), fdctrl->fifo, 1) < 0) {
./tools/qemu-xen/hw/fdc.c:        if (cur_drv->sect == cur_drv->last_sect) {
./tools/qemu-xen/hw/fdc.c:    fdctrl->fifo[6] = cur_drv->last_sect;
./tools/qemu-xen/hw/fdc.c:        (cur_drv->perpendicular << 2);
./tools/qemu-xen/hw/fdc.c:    cur_drv->last_sect = fdctrl->fifo[9];
./tools/qemu-xen/hw/fdc.c:    cur_drv->perpendicular = (fdctrl->fifo[10] >> 2) & 0xF;
./tools/qemu-xen/hw/fdc.c:    fdctrl->fifo[8] = cur_drv->last_sect;
./tools/qemu-xen/hw/fdc.c:        (cur_drv->perpendicular << 2);
./tools/qemu-xen/hw/fdc.c:    cur_drv->head = (fdctrl->fifo[1] >> 2) & 1;
./tools/qemu-xen/hw/fdc.c:    cur_drv->bps =
./tools/qemu-xen/hw/fdc.c:    cur_drv->last_sect =
./tools/qemu-xen/hw/fdc.c:        cur_drv->flags & FDISK_DBL_SIDES ? fdctrl->fifo[3] :
./tools/qemu-xen/hw/fdc.c:    cur_drv->last_sect = fdctrl->fifo[3];
./tools/qemu-xen/hw/fdc.c:    cur_drv->head = (fdctrl->fifo[1] >> 2) & 1;
./tools/qemu-xen/hw/fdc.c:    fdctrl->fifo[0] = (cur_drv->ro << 6) |
./tools/qemu-xen/hw/fdc.c:        (cur_drv->track == 0 ? 0x10 : 0x00) |
./tools/qemu-xen/hw/fdc.c:        (cur_drv->head << 2) |
./tools/qemu-xen/hw/fdc.c:            FD_SR0_SEEK | (cur_drv->head << 2) | GET_CUR_DRV(fdctrl);
./tools/qemu-xen/hw/fdc.c:    fdctrl->fifo[1] = cur_drv->track;
./tools/qemu-xen/hw/fdc.c:    if (fdctrl->fifo[2] > cur_drv->max_track) {
./tools/qemu-xen/hw/fdc.c:        cur_drv->track = fdctrl->fifo[2];
./tools/qemu-xen/hw/fdc.c:        cur_drv->perpendicular = fdctrl->fifo[1] & 0x7;
./tools/qemu-xen/hw/fdc.c:            (cur_drv->head << 2) | GET_CUR_DRV(fdctrl);
./tools/qemu-xen/hw/fdc.c:    if (fdctrl->fifo[2] + cur_drv->track >= cur_drv->max_track) {
./tools/qemu-xen/hw/fdc.c:        cur_drv->track = cur_drv->max_track - 1;
./tools/qemu-xen/hw/fdc.c:        cur_drv->track += fdctrl->fifo[2];
./tools/qemu-xen/hw/fdc.c:    if (fdctrl->fifo[2] > cur_drv->track) {
./tools/qemu-xen/hw/fdc.c:        cur_drv->track = 0;
./tools/qemu-xen/hw/fdc.c:        cur_drv->track -= fdctrl->fifo[2];
./tools/qemu-xen/hw/fdc.c:            if (bdrv_write(cur_drv->bs, fd_sector(cur_drv), fdctrl->fifo, 1) < 0) {
./tools/qemu-xen/hw/fdc.c:    if (cur_drv->last_sect != 0) {
./tools/qemu-xen/hw/fdc.c:        cur_drv->sect = (cur_drv->sect % cur_drv->last_sect) + 1;
./tools/qemu-xen/hw/fdc.c:    qdev_set_legacy_instance_id(&dev->qdev, iobase, 2);
./tools/qemu-xen/hw/fdc.c:    add_boot_device_path(isa->bootindexA, &dev->qdev, "/floppy@0");
./tools/qemu-xen/hw/fdc.c:    add_boot_device_path(isa->bootindexB, &dev->qdev, "/floppy@1");
./tools/qemu-xen/hw/fdc.c:    qdev_init_gpio_in(&dev->qdev, fdctrl_handle_tc, 1);
./tools/qemu-xen/hw/fdc.c:    qdev_set_legacy_instance_id(&dev->qdev, io, 2);
./tools/qemu-xen/hw/fdc.c:    qdev_init_gpio_in(&dev->qdev, fdctrl_handle_tc, 1);
./tools/qemu-xen/hw/fdc.c:    qdev_set_legacy_instance_id(&dev->qdev, io, 2);
./tools/qemu-xen/hw/xilinx_uartlite.c:    s->chr = qdev_init_chardev(&dev->qdev);
./tools/qemu-xen/hw/slavio_misc.c:    qdev_init_gpio_in(&dev->qdev, slavio_set_power_fail, 1);
./tools/qemu-xen/hw/g364fb.c:    g364fb_init(&dev->qdev, s);
./tools/qemu-xen/hw/armv7m_nvic.c:        return cpu_single_env->cp15.c0_cpuid;
./tools/qemu-xen/hw/armv7m_nvic.c:        return cpu_single_env->v7m.vecbase;
./tools/qemu-xen/hw/armv7m_nvic.c:        cpu_single_env->v7m.vecbase = value & 0xffffff80;
./tools/qemu-xen/hw/armv7m_nvic.c:    vmstate_register(&dev->qdev, -1, &vmstate_nvic, s);
./tools/qemu-xen/hw/bonito.c:    slot = (pci_dev->devfn >> 3);
./tools/qemu-xen/hw/bonito.c:    pci_config_set_prog_interface(dev->config, 0x00);
./tools/qemu-xen/hw/bonito.c:    pci_set_word(dev->config + PCI_COMMAND, 0x0000);
./tools/qemu-xen/hw/bonito.c:    pci_set_word(dev->config + PCI_STATUS, 0x0000);
./tools/qemu-xen/hw/bonito.c:    pci_set_word(dev->config + PCI_SUBSYSTEM_VENDOR_ID, 0x0000);
./tools/qemu-xen/hw/bonito.c:    pci_set_word(dev->config + PCI_SUBSYSTEM_ID, 0x0000);
./tools/qemu-xen/hw/bonito.c:    pci_set_byte(dev->config + PCI_INTERRUPT_LINE, 0x00);
./tools/qemu-xen/hw/bonito.c:    pci_set_byte(dev->config + PCI_INTERRUPT_PIN, 0x01);
./tools/qemu-xen/hw/bonito.c:    pci_set_byte(dev->config + PCI_MIN_GNT, 0x3c);
./tools/qemu-xen/hw/bonito.c:    pci_set_byte(dev->config + PCI_MAX_LAT, 0x00);
./tools/qemu-xen/hw/prep_pci.c:    return (irq_num + (pci_dev->devfn >> 3)) & 1;
./tools/qemu-xen/hw/vhost.c:    vhost_log_chunk_t *from = dev->log + start / VHOST_LOG_CHUNK;
./tools/qemu-xen/hw/vhost.c:    vhost_log_chunk_t *to = dev->log + end / VHOST_LOG_CHUNK + 1;
./tools/qemu-xen/hw/vhost.c:    assert(end / VHOST_LOG_CHUNK < dev->log_size);
./tools/qemu-xen/hw/vhost.c:    assert(start / VHOST_LOG_CHUNK < dev->log_size);
./tools/qemu-xen/hw/vhost.c:    if (!dev->log_enabled || !dev->started) {
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < dev->mem->nregions; ++i) {
./tools/qemu-xen/hw/vhost.c:        struct vhost_memory_region *reg = dev->mem->regions + i;
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < dev->nvqs; ++i) {
./tools/qemu-xen/hw/vhost.c:        struct vhost_virtqueue *vq = dev->vqs + i;
./tools/qemu-xen/hw/vhost.c: * memory regions in dev->mem. */
./tools/qemu-xen/hw/vhost.c:    int from, to, n = dev->mem->nregions;
./tools/qemu-xen/hw/vhost.c:        struct vhost_memory_region *reg = dev->mem->regions + to;
./tools/qemu-xen/hw/vhost.c:            memcpy(reg, dev->mem->regions + from, sizeof *reg);
./tools/qemu-xen/hw/vhost.c:            --dev->mem->nregions;
./tools/qemu-xen/hw/vhost.c:        memcpy(dev->mem->regions + n, reg, sizeof *reg);
./tools/qemu-xen/hw/vhost.c:        reg = dev->mem->regions + n;
./tools/qemu-xen/hw/vhost.c:        assert(dev->mem->nregions == n);
./tools/qemu-xen/hw/vhost.c:        ++dev->mem->nregions;
./tools/qemu-xen/hw/vhost.c:    for (from = 0, to = 0; from < dev->mem->nregions; ++from, ++to) {
./tools/qemu-xen/hw/vhost.c:        struct vhost_memory_region *reg = dev->mem->regions + to;
./tools/qemu-xen/hw/vhost.c:            memcpy(reg, dev->mem->regions + from, sizeof *reg);
./tools/qemu-xen/hw/vhost.c:        struct vhost_memory_region *reg = dev->mem->regions + to;
./tools/qemu-xen/hw/vhost.c:    assert(to <= dev->mem->nregions + 1);
./tools/qemu-xen/hw/vhost.c:    dev->mem->nregions = to;
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < dev->mem->nregions; ++i) {
./tools/qemu-xen/hw/vhost.c:        struct vhost_memory_region *reg = dev->mem->regions + i;
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < dev->nvqs; ++i) {
./tools/qemu-xen/hw/vhost.c:        struct vhost_virtqueue *vq = dev->vqs + i;
./tools/qemu-xen/hw/vhost.c:    r = ioctl(dev->control, VHOST_SET_LOG_BASE, &log_base);
./tools/qemu-xen/hw/vhost.c:    vhost_client_sync_dirty_bitmap(&dev->client, 0,
./tools/qemu-xen/hw/vhost.c:    if (dev->log) {
./tools/qemu-xen/hw/vhost.c:        g_free(dev->log);
./tools/qemu-xen/hw/vhost.c:    dev->log = log;
./tools/qemu-xen/hw/vhost.c:    dev->log_size = size;
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < dev->nvqs; ++i) {
./tools/qemu-xen/hw/vhost.c:        struct vhost_virtqueue *vq = dev->vqs + i;
./tools/qemu-xen/hw/vhost.c:    int i, n = dev->mem->nregions;
./tools/qemu-xen/hw/vhost.c:        struct vhost_memory_region *reg = dev->mem->regions + i;
./tools/qemu-xen/hw/vhost.c:        (dev->mem->nregions + 1) * sizeof dev->mem->regions[0];
./tools/qemu-xen/hw/vhost.c:    dev->mem = g_realloc(dev->mem, s);
./tools/qemu-xen/hw/vhost.c:    if (!dev->started) {
./tools/qemu-xen/hw/vhost.c:    if (dev->started) {
./tools/qemu-xen/hw/vhost.c:    if (!dev->log_enabled) {
./tools/qemu-xen/hw/vhost.c:        r = ioctl(dev->control, VHOST_SET_MEM_TABLE, dev->mem);
./tools/qemu-xen/hw/vhost.c:#define VHOST_LOG_BUFFER (0x1000 / sizeof *dev->log)
./tools/qemu-xen/hw/vhost.c:    if (dev->log_size < log_size) {
./tools/qemu-xen/hw/vhost.c:    r = ioctl(dev->control, VHOST_SET_MEM_TABLE, dev->mem);
./tools/qemu-xen/hw/vhost.c:    if (dev->log_size > log_size + VHOST_LOG_BUFFER) {
./tools/qemu-xen/hw/vhost.c:    int r = ioctl(dev->control, VHOST_SET_VRING_ADDR, &addr);
./tools/qemu-xen/hw/vhost.c:    uint64_t features = dev->acked_features;
./tools/qemu-xen/hw/vhost.c:    r = ioctl(dev->control, VHOST_SET_FEATURES, &features);
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < dev->nvqs; ++i) {
./tools/qemu-xen/hw/vhost.c:        r = vhost_virtqueue_set_addr(dev, dev->vqs + i, i,
./tools/qemu-xen/hw/vhost.c:        t = vhost_virtqueue_set_addr(dev, dev->vqs + i, i,
./tools/qemu-xen/hw/vhost.c:                                     dev->log_enabled);
./tools/qemu-xen/hw/vhost.c:    t = vhost_dev_set_features(dev, dev->log_enabled);
./tools/qemu-xen/hw/vhost.c:    if (!!enable == dev->log_enabled) {
./tools/qemu-xen/hw/vhost.c:    if (!dev->started) {
./tools/qemu-xen/hw/vhost.c:        dev->log_enabled = enable;
./tools/qemu-xen/hw/vhost.c:        if (dev->log) {
./tools/qemu-xen/hw/vhost.c:            g_free(dev->log);
./tools/qemu-xen/hw/vhost.c:        dev->log = NULL;
./tools/qemu-xen/hw/vhost.c:        dev->log_size = 0;
./tools/qemu-xen/hw/vhost.c:    dev->log_enabled = enable;
./tools/qemu-xen/hw/vhost.c:    r = ioctl(dev->control, VHOST_SET_VRING_NUM, &state);
./tools/qemu-xen/hw/vhost.c:    r = ioctl(dev->control, VHOST_SET_VRING_BASE, &state);
./tools/qemu-xen/hw/vhost.c:    r = vhost_virtqueue_set_addr(dev, vq, idx, dev->log_enabled);
./tools/qemu-xen/hw/vhost.c:    r = ioctl(dev->control, VHOST_SET_VRING_KICK, &file);
./tools/qemu-xen/hw/vhost.c:    r = ioctl(dev->control, VHOST_SET_VRING_CALL, &file);
./tools/qemu-xen/hw/vhost.c:    r = ioctl(dev->control, VHOST_GET_VRING_BASE, &state);
./tools/qemu-xen/hw/vhost.c:        hdev->control = devfd;
./tools/qemu-xen/hw/vhost.c:        hdev->control = open("/dev/vhost-net", O_RDWR);
./tools/qemu-xen/hw/vhost.c:        if (hdev->control < 0) {
./tools/qemu-xen/hw/vhost.c:    r = ioctl(hdev->control, VHOST_SET_OWNER, NULL);
./tools/qemu-xen/hw/vhost.c:    r = ioctl(hdev->control, VHOST_GET_FEATURES, &features);
./tools/qemu-xen/hw/vhost.c:    hdev->features = features;
./tools/qemu-xen/hw/vhost.c:    hdev->client.set_memory = vhost_client_set_memory;
./tools/qemu-xen/hw/vhost.c:    hdev->client.sync_dirty_bitmap = vhost_client_sync_dirty_bitmap;
./tools/qemu-xen/hw/vhost.c:    hdev->client.migration_log = vhost_client_migration_log;
./tools/qemu-xen/hw/vhost.c:    hdev->client.log_start = NULL;
./tools/qemu-xen/hw/vhost.c:    hdev->client.log_stop = NULL;
./tools/qemu-xen/hw/vhost.c:    hdev->mem = g_malloc0(offsetof(struct vhost_memory, regions));
./tools/qemu-xen/hw/vhost.c:    hdev->log = NULL;
./tools/qemu-xen/hw/vhost.c:    hdev->log_size = 0;
./tools/qemu-xen/hw/vhost.c:    hdev->log_enabled = false;
./tools/qemu-xen/hw/vhost.c:    hdev->started = false;
./tools/qemu-xen/hw/vhost.c:    cpu_register_phys_memory_client(&hdev->client);
./tools/qemu-xen/hw/vhost.c:    hdev->force = force;
./tools/qemu-xen/hw/vhost.c:    close(hdev->control);
./tools/qemu-xen/hw/vhost.c:    cpu_unregister_phys_memory_client(&hdev->client);
./tools/qemu-xen/hw/vhost.c:    g_free(hdev->mem);
./tools/qemu-xen/hw/vhost.c:    close(hdev->control);
./tools/qemu-xen/hw/vhost.c:    return !vdev->binding->query_guest_notifiers ||
./tools/qemu-xen/hw/vhost.c:        vdev->binding->query_guest_notifiers(vdev->binding_opaque) ||
./tools/qemu-xen/hw/vhost.c:        hdev->force;
./tools/qemu-xen/hw/vhost.c:    if (!vdev->binding->set_host_notifier) {
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < hdev->nvqs; ++i) {
./tools/qemu-xen/hw/vhost.c:        r = vdev->binding->set_host_notifier(vdev->binding_opaque, i, true);
./tools/qemu-xen/hw/vhost.c:        r = vdev->binding->set_host_notifier(vdev->binding_opaque, i, false);
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < hdev->nvqs; ++i) {
./tools/qemu-xen/hw/vhost.c:        r = vdev->binding->set_host_notifier(vdev->binding_opaque, i, false);
./tools/qemu-xen/hw/vhost.c:    if (!vdev->binding->set_guest_notifiers) {
./tools/qemu-xen/hw/vhost.c:    r = vdev->binding->set_guest_notifiers(vdev->binding_opaque, true);
./tools/qemu-xen/hw/vhost.c:    r = vhost_dev_set_features(hdev, hdev->log_enabled);
./tools/qemu-xen/hw/vhost.c:    r = ioctl(hdev->control, VHOST_SET_MEM_TABLE, hdev->mem);
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < hdev->nvqs; ++i) {
./tools/qemu-xen/hw/vhost.c:                                 hdev->vqs + i,
./tools/qemu-xen/hw/vhost.c:    if (hdev->log_enabled) {
./tools/qemu-xen/hw/vhost.c:        hdev->log_size = vhost_get_log_size(hdev);
./tools/qemu-xen/hw/vhost.c:        hdev->log = hdev->log_size ?
./tools/qemu-xen/hw/vhost.c:            g_malloc0(hdev->log_size * sizeof *hdev->log) : NULL;
./tools/qemu-xen/hw/vhost.c:        r = ioctl(hdev->control, VHOST_SET_LOG_BASE,
./tools/qemu-xen/hw/vhost.c:                  (uint64_t)(unsigned long)hdev->log);
./tools/qemu-xen/hw/vhost.c:    hdev->started = true;
./tools/qemu-xen/hw/vhost.c:                                hdev->vqs + i,
./tools/qemu-xen/hw/vhost.c:    vdev->binding->set_guest_notifiers(vdev->binding_opaque, false);
./tools/qemu-xen/hw/vhost.c:    for (i = 0; i < hdev->nvqs; ++i) {
./tools/qemu-xen/hw/vhost.c:                                hdev->vqs + i,
./tools/qemu-xen/hw/vhost.c:    vhost_client_sync_dirty_bitmap(&hdev->client, 0,
./tools/qemu-xen/hw/vhost.c:    r = vdev->binding->set_guest_notifiers(vdev->binding_opaque, false);
./tools/qemu-xen/hw/vhost.c:    hdev->started = false;
./tools/qemu-xen/hw/vhost.c:    g_free(hdev->log);
./tools/qemu-xen/hw/vhost.c:    hdev->log = NULL;
./tools/qemu-xen/hw/vhost.c:    hdev->log_size = 0;
./tools/qemu-xen/hw/virtex_ml507.c:    ppcemb_tlb_t *tlb = &env->tlb.tlbe[0];
./tools/qemu-xen/hw/virtex_ml507.c:    tlb = &env->tlb.tlbe[1];
./tools/qemu-xen/hw/virtex_ml507.c:    irqs[PPCUIC_OUTPUT_INT] = ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_INT];
./tools/qemu-xen/hw/virtex_ml507.c:    irqs[PPCUIC_OUTPUT_CINT] = ((qemu_irq *)env->irq_inputs)[PPC40x_INPUT_CINT];
./tools/qemu-xen/hw/virtex_ml507.c:    struct boot_info *bi = env->load_info;
./tools/qemu-xen/hw/virtex_ml507.c:    env->gpr[1] = (16<<20) - 8;
./tools/qemu-xen/hw/virtex_ml507.c:    env->gpr[3] = bi->fdt;
./tools/qemu-xen/hw/virtex_ml507.c:    env->nip = bi->bootstrap_pc;
./tools/qemu-xen/hw/virtex_ml507.c:    env->gpr[6] = tswap32(EPAPR_MAGIC);
./tools/qemu-xen/hw/virtex_ml507.c:    env->gpr[7] = bi->ima_size;
./tools/qemu-xen/hw/virtex_ml507.c:    cpu_irq = (qemu_irq *) &env->irq_inputs[PPC40x_INPUT_INT];
./tools/qemu-xen/hw/virtex_ml507.c:    env->load_info = &boot_info;
./tools/qemu-xen/hw/tc58128.c:    dev->state = WAIT;
./tools/qemu-xen/hw/tc58128.c:    dev->flash_contents = g_malloc(FLASH_SIZE);
./tools/qemu-xen/hw/tc58128.c:    memset(dev->flash_contents, 0xff, FLASH_SIZE);
./tools/qemu-xen/hw/tc58128.c:	ret = load_image(filename, dev->flash_contents + 528 * 32);
./tools/qemu-xen/hw/tc58128.c:	    dev->flash_contents[0] = blocks & 0xff;
./tools/qemu-xen/hw/tc58128.c:	    dev->flash_contents[1] = (blocks >> 8) & 0xff;
./tools/qemu-xen/hw/tc58128.c:	    dev->flash_contents[2] = (blocks >> 16) & 0xff;
./tools/qemu-xen/hw/tc58128.c:	    dev->flash_contents[3] = (blocks >> 24) & 0xff;
./tools/qemu-xen/hw/tc58128.c:	dev->state = WAIT;
./tools/qemu-xen/hw/tc58128.c:	dev->state = READ1;
./tools/qemu-xen/hw/tc58128.c:	dev->address_cycle = 0;
./tools/qemu-xen/hw/tc58128.c:	dev->state = READ2;
./tools/qemu-xen/hw/tc58128.c:	dev->address_cycle = 0;
./tools/qemu-xen/hw/tc58128.c:	dev->state = READ3;
./tools/qemu-xen/hw/tc58128.c:	dev->address_cycle = 0;
./tools/qemu-xen/hw/tc58128.c:    switch (dev->state) {
./tools/qemu-xen/hw/tc58128.c:	switch (dev->address_cycle) {
./tools/qemu-xen/hw/tc58128.c:	    dev->address = data;
./tools/qemu-xen/hw/tc58128.c:	    if (dev->state == READ2)
./tools/qemu-xen/hw/tc58128.c:		dev->address |= 0x100;
./tools/qemu-xen/hw/tc58128.c:	    else if (dev->state == READ3)
./tools/qemu-xen/hw/tc58128.c:		dev->address |= 0x200;
./tools/qemu-xen/hw/tc58128.c:	    dev->address += data * 528 * 0x100;
./tools/qemu-xen/hw/tc58128.c:	    dev->address += data * 528;
./tools/qemu-xen/hw/tc58128.c:		    dev->address);
./tools/qemu-xen/hw/tc58128.c:	dev->address_cycle++;
./tools/qemu-xen/hw/tc58128.c:    if (dev->address % 0x100000 == 0)
./tools/qemu-xen/hw/tc58128.c:	fprintf(stderr, "reading flash at address 0x%08x\n", dev->address);
./tools/qemu-xen/hw/tc58128.c:    return dev->flash_contents[dev->address++];
./tools/qemu-xen/hw/versatilepb.c:    qdev_init_gpio_in(&dev->qdev, vpb_sic_set_irq, 32);
./tools/qemu-xen/hw/virtio-balloon.c:    for (i = 0; i < VIRTIO_BALLOON_S_NR; dev->stats[i++] = -1);
./tools/qemu-xen/hw/virtio-balloon.c:    config.num_pages = cpu_to_le32(dev->num_pages);
./tools/qemu-xen/hw/virtio-balloon.c:    config.actual = cpu_to_le32(dev->actual);
./tools/qemu-xen/hw/virtio-balloon.c:    dev->actual = le32_to_cpu(config.actual);
./tools/qemu-xen/hw/virtio-balloon.c:    if (dev->vdev.guest_features & (1 << VIRTIO_BALLOON_F_STATS_VQ)) {
./tools/qemu-xen/hw/virtio-balloon.c:        virtqueue_push(dev->svq, &dev->stats_vq_elem, dev->stats_vq_offset);
./tools/qemu-xen/hw/virtio-balloon.c:        virtio_notify(&dev->vdev, dev->svq);
./tools/qemu-xen/hw/virtio-balloon.c:    info->actual = ram_size - ((uint64_t) dev->actual <<
./tools/qemu-xen/hw/virtio-balloon.c:        dev->num_pages = (ram_size - target) >> VIRTIO_BALLOON_PFN_SHIFT;
./tools/qemu-xen/hw/virtio-balloon.c:        virtio_notify_config(&dev->vdev);
./tools/qemu-xen/hw/omap1.c:                (s->env->halted << 6);	/* Quite useless... */
./tools/qemu-xen/hw/omap1.c:    if (mpu->env->halted)
./tools/qemu-xen/hw/scsi-bus.c:    SCSIBus *bus = DO_UPCAST(SCSIBus, qbus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/scsi-bus.c:    if (dev->channel > bus->info->max_channel) {
./tools/qemu-xen/hw/scsi-bus.c:        error_report("bad scsi channel id: %d", dev->channel);
./tools/qemu-xen/hw/scsi-bus.c:    if (dev->id != -1 && dev->id > bus->info->max_target) {
./tools/qemu-xen/hw/scsi-bus.c:        error_report("bad scsi device id: %d", dev->id);
./tools/qemu-xen/hw/scsi-bus.c:    if (dev->id == -1) {
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->lun == -1) {
./tools/qemu-xen/hw/scsi-bus.c:            dev->lun = 0;
./tools/qemu-xen/hw/scsi-bus.c:            d = scsi_device_find(bus, dev->channel, ++id, dev->lun);
./tools/qemu-xen/hw/scsi-bus.c:        } while (d && d->lun == dev->lun && id <= bus->info->max_target);
./tools/qemu-xen/hw/scsi-bus.c:        dev->id = id;
./tools/qemu-xen/hw/scsi-bus.c:    } else if (dev->lun == -1) {
./tools/qemu-xen/hw/scsi-bus.c:            d = scsi_device_find(bus, dev->channel, dev->id, ++lun);
./tools/qemu-xen/hw/scsi-bus.c:        dev->lun = lun;
./tools/qemu-xen/hw/scsi-bus.c:        d = scsi_device_find(bus, dev->channel, dev->id, dev->lun);
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->lun == d->lun && dev != d) {
./tools/qemu-xen/hw/scsi-bus.c:    dev->info = info;
./tools/qemu-xen/hw/scsi-bus.c:    QTAILQ_INIT(&dev->requests);
./tools/qemu-xen/hw/scsi-bus.c:    rc = dev->info->init(dev);
./tools/qemu-xen/hw/scsi-bus.c:        dev->vmsentry = qemu_add_vm_change_state_handler(scsi_dma_restart_cb,
./tools/qemu-xen/hw/scsi-bus.c:    if (dev->vmsentry) {
./tools/qemu-xen/hw/scsi-bus.c:        qemu_del_vm_change_state_handler(dev->vmsentry);
./tools/qemu-xen/hw/scsi-bus.c:    if (dev->info->destroy) {
./tools/qemu-xen/hw/scsi-bus.c:        dev->info->destroy(dev);
./tools/qemu-xen/hw/scsi-bus.c:    if (req->dev && req->dev->unit_attention.key == UNIT_ATTENTION) {
./tools/qemu-xen/hw/scsi-bus.c:        scsi_req_build_sense(req, req->dev->unit_attention);
./tools/qemu-xen/hw/scsi-bus.c:    channel = r->req.dev->channel;
./tools/qemu-xen/hw/scsi-bus.c:    id = r->req.dev->id;
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->channel == channel && dev->id == id) {
./tools/qemu-xen/hw/scsi-bus.c:            if (dev->lun == 0) {
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->channel == channel && dev->id == id) {
./tools/qemu-xen/hw/scsi-bus.c:            store_lun(&r->buf[i], dev->lun);
./tools/qemu-xen/hw/scsi-bus.c:    assert(r->req.dev->lun != r->req.lun);
./tools/qemu-xen/hw/scsi-bus.c:        if (r->req.dev->sense_is_ua) {
./tools/qemu-xen/hw/scsi-bus.c:            if (r->req.dev->info->unit_attention_reported) {
./tools/qemu-xen/hw/scsi-bus.c:                r->req.dev->info->unit_attention_reported(req->dev);
./tools/qemu-xen/hw/scsi-bus.c:            r->req.dev->sense_len = 0;
./tools/qemu-xen/hw/scsi-bus.c:            r->req.dev->sense_is_ua = false;
./tools/qemu-xen/hw/scsi-bus.c:    trace_scsi_req_alloc(req->dev->id, req->lun, req->tag);
./tools/qemu-xen/hw/scsi-bus.c:    if (req->dev->unit_attention.key != UNIT_ATTENTION &&
./tools/qemu-xen/hw/scsi-bus.c:    if (req->dev->unit_attention.key == UNIT_ATTENTION) {
./tools/qemu-xen/hw/scsi-bus.c:        ua = &req->dev->unit_attention;
./tools/qemu-xen/hw/scsi-bus.c:    if (req->dev->sense_is_ua) {
./tools/qemu-xen/hw/scsi-bus.c:        if (req->dev->info->unit_attention_reported) {
./tools/qemu-xen/hw/scsi-bus.c:            req->dev->info->unit_attention_reported(req->dev);
./tools/qemu-xen/hw/scsi-bus.c:        req->dev->sense_len = 0;
./tools/qemu-xen/hw/scsi-bus.c:        req->dev->sense_is_ua = false;
./tools/qemu-xen/hw/scsi-bus.c:    return scsi_build_sense(dev->sense, dev->sense_len, buf, len, fixed);
./tools/qemu-xen/hw/scsi-bus.c:    trace_scsi_req_build_sense(req->dev->id, req->lun, req->tag,
./tools/qemu-xen/hw/scsi-bus.c:    QTAILQ_INSERT_TAIL(&req->dev->requests, req, next);
./tools/qemu-xen/hw/scsi-bus.c:    trace_scsi_req_dequeue(req->dev->id, req->lun, req->tag);
./tools/qemu-xen/hw/scsi-bus.c:        QTAILQ_REMOVE(&req->dev->requests, req, next);
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->type == TYPE_ROM) {
./tools/qemu-xen/hw/scsi-bus.c:        cmd->xfer *= dev->blocksize;
./tools/qemu-xen/hw/scsi-bus.c:        cmd->xfer *= dev->blocksize;
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->type == TYPE_ROM && (buf[1] & 16)) {
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->type == TYPE_ROM) {
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->type == TYPE_ROM) {
./tools/qemu-xen/hw/scsi-bus.c:            cmd->xfer *= dev->blocksize;
./tools/qemu-xen/hw/scsi-bus.c:    if (dev->type == TYPE_TAPE) {
./tools/qemu-xen/hw/scsi-bus.c:    trace_scsi_req_continue(req->dev->id, req->lun, req->tag);
./tools/qemu-xen/hw/scsi-bus.c:        trace_scsi_req_data_canceled(req->dev->id, req->lun, req->tag, len);
./tools/qemu-xen/hw/scsi-bus.c:        trace_scsi_req_data(req->dev->id, req->lun, req->tag, len);
./tools/qemu-xen/hw/scsi-bus.c:            req->dev->qdev.parent_bus->name,
./tools/qemu-xen/hw/scsi-bus.c:            req->dev->id,
./tools/qemu-xen/hw/scsi-bus.c:        memcpy(req->dev->sense, req->sense, req->sense_len);
./tools/qemu-xen/hw/scsi-bus.c:        req->dev->sense_len = req->sense_len;
./tools/qemu-xen/hw/scsi-bus.c:        req->dev->sense_is_ua = (req->ops == &reqops_unit_attention);
./tools/qemu-xen/hw/scsi-bus.c:        req->dev->sense_len = 0;
./tools/qemu-xen/hw/scsi-bus.c:        req->dev->sense_is_ua = false;
./tools/qemu-xen/hw/scsi-bus.c:    while (!QTAILQ_EMPTY(&sdev->requests)) {
./tools/qemu-xen/hw/scsi-bus.c:        req = QTAILQ_FIRST(&sdev->requests);
./tools/qemu-xen/hw/scsi-bus.c:    sdev->unit_attention = sense;
./tools/qemu-xen/hw/scsi-bus.c:        if (dev->channel == channel && dev->id == id) {
./tools/qemu-xen/hw/scsi-bus.c:            if (dev->lun == lun) {
./tools/qemu-xen/hw/lance.c:    qdev_init_gpio_in(&dev->qdev, parent_lance_reset, 1);
./tools/qemu-xen/hw/lance.c:    return pcnet_common_init(&dev->qdev, s, &net_lance_info);
./tools/qemu-xen/hw/alpha_typhoon.c:        ret = s->cchip.misc | (env->cpu_index & 3);
./tools/qemu-xen/hw/alpha_typhoon.c:            env->alarm_timer = qemu_new_timer_ns(rtc_clock,
./tools/qemu-xen/hw/virtio-net.c:    n->nic = qemu_new_nic(&net_virtio_info, conf, dev->info->name, dev->id, n);
./tools/qemu-xen/hw/acpi_piix4.c:    BusState *bus = qdev_get_parent_bus(&dev->qdev);
./tools/qemu-xen/hw/acpi_piix4.c:        PCIDeviceInfo *info = container_of(qdev->info, PCIDeviceInfo, qdev);
./tools/qemu-xen/hw/acpi_piix4.c:        int slot = PCI_SLOT(pdev->devfn);
./tools/qemu-xen/hw/acpi_piix4.c:    piix4_acpi_system_hot_add_init(dev->bus, s);
./tools/qemu-xen/hw/acpi_piix4.c:    qdev_prop_set_uint32(&dev->qdev, "smb_io_base", smb_io_base);
./tools/qemu-xen/hw/acpi_piix4.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/acpi_piix4.c:        info = container_of(qdev->info, PCIDeviceInfo, qdev);
./tools/qemu-xen/hw/acpi_piix4.c:        if (PCI_SLOT(dev->devfn) == slot && !info->no_hotplug) {
./tools/qemu-xen/hw/acpi_piix4.c:    int slot = PCI_SLOT(dev->devfn);
./tools/qemu-xen/hw/xtensa_sim.c:        env->sregs[PRID] = n;
./tools/qemu-xen/hw/xtensa_sim.c:            env->pc = elf_entry;
./tools/qemu-xen/hw/bitbang_i2c.c:    bus = i2c_init_bus(&dev->qdev, "i2c");
./tools/qemu-xen/hw/bitbang_i2c.c:    qdev_init_gpio_in(&dev->qdev, bitbang_i2c_gpio_set, 2);
./tools/qemu-xen/hw/bitbang_i2c.c:    qdev_init_gpio_out(&dev->qdev, &s->out, 1);
./tools/qemu-xen/hw/eepro100.c:    vmstate_unregister(&pci_dev->qdev, s->vmstate, s);
./tools/qemu-xen/hw/eepro100.c:    eeprom93xx_free(&pci_dev->qdev, s->eeprom);
./tools/qemu-xen/hw/eepro100.c:                                               pci_dev->qdev.info);
./tools/qemu-xen/hw/eepro100.c:    s->eeprom = eeprom93xx_new(&pci_dev->qdev, EEPROM_SIZE);
./tools/qemu-xen/hw/eepro100.c:                          pci_dev->qdev.info->name, pci_dev->qdev.id, s);
./tools/qemu-xen/hw/eepro100.c:    vmstate_register(&pci_dev->qdev, -1, s->vmstate, s);
./tools/qemu-xen/hw/eepro100.c:    add_boot_device_path(s->conf.bootindex, &pci_dev->qdev, "/ethernet-phy@0");
./tools/qemu-xen/hw/eepro100.c:        pci_dev->vendor_id = PCI_VENDOR_ID_INTEL;
./tools/qemu-xen/hw/eepro100.c:        pci_dev->class_id = PCI_CLASS_NETWORK_ETHERNET;
./tools/qemu-xen/hw/eepro100.c:        pci_dev->romfile = "pxe-eepro100.rom";
./tools/qemu-xen/hw/eepro100.c:        pci_dev->init = e100_nic_init;
./tools/qemu-xen/hw/eepro100.c:        pci_dev->exit = pci_nic_uninit;
./tools/qemu-xen/hw/eepro100.c:        pci_dev->qdev.props = e100_properties;
./tools/qemu-xen/hw/eepro100.c:        pci_dev->qdev.size = sizeof(EEPRO100State);
./tools/qemu-xen/hw/unin_pci.c:    int devfn = pci_dev->devfn & 0x00FFFFFF;
./tools/qemu-xen/hw/milkymist-uart.c:    s->chr = qdev_init_chardev(&dev->qdev);
./tools/qemu-xen/hw/pci_bridge.c:    pci_set_word(dev->config + pos + PCI_SSVID_SVID, svid);
./tools/qemu-xen/hw/pci_bridge.c:    pci_set_word(dev->config + pos + PCI_SSVID_SSID, ssid);
./tools/qemu-xen/hw/pci_bridge.c:    uint8_t *conf = dev->config;
./tools/qemu-xen/hw/pci_bridge.c:    uint8_t *conf = dev->config;
./tools/qemu-xen/hw/pci_bridge.c:    PCIBus *parent = dev->bus;
./tools/qemu-xen/hw/pci_bridge.c:    pci_set_word(dev->config + PCI_STATUS,
./tools/qemu-xen/hw/pci_bridge.c:    pci_config_set_class(dev->config, PCI_CLASS_BRIDGE_PCI);
./tools/qemu-xen/hw/pci_bridge.c:    dev->config[PCI_HEADER_TYPE] =
./tools/qemu-xen/hw/pci_bridge.c:        (dev->config[PCI_HEADER_TYPE] & PCI_HEADER_TYPE_MULTI_FUNCTION) |
./tools/qemu-xen/hw/pci_bridge.c:    pci_set_word(dev->config + PCI_SEC_STATUS,
./tools/qemu-xen/hw/pci_bridge.c:    qbus_create_inplace(&sec_bus->qbus, &pci_bus_info, &dev->qdev,
./tools/qemu-xen/hw/stellaris.c:    qdev_init_gpio_out(&dev->qdev, &s->trigger, 1);
./tools/qemu-xen/hw/stellaris.c:    vmstate_register(&dev->qdev, -1, &vmstate_stellaris_gptm, s);
./tools/qemu-xen/hw/stellaris.c:    bus = i2c_init_bus(&dev->qdev, "i2c");
./tools/qemu-xen/hw/stellaris.c:    vmstate_register(&dev->qdev, -1, &vmstate_stellaris_i2c, s);
./tools/qemu-xen/hw/stellaris.c:    qdev_init_gpio_in(&dev->qdev, stellaris_adc_trigger, 1);
./tools/qemu-xen/hw/stellaris.c:    vmstate_register(&dev->qdev, -1, &vmstate_stellaris_adc, s);
./tools/qemu-xen/hw/stellaris.c:    s->bus[0] = ssi_create_bus(&dev->qdev, "ssi0");
./tools/qemu-xen/hw/stellaris.c:    s->bus[1] = ssi_create_bus(&dev->qdev, "ssi1");
./tools/qemu-xen/hw/stellaris.c:    qdev_init_gpio_in(&dev->qdev, stellaris_ssi_bus_select, 1);
./tools/qemu-xen/hw/stellaris.c:    vmstate_register(&dev->qdev, -1, &vmstate_stellaris_ssi_bus, s);
./tools/qemu-xen/hw/rtl8139.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/rtl8139.c:    add_boot_device_path(s->conf.bootindex, &dev->qdev, "/ethernet-phy@0");
./tools/qemu-xen/hw/pcnet-pci.c:    pci_conf = pci_dev->config;
./tools/qemu-xen/hw/pcnet-pci.c:    s->irq = pci_dev->irq[0];
./tools/qemu-xen/hw/pcnet-pci.c:    if (!pci_dev->qdev.hotplugged) {
./tools/qemu-xen/hw/pcnet-pci.c:    return pcnet_common_init(&pci_dev->qdev, s, &net_pci_pcnet_info);
./tools/qemu-xen/hw/pcie_aer.c:    exp = &dev->exp;
./tools/qemu-xen/hw/pcie_aer.c:    if (dev->exp.aer_log.log_max == PCIE_AER_LOG_MAX_UNSET) {
./tools/qemu-xen/hw/pcie_aer.c:        dev->exp.aer_log.log_max = PCIE_AER_LOG_MAX_DEFAULT;
./tools/qemu-xen/hw/pcie_aer.c:    if (dev->exp.aer_log.log_max > PCIE_AER_LOG_MAX_LIMIT) {
./tools/qemu-xen/hw/pcie_aer.c:    dev->exp.aer_log.log = g_malloc0(sizeof dev->exp.aer_log.log[0] *
./tools/qemu-xen/hw/pcie_aer.c:                                        dev->exp.aer_log.log_max);
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_long(dev->w1cmask + offset + PCI_ERR_UNCOR_STATUS,
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_long(dev->config + offset + PCI_ERR_UNCOR_SEVER,
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_long(dev->wmask + offset + PCI_ERR_UNCOR_SEVER,
./tools/qemu-xen/hw/pcie_aer.c:    pci_long_test_and_set_mask(dev->w1cmask + offset + PCI_ERR_COR_STATUS,
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_long(dev->config + offset + PCI_ERR_COR_MASK,
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_long(dev->wmask + offset + PCI_ERR_COR_MASK,
./tools/qemu-xen/hw/pcie_aer.c:    if (dev->exp.aer_log.log_max > 0) {
./tools/qemu-xen/hw/pcie_aer.c:        pci_set_long(dev->config + offset + PCI_ERR_CAP,
./tools/qemu-xen/hw/pcie_aer.c:        pci_set_long(dev->wmask + offset + PCI_ERR_CAP,
./tools/qemu-xen/hw/pcie_aer.c:        pci_set_long(dev->config + offset + PCI_ERR_CAP,
./tools/qemu-xen/hw/pcie_aer.c:        pci_set_long(dev->wmask + offset + PCI_ERR_CAP,
./tools/qemu-xen/hw/pcie_aer.c:        pci_word_test_and_set_mask(dev->wmask + PCI_BRIDGE_CONTROL,
./tools/qemu-xen/hw/pcie_aer.c:        pci_long_test_and_set_mask(dev->w1cmask + PCI_STATUS,
./tools/qemu-xen/hw/pcie_aer.c:    g_free(dev->exp.aer_log.log);
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:    PCIEAERLog *aer_log = &dev->exp.aer_log;
./tools/qemu-xen/hw/pcie_aer.c:                                   dev->exp.aer_log.log[i].status);
./tools/qemu-xen/hw/pcie_aer.c:          (pci_get_word(dev->config + PCI_COMMAND) & PCI_COMMAND_SERR))) {
./tools/qemu-xen/hw/pcie_aer.c:    pci_word_test_and_set_mask(dev->config + PCI_STATUS,
./tools/qemu-xen/hw/pcie_aer.c:          pci_get_word(dev->config + dev->exp.exp_cap + PCI_EXP_DEVCTL))) {
./tools/qemu-xen/hw/pcie_aer.c:    uint16_t bridge_control = pci_get_word(dev->config + PCI_BRIDGE_CONTROL);
./tools/qemu-xen/hw/pcie_aer.c:        pci_word_test_and_set_mask(dev->config + PCI_SEC_STATUS,
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:        qemu_set_irq(dev->irq[dev->exp.aer_intx], 1);
./tools/qemu-xen/hw/pcie_aer.c:    cmd = pci_get_word(dev->config + PCI_COMMAND);
./tools/qemu-xen/hw/pcie_aer.c:    aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:        dev = pci_bridge_get_device(dev->bus);
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:        (pci_get_long(dev->config + dev->exp.exp_cap + PCI_EXP_DEVCTL2) &
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:    PCIEAERLog *aer_log = &dev->exp.aer_log;
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:        if (aer_log_add_err(&dev->exp.aer_log, err) < 0) {
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_word(dev->config + dev->exp.exp_cap + PCI_EXP_DEVSTA, inj->devsta);
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_long(dev->config + dev->exp.exp_cap + PCI_EXP_DEVSTA, inj->devsta);
./tools/qemu-xen/hw/pcie_aer.c:    cmd = pci_get_word(dev->config + PCI_COMMAND);
./tools/qemu-xen/hw/pcie_aer.c:    if (dev->exp.aer_cap) {
./tools/qemu-xen/hw/pcie_aer.c:        uint8_t *exp_cap = dev->config + dev->exp.exp_cap;
./tools/qemu-xen/hw/pcie_aer.c:        aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:        aer_log_clear_all_err(&dev->exp.aer_log);
./tools/qemu-xen/hw/pcie_aer.c:    uint16_t pos = dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_long(dev->wmask + pos + PCI_ERR_ROOT_COMMAND,
./tools/qemu-xen/hw/pcie_aer.c:    pci_set_long(dev->w1cmask + pos + PCI_ERR_ROOT_STATUS,
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t* aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:    uint8_t *aer_cap = dev->config + dev->exp.aer_cap;
./tools/qemu-xen/hw/pcie_aer.c:        qemu_set_irq(dev->irq[dev->exp.aer_intx], !!(root_cmd & enabled_cmd));
./tools/qemu-xen/hw/pcie_aer.c:    err.source_id = (pci_bus_num(dev->bus) << 8) | dev->devfn;
./tools/qemu-xen/hw/pcie_aer.c:                                   pci_find_domain(dev->bus),
./tools/qemu-xen/hw/pcie_aer.c:                                   pci_bus_num(dev->bus), dev->devfn,
./tools/qemu-xen/hw/s390-virtio-bus.c:    bus = DO_UPCAST(VirtIOS390Bus, bus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/s390-virtio-bus.c:    dev->vdev = vdev;
./tools/qemu-xen/hw/s390-virtio-bus.c:    dev->dev_offs = bus->dev_offs;
./tools/qemu-xen/hw/s390-virtio-bus.c:    dev->feat_len = sizeof(uint32_t); /* always keep 32 bits features */
./tools/qemu-xen/hw/s390-virtio-bus.c:    dev_len += dev->feat_len * 2;
./tools/qemu-xen/hw/s390-virtio-bus.c:    dev_len += vdev->config_len;
./tools/qemu-xen/hw/s390-virtio-bus.c:    dev->host_features = vdev->get_features(vdev, dev->host_features);
./tools/qemu-xen/hw/s390-virtio-bus.c:    vdev = virtio_net_init((DeviceState *)dev, &dev->nic, &dev->net);
./tools/qemu-xen/hw/s390-virtio-bus.c:    vdev = virtio_blk_init((DeviceState *)dev, &dev->block,
./tools/qemu-xen/hw/s390-virtio-bus.c:                           &dev->block_serial);
./tools/qemu-xen/hw/s390-virtio-bus.c:    bus = DO_UPCAST(VirtIOS390Bus, bus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/s390-virtio-bus.c:    vdev = virtio_serial_init((DeviceState *)dev, &dev->serial);
./tools/qemu-xen/hw/s390-virtio-bus.c:    token_off = (dev->dev_offs + VIRTIO_DEV_OFFS_CONFIG) +
./tools/qemu-xen/hw/s390-virtio-bus.c:    VirtIODevice *vdev = dev->vdev;
./tools/qemu-xen/hw/s390-virtio-bus.c:    VirtIOS390Bus *bus = DO_UPCAST(VirtIOS390Bus, bus, dev->qdev.parent_bus);
./tools/qemu-xen/hw/s390-virtio-bus.c:    virtio_reset(dev->vdev);
./tools/qemu-xen/hw/s390-virtio-bus.c:    stb_phys(dev->dev_offs + VIRTIO_DEV_OFFS_TYPE, dev->vdev->device_id);
./tools/qemu-xen/hw/s390-virtio-bus.c:    stb_phys(dev->dev_offs + VIRTIO_DEV_OFFS_NUM_VQ, s390_virtio_device_num_vq(dev));
./tools/qemu-xen/hw/s390-virtio-bus.c:    stb_phys(dev->dev_offs + VIRTIO_DEV_OFFS_FEATURE_LEN, dev->feat_len);
./tools/qemu-xen/hw/s390-virtio-bus.c:    stb_phys(dev->dev_offs + VIRTIO_DEV_OFFS_CONFIG_LEN, dev->vdev->config_len);
./tools/qemu-xen/hw/s390-virtio-bus.c:    stb_phys(dev->dev_offs + VIRTIO_DEV_OFFS_NUM_VQ, num_vq);
./tools/qemu-xen/hw/s390-virtio-bus.c:        ram_addr_t vq = (dev->dev_offs + VIRTIO_DEV_OFFS_CONFIG) +
./tools/qemu-xen/hw/s390-virtio-bus.c:        virtio_queue_set_addr(dev->vdev, i, vring);
./tools/qemu-xen/hw/s390-virtio-bus.c:        virtio_queue_set_vector(dev->vdev, i, i);
./tools/qemu-xen/hw/s390-virtio-bus.c:        stw_be_phys(vq + VIRTIO_VQCONFIG_OFFS_NUM, virtio_queue_get_num(dev->vdev, i));
./tools/qemu-xen/hw/s390-virtio-bus.c:    cur_offs = dev->dev_offs;
./tools/qemu-xen/hw/s390-virtio-bus.c:    stl_le_phys(cur_offs, dev->host_features);
./tools/qemu-xen/hw/s390-virtio-bus.c:    dev->feat_offs = cur_offs + dev->feat_len;
./tools/qemu-xen/hw/s390-virtio-bus.c:    cur_offs += dev->feat_len * 2;
./tools/qemu-xen/hw/s390-virtio-bus.c:    if (dev->vdev->get_config) {
./tools/qemu-xen/hw/s390-virtio-bus.c:        dev->vdev->get_config(dev->vdev, dev->vdev->config);
./tools/qemu-xen/hw/s390-virtio-bus.c:                              dev->vdev->config, dev->vdev->config_len);
./tools/qemu-xen/hw/s390-virtio-bus.c:    cur_offs += dev->vdev->config_len;
./tools/qemu-xen/hw/s390-virtio-bus.c:    VirtIODevice *vdev = dev->vdev;
./tools/qemu-xen/hw/s390-virtio-bus.c:    virtio_set_status(vdev, ldub_phys(dev->dev_offs + VIRTIO_DEV_OFFS_STATUS));
./tools/qemu-xen/hw/s390-virtio-bus.c:    features = bswap32(ldl_be_phys(dev->feat_offs));
./tools/qemu-xen/hw/s390-virtio-bus.c:            if (!virtio_queue_get_addr(_dev->vdev, i))
./tools/qemu-xen/hw/s390-virtio-bus.c:            if (virtio_queue_get_addr(_dev->vdev, i) == mem) {
./tools/qemu-xen/hw/s390-virtio-bus.c:        if (_dev->dev_offs == mem) {
./tools/qemu-xen/hw/s390-virtio-bus.c:    return dev->host_features;
./tools/qemu-xen/hw/xen_machine_pv.c:    env->halted = 1;
./tools/qemu-xen/hw/spapr_llan.c:    return (dev->isopen && dev->rx_bufs > 0);
./tools/qemu-xen/hw/spapr_llan.c:    vlan_bd_t rxq_bd = ldq_tce(sdev, dev->buf_list + VLAN_RXQ_BD_OFF);
./tools/qemu-xen/hw/spapr_llan.c:    int buf_ptr = dev->use_buf_ptr;
./tools/qemu-xen/hw/spapr_llan.c:    dprintf("spapr_vlan_receive() [%s] rx_bufs=%d\n", sdev->qdev.id,
./tools/qemu-xen/hw/spapr_llan.c:            dev->rx_bufs);
./tools/qemu-xen/hw/spapr_llan.c:    if (!dev->isopen) {
./tools/qemu-xen/hw/spapr_llan.c:    if (!dev->rx_bufs) {
./tools/qemu-xen/hw/spapr_llan.c:        bd = ldq_tce(sdev, dev->buf_list + buf_ptr);
./tools/qemu-xen/hw/spapr_llan.c:             && (buf_ptr != dev->use_buf_ptr));
./tools/qemu-xen/hw/spapr_llan.c:    dev->rx_bufs--;
./tools/qemu-xen/hw/spapr_llan.c:    dev->use_buf_ptr = buf_ptr;
./tools/qemu-xen/hw/spapr_llan.c:    stq_tce(sdev, dev->buf_list + dev->use_buf_ptr, 0);
./tools/qemu-xen/hw/spapr_llan.c:    dprintf("Found buffer: ptr=%d num=%d\n", dev->use_buf_ptr, dev->rx_bufs);
./tools/qemu-xen/hw/spapr_llan.c:    stq_tce(sdev, VLAN_BD_ADDR(rxq_bd) + dev->rxq_ptr + 8, handle);
./tools/qemu-xen/hw/spapr_llan.c:    stw_tce(sdev, VLAN_BD_ADDR(rxq_bd) + dev->rxq_ptr + 4, size);
./tools/qemu-xen/hw/spapr_llan.c:    sth_tce(sdev, VLAN_BD_ADDR(rxq_bd) + dev->rxq_ptr + 2, 8);
./tools/qemu-xen/hw/spapr_llan.c:    stb_tce(sdev, VLAN_BD_ADDR(rxq_bd) + dev->rxq_ptr, control);
./tools/qemu-xen/hw/spapr_llan.c:            (unsigned long long)dev->rxq_ptr,
./tools/qemu-xen/hw/spapr_llan.c:                                        dev->rxq_ptr),
./tools/qemu-xen/hw/spapr_llan.c:                                        dev->rxq_ptr + 8));
./tools/qemu-xen/hw/spapr_llan.c:    dev->rxq_ptr += 16;
./tools/qemu-xen/hw/spapr_llan.c:    if (dev->rxq_ptr >= VLAN_BD_LEN(rxq_bd)) {
./tools/qemu-xen/hw/spapr_llan.c:        dev->rxq_ptr = 0;
./tools/qemu-xen/hw/spapr_llan.c:        stq_tce(sdev, dev->buf_list + VLAN_RXQ_BD_OFF, rxq_bd ^ VLAN_BD_TOGGLE);
./tools/qemu-xen/hw/spapr_llan.c:    if (sdev->signal_state & 1) {
./tools/qemu-xen/hw/spapr_llan.c:        qemu_irq_pulse(sdev->qirq);
./tools/qemu-xen/hw/spapr_llan.c:    qemu_macaddr_default_if_unset(&dev->nicconf.macaddr);
./tools/qemu-xen/hw/spapr_llan.c:    dev->nic = qemu_new_nic(&net_spapr_vlan_info, &dev->nicconf,
./tools/qemu-xen/hw/spapr_llan.c:                            sdev->qdev.info->name, sdev->qdev.id, dev);
./tools/qemu-xen/hw/spapr_llan.c:    qemu_format_nic_info_str(&dev->nic->nc, dev->nicconf.macaddr.a);
./tools/qemu-xen/hw/spapr_llan.c:    memcpy(&padded_mac[2], &vdev->nicconf.macaddr, ETH_ALEN);
./tools/qemu-xen/hw/spapr_llan.c:    if (spapr_vio_check_tces(&dev->sdev, VLAN_BD_ADDR(bd),
./tools/qemu-xen/hw/spapr_llan.c:    if (dev->isopen) {
./tools/qemu-xen/hw/spapr_llan.c:    dev->buf_list = buf_list;
./tools/qemu-xen/hw/spapr_llan.c:    sdev->signal_state = 0;
./tools/qemu-xen/hw/spapr_llan.c:    dev->add_buf_ptr = VLAN_RX_BDS_OFF - 8;
./tools/qemu-xen/hw/spapr_llan.c:    dev->use_buf_ptr = VLAN_RX_BDS_OFF - 8;
./tools/qemu-xen/hw/spapr_llan.c:    dev->rx_bufs = 0;
./tools/qemu-xen/hw/spapr_llan.c:    dev->rxq_ptr = 0;
./tools/qemu-xen/hw/spapr_llan.c:    dev->isopen = 1;
./tools/qemu-xen/hw/spapr_llan.c:    if (!dev->isopen) {
./tools/qemu-xen/hw/spapr_llan.c:    dev->buf_list = 0;
./tools/qemu-xen/hw/spapr_llan.c:    dev->rx_bufs = 0;
./tools/qemu-xen/hw/spapr_llan.c:    dev->isopen = 0;
./tools/qemu-xen/hw/spapr_llan.c:    if (!dev->isopen || dev->rx_bufs >= VLAN_MAX_BUFS) {
./tools/qemu-xen/hw/spapr_llan.c:        dev->add_buf_ptr += 8;
./tools/qemu-xen/hw/spapr_llan.c:        if (dev->add_buf_ptr >= SPAPR_VIO_TCE_PAGE_SIZE) {
./tools/qemu-xen/hw/spapr_llan.c:            dev->add_buf_ptr = VLAN_RX_BDS_OFF;
./tools/qemu-xen/hw/spapr_llan.c:        bd = ldq_tce(sdev, dev->buf_list + dev->add_buf_ptr);
./tools/qemu-xen/hw/spapr_llan.c:    stq_tce(sdev, dev->buf_list + dev->add_buf_ptr, buf);
./tools/qemu-xen/hw/spapr_llan.c:    dev->rx_bufs++;
./tools/qemu-xen/hw/spapr_llan.c:            " bd=0x%016llx\n", dev->add_buf_ptr, dev->rx_bufs,
./tools/qemu-xen/hw/spapr_llan.c:    dprintf("rxbufs = %d\n", dev->rx_bufs);
./tools/qemu-xen/hw/spapr_llan.c:    if (!dev->isopen) {
./tools/qemu-xen/hw/spapr_llan.c:    qemu_send_packet(&dev->nic->nc, lbuf, total_len);
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:            if (env->cpu_index == i) {
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:        snprintf(cpu_name, sizeof(cpu_name), "/cpus/PowerPC,8544@%x", env->cpu_index);
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:        qemu_devtree_setprop_cell(fdt, cpu_name, "reg", env->cpu_index);
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:                                  env->dcache_line_size);
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:                                  env->icache_line_size);
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:        if (env->cpu_index) {
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:    env->tlb_dirty = true;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:    env->halted = 1;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:    env->exception_index = EXCP_HLT;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:    struct boot_info *bi = env->load_info;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:    env->halted = 0;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:    env->gpr[1] = (16<<20) - 8;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:    env->gpr[3] = bi->dt_base;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:    env->nip = bi->entry;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:        input = (qemu_irq *)env->irq_inputs;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:        env->spr[SPR_BOOKE_PIR] = env->cpu_index = i;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:            env->load_info = boot_info;
./tools/qemu-xen/hw/ppce500_mpc8544ds.c:        boot_info = env->load_info;
./tools/qemu-xen/hw/vga-pci.c:     if (!dev->rom_bar) {
./tools/qemu-xen/hw/isa-bus.c:    assert(dev->nirqs < ARRAY_SIZE(dev->isairq));
./tools/qemu-xen/hw/isa-bus.c:    dev->isairq[dev->nirqs] = isairq;
./tools/qemu-xen/hw/isa-bus.c:    dev->nirqs++;
./tools/qemu-xen/hw/isa-bus.c:    if (dev && (dev->ioport_id == 0 || ioport < dev->ioport_id)) {
./tools/qemu-xen/hw/isa-bus.c:        dev->ioport_id = ioport;
./tools/qemu-xen/hw/isa-bus.c:    dev->isairq[0] = -1;
./tools/qemu-xen/hw/isa-bus.c:    dev->isairq[1] = -1;
./tools/qemu-xen/hw/isa-bus.c:    qdev_init_nofail(&dev->qdev);
./tools/qemu-xen/hw/ne2000-isa.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/usb-bus.c:    pstrcpy(dev->product_desc, sizeof(dev->product_desc), info->product_desc);
./tools/qemu-xen/hw/usb-bus.c:    dev->info = info;
./tools/qemu-xen/hw/usb-bus.c:    dev->auto_attach = 1;
./tools/qemu-xen/hw/usb-bus.c:    QLIST_INIT(&dev->strings);
./tools/qemu-xen/hw/usb-bus.c:    rc = dev->info->init(dev);
./tools/qemu-xen/hw/usb-bus.c:    if (dev->auto_attach) {
./tools/qemu-xen/hw/usb-bus.c:    if (dev->attached) {
./tools/qemu-xen/hw/usb-bus.c:    if (dev->info->handle_destroy) {
./tools/qemu-xen/hw/usb-bus.c:        dev->info->handle_destroy(dev);
./tools/qemu-xen/hw/usb-bus.c:    if (dev->port) {
./tools/qemu-xen/hw/usb-bus.c:    /* temporary stopgap until all usb is properly qdev-ified */
./tools/qemu-xen/hw/usb-bus.c:    rc = qdev_init(&dev->qdev);
./tools/qemu-xen/hw/usb-bus.c:        qdev_free(&port->dev->qdev);
./tools/qemu-xen/hw/usb-bus.c:    assert(dev->port == NULL);
./tools/qemu-xen/hw/usb-bus.c:    if (dev->port_path) {
./tools/qemu-xen/hw/usb-bus.c:            if (strcmp(port->path, dev->port_path) == 0) {
./tools/qemu-xen/hw/usb-bus.c:                         dev->port_path, bus->qbus.name);
./tools/qemu-xen/hw/usb-bus.c:        if (bus->nfree == 1 && strcmp(dev->qdev.info->name, "usb-hub") != 0) {
./tools/qemu-xen/hw/usb-bus.c:                         "with no free ports\n", dev->product_desc);
./tools/qemu-xen/hw/usb-bus.c:    dev->port = port;
./tools/qemu-xen/hw/usb-bus.c:    USBPort *port = dev->port;
./tools/qemu-xen/hw/usb-bus.c:    dev->port = NULL;
./tools/qemu-xen/hw/usb-bus.c:    USBPort *port = dev->port;
./tools/qemu-xen/hw/usb-bus.c:    assert(!dev->attached);
./tools/qemu-xen/hw/usb-bus.c:    if (!(port->speedmask & dev->speedmask)) {
./tools/qemu-xen/hw/usb-bus.c:                     dev->product_desc, bus->qbus.name);
./tools/qemu-xen/hw/usb-bus.c:    dev->attached++;
./tools/qemu-xen/hw/usb-bus.c:    USBPort *port = dev->port;
./tools/qemu-xen/hw/usb-bus.c:    assert(dev->attached);
./tools/qemu-xen/hw/usb-bus.c:    dev->attached--;
./tools/qemu-xen/hw/usb-bus.c:        if (port->dev->addr == addr)
./tools/qemu-xen/hw/usb-bus.c:    qdev_free(&dev->qdev);
./tools/qemu-xen/hw/usb-bus.c:                   indent, "", bus->busnr, dev->addr,
./tools/qemu-xen/hw/usb-bus.c:                   dev->port ? dev->port->path : "-",
./tools/qemu-xen/hw/usb-bus.c:                   usb_speed(dev->speed), dev->product_desc,
./tools/qemu-xen/hw/usb-bus.c:                   dev->attached ? ", attached" : "");
./tools/qemu-xen/hw/usb-bus.c:    return g_strdup(dev->port->path);
./tools/qemu-xen/hw/usb-bus.c:    fw_len = 32 + strlen(dev->port->path) * 6;
./tools/qemu-xen/hw/usb-bus.c:    in = dev->port->path;
./tools/qemu-xen/hw/usb-bus.c:                           bus->busnr, dev->addr, port->path, usb_speed(dev->speed),
./tools/qemu-xen/hw/usb-bus.c:                           dev->product_desc);
./tools/qemu-xen/hw/axis_dev88.c:    qdev_prop_set_ptr(dev, "interrupt_vector", &env->interrupt_vector);
./tools/qemu-xen/hw/stellaris_enet.c:                          dev->qdev.info->name, dev->qdev.id, s);
./tools/qemu-xen/hw/sparc32_dma.c:    qdev_init_gpio_in(&dev->qdev, dma_set_irq, 1);
./tools/qemu-xen/hw/sparc32_dma.c:    qdev_init_gpio_out(&dev->qdev, s->gpio, 2);
./tools/qemu-xen/hw/ppc_prep.c:        if (env->flags & POWERPC_FLAG_RTC_CLK) {
./tools/qemu-xen/hw/lm32_juart.c:    s->chr = qdev_init_chardev(&dev->qdev);
./tools/qemu-xen/hw/virtio-serial-bus.c:    VirtIOSerialBus *bus = DO_UPCAST(VirtIOSerialBus, qbus, qdev->parent_bus);
./tools/qemu-xen/hw/spapr_vty.c:    return (dev->in - dev->out) < VTERM_BUFSIZE;
./tools/qemu-xen/hw/spapr_vty.c:    if ((dev->in == dev->out) && size) {
./tools/qemu-xen/hw/spapr_vty.c:        qemu_irq_pulse(dev->sdev.qirq);
./tools/qemu-xen/hw/spapr_vty.c:        assert((dev->in - dev->out) < VTERM_BUFSIZE);
./tools/qemu-xen/hw/spapr_vty.c:        dev->buf[dev->in++ % VTERM_BUFSIZE] = buf[i];
./tools/qemu-xen/hw/spapr_vty.c:    while ((n < max) && (dev->out != dev->in)) {
./tools/qemu-xen/hw/spapr_vty.c:        buf[n++] = dev->buf[dev->out++ % VTERM_BUFSIZE];
./tools/qemu-xen/hw/spapr_vty.c:    qemu_chr_fe_write(dev->chardev, buf, len);
./tools/qemu-xen/hw/spapr_vty.c:    if (!dev->chardev) {
./tools/qemu-xen/hw/spapr_vty.c:    qemu_chr_add_handlers(dev->chardev, vty_can_receive,
./tools/qemu-xen/hw/spapr_vty.c:        if (sdev->reg < selected->reg) {
./tools/qemu-xen/hw/pxa2xx_gpio.c:    if (s->cpu_env->halted && (mask & ~s->dir[bank] & pxa2xx_gpio_wake[bank]))
./tools/qemu-xen/hw/pxa2xx_gpio.c:    qdev_prop_set_int32(dev, "ncpu", env->cpu_index);
./tools/qemu-xen/hw/pxa2xx_gpio.c:    qdev_init_gpio_in(&dev->qdev, pxa2xx_gpio_set, s->lines);
./tools/qemu-xen/hw/pxa2xx_gpio.c:    qdev_init_gpio_out(&dev->qdev, s->handler, s->lines);
./tools/qemu-xen/hw/grackle_pci.c:    return (irq_num + (pci_dev->devfn >> 3)) & 3;
./tools/qemu-xen/user-exec.c:    env->exception_index = -1;
./tools/qemu-xen/user-exec.c:    longjmp(env->jmp_env, 1);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->regs[i]);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->spsr);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->banked_spsr[i]);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->banked_r13[i]);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->banked_r14[i]);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->usr_regs[i]);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->fiq_regs[i]);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c0_cpuid);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c0_cachetype);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c0_cssel);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c1_sys);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c1_coproc);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c1_xscaleauxcr);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_base0);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_base1);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_control);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_mask);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_base_mask);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_data);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c2_insn);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c3);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c5_insn);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c5_data);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->cp15.c6_region[i]);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c6_insn);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c6_data);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c7_par);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_insn);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_data);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_pmcr);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_pmcnten);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_pmovsr);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_pmxevtyper);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_pmuserenr);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c9_pminten);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_fcse);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_context);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_tls1);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_tls2);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c13_tls3);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->cp15.c15_cpar);
./tools/qemu-xen/target-arm/machine.c:    qemu_put_be32(f, env->features);
./tools/qemu-xen/target-arm/machine.c:            u.d = env->vfp.regs[i];
./tools/qemu-xen/target-arm/machine.c:            qemu_put_be32(f, env->vfp.xregs[i]);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->vfp.vec_len);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->vfp.vec_stride);
./tools/qemu-xen/target-arm/machine.c:                u.d = env->vfp.regs[i];
./tools/qemu-xen/target-arm/machine.c:            qemu_put_be64(f, env->iwmmxt.regs[i]);
./tools/qemu-xen/target-arm/machine.c:            qemu_put_be32(f, env->iwmmxt.cregs[i]);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->v7m.other_sp);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->v7m.vecbase);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->v7m.basepri);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->v7m.control);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->v7m.current_sp);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->v7m.exception);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->teecr);
./tools/qemu-xen/target-arm/machine.c:        qemu_put_be32(f, env->teehbr);
./tools/qemu-xen/target-arm/machine.c:        env->regs[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->uncached_cpsr = val & CPSR_M;
./tools/qemu-xen/target-arm/machine.c:    env->spsr = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->banked_spsr[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->banked_r13[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->banked_r14[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->usr_regs[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->fiq_regs[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c0_cpuid = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c0_cachetype = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c0_cssel = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c1_sys = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c1_coproc = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c1_xscaleauxcr = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c2_base0 = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c2_base1 = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c2_control = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c2_mask = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c2_base_mask = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c2_data = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c2_insn = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c3 = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c5_insn = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c5_data = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->cp15.c6_region[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c6_insn = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c6_data = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c7_par = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c9_insn = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c9_data = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c9_pmcr = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c9_pmcnten = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c9_pmovsr = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c9_pmxevtyper = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c9_pmuserenr = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c9_pminten = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c13_fcse = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c13_context = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c13_tls1 = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c13_tls2 = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c13_tls3 = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->cp15.c15_cpar = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:    env->features = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:            env->vfp.regs[i] = u.d;
./tools/qemu-xen/target-arm/machine.c:            env->vfp.xregs[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->vfp.vec_len = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->vfp.vec_stride = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:                env->vfp.regs[i] = u.d;
./tools/qemu-xen/target-arm/machine.c:            env->iwmmxt.regs[i] = qemu_get_be64(f);
./tools/qemu-xen/target-arm/machine.c:            env->iwmmxt.cregs[i] = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->v7m.other_sp = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->v7m.vecbase = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->v7m.basepri = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->v7m.control = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->v7m.current_sp = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->v7m.exception = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->teecr = qemu_get_be32(f);
./tools/qemu-xen/target-arm/machine.c:        env->teehbr = qemu_get_be32(f);
./tools/qemu-xen/target-arm/translate.c:        if (!env->cp[cp].cp_read)
./tools/qemu-xen/target-arm/translate.c:        if (!env->cp[cp].cp_write)
./tools/qemu-xen/target-arm/translate.c:            return env->cp15.c9_pmuserenr;
./tools/qemu-xen/target-arm/translate.c:            if (IS_USER(s) && (env->teecr & 1))
./tools/qemu-xen/target-arm/translate.c:            if (IS_USER(s) && (env->teecr & 1))
./tools/qemu-xen/target-arm/translate.c:	    && ((env->cp15.c15_cpar ^ 0x3fff) & (1 << cpnum)))
./tools/qemu-xen/target-arm/translate.c:    /* if (env->exclusive_addr == addr && env->exclusive_val == [addr]) {
./tools/qemu-xen/target-arm/translate.c:                if (env->cp15.c15_cpar & (1 << 1))
./tools/qemu-xen/target-arm/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-arm/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-arm/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-arm/translate.c:             !env->singlestep_enabled &&
./tools/qemu-xen/target-arm/translate.c:    if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen/target-arm/translate.c:        cpu_fprintf(f, "R%02d=%08x", i, env->regs[i]);
./tools/qemu-xen/target-arm/translate.c:        d.d = env->vfp.regs[i];
./tools/qemu-xen/target-arm/translate.c:    cpu_fprintf(f, "FPSCR: %08x\n", (int)env->vfp.xregs[ARM_VFP_FPSCR]);
./tools/qemu-xen/target-arm/translate.c:    env->regs[15] = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-arm/translate.c:    env->condexec_bits = gen_opc_condexec_bits[pc_pos];
./tools/qemu-xen/target-arm/neon_helper.c:#define SET_QC() env->vfp.xregs[ARM_VFP_FPSCR] = CPSR_Q
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm0 = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm1 = float64_val(env->vfp.regs[rm + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd0 = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd1 = float64_val(env->vfp.regs[rd + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm + 1] = make_float64(m1);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd + 1] = make_float64(d1);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm0 = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm1 = float64_val(env->vfp.regs[rm + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd0 = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd1 = float64_val(env->vfp.regs[rd + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm + 1] = make_float64(m1);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd + 1] = make_float64(d1);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm0 = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm1 = float64_val(env->vfp.regs[rm + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd0 = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd1 = float64_val(env->vfp.regs[rd + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm + 1] = make_float64(m1);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd + 1] = make_float64(d1);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm0 = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm1 = float64_val(env->vfp.regs[rm + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd0 = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd1 = float64_val(env->vfp.regs[rd + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm + 1] = make_float64(m1);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd + 1] = make_float64(d1);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm0 = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm1 = float64_val(env->vfp.regs[rm + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd0 = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd1 = float64_val(env->vfp.regs[rd + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm + 1] = make_float64(m1);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd + 1] = make_float64(d1);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm0 = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm1 = float64_val(env->vfp.regs[rm + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd0 = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd1 = float64_val(env->vfp.regs[rd + 1]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm + 1] = make_float64(m1);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd + 1] = make_float64(d1);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zm = float64_val(env->vfp.regs[rm]);
./tools/qemu-xen/target-arm/neon_helper.c:    uint64_t zd = float64_val(env->vfp.regs[rd]);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rm] = make_float64(m0);
./tools/qemu-xen/target-arm/neon_helper.c:    env->vfp.regs[rd] = make_float64(d0);
./tools/qemu-xen/target-arm/op_helper.c:    env->exception_index = tt;
./tools/qemu-xen/target-arm/op_helper.c:    table = (uint64_t *)&env->vfp.regs[rn];
./tools/qemu-xen/target-arm/op_helper.c:        raise_exception(env->exception_index);
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->QF = 1;
./tools/qemu-xen/target-arm/op_helper.c:    env->exception_index = EXCP_HLT;
./tools/qemu-xen/target-arm/op_helper.c:    env->halted = 1;
./tools/qemu-xen/target-arm/op_helper.c:    env->exception_index = excp;
./tools/qemu-xen/target-arm/op_helper.c:        val = env->banked_r13[0];
./tools/qemu-xen/target-arm/op_helper.c:        val = env->banked_r14[0];
./tools/qemu-xen/target-arm/op_helper.c:               && (env->uncached_cpsr & 0x1f) == ARM_CPU_MODE_FIQ) {
./tools/qemu-xen/target-arm/op_helper.c:        val = env->usr_regs[regno - 8];
./tools/qemu-xen/target-arm/op_helper.c:        val = env->regs[regno];
./tools/qemu-xen/target-arm/op_helper.c:        env->banked_r13[0] = val;
./tools/qemu-xen/target-arm/op_helper.c:        env->banked_r14[0] = val;
./tools/qemu-xen/target-arm/op_helper.c:               && (env->uncached_cpsr & 0x1f) == ARM_CPU_MODE_FIQ) {
./tools/qemu-xen/target-arm/op_helper.c:        env->usr_regs[regno - 8] = val;
./tools/qemu-xen/target-arm/op_helper.c:        env->regs[regno] = val;
./tools/qemu-xen/target-arm/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen/target-arm/op_helper.c:    env->CF = result < a;
./tools/qemu-xen/target-arm/op_helper.c:    env->VF = (a ^ b ^ -1) & (a ^ result);
./tools/qemu-xen/target-arm/op_helper.c:    if (!env->CF) {
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = result < a;
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = result <= a;
./tools/qemu-xen/target-arm/op_helper.c:    env->VF = (a ^ b ^ -1) & (a ^ result);
./tools/qemu-xen/target-arm/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen/target-arm/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen/target-arm/op_helper.c:    env->CF = a >= b;
./tools/qemu-xen/target-arm/op_helper.c:    env->VF = (a ^ b) & (a ^ result);
./tools/qemu-xen/target-arm/op_helper.c:    if (!env->CF) {
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = a > b;
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = a >= b;
./tools/qemu-xen/target-arm/op_helper.c:    env->VF = (a ^ b) & (a ^ result);
./tools/qemu-xen/target-arm/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen/target-arm/op_helper.c:            env->CF = x & 1;
./tools/qemu-xen/target-arm/op_helper.c:            env->CF = 0;
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = (x >> (32 - shift)) & 1;
./tools/qemu-xen/target-arm/op_helper.c:            env->CF = (x >> 31) & 1;
./tools/qemu-xen/target-arm/op_helper.c:            env->CF = 0;
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = (x >> 31) & 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen/target-arm/op_helper.c:            env->CF = (x >> 31) & 1;
./tools/qemu-xen/target-arm/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x >> 0);	\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x >> 0);	\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =			\
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =                                 \
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =                               \
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x);
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x);
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x);
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] = NZBIT64(x);
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/iwmmxt_helper.c:    env->iwmmxt.cregs[ARM_IWMMXT_wCASF] =
./tools/qemu-xen/target-arm/helper.c:    env->features |= 1u << feature;
./tools/qemu-xen/target-arm/helper.c:    env->cp15.c0_cpuid = id;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x41011090;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00090078;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x0f004006;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00000078;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410110a0;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00090078;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410120b4;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR0] = 0x11111111;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR1] = 0x00000000;
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c1, arm1136_cp15_c0_c1, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c2, arm1136_cp15_c0_c2, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00050078;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410120b5;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR0] = 0x11111111;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR1] = 0x00000000;
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c1, arm1176_cp15_c0_c1, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c2, arm1176_cp15_c0_c2, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00050078;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410120b4;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR0] = 0x11111111;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR1] = 0x00000000;
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c1, mpcore_cp15_c0_c1, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c2, mpcore_cp15_c0_c2, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x410330c0;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR0] = 0x11110222;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR1] = 0x00011100;
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c1, cortexa8_cp15_c0_c1, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c2, cortexa8_cp15_c0_c2, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x82048004;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_clid = (1 << 27) | (2 << 24) | 3;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_ccsid[0] = 0xe007e01a; /* 16k L1 dcache. */
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_ccsid[1] = 0x2007e01a; /* 16k L1 icache. */
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_ccsid[2] = 0xf0000000; /* No L2 icache. */
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00c50078;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_FPSID] = 0x41034000; /* Guess */
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR0] = 0x11110222;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.xregs[ARM_VFP_MVFR1] = 0x01111111;
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c1, cortexa9_cp15_c0_c1, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        memcpy(env->cp15.c0_c2, cortexa9_cp15_c0_c2, 8 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x80038003;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_clid = (1 << 27) | (1 << 24) | 3;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_ccsid[0] = 0xe00fe015; /* 16k L1 dcache. */
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_ccsid[1] = 0x200fe015; /* 16k L1 icache. */
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00c50078;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cpuid = ARM_CPUID_TI925T; /* Depends on wiring.  */
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0x5109149;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00000070;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c15_i_max = 0x000;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c15_i_min = 0xff0;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0xd172172;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00000078;
./tools/qemu-xen/target-arm/helper.c:        env->iwmmxt.cregs[ARM_IWMMXT_wCID] = 0x69051000 | 'Q';
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c0_cachetype = 0xd172172;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00000078;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c1_sys = 0x00000070;
./tools/qemu-xen/target-arm/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-arm/helper.c:    id = env->cp15.c0_cpuid;
./tools/qemu-xen/target-arm/helper.c:    env->uncached_cpsr = ARM_CPU_MODE_USR;
./tools/qemu-xen/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPEXC] = 1 << 30;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c15_cpar = 3;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c15_cpar = 1;
./tools/qemu-xen/target-arm/helper.c:    env->uncached_cpsr = ARM_CPU_MODE_SVC | CPSR_A | CPSR_F | CPSR_I;
./tools/qemu-xen/target-arm/helper.c:        env->uncached_cpsr &= ~CPSR_I;
./tools/qemu-xen/target-arm/helper.c:            env->regs[13] = ldl_p(rom);
./tools/qemu-xen/target-arm/helper.c:            env->thumb = pc & 1;
./tools/qemu-xen/target-arm/helper.c:            env->regs[15] = pc & ~1;
./tools/qemu-xen/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPEXC] = 0;
./tools/qemu-xen/target-arm/helper.c:    env->cp15.c2_base_mask = 0xffffc000u;
./tools/qemu-xen/target-arm/helper.c:    env->cp15.c9_pmcr = (id & 0xff000000);
./tools/qemu-xen/target-arm/helper.c:    set_flush_to_zero(1, &env->vfp.standard_fp_status);
./tools/qemu-xen/target-arm/helper.c:    set_flush_inputs_to_zero(1, &env->vfp.standard_fp_status);
./tools/qemu-xen/target-arm/helper.c:    set_default_nan_mode(1, &env->vfp.standard_fp_status);
./tools/qemu-xen/target-arm/helper.c:                              &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:                              &env->vfp.standard_fp_status);
./tools/qemu-xen/target-arm/helper.c:        stfq_le_p(buf, env->vfp.regs[reg]);
./tools/qemu-xen/target-arm/helper.c:            stfq_le_p(buf, env->vfp.regs[(reg - 32) * 2]);
./tools/qemu-xen/target-arm/helper.c:            stfq_le_p(buf + 8, env->vfp.regs[(reg - 32) * 2 + 1]);
./tools/qemu-xen/target-arm/helper.c:    case 0: stl_p(buf, env->vfp.xregs[ARM_VFP_FPSID]); return 4;
./tools/qemu-xen/target-arm/helper.c:    case 1: stl_p(buf, env->vfp.xregs[ARM_VFP_FPSCR]); return 4;
./tools/qemu-xen/target-arm/helper.c:    case 2: stl_p(buf, env->vfp.xregs[ARM_VFP_FPEXC]); return 4;
./tools/qemu-xen/target-arm/helper.c:        env->vfp.regs[reg] = ldfq_le_p(buf);
./tools/qemu-xen/target-arm/helper.c:            env->vfp.regs[(reg - 32) * 2] = ldfq_le_p(buf);
./tools/qemu-xen/target-arm/helper.c:            env->vfp.regs[(reg - 32) * 2 + 1] = ldfq_le_p(buf + 8);
./tools/qemu-xen/target-arm/helper.c:    case 0: env->vfp.xregs[ARM_VFP_FPSID] = ldl_p(buf); return 4;
./tools/qemu-xen/target-arm/helper.c:    case 1: env->vfp.xregs[ARM_VFP_FPSCR] = ldl_p(buf); return 4;
./tools/qemu-xen/target-arm/helper.c:    case 2: env->vfp.xregs[ARM_VFP_FPEXC] = ldl_p(buf) & (1 << 30); return 4;
./tools/qemu-xen/target-arm/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/target-arm/helper.c:    env->cp15.c0_cpuid = id;
./tools/qemu-xen/target-arm/helper.c:    ZF = (env->ZF == 0);
./tools/qemu-xen/target-arm/helper.c:    return env->uncached_cpsr | (env->NF & 0x80000000) | (ZF << 30) |
./tools/qemu-xen/target-arm/helper.c:        (env->CF << 29) | ((env->VF & 0x80000000) >> 3) | (env->QF << 27)
./tools/qemu-xen/target-arm/helper.c:        | (env->thumb << 5) | ((env->condexec_bits & 3) << 25)
./tools/qemu-xen/target-arm/helper.c:        | ((env->condexec_bits & 0xfc) << 8)
./tools/qemu-xen/target-arm/helper.c:        | (env->GE << 16);
./tools/qemu-xen/target-arm/helper.c:        env->ZF = (~val) & CPSR_Z;
./tools/qemu-xen/target-arm/helper.c:        env->NF = val;
./tools/qemu-xen/target-arm/helper.c:        env->CF = (val >> 29) & 1;
./tools/qemu-xen/target-arm/helper.c:        env->VF = (val << 3) & 0x80000000;
./tools/qemu-xen/target-arm/helper.c:        env->QF = ((val & CPSR_Q) != 0);
./tools/qemu-xen/target-arm/helper.c:        env->thumb = ((val & CPSR_T) != 0);
./tools/qemu-xen/target-arm/helper.c:        env->condexec_bits &= ~3;
./tools/qemu-xen/target-arm/helper.c:        env->condexec_bits |= (val >> 25) & 3;
./tools/qemu-xen/target-arm/helper.c:        env->condexec_bits &= 3;
./tools/qemu-xen/target-arm/helper.c:        env->condexec_bits |= (val >> 8) & 0xfc;
./tools/qemu-xen/target-arm/helper.c:        env->GE = (val >> 16) & 0xf;
./tools/qemu-xen/target-arm/helper.c:    if ((env->uncached_cpsr ^ val) & mask & CPSR_M) {
./tools/qemu-xen/target-arm/helper.c:    env->uncached_cpsr = (env->uncached_cpsr & ~mask) | (val & mask);
./tools/qemu-xen/target-arm/helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-arm/helper.c:        env->exception_index = EXCP_PREFETCH_ABORT;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c6_insn = address;
./tools/qemu-xen/target-arm/helper.c:        env->exception_index = EXCP_DATA_ABORT;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c6_data = address;
./tools/qemu-xen/target-arm/helper.c:    old_mode = env->uncached_cpsr & CPSR_M;
./tools/qemu-xen/target-arm/helper.c:        memcpy (env->fiq_regs, env->regs + 8, 5 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        memcpy (env->regs + 8, env->usr_regs, 5 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        memcpy (env->usr_regs, env->regs + 8, 5 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:        memcpy (env->regs + 8, env->fiq_regs, 5 * sizeof(uint32_t));
./tools/qemu-xen/target-arm/helper.c:    env->banked_r13[i] = env->regs[13];
./tools/qemu-xen/target-arm/helper.c:    env->banked_r14[i] = env->regs[14];
./tools/qemu-xen/target-arm/helper.c:    env->banked_spsr[i] = env->spsr;
./tools/qemu-xen/target-arm/helper.c:    env->regs[13] = env->banked_r13[i];
./tools/qemu-xen/target-arm/helper.c:    env->regs[14] = env->banked_r14[i];
./tools/qemu-xen/target-arm/helper.c:    env->spsr = env->banked_spsr[i];
./tools/qemu-xen/target-arm/helper.c:    env->regs[13] -= 4;
./tools/qemu-xen/target-arm/helper.c:    stl_phys(env->regs[13], val);
./tools/qemu-xen/target-arm/helper.c:    val = ldl_phys(env->regs[13]);
./tools/qemu-xen/target-arm/helper.c:    env->regs[13] += 4;
./tools/qemu-xen/target-arm/helper.c:    if (env->v7m.current_sp != process) {
./tools/qemu-xen/target-arm/helper.c:        tmp = env->v7m.other_sp;
./tools/qemu-xen/target-arm/helper.c:        env->v7m.other_sp = env->regs[13];
./tools/qemu-xen/target-arm/helper.c:        env->regs[13] = tmp;
./tools/qemu-xen/target-arm/helper.c:        env->v7m.current_sp = process;
./tools/qemu-xen/target-arm/helper.c:    type = env->regs[15];
./tools/qemu-xen/target-arm/helper.c:    if (env->v7m.exception != 0)
./tools/qemu-xen/target-arm/helper.c:        armv7m_nvic_complete_irq(env->nvic, env->v7m.exception);
./tools/qemu-xen/target-arm/helper.c:    env->regs[0] = v7m_pop(env);
./tools/qemu-xen/target-arm/helper.c:    env->regs[1] = v7m_pop(env);
./tools/qemu-xen/target-arm/helper.c:    env->regs[2] = v7m_pop(env);
./tools/qemu-xen/target-arm/helper.c:    env->regs[3] = v7m_pop(env);
./tools/qemu-xen/target-arm/helper.c:    env->regs[12] = v7m_pop(env);
./tools/qemu-xen/target-arm/helper.c:    env->regs[14] = v7m_pop(env);
./tools/qemu-xen/target-arm/helper.c:    env->regs[15] = v7m_pop(env);
./tools/qemu-xen/target-arm/helper.c:        env->regs[13] |= 4;
./tools/qemu-xen/target-arm/helper.c:    if (env->v7m.current_sp)
./tools/qemu-xen/target-arm/helper.c:    if (env->v7m.exception == 0)
./tools/qemu-xen/target-arm/helper.c:    switch (env->exception_index) {
./tools/qemu-xen/target-arm/helper.c:        armv7m_nvic_set_pending(env->nvic, ARMV7M_EXCP_USAGE);
./tools/qemu-xen/target-arm/helper.c:        env->regs[15] += 2;
./tools/qemu-xen/target-arm/helper.c:        armv7m_nvic_set_pending(env->nvic, ARMV7M_EXCP_SVC);
./tools/qemu-xen/target-arm/helper.c:        armv7m_nvic_set_pending(env->nvic, ARMV7M_EXCP_MEM);
./tools/qemu-xen/target-arm/helper.c:            nr = lduw_code(env->regs[15]) & 0xff;
./tools/qemu-xen/target-arm/helper.c:                env->regs[15] += 2;
./tools/qemu-xen/target-arm/helper.c:                env->regs[0] = do_arm_semihosting(env);
./tools/qemu-xen/target-arm/helper.c:        armv7m_nvic_set_pending(env->nvic, ARMV7M_EXCP_DEBUG);
./tools/qemu-xen/target-arm/helper.c:        env->v7m.exception = armv7m_nvic_acknowledge_irq(env->nvic);
./tools/qemu-xen/target-arm/helper.c:        cpu_abort(env, "Unhandled exception 0x%x\n", env->exception_index);
./tools/qemu-xen/target-arm/helper.c:    if (env->regs[13] & 4) {
./tools/qemu-xen/target-arm/helper.c:        env->regs[13] -= 4;
./tools/qemu-xen/target-arm/helper.c:    v7m_push(env, env->regs[15]);
./tools/qemu-xen/target-arm/helper.c:    v7m_push(env, env->regs[14]);
./tools/qemu-xen/target-arm/helper.c:    v7m_push(env, env->regs[12]);
./tools/qemu-xen/target-arm/helper.c:    v7m_push(env, env->regs[3]);
./tools/qemu-xen/target-arm/helper.c:    v7m_push(env, env->regs[2]);
./tools/qemu-xen/target-arm/helper.c:    v7m_push(env, env->regs[1]);
./tools/qemu-xen/target-arm/helper.c:    v7m_push(env, env->regs[0]);
./tools/qemu-xen/target-arm/helper.c:    env->uncached_cpsr &= ~CPSR_IT;
./tools/qemu-xen/target-arm/helper.c:    env->regs[14] = lr;
./tools/qemu-xen/target-arm/helper.c:    addr = ldl_phys(env->v7m.vecbase + env->v7m.exception * 4);
./tools/qemu-xen/target-arm/helper.c:    env->regs[15] = addr & 0xfffffffe;
./tools/qemu-xen/target-arm/helper.c:    env->thumb = addr & 1;
./tools/qemu-xen/target-arm/helper.c:    switch (env->exception_index) {
./tools/qemu-xen/target-arm/helper.c:        if (env->thumb)
./tools/qemu-xen/target-arm/helper.c:            if (env->thumb) {
./tools/qemu-xen/target-arm/helper.c:                mask = lduw_code(env->regs[15] - 2) & 0xff;
./tools/qemu-xen/target-arm/helper.c:                mask = ldl_code(env->regs[15] - 4) & 0xffffff;
./tools/qemu-xen/target-arm/helper.c:            if (((mask == 0x123456 && !env->thumb)
./tools/qemu-xen/target-arm/helper.c:                    || (mask == 0xab && env->thumb))
./tools/qemu-xen/target-arm/helper.c:                  && (env->uncached_cpsr & CPSR_M) != ARM_CPU_MODE_USR) {
./tools/qemu-xen/target-arm/helper.c:                env->regs[0] = do_arm_semihosting(env);
./tools/qemu-xen/target-arm/helper.c:        if (env->thumb && semihosting_enabled) {
./tools/qemu-xen/target-arm/helper.c:            mask = lduw_code(env->regs[15]) & 0xff;
./tools/qemu-xen/target-arm/helper.c:                  && (env->uncached_cpsr & CPSR_M) != ARM_CPU_MODE_USR) {
./tools/qemu-xen/target-arm/helper.c:                env->regs[15] += 2;
./tools/qemu-xen/target-arm/helper.c:                env->regs[0] = do_arm_semihosting(env);
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c5_insn = 2;
./tools/qemu-xen/target-arm/helper.c:        cpu_abort(env, "Unhandled exception 0x%x\n", env->exception_index);
./tools/qemu-xen/target-arm/helper.c:    if (env->cp15.c1_sys & (1 << 13)) {
./tools/qemu-xen/target-arm/helper.c:    env->spsr = cpsr_read(env);
./tools/qemu-xen/target-arm/helper.c:    env->condexec_bits = 0;
./tools/qemu-xen/target-arm/helper.c:    env->uncached_cpsr = (env->uncached_cpsr & ~CPSR_M) | new_mode;
./tools/qemu-xen/target-arm/helper.c:    env->uncached_cpsr |= mask;
./tools/qemu-xen/target-arm/helper.c:        env->thumb = (env->cp15.c1_sys & (1 << 30)) != 0;
./tools/qemu-xen/target-arm/helper.c:    env->regs[14] = env->regs[15] + offset;
./tools/qemu-xen/target-arm/helper.c:    env->regs[15] = addr;
./tools/qemu-xen/target-arm/helper.c:    env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen/target-arm/helper.c:      switch ((env->cp15.c1_sys >> 8) & 3) {
./tools/qemu-xen/target-arm/helper.c:    if (address & env->cp15.c2_mask)
./tools/qemu-xen/target-arm/helper.c:        table = env->cp15.c2_base1 & 0xffffc000;
./tools/qemu-xen/target-arm/helper.c:        table = env->cp15.c2_base0 & env->cp15.c2_base_mask;
./tools/qemu-xen/target-arm/helper.c:    domain = (env->cp15.c3 >> ((desc >> 4) & 0x1e)) & 3;
./tools/qemu-xen/target-arm/helper.c:    domain = (env->cp15.c3 >> domain) & 3;
./tools/qemu-xen/target-arm/helper.c:        if ((env->cp15.c1_sys & (1 << 29)) && (ap & 1) == 0) {
./tools/qemu-xen/target-arm/helper.c:	base = env->cp15.c6_region[n];
./tools/qemu-xen/target-arm/helper.c:	mask = env->cp15.c5_insn;
./tools/qemu-xen/target-arm/helper.c:	mask = env->cp15.c5_data;
./tools/qemu-xen/target-arm/helper.c:        address += env->cp15.c13_fcse;
./tools/qemu-xen/target-arm/helper.c:    if ((env->cp15.c1_sys & 1) == 0) {
./tools/qemu-xen/target-arm/helper.c:    } else if (env->cp15.c1_sys & (1 << 23)) {
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c5_insn = ret;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c6_insn = address;
./tools/qemu-xen/target-arm/helper.c:        env->exception_index = EXCP_PREFETCH_ABORT;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c5_data = ret;
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c5_data |= (1 << 11);
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c6_data = address;
./tools/qemu-xen/target-arm/helper.c:        env->exception_index = EXCP_DATA_ABORT;
./tools/qemu-xen/target-arm/helper.c:    if (env->cp[cp_num].cp_write)
./tools/qemu-xen/target-arm/helper.c:        env->cp[cp_num].cp_write(env->cp[cp_num].opaque,
./tools/qemu-xen/target-arm/helper.c:    if (env->cp[cp_num].cp_read)
./tools/qemu-xen/target-arm/helper.c:        return env->cp[cp_num].cp_read(env->cp[cp_num].opaque,
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c0_cssel = val & 0xf;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c1_sys = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c1_xscaleauxcr = val;
./tools/qemu-xen/target-arm/helper.c:            if (env->cp15.c1_coproc != val) {
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c1_coproc = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c2_data = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c2_insn = val;
./tools/qemu-xen/target-arm/helper.c:		env->cp15.c2_base0 = val;
./tools/qemu-xen/target-arm/helper.c:		env->cp15.c2_base1 = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c2_control = val;
./tools/qemu-xen/target-arm/helper.c:		env->cp15.c2_mask = ~(((uint32_t)0xffffffffu) >> val);
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c2_base_mask = ~((uint32_t)0x3fffu >> val);
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c3 = val;
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c5_data = val;
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c5_insn = val;
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c5_data = val;
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c5_insn = val;
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c6_region[crm] = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c6_data = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c6_insn = val;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c15_i_max = 0x000;
./tools/qemu-xen/target-arm/helper.c:        env->cp15.c15_i_min = 0xff0;
./tools/qemu-xen/target-arm/helper.c:                    env->cp15.c7_par = val & 0xfffff6ff;
./tools/qemu-xen/target-arm/helper.c:                    env->cp15.c7_par = val & 0xfffff1ff;
./tools/qemu-xen/target-arm/helper.c:                        env->cp15.c7_par = (phys_addr & 0xff000000) | 1 << 1;
./tools/qemu-xen/target-arm/helper.c:                        env->cp15.c7_par = phys_addr & 0xfffff000;
./tools/qemu-xen/target-arm/helper.c:                    env->cp15.c7_par = ((ret & (10 << 1)) >> 5) |
./tools/qemu-xen/target-arm/helper.c:		    env->cp15.c9_data = val;
./tools/qemu-xen/target-arm/helper.c:		    env->cp15.c9_insn = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pmcr &= ~0x39;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pmcr |= (val & 0x39);
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pmcnten |= val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pmcnten &= ~val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pmovsr &= ~val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pmxevtyper = val & 0xff;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pmuserenr = val & 1;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pminten |= val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c9_pminten &= ~val;
./tools/qemu-xen/target-arm/helper.c:            if (env->cp15.c13_fcse != val)
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c13_fcse = val;
./tools/qemu-xen/target-arm/helper.c:            if (env->cp15.c13_context != val
./tools/qemu-xen/target-arm/helper.c:            env->cp15.c13_context = val;
./tools/qemu-xen/target-arm/helper.c:                if (env->cp15.c15_cpar != (val & 0x3fff)) {
./tools/qemu-xen/target-arm/helper.c:                    env->cp15.c15_cpar = val & 0x3fff;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c15_ticonfig = val & 0xe7;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c0_cpuid = (val & (1 << 5)) ? /* OS_TYPE bit */
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c15_i_max = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c15_i_min = val;
./tools/qemu-xen/target-arm/helper.c:                env->cp15.c15_threadid = val & 0xffff;
./tools/qemu-xen/target-arm/helper.c:                    return env->cp15.c0_cpuid;
./tools/qemu-xen/target-arm/helper.c:		    return env->cp15.c0_cachetype;
./tools/qemu-xen/target-arm/helper.c:                        int mpidr = env->cpu_index;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c0_c1[op2];
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c0_c2[op2];
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c0_ccsid[env->cp15.c0_cssel];
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c0_clid;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c0_cssel;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c1_sys;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c1_xscaleauxcr;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c1_coproc;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c2_data;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c2_insn;
./tools/qemu-xen/target-arm/helper.c:		return env->cp15.c2_base0;
./tools/qemu-xen/target-arm/helper.c:		return env->cp15.c2_base1;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c2_control;
./tools/qemu-xen/target-arm/helper.c:        return env->cp15.c3;
./tools/qemu-xen/target-arm/helper.c:                return simple_mpu_ap_bits(env->cp15.c5_data);
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c5_data;
./tools/qemu-xen/target-arm/helper.c:                return simple_mpu_ap_bits(env->cp15.c5_data);
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c5_insn;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c5_data;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c5_insn;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c6_region[crm];
./tools/qemu-xen/target-arm/helper.c:		return env->cp15.c6_data;
./tools/qemu-xen/target-arm/helper.c:		    return env->cp15.c6_insn;
./tools/qemu-xen/target-arm/helper.c:		    return env->cp15.c6_insn;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c7_par;
./tools/qemu-xen/target-arm/helper.c:        env->ZF = 0;
./tools/qemu-xen/target-arm/helper.c:                    return env->cp15.c9_data;
./tools/qemu-xen/target-arm/helper.c:                    return env->cp15.c9_insn;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c9_pmcr;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c9_pmcnten;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c9_pmovsr;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c9_pmxevtyper;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c9_pmuserenr;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c9_pminten;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c13_fcse;
./tools/qemu-xen/target-arm/helper.c:            return env->cp15.c13_context;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c15_cpar;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c15_ticonfig;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c15_i_max;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c15_i_min;
./tools/qemu-xen/target-arm/helper.c:                return env->cp15.c15_threadid;
./tools/qemu-xen/target-arm/helper.c:    if ((env->uncached_cpsr & CPSR_M) == mode) {
./tools/qemu-xen/target-arm/helper.c:        env->regs[13] = val;
./tools/qemu-xen/target-arm/helper.c:        env->banked_r13[bank_number(mode)] = val;
./tools/qemu-xen/target-arm/helper.c:    if ((env->uncached_cpsr & CPSR_M) == mode) {
./tools/qemu-xen/target-arm/helper.c:        return env->regs[13];
./tools/qemu-xen/target-arm/helper.c:        return env->banked_r13[bank_number(mode)];
./tools/qemu-xen/target-arm/helper.c:        return env->v7m.current_sp ? env->v7m.other_sp : env->regs[13];
./tools/qemu-xen/target-arm/helper.c:        return env->v7m.current_sp ? env->regs[13] : env->v7m.other_sp;
./tools/qemu-xen/target-arm/helper.c:        return (env->uncached_cpsr & CPSR_I) != 0;
./tools/qemu-xen/target-arm/helper.c:        return env->v7m.basepri;
./tools/qemu-xen/target-arm/helper.c:        return (env->uncached_cpsr & CPSR_F) != 0;
./tools/qemu-xen/target-arm/helper.c:        return env->v7m.control;
./tools/qemu-xen/target-arm/helper.c:        if (env->v7m.current_sp)
./tools/qemu-xen/target-arm/helper.c:            env->v7m.other_sp = val;
./tools/qemu-xen/target-arm/helper.c:            env->regs[13] = val;
./tools/qemu-xen/target-arm/helper.c:        if (env->v7m.current_sp)
./tools/qemu-xen/target-arm/helper.c:            env->regs[13] = val;
./tools/qemu-xen/target-arm/helper.c:            env->v7m.other_sp = val;
./tools/qemu-xen/target-arm/helper.c:            env->uncached_cpsr |= CPSR_I;
./tools/qemu-xen/target-arm/helper.c:            env->uncached_cpsr &= ~CPSR_I;
./tools/qemu-xen/target-arm/helper.c:        env->v7m.basepri = val & 0xff;
./tools/qemu-xen/target-arm/helper.c:        if (val != 0 && (val < env->v7m.basepri || env->v7m.basepri == 0))
./tools/qemu-xen/target-arm/helper.c:            env->v7m.basepri = val;
./tools/qemu-xen/target-arm/helper.c:            env->uncached_cpsr |= CPSR_F;
./tools/qemu-xen/target-arm/helper.c:            env->uncached_cpsr &= ~CPSR_F;
./tools/qemu-xen/target-arm/helper.c:        env->v7m.control = val & 3;
./tools/qemu-xen/target-arm/helper.c:    env->cp[cpnum].cp_read = cp_read;
./tools/qemu-xen/target-arm/helper.c:    env->cp[cpnum].cp_write = cp_write;
./tools/qemu-xen/target-arm/helper.c:    env->cp[cpnum].opaque = opaque;
./tools/qemu-xen/target-arm/helper.c:    fpscr = (env->vfp.xregs[ARM_VFP_FPSCR] & 0xffc8ffff)
./tools/qemu-xen/target-arm/helper.c:            | (env->vfp.vec_len << 16)
./tools/qemu-xen/target-arm/helper.c:            | (env->vfp.vec_stride << 20);
./tools/qemu-xen/target-arm/helper.c:    i = get_float_exception_flags(&env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    i |= get_float_exception_flags(&env->vfp.standard_fp_status);
./tools/qemu-xen/target-arm/helper.c:    changed = env->vfp.xregs[ARM_VFP_FPSCR];
./tools/qemu-xen/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPSCR] = (val & 0xffc8ffff);
./tools/qemu-xen/target-arm/helper.c:    env->vfp.vec_len = (val >> 16) & 7;
./tools/qemu-xen/target-arm/helper.c:    env->vfp.vec_stride = (val >> 20) & 3;
./tools/qemu-xen/target-arm/helper.c:        set_float_rounding_mode(i, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:        set_flush_to_zero((val & (1 << 24)) != 0, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:        set_flush_inputs_to_zero((val & (1 << 24)) != 0, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:        set_default_nan_mode((val & (1 << 25)) != 0, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    set_float_exception_flags(i, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    set_float_exception_flags(0, &env->vfp.standard_fp_status);
./tools/qemu-xen/target-arm/helper.c:    return float32_sqrt(a, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    return float64_sqrt(a, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    switch(type ## _compare_quiet(a, b, &env->vfp.fp_status)) { \
./tools/qemu-xen/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPSCR] = (flags << 28) \
./tools/qemu-xen/target-arm/helper.c:        | (env->vfp.xregs[ARM_VFP_FPSCR] & 0x0fffffff); \
./tools/qemu-xen/target-arm/helper.c:    switch(type ## _compare(a, b, &env->vfp.fp_status)) { \
./tools/qemu-xen/target-arm/helper.c:    env->vfp.xregs[ARM_VFP_FPSCR] = (flags << 28) \
./tools/qemu-xen/target-arm/helper.c:        | (env->vfp.xregs[ARM_VFP_FPSCR] & 0x0fffffff); \
./tools/qemu-xen/target-arm/helper.c:    float64 r = float32_to_float64(x, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    float32 r =  float64_to_float32(x, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    int ieee = (env->vfp.xregs[ARM_VFP_FPSCR] & (1 << 26)) == 0;
./tools/qemu-xen/target-arm/helper.c:    int ieee = (env->vfp.xregs[ARM_VFP_FPSCR] & (1 << 26)) == 0;
./tools/qemu-xen/target-arm/helper.c:    return do_fcvt_f16_to_f32(a, env, &env->vfp.standard_fp_status);
./tools/qemu-xen/target-arm/helper.c:    return do_fcvt_f32_to_f16(a, env, &env->vfp.standard_fp_status);
./tools/qemu-xen/target-arm/helper.c:    return do_fcvt_f16_to_f32(a, env, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    return do_fcvt_f32_to_f16(a, env, &env->vfp.fp_status);
./tools/qemu-xen/target-arm/helper.c:    float_status *s = &env->vfp.standard_fp_status;
./tools/qemu-xen/target-arm/helper.c:    float_status *s = &env->vfp.standard_fp_status;
./tools/qemu-xen/target-arm/helper.c:    float_status dummy_status = env->vfp.standard_fp_status;
./tools/qemu-xen/target-arm/helper.c:    float_status *s = &env->vfp.standard_fp_status;
./tools/qemu-xen/target-arm/helper.c:    float_status dummy_status = env->vfp.standard_fp_status;
./tools/qemu-xen/target-arm/helper.c:    float_status *s = &env->vfp.standard_fp_status;
./tools/qemu-xen/target-arm/helper.c:    if (env->teecr != val) {
./tools/qemu-xen/target-arm/helper.c:        env->teecr = val;
./tools/qemu-xen/target-i386/machine.c:    return (env->fpregs_format_vmstate == 0);
./tools/qemu-xen/target-i386/machine.c:    guess_mmx = ((env->fptag_vmstate == 0xff) &&
./tools/qemu-xen/target-i386/machine.c:                 (env->fpus_vmstate & 0x3800) == 0);
./tools/qemu-xen/target-i386/machine.c:    return (guess_mmx && (env->fpregs_format_vmstate == 1));
./tools/qemu-xen/target-i386/machine.c:    guess_mmx = ((env->fptag_vmstate == 0xff) &&
./tools/qemu-xen/target-i386/machine.c:                 (env->fpus_vmstate & 0x3800) == 0);
./tools/qemu-xen/target-i386/machine.c:    return (!guess_mmx && (env->fpregs_format_vmstate == 1));
./tools/qemu-xen/target-i386/machine.c:    env->fpus_vmstate = (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen/target-i386/machine.c:    env->fptag_vmstate = 0;
./tools/qemu-xen/target-i386/machine.c:        env->fptag_vmstate |= ((!env->fptags[i]) << i);
./tools/qemu-xen/target-i386/machine.c:    env->fpregs_format_vmstate = 0;
./tools/qemu-xen/target-i386/machine.c:    env->fpstt = (env->fpus_vmstate >> 11) & 7;
./tools/qemu-xen/target-i386/machine.c:    env->fpus = env->fpus_vmstate & ~0x3800;
./tools/qemu-xen/target-i386/machine.c:    env->fptag_vmstate ^= 0xff;
./tools/qemu-xen/target-i386/machine.c:        env->fptags[i] = (env->fptag_vmstate >> i) & 1;
./tools/qemu-xen/target-i386/machine.c:    return env->fpop != 0 || env->fpip != 0 || env->fpdp != 0;
./tools/qemu-xen/target-i386/machine.c:    return env->tsc_deadline != 0;
./tools/qemu-xen/target-i386/machine.c:    return env->msr_ia32_misc_enable != MSR_IA32_MISC_ENABLE_DEFAULT;
./tools/qemu-xen/target-i386/translate.c:        if (CODE64(s) && cpu_single_env->cpuid_vendor1 != CPUID_VENDOR_INTEL_1)
./tools/qemu-xen/target-i386/translate.c:        if (CODE64(s) && cpu_single_env->cpuid_vendor1 != CPUID_VENDOR_INTEL_1)
./tools/qemu-xen/target-i386/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-i386/translate.c:    dc->cpuid_features = env->cpuid_features;
./tools/qemu-xen/target-i386/translate.c:    dc->cpuid_ext_features = env->cpuid_ext_features;
./tools/qemu-xen/target-i386/translate.c:    dc->cpuid_ext2_features = env->cpuid_ext2_features;
./tools/qemu-xen/target-i386/translate.c:    dc->cpuid_ext3_features = env->cpuid_ext3_features;
./tools/qemu-xen/target-i386/translate.c:    dc->jmp_opt = !(dc->tf || env->singlestep_enabled ||
./tools/qemu-xen/target-i386/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-i386/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-i386/translate.c:    env->eip = gen_opc_pc[pc_pos] - tb->cs_base;
./tools/qemu-xen/target-i386/translate.c:        env->cc_op = cc_op;
./tools/qemu-xen/target-i386/kvm.c:    if ((env->mcg_cap & MCG_SER_P) && addr
./tools/qemu-xen/target-i386/kvm.c:            !kvm_physical_memory_addr_from_ram(env->kvm_state, ram_addr,
./tools/qemu-xen/target-i386/kvm.c:    if (!kvm_has_vcpu_events() && env->exception_injected == EXCP12_MCHK) {
./tools/qemu-xen/target-i386/kvm.c:        unsigned int bank, bank_num = env->mcg_cap & 0xff;
./tools/qemu-xen/target-i386/kvm.c:        env->exception_injected = -1;
./tools/qemu-xen/target-i386/kvm.c:            if (env->mce_banks[bank * 4 + 1] & MCI_STATUS_VAL) {
./tools/qemu-xen/target-i386/kvm.c:        mce.status = env->mce_banks[bank * 4 + 1];
./tools/qemu-xen/target-i386/kvm.c:        mce.mcg_status = env->mcg_status;
./tools/qemu-xen/target-i386/kvm.c:        mce.addr = env->mce_banks[bank * 4 + 2];
./tools/qemu-xen/target-i386/kvm.c:        mce.misc = env->mce_banks[bank * 4 + 3];
./tools/qemu-xen/target-i386/kvm.c:        env->tsc_valid = false;
./tools/qemu-xen/target-i386/kvm.c:    KVMState *s = env->kvm_state;
./tools/qemu-xen/target-i386/kvm.c:    env->cpuid_features &= kvm_arch_get_supported_cpuid(s, 1, 0, R_EDX);
./tools/qemu-xen/target-i386/kvm.c:    i = env->cpuid_ext_features & CPUID_EXT_HYPERVISOR;
./tools/qemu-xen/target-i386/kvm.c:    env->cpuid_ext_features &= kvm_arch_get_supported_cpuid(s, 1, 0, R_ECX);
./tools/qemu-xen/target-i386/kvm.c:    env->cpuid_ext_features |= i;
./tools/qemu-xen/target-i386/kvm.c:    env->cpuid_ext2_features &= kvm_arch_get_supported_cpuid(s, 0x80000001,
./tools/qemu-xen/target-i386/kvm.c:    env->cpuid_ext3_features &= kvm_arch_get_supported_cpuid(s, 0x80000001,
./tools/qemu-xen/target-i386/kvm.c:    env->cpuid_svm_features  &= kvm_arch_get_supported_cpuid(s, 0x8000000A,
./tools/qemu-xen/target-i386/kvm.c:    c->eax = env->cpuid_kvm_features &
./tools/qemu-xen/target-i386/kvm.c:    if (env->cpuid_xlevel2 > 0) {
./tools/qemu-xen/target-i386/kvm.c:        env->cpuid_ext4_features &=
./tools/qemu-xen/target-i386/kvm.c:    if (((env->cpuid_version >> 8)&0xF) >= 6
./tools/qemu-xen/target-i386/kvm.c:        && (env->cpuid_features&(CPUID_MCE|CPUID_MCA)) == (CPUID_MCE|CPUID_MCA)
./tools/qemu-xen/target-i386/kvm.c:        && kvm_check_extension(env->kvm_state, KVM_CAP_MCE) > 0) {
./tools/qemu-xen/target-i386/kvm.c:        ret = kvm_get_mce_cap_supported(env->kvm_state, &mcg_cap, &banks);
./tools/qemu-xen/target-i386/kvm.c:        env->mcg_cap = mcg_cap;
./tools/qemu-xen/target-i386/kvm.c:    r = kvm_check_extension(env->kvm_state, KVM_CAP_TSC_CONTROL);
./tools/qemu-xen/target-i386/kvm.c:    if (r && env->tsc_khz) {
./tools/qemu-xen/target-i386/kvm.c:        r = kvm_vcpu_ioctl(env, KVM_SET_TSC_KHZ, env->tsc_khz);
./tools/qemu-xen/target-i386/kvm.c:    env->exception_injected = -1;
./tools/qemu-xen/target-i386/kvm.c:    env->interrupt_injected = -1;
./tools/qemu-xen/target-i386/kvm.c:    env->xcr0 = 1;
./tools/qemu-xen/target-i386/kvm.c:        env->mp_state = cpu_is_bsp(env) ? KVM_MP_STATE_RUNNABLE :
./tools/qemu-xen/target-i386/kvm.c:        env->mp_state = KVM_MP_STATE_RUNNABLE;
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rax, &env->regs[R_EAX], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rbx, &env->regs[R_EBX], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rcx, &env->regs[R_ECX], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rdx, &env->regs[R_EDX], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rsi, &env->regs[R_ESI], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rdi, &env->regs[R_EDI], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rsp, &env->regs[R_ESP], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rbp, &env->regs[R_EBP], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.r8, &env->regs[8], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.r9, &env->regs[9], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.r10, &env->regs[10], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.r11, &env->regs[11], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.r12, &env->regs[12], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.r13, &env->regs[13], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.r14, &env->regs[14], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.r15, &env->regs[15], set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rflags, &env->eflags, set);
./tools/qemu-xen/target-i386/kvm.c:    kvm_getput_reg(&regs.rip, &env->eip, set);
./tools/qemu-xen/target-i386/kvm.c:    fpu.fsw = env->fpus & ~(7 << 11);
./tools/qemu-xen/target-i386/kvm.c:    fpu.fsw |= (env->fpstt & 7) << 11;
./tools/qemu-xen/target-i386/kvm.c:    fpu.fcw = env->fpuc;
./tools/qemu-xen/target-i386/kvm.c:    fpu.last_opcode = env->fpop;
./tools/qemu-xen/target-i386/kvm.c:    fpu.last_ip = env->fpip;
./tools/qemu-xen/target-i386/kvm.c:    fpu.last_dp = env->fpdp;
./tools/qemu-xen/target-i386/kvm.c:        fpu.ftwx |= (!env->fptags[i]) << i;
./tools/qemu-xen/target-i386/kvm.c:    memcpy(fpu.fpr, env->fpregs, sizeof env->fpregs);
./tools/qemu-xen/target-i386/kvm.c:    memcpy(fpu.xmm, env->xmm_regs, sizeof env->xmm_regs);
./tools/qemu-xen/target-i386/kvm.c:    fpu.mxcsr = env->mxcsr;
./tools/qemu-xen/target-i386/kvm.c:    swd = env->fpus & ~(7 << 11);
./tools/qemu-xen/target-i386/kvm.c:    swd |= (env->fpstt & 7) << 11;
./tools/qemu-xen/target-i386/kvm.c:    cwd = env->fpuc;
./tools/qemu-xen/target-i386/kvm.c:        twd |= (!env->fptags[i]) << i;
./tools/qemu-xen/target-i386/kvm.c:    xsave->region[1] = (uint32_t)(env->fpop << 16) + twd;
./tools/qemu-xen/target-i386/kvm.c:    memcpy(&xsave->region[XSAVE_CWD_RIP], &env->fpip, sizeof(env->fpip));
./tools/qemu-xen/target-i386/kvm.c:    memcpy(&xsave->region[XSAVE_CWD_RDP], &env->fpdp, sizeof(env->fpdp));
./tools/qemu-xen/target-i386/kvm.c:    memcpy(&xsave->region[XSAVE_ST_SPACE], env->fpregs,
./tools/qemu-xen/target-i386/kvm.c:            sizeof env->fpregs);
./tools/qemu-xen/target-i386/kvm.c:    memcpy(&xsave->region[XSAVE_XMM_SPACE], env->xmm_regs,
./tools/qemu-xen/target-i386/kvm.c:            sizeof env->xmm_regs);
./tools/qemu-xen/target-i386/kvm.c:    xsave->region[XSAVE_MXCSR] = env->mxcsr;
./tools/qemu-xen/target-i386/kvm.c:    *(uint64_t *)&xsave->region[XSAVE_XSTATE_BV] = env->xstate_bv;
./tools/qemu-xen/target-i386/kvm.c:    memcpy(&xsave->region[XSAVE_YMMH_SPACE], env->ymmh_regs,
./tools/qemu-xen/target-i386/kvm.c:            sizeof env->ymmh_regs);
./tools/qemu-xen/target-i386/kvm.c:    xcrs.xcrs[0].value = env->xcr0;
./tools/qemu-xen/target-i386/kvm.c:    if (env->interrupt_injected >= 0) {
./tools/qemu-xen/target-i386/kvm.c:        sregs.interrupt_bitmap[env->interrupt_injected / 64] |=
./tools/qemu-xen/target-i386/kvm.c:                (uint64_t)1 << (env->interrupt_injected % 64);
./tools/qemu-xen/target-i386/kvm.c:    if ((env->eflags & VM_MASK)) {
./tools/qemu-xen/target-i386/kvm.c:        set_v8086_seg(&sregs.cs, &env->segs[R_CS]);
./tools/qemu-xen/target-i386/kvm.c:        set_v8086_seg(&sregs.ds, &env->segs[R_DS]);
./tools/qemu-xen/target-i386/kvm.c:        set_v8086_seg(&sregs.es, &env->segs[R_ES]);
./tools/qemu-xen/target-i386/kvm.c:        set_v8086_seg(&sregs.fs, &env->segs[R_FS]);
./tools/qemu-xen/target-i386/kvm.c:        set_v8086_seg(&sregs.gs, &env->segs[R_GS]);
./tools/qemu-xen/target-i386/kvm.c:        set_v8086_seg(&sregs.ss, &env->segs[R_SS]);
./tools/qemu-xen/target-i386/kvm.c:        set_seg(&sregs.cs, &env->segs[R_CS]);
./tools/qemu-xen/target-i386/kvm.c:        set_seg(&sregs.ds, &env->segs[R_DS]);
./tools/qemu-xen/target-i386/kvm.c:        set_seg(&sregs.es, &env->segs[R_ES]);
./tools/qemu-xen/target-i386/kvm.c:        set_seg(&sregs.fs, &env->segs[R_FS]);
./tools/qemu-xen/target-i386/kvm.c:        set_seg(&sregs.gs, &env->segs[R_GS]);
./tools/qemu-xen/target-i386/kvm.c:        set_seg(&sregs.ss, &env->segs[R_SS]);
./tools/qemu-xen/target-i386/kvm.c:    set_seg(&sregs.tr, &env->tr);
./tools/qemu-xen/target-i386/kvm.c:    set_seg(&sregs.ldt, &env->ldt);
./tools/qemu-xen/target-i386/kvm.c:    sregs.idt.limit = env->idt.limit;
./tools/qemu-xen/target-i386/kvm.c:    sregs.idt.base = env->idt.base;
./tools/qemu-xen/target-i386/kvm.c:    sregs.gdt.limit = env->gdt.limit;
./tools/qemu-xen/target-i386/kvm.c:    sregs.gdt.base = env->gdt.base;
./tools/qemu-xen/target-i386/kvm.c:    sregs.cr0 = env->cr[0];
./tools/qemu-xen/target-i386/kvm.c:    sregs.cr2 = env->cr[2];
./tools/qemu-xen/target-i386/kvm.c:    sregs.cr3 = env->cr[3];
./tools/qemu-xen/target-i386/kvm.c:    sregs.cr4 = env->cr[4];
./tools/qemu-xen/target-i386/kvm.c:    sregs.cr8 = cpu_get_apic_tpr(env->apic_state);
./tools/qemu-xen/target-i386/kvm.c:    sregs.apic_base = cpu_get_apic_base(env->apic_state);
./tools/qemu-xen/target-i386/kvm.c:    sregs.efer = env->efer;
./tools/qemu-xen/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_IA32_SYSENTER_CS, env->sysenter_cs);
./tools/qemu-xen/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_IA32_SYSENTER_ESP, env->sysenter_esp);
./tools/qemu-xen/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_IA32_SYSENTER_EIP, env->sysenter_eip);
./tools/qemu-xen/target-i386/kvm.c:    kvm_msr_entry_set(&msrs[n++], MSR_PAT, env->pat);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_STAR, env->star);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_VM_HSAVE_PA, env->vm_hsave);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_IA32_TSCDEADLINE, env->tsc_deadline);
./tools/qemu-xen/target-i386/kvm.c:                          env->msr_ia32_misc_enable);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_CSTAR, env->cstar);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_KERNELGSBASE, env->kernelgsbase);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_FMASK, env->fmask);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_LSTAR, env->lstar);
./tools/qemu-xen/target-i386/kvm.c:        if (smp_cpus == 1 || env->tsc != 0) {
./tools/qemu-xen/target-i386/kvm.c:            kvm_msr_entry_set(&msrs[n++], MSR_IA32_TSC, env->tsc);
./tools/qemu-xen/target-i386/kvm.c:                          env->system_time_msr);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_KVM_WALL_CLOCK, env->wall_clock_msr);
./tools/qemu-xen/target-i386/kvm.c:                              env->async_pf_en_msr);
./tools/qemu-xen/target-i386/kvm.c:    if (env->mcg_cap) {
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_MCG_STATUS, env->mcg_status);
./tools/qemu-xen/target-i386/kvm.c:        kvm_msr_entry_set(&msrs[n++], MSR_MCG_CTL, env->mcg_ctl);
./tools/qemu-xen/target-i386/kvm.c:        for (i = 0; i < (env->mcg_cap & 0xff) * 4; i++) {
./tools/qemu-xen/target-i386/kvm.c:            kvm_msr_entry_set(&msrs[n++], MSR_MC0_CTL + i, env->mce_banks[i]);
./tools/qemu-xen/target-i386/kvm.c:    env->fpstt = (fpu.fsw >> 11) & 7;
./tools/qemu-xen/target-i386/kvm.c:    env->fpus = fpu.fsw;
./tools/qemu-xen/target-i386/kvm.c:    env->fpuc = fpu.fcw;
./tools/qemu-xen/target-i386/kvm.c:    env->fpop = fpu.last_opcode;
./tools/qemu-xen/target-i386/kvm.c:    env->fpip = fpu.last_ip;
./tools/qemu-xen/target-i386/kvm.c:    env->fpdp = fpu.last_dp;
./tools/qemu-xen/target-i386/kvm.c:        env->fptags[i] = !((fpu.ftwx >> i) & 1);
./tools/qemu-xen/target-i386/kvm.c:    memcpy(env->fpregs, fpu.fpr, sizeof env->fpregs);
./tools/qemu-xen/target-i386/kvm.c:    memcpy(env->xmm_regs, fpu.xmm, sizeof env->xmm_regs);
./tools/qemu-xen/target-i386/kvm.c:    env->mxcsr = fpu.mxcsr;
./tools/qemu-xen/target-i386/kvm.c:    env->fpop = (uint16_t)(xsave->region[1] >> 16);
./tools/qemu-xen/target-i386/kvm.c:    env->fpstt = (swd >> 11) & 7;
./tools/qemu-xen/target-i386/kvm.c:    env->fpus = swd;
./tools/qemu-xen/target-i386/kvm.c:    env->fpuc = cwd;
./tools/qemu-xen/target-i386/kvm.c:        env->fptags[i] = !((twd >> i) & 1);
./tools/qemu-xen/target-i386/kvm.c:    memcpy(&env->fpip, &xsave->region[XSAVE_CWD_RIP], sizeof(env->fpip));
./tools/qemu-xen/target-i386/kvm.c:    memcpy(&env->fpdp, &xsave->region[XSAVE_CWD_RDP], sizeof(env->fpdp));
./tools/qemu-xen/target-i386/kvm.c:    env->mxcsr = xsave->region[XSAVE_MXCSR];
./tools/qemu-xen/target-i386/kvm.c:    memcpy(env->fpregs, &xsave->region[XSAVE_ST_SPACE],
./tools/qemu-xen/target-i386/kvm.c:            sizeof env->fpregs);
./tools/qemu-xen/target-i386/kvm.c:    memcpy(env->xmm_regs, &xsave->region[XSAVE_XMM_SPACE],
./tools/qemu-xen/target-i386/kvm.c:            sizeof env->xmm_regs);
./tools/qemu-xen/target-i386/kvm.c:    env->xstate_bv = *(uint64_t *)&xsave->region[XSAVE_XSTATE_BV];
./tools/qemu-xen/target-i386/kvm.c:    memcpy(env->ymmh_regs, &xsave->region[XSAVE_YMMH_SPACE],
./tools/qemu-xen/target-i386/kvm.c:            sizeof env->ymmh_regs);
./tools/qemu-xen/target-i386/kvm.c:            env->xcr0 = xcrs.xcrs[0].value;
./tools/qemu-xen/target-i386/kvm.c:    env->interrupt_injected = -1;
./tools/qemu-xen/target-i386/kvm.c:            env->interrupt_injected = i * 64 + bit;
./tools/qemu-xen/target-i386/kvm.c:    get_seg(&env->segs[R_CS], &sregs.cs);
./tools/qemu-xen/target-i386/kvm.c:    get_seg(&env->segs[R_DS], &sregs.ds);
./tools/qemu-xen/target-i386/kvm.c:    get_seg(&env->segs[R_ES], &sregs.es);
./tools/qemu-xen/target-i386/kvm.c:    get_seg(&env->segs[R_FS], &sregs.fs);
./tools/qemu-xen/target-i386/kvm.c:    get_seg(&env->segs[R_GS], &sregs.gs);
./tools/qemu-xen/target-i386/kvm.c:    get_seg(&env->segs[R_SS], &sregs.ss);
./tools/qemu-xen/target-i386/kvm.c:    get_seg(&env->tr, &sregs.tr);
./tools/qemu-xen/target-i386/kvm.c:    get_seg(&env->ldt, &sregs.ldt);
./tools/qemu-xen/target-i386/kvm.c:    env->idt.limit = sregs.idt.limit;
./tools/qemu-xen/target-i386/kvm.c:    env->idt.base = sregs.idt.base;
./tools/qemu-xen/target-i386/kvm.c:    env->gdt.limit = sregs.gdt.limit;
./tools/qemu-xen/target-i386/kvm.c:    env->gdt.base = sregs.gdt.base;
./tools/qemu-xen/target-i386/kvm.c:    env->cr[0] = sregs.cr0;
./tools/qemu-xen/target-i386/kvm.c:    env->cr[2] = sregs.cr2;
./tools/qemu-xen/target-i386/kvm.c:    env->cr[3] = sregs.cr3;
./tools/qemu-xen/target-i386/kvm.c:    env->cr[4] = sregs.cr4;
./tools/qemu-xen/target-i386/kvm.c:    cpu_set_apic_base(env->apic_state, sregs.apic_base);
./tools/qemu-xen/target-i386/kvm.c:    env->efer = sregs.efer;
./tools/qemu-xen/target-i386/kvm.c:    //cpu_set_apic_tpr(env->apic_state, sregs.cr8);
./tools/qemu-xen/target-i386/kvm.c:    hflags = (env->segs[R_CS].flags >> DESC_DPL_SHIFT) & HF_CPL_MASK;
./tools/qemu-xen/target-i386/kvm.c:    hflags |= (env->cr[0] & CR0_PE_MASK) << (HF_PE_SHIFT - CR0_PE_SHIFT);
./tools/qemu-xen/target-i386/kvm.c:    hflags |= (env->cr[0] << (HF_MP_SHIFT - CR0_MP_SHIFT)) &
./tools/qemu-xen/target-i386/kvm.c:    hflags |= (env->eflags & (HF_TF_MASK | HF_VM_MASK | HF_IOPL_MASK));
./tools/qemu-xen/target-i386/kvm.c:    hflags |= (env->cr[4] & CR4_OSFXSR_MASK) <<
./tools/qemu-xen/target-i386/kvm.c:    if (env->efer & MSR_EFER_LMA) {
./tools/qemu-xen/target-i386/kvm.c:    if ((hflags & HF_LMA_MASK) && (env->segs[R_CS].flags & DESC_L_MASK)) {
./tools/qemu-xen/target-i386/kvm.c:        hflags |= (env->segs[R_CS].flags & DESC_B_MASK) >>
./tools/qemu-xen/target-i386/kvm.c:        hflags |= (env->segs[R_SS].flags & DESC_B_MASK) >>
./tools/qemu-xen/target-i386/kvm.c:        if (!(env->cr[0] & CR0_PE_MASK) || (env->eflags & VM_MASK) ||
./tools/qemu-xen/target-i386/kvm.c:            hflags |= ((env->segs[R_DS].base | env->segs[R_ES].base |
./tools/qemu-xen/target-i386/kvm.c:                        env->segs[R_SS].base) != 0) << HF_ADDSEG_SHIFT;
./tools/qemu-xen/target-i386/kvm.c:    env->hflags = (env->hflags & HFLAG_COPY_MASK) | hflags;
./tools/qemu-xen/target-i386/kvm.c:    if (!env->tsc_valid) {
./tools/qemu-xen/target-i386/kvm.c:        env->tsc_valid = !runstate_is_running();
./tools/qemu-xen/target-i386/kvm.c:    if (env->mcg_cap) {
./tools/qemu-xen/target-i386/kvm.c:        for (i = 0; i < (env->mcg_cap & 0xff) * 4; i++) {
./tools/qemu-xen/target-i386/kvm.c:            env->sysenter_cs = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->sysenter_esp = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->sysenter_eip = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->pat = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->star = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->cstar = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->kernelgsbase = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->fmask = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->lstar = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->tsc = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->tsc_deadline = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->vm_hsave = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->system_time_msr = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->wall_clock_msr = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->mcg_status = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->mcg_ctl = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->msr_ia32_misc_enable = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:                msrs[i].index < MSR_MC0_CTL + (env->mcg_cap & 0xff) * 4) {
./tools/qemu-xen/target-i386/kvm.c:                env->mce_banks[msrs[i].index - MSR_MC0_CTL] = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:            env->async_pf_en_msr = msrs[i].data;
./tools/qemu-xen/target-i386/kvm.c:    struct kvm_mp_state mp_state = { .mp_state = env->mp_state };
./tools/qemu-xen/target-i386/kvm.c:    env->mp_state = mp_state.mp_state;
./tools/qemu-xen/target-i386/kvm.c:        env->halted = (mp_state.mp_state == KVM_MP_STATE_HALTED);
./tools/qemu-xen/target-i386/kvm.c:    events.exception.injected = (env->exception_injected >= 0);
./tools/qemu-xen/target-i386/kvm.c:    events.exception.nr = env->exception_injected;
./tools/qemu-xen/target-i386/kvm.c:    events.exception.has_error_code = env->has_error_code;
./tools/qemu-xen/target-i386/kvm.c:    events.exception.error_code = env->error_code;
./tools/qemu-xen/target-i386/kvm.c:    events.interrupt.injected = (env->interrupt_injected >= 0);
./tools/qemu-xen/target-i386/kvm.c:    events.interrupt.nr = env->interrupt_injected;
./tools/qemu-xen/target-i386/kvm.c:    events.interrupt.soft = env->soft_interrupt;
./tools/qemu-xen/target-i386/kvm.c:    events.nmi.injected = env->nmi_injected;
./tools/qemu-xen/target-i386/kvm.c:    events.nmi.pending = env->nmi_pending;
./tools/qemu-xen/target-i386/kvm.c:    events.nmi.masked = !!(env->hflags2 & HF2_NMI_MASK);
./tools/qemu-xen/target-i386/kvm.c:    events.sipi_vector = env->sipi_vector;
./tools/qemu-xen/target-i386/kvm.c:    env->exception_injected =
./tools/qemu-xen/target-i386/kvm.c:    env->has_error_code = events.exception.has_error_code;
./tools/qemu-xen/target-i386/kvm.c:    env->error_code = events.exception.error_code;
./tools/qemu-xen/target-i386/kvm.c:    env->interrupt_injected =
./tools/qemu-xen/target-i386/kvm.c:    env->soft_interrupt = events.interrupt.soft;
./tools/qemu-xen/target-i386/kvm.c:    env->nmi_injected = events.nmi.injected;
./tools/qemu-xen/target-i386/kvm.c:    env->nmi_pending = events.nmi.pending;
./tools/qemu-xen/target-i386/kvm.c:        env->hflags2 |= HF2_NMI_MASK;
./tools/qemu-xen/target-i386/kvm.c:        env->hflags2 &= ~HF2_NMI_MASK;
./tools/qemu-xen/target-i386/kvm.c:    env->sipi_vector = events.sipi_vector;
./tools/qemu-xen/target-i386/kvm.c:        if (env->exception_injected == 1) {
./tools/qemu-xen/target-i386/kvm.c:        } else if (env->exception_injected == 3) {
./tools/qemu-xen/target-i386/kvm.c:        env->exception_injected = -1;
./tools/qemu-xen/target-i386/kvm.c:        (!kvm_has_robust_singlestep() && env->singlestep_enabled)) {
./tools/qemu-xen/target-i386/kvm.c:        dbgregs.db[i] = env->dr[i];
./tools/qemu-xen/target-i386/kvm.c:    dbgregs.dr6 = env->dr[6];
./tools/qemu-xen/target-i386/kvm.c:    dbgregs.dr7 = env->dr[7];
./tools/qemu-xen/target-i386/kvm.c:        env->dr[i] = dbgregs.db[i];
./tools/qemu-xen/target-i386/kvm.c:    env->dr[4] = env->dr[6] = dbgregs.dr6;
./tools/qemu-xen/target-i386/kvm.c:    env->dr[5] = env->dr[7] = dbgregs.dr7;
./tools/qemu-xen/target-i386/kvm.c:    if (env->interrupt_request & CPU_INTERRUPT_NMI) {
./tools/qemu-xen/target-i386/kvm.c:        env->interrupt_request &= ~CPU_INTERRUPT_NMI;
./tools/qemu-xen/target-i386/kvm.c:        if (env->interrupt_request & CPU_INTERRUPT_INIT) {
./tools/qemu-xen/target-i386/kvm.c:            env->exit_request = 1;
./tools/qemu-xen/target-i386/kvm.c:            (env->interrupt_request & CPU_INTERRUPT_HARD) &&
./tools/qemu-xen/target-i386/kvm.c:            (env->eflags & IF_MASK)) {
./tools/qemu-xen/target-i386/kvm.c:            env->interrupt_request &= ~CPU_INTERRUPT_HARD;
./tools/qemu-xen/target-i386/kvm.c:        if ((env->interrupt_request & CPU_INTERRUPT_HARD)) {
./tools/qemu-xen/target-i386/kvm.c:        run->cr8 = cpu_get_apic_tpr(env->apic_state);
./tools/qemu-xen/target-i386/kvm.c:        env->eflags |= IF_MASK;
./tools/qemu-xen/target-i386/kvm.c:        env->eflags &= ~IF_MASK;
./tools/qemu-xen/target-i386/kvm.c:    cpu_set_apic_tpr(env->apic_state, run->cr8);
./tools/qemu-xen/target-i386/kvm.c:    cpu_set_apic_base(env->apic_state, run->apic_base);
./tools/qemu-xen/target-i386/kvm.c:    if (env->interrupt_request & CPU_INTERRUPT_MCE) {
./tools/qemu-xen/target-i386/kvm.c:        assert(env->mcg_cap);
./tools/qemu-xen/target-i386/kvm.c:        env->interrupt_request &= ~CPU_INTERRUPT_MCE;
./tools/qemu-xen/target-i386/kvm.c:        if (env->exception_injected == EXCP08_DBLE) {
./tools/qemu-xen/target-i386/kvm.c:            env->exit_request = 1;
./tools/qemu-xen/target-i386/kvm.c:        env->exception_injected = EXCP12_MCHK;
./tools/qemu-xen/target-i386/kvm.c:        env->has_error_code = 0;
./tools/qemu-xen/target-i386/kvm.c:        env->halted = 0;
./tools/qemu-xen/target-i386/kvm.c:        if (kvm_irqchip_in_kernel() && env->mp_state == KVM_MP_STATE_HALTED) {
./tools/qemu-xen/target-i386/kvm.c:            env->mp_state = KVM_MP_STATE_RUNNABLE;
./tools/qemu-xen/target-i386/kvm.c:    if (((env->interrupt_request & CPU_INTERRUPT_HARD) &&
./tools/qemu-xen/target-i386/kvm.c:         (env->eflags & IF_MASK)) ||
./tools/qemu-xen/target-i386/kvm.c:        (env->interrupt_request & CPU_INTERRUPT_NMI)) {
./tools/qemu-xen/target-i386/kvm.c:        env->halted = 0;
./tools/qemu-xen/target-i386/kvm.c:    if (env->interrupt_request & CPU_INTERRUPT_INIT) {
./tools/qemu-xen/target-i386/kvm.c:    if (env->interrupt_request & CPU_INTERRUPT_SIPI) {
./tools/qemu-xen/target-i386/kvm.c:    return env->halted;
./tools/qemu-xen/target-i386/kvm.c:    if (!((env->interrupt_request & CPU_INTERRUPT_HARD) &&
./tools/qemu-xen/target-i386/kvm.c:          (env->eflags & IF_MASK)) &&
./tools/qemu-xen/target-i386/kvm.c:        !(env->interrupt_request & CPU_INTERRUPT_NMI)) {
./tools/qemu-xen/target-i386/kvm.c:        env->halted = 1;
./tools/qemu-xen/target-i386/kvm.c:            if (cpu_single_env->singlestep_enabled) {
./tools/qemu-xen/target-i386/kvm.c:                        cpu_single_env->watchpoint_hit = &hw_watchpoint;
./tools/qemu-xen/target-i386/kvm.c:                        cpu_single_env->watchpoint_hit = &hw_watchpoint;
./tools/qemu-xen/target-i386/kvm.c:        assert(cpu_single_env->exception_injected == -1);
./tools/qemu-xen/target-i386/kvm.c:        cpu_single_env->exception_injected = arch_info->exception;
./tools/qemu-xen/target-i386/kvm.c:        cpu_single_env->has_error_code = 0;
./tools/qemu-xen/target-i386/kvm.c:    return !(env->cr[0] & CR0_PE_MASK) ||
./tools/qemu-xen/target-i386/kvm.c:           ((env->segs[R_CS].selector  & 3) != 3);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[env->fpstt] = 0; /* validate stack entry */
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[env->fpstt] = 1; /* invvalidate stack entry */
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = (env->fpstt + 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    return env->eflags | helper_cc_compute_all(CC_OP) | (DF & DF_MASK);
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags = (env->eflags & ~update_mask) |
./tools/qemu-xen/target-i386/op_helper.c:    env->efer = val;
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags &= ~(HF_LMA_MASK | HF_SVME_MASK);
./tools/qemu-xen/target-i386/op_helper.c:    if (env->efer & MSR_EFER_LMA) {
./tools/qemu-xen/target-i386/op_helper.c:        env->hflags |= HF_LMA_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->efer & MSR_EFER_SVME) {
./tools/qemu-xen/target-i386/op_helper.c:        env->hflags |= HF_SVME_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    eflags |= env->eflags & ~(VM_MASK | RF_MASK);
./tools/qemu-xen/target-i386/op_helper.c:        dt = &env->ldt;
./tools/qemu-xen/target-i386/op_helper.c:        dt = &env->gdt;
./tools/qemu-xen/target-i386/op_helper.c:        printf("TR: base=%p limit=%x\n", env->tr.base, env->tr.limit);
./tools/qemu-xen/target-i386/op_helper.c:        for(i=0;i<env->tr.limit;i++) {
./tools/qemu-xen/target-i386/op_helper.c:            printf("%02x ", env->tr.base[i]);
./tools/qemu-xen/target-i386/op_helper.c:    if (!(env->tr.flags & DESC_P_MASK))
./tools/qemu-xen/target-i386/op_helper.c:    type = (env->tr.flags >> DESC_TYPE_SHIFT) & 0xf;
./tools/qemu-xen/target-i386/op_helper.c:    if (index + (4 << shift) - 1 > env->tr.limit)
./tools/qemu-xen/target-i386/op_helper.c:        raise_exception_err(EXCP0A_TSS, env->tr.selector & 0xfffc);
./tools/qemu-xen/target-i386/op_helper.c:        *esp_ptr = lduw_kernel(env->tr.base + index);
./tools/qemu-xen/target-i386/op_helper.c:        *ss_ptr = lduw_kernel(env->tr.base + index + 2);
./tools/qemu-xen/target-i386/op_helper.c:        *esp_ptr = ldl_kernel(env->tr.base + index);
./tools/qemu-xen/target-i386/op_helper.c:        *ss_ptr = lduw_kernel(env->tr.base + index + 4);
./tools/qemu-xen/target-i386/op_helper.c:        cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    old_type = (env->tr.flags >> DESC_TYPE_SHIFT) & 0xf;
./tools/qemu-xen/target-i386/op_helper.c:    v1 = ldub_kernel(env->tr.base);
./tools/qemu-xen/target-i386/op_helper.c:    v2 = ldub_kernel(env->tr.base + old_tss_limit_max);
./tools/qemu-xen/target-i386/op_helper.c:    stb_kernel(env->tr.base, v1);
./tools/qemu-xen/target-i386/op_helper.c:    stb_kernel(env->tr.base + old_tss_limit_max, v2);
./tools/qemu-xen/target-i386/op_helper.c:        ptr = env->gdt.base + (env->tr.selector & ~7);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + 0x20, next_eip);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + 0x24, old_eflags);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 0 * 4), EAX);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 1 * 4), ECX);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 2 * 4), EDX);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 3 * 4), EBX);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 4 * 4), ESP);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 5 * 4), EBP);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 6 * 4), ESI);
./tools/qemu-xen/target-i386/op_helper.c:        stl_kernel(env->tr.base + (0x28 + 7 * 4), EDI);
./tools/qemu-xen/target-i386/op_helper.c:            stw_kernel(env->tr.base + (0x48 + i * 4), env->segs[i].selector);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + 0x0e, next_eip);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + 0x10, old_eflags);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 0 * 2), EAX);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 1 * 2), ECX);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 2 * 2), EDX);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 3 * 2), EBX);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 4 * 2), ESP);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 5 * 2), EBP);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 6 * 2), ESI);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(env->tr.base + (0x12 + 7 * 2), EDI);
./tools/qemu-xen/target-i386/op_helper.c:            stw_kernel(env->tr.base + (0x22 + i * 4), env->segs[i].selector);
./tools/qemu-xen/target-i386/op_helper.c:        stw_kernel(tss_base, env->tr.selector);
./tools/qemu-xen/target-i386/op_helper.c:        ptr = env->gdt.base + (tss_selector & ~7);
./tools/qemu-xen/target-i386/op_helper.c:    env->cr[0] |= CR0_TS_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags |= HF_TS_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.selector = tss_selector;
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.base = tss_base;
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.limit = tss_limit;
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.flags = e2 & ~DESC_TSS_BUSY_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if ((type & 8) && (env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = new_eip;
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.selector = new_ldt & ~4;
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.base = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.limit = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.flags = 0;
./tools/qemu-xen/target-i386/op_helper.c:        dt = &env->gdt;
./tools/qemu-xen/target-i386/op_helper.c:        load_seg_cache_raw_dt(&env->ldt, e1, e2);
./tools/qemu-xen/target-i386/op_helper.c:    if (new_eip > env->segs[R_CS].limit) {
./tools/qemu-xen/target-i386/op_helper.c:    if (env->dr[7] & 0x55) {
./tools/qemu-xen/target-i386/op_helper.c:            if (hw_breakpoint_enabled(env->dr[7], i) == 0x1)
./tools/qemu-xen/target-i386/op_helper.c:        env->dr[7] &= ~0x55;
./tools/qemu-xen/target-i386/op_helper.c:    if (!(env->tr.flags & DESC_P_MASK) ||
./tools/qemu-xen/target-i386/op_helper.c:        ((env->tr.flags >> DESC_TYPE_SHIFT) & 0xf) != 9 ||
./tools/qemu-xen/target-i386/op_helper.c:        env->tr.limit < 103)
./tools/qemu-xen/target-i386/op_helper.c:    io_offset = lduw_kernel(env->tr.base + 0x66);
./tools/qemu-xen/target-i386/op_helper.c:    if ((io_offset + 1) > env->tr.limit)
./tools/qemu-xen/target-i386/op_helper.c:    val = lduw_kernel(env->tr.base + io_offset);
./tools/qemu-xen/target-i386/op_helper.c:        old_eip = env->eip;
./tools/qemu-xen/target-i386/op_helper.c:    dt = &env->idt;
./tools/qemu-xen/target-i386/op_helper.c:            type = (env->tr.flags >> DESC_TYPE_SHIFT) & 0xf;
./tools/qemu-xen/target-i386/op_helper.c:            if (env->segs[R_SS].flags & DESC_B_MASK)
./tools/qemu-xen/target-i386/op_helper.c:            ssp = env->segs[R_SS].base + esp;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        if (env->eflags & VM_MASK)
./tools/qemu-xen/target-i386/op_helper.c:        sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen/target-i386/op_helper.c:        ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->eflags & VM_MASK)
./tools/qemu-xen/target-i386/op_helper.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:                PUSHL(ssp, esp, sp_mask, env->segs[R_GS].selector);
./tools/qemu-xen/target-i386/op_helper.c:                PUSHL(ssp, esp, sp_mask, env->segs[R_FS].selector);
./tools/qemu-xen/target-i386/op_helper.c:                PUSHL(ssp, esp, sp_mask, env->segs[R_DS].selector);
./tools/qemu-xen/target-i386/op_helper.c:                PUSHL(ssp, esp, sp_mask, env->segs[R_ES].selector);
./tools/qemu-xen/target-i386/op_helper.c:            PUSHL(ssp, esp, sp_mask, env->segs[R_SS].selector);
./tools/qemu-xen/target-i386/op_helper.c:        PUSHL(ssp, esp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:                PUSHW(ssp, esp, sp_mask, env->segs[R_GS].selector);
./tools/qemu-xen/target-i386/op_helper.c:                PUSHW(ssp, esp, sp_mask, env->segs[R_FS].selector);
./tools/qemu-xen/target-i386/op_helper.c:                PUSHW(ssp, esp, sp_mask, env->segs[R_DS].selector);
./tools/qemu-xen/target-i386/op_helper.c:                PUSHW(ssp, esp, sp_mask, env->segs[R_ES].selector);
./tools/qemu-xen/target-i386/op_helper.c:            PUSHW(ssp, esp, sp_mask, env->segs[R_SS].selector);
./tools/qemu-xen/target-i386/op_helper.c:        PUSHW(ssp, esp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:        if (env->eflags & VM_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = offset;
./tools/qemu-xen/target-i386/op_helper.c:        env->eflags &= ~IF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags &= ~(TF_MASK | VM_MASK | RF_MASK | NT_MASK);
./tools/qemu-xen/target-i386/op_helper.c:           env->tr.base, env->tr.limit);
./tools/qemu-xen/target-i386/op_helper.c:    if (!(env->tr.flags & DESC_P_MASK))
./tools/qemu-xen/target-i386/op_helper.c:    if ((index + 7) > env->tr.limit)
./tools/qemu-xen/target-i386/op_helper.c:        raise_exception_err(EXCP0A_TSS, env->tr.selector & 0xfffc);
./tools/qemu-xen/target-i386/op_helper.c:    return ldq_kernel(env->tr.base + index);
./tools/qemu-xen/target-i386/op_helper.c:        old_eip = env->eip;
./tools/qemu-xen/target-i386/op_helper.c:    dt = &env->idt;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        if (env->eflags & VM_MASK)
./tools/qemu-xen/target-i386/op_helper.c:    PUSHQ(esp, env->segs[R_SS].selector);
./tools/qemu-xen/target-i386/op_helper.c:    PUSHQ(esp, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = offset;
./tools/qemu-xen/target-i386/op_helper.c:        env->eflags &= ~IF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags &= ~(TF_MASK | VM_MASK | RF_MASK | NT_MASK);
./tools/qemu-xen/target-i386/op_helper.c:    env->exception_index = EXCP_SYSCALL;
./tools/qemu-xen/target-i386/op_helper.c:    env->exception_next_eip = env->eip + next_eip_addend;
./tools/qemu-xen/target-i386/op_helper.c:    if (!(env->efer & MSR_EFER_SCE)) {
./tools/qemu-xen/target-i386/op_helper.c:    selector = (env->star >> 32) & 0xffff;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:        ECX = env->eip + next_eip_addend;
./tools/qemu-xen/target-i386/op_helper.c:        env->regs[11] = compute_eflags();
./tools/qemu-xen/target-i386/op_helper.c:        code64 = env->hflags & HF_CS64_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        env->eflags &= ~env->fmask;
./tools/qemu-xen/target-i386/op_helper.c:        load_eflags(env->eflags, 0);
./tools/qemu-xen/target-i386/op_helper.c:            env->eip = env->lstar;
./tools/qemu-xen/target-i386/op_helper.c:            env->eip = env->cstar;
./tools/qemu-xen/target-i386/op_helper.c:        ECX = (uint32_t)(env->eip + next_eip_addend);
./tools/qemu-xen/target-i386/op_helper.c:        env->eflags &= ~(IF_MASK | RF_MASK | VM_MASK);
./tools/qemu-xen/target-i386/op_helper.c:        env->eip = (uint32_t)env->star;
./tools/qemu-xen/target-i386/op_helper.c:    if (!(env->efer & MSR_EFER_SCE)) {
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if (!(env->cr[0] & CR0_PE_MASK) || cpl != 0) {
./tools/qemu-xen/target-i386/op_helper.c:    selector = (env->star >> 48) & 0xffff;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:            env->eip = ECX;
./tools/qemu-xen/target-i386/op_helper.c:            env->eip = (uint32_t)ECX;
./tools/qemu-xen/target-i386/op_helper.c:        load_eflags((uint32_t)(env->regs[11]), TF_MASK | AC_MASK | ID_MASK |
./tools/qemu-xen/target-i386/op_helper.c:        env->eip = (uint32_t)ECX;
./tools/qemu-xen/target-i386/op_helper.c:        env->eflags |= IF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    dt = &env->idt;
./tools/qemu-xen/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:        old_eip = env->eip;
./tools/qemu-xen/target-i386/op_helper.c:    old_cs = env->segs[R_CS].selector;
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = offset;
./tools/qemu-xen/target-i386/op_helper.c:    env->segs[R_CS].selector = selector;
./tools/qemu-xen/target-i386/op_helper.c:    env->segs[R_CS].base = (selector << 4);
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags &= ~(IF_MASK | TF_MASK | AC_MASK | RF_MASK);
./tools/qemu-xen/target-i386/op_helper.c:    dt = &env->idt;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    uint32_t event_inj = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj));
./tools/qemu-xen/target-i386/op_helper.c:		    stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj_err), error_code);
./tools/qemu-xen/target-i386/op_helper.c:	    stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj), event_inj);
./tools/qemu-xen/target-i386/op_helper.c:        if ((env->cr[0] & CR0_PE_MASK)) {
./tools/qemu-xen/target-i386/op_helper.c:                    env->hflags & HF_CPL_MASK,
./tools/qemu-xen/target-i386/op_helper.c:                    env->segs[R_CS].selector, EIP,
./tools/qemu-xen/target-i386/op_helper.c:                    (int)env->segs[R_CS].base + EIP,
./tools/qemu-xen/target-i386/op_helper.c:                    env->segs[R_SS].selector, ESP);
./tools/qemu-xen/target-i386/op_helper.c:                qemu_log(" CR2=" TARGET_FMT_lx, env->cr[2]);
./tools/qemu-xen/target-i386/op_helper.c:                ptr = env->segs[R_CS].base + env->eip;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->cr[0] & CR0_PE_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_SVMI_MASK)
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_SVMI_MASK)
./tools/qemu-xen/target-i386/op_helper.c:    if (env->hflags & HF_SVMI_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:	    uint32_t event_inj = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj));
./tools/qemu-xen/target-i386/op_helper.c:	    stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj), event_inj & ~SVM_EVTINJ_VALID);
./tools/qemu-xen/target-i386/op_helper.c:    do_interrupt_user(env->exception_index,
./tools/qemu-xen/target-i386/op_helper.c:                      env->exception_is_int,
./tools/qemu-xen/target-i386/op_helper.c:                      env->error_code,
./tools/qemu-xen/target-i386/op_helper.c:                      env->exception_next_eip);
./tools/qemu-xen/target-i386/op_helper.c:    env->old_exception = -1;
./tools/qemu-xen/target-i386/op_helper.c:    do_interrupt_all(env->exception_index,
./tools/qemu-xen/target-i386/op_helper.c:                     env->exception_is_int,
./tools/qemu-xen/target-i386/op_helper.c:                     env->error_code,
./tools/qemu-xen/target-i386/op_helper.c:                     env->exception_next_eip, 0);
./tools/qemu-xen/target-i386/op_helper.c:    env->old_exception = -1;
./tools/qemu-xen/target-i386/op_helper.c:    int first_contributory = env->old_exception == 0 ||
./tools/qemu-xen/target-i386/op_helper.c:                              (env->old_exception >= 10 &&
./tools/qemu-xen/target-i386/op_helper.c:                               env->old_exception <= 13);
./tools/qemu-xen/target-i386/op_helper.c:                env->old_exception, intno);
./tools/qemu-xen/target-i386/op_helper.c:    if (env->old_exception == EXCP08_DBLE) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_SVMI_MASK)
./tools/qemu-xen/target-i386/op_helper.c:        || (env->old_exception == EXCP0E_PAGE &&
./tools/qemu-xen/target-i386/op_helper.c:        env->old_exception = intno;
./tools/qemu-xen/target-i386/op_helper.c:    env->exception_index = intno;
./tools/qemu-xen/target-i386/op_helper.c:    env->error_code = error_code;
./tools/qemu-xen/target-i386/op_helper.c:    env->exception_is_int = is_int;
./tools/qemu-xen/target-i386/op_helper.c:    env->exception_next_eip = env->eip + next_eip_addend;
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags |= HF_SMM_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    sm_state = env->smbase + 0x8000;
./tools/qemu-xen/target-i386/op_helper.c:        dt = &env->segs[i];
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(sm_state + 0x7e68, env->gdt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7e64, env->gdt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stw_phys(sm_state + 0x7e70, env->ldt.selector);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(sm_state + 0x7e78, env->ldt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7e74, env->ldt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stw_phys(sm_state + 0x7e72, (env->ldt.flags >> 8) & 0xf0ff);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(sm_state + 0x7e88, env->idt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7e84, env->idt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stw_phys(sm_state + 0x7e90, env->tr.selector);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(sm_state + 0x7e98, env->tr.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7e94, env->tr.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stw_phys(sm_state + 0x7e92, (env->tr.flags >> 8) & 0xf0ff);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(sm_state + 0x7ed0, env->efer);
./tools/qemu-xen/target-i386/op_helper.c:        stq_phys(sm_state + 0x7ff8 - i * 8, env->regs[i]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(sm_state + 0x7f78, env->eip);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f68, env->dr[6]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f60, env->dr[7]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f48, env->cr[4]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f50, env->cr[3]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f58, env->cr[0]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f00, env->smbase);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7ffc, env->cr[0]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7ff8, env->cr[3]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7ff0, env->eip);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7fcc, env->dr[6]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7fc8, env->dr[7]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7fc4, env->tr.selector);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f64, env->tr.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f60, env->tr.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f5c, (env->tr.flags >> 8) & 0xf0ff);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7fc0, env->ldt.selector);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f80, env->ldt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f7c, env->ldt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f78, (env->ldt.flags >> 8) & 0xf0ff);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f74, env->gdt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f70, env->gdt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f58, env->idt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f54, env->idt.limit);
./tools/qemu-xen/target-i386/op_helper.c:        dt = &env->segs[i];
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7f14, env->cr[4]);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(sm_state + 0x7ef8, env->smbase);
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = 0x00008000;
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_load_seg_cache(env, R_CS, (env->smbase >> 4) & 0xffff, env->smbase,
./tools/qemu-xen/target-i386/op_helper.c:                       env->cr[0] & ~(CR0_PE_MASK | CR0_EM_MASK | CR0_TS_MASK | CR0_PG_MASK));
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[7] = 0x00000400;
./tools/qemu-xen/target-i386/op_helper.c:    sm_state = env->smbase + 0x8000;
./tools/qemu-xen/target-i386/op_helper.c:    env->gdt.base = ldq_phys(sm_state + 0x7e68);
./tools/qemu-xen/target-i386/op_helper.c:    env->gdt.limit = ldl_phys(sm_state + 0x7e64);
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.selector = lduw_phys(sm_state + 0x7e70);
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.base = ldq_phys(sm_state + 0x7e78);
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.limit = ldl_phys(sm_state + 0x7e74);
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.flags = (lduw_phys(sm_state + 0x7e72) & 0xf0ff) << 8;
./tools/qemu-xen/target-i386/op_helper.c:    env->idt.base = ldq_phys(sm_state + 0x7e88);
./tools/qemu-xen/target-i386/op_helper.c:    env->idt.limit = ldl_phys(sm_state + 0x7e84);
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.selector = lduw_phys(sm_state + 0x7e90);
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.base = ldq_phys(sm_state + 0x7e98);
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.limit = ldl_phys(sm_state + 0x7e94);
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.flags = (lduw_phys(sm_state + 0x7e92) & 0xf0ff) << 8;
./tools/qemu-xen/target-i386/op_helper.c:        env->regs[i] = ldq_phys(sm_state + 0x7ff8 - i * 8);
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = ldq_phys(sm_state + 0x7f78);
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[6] = ldl_phys(sm_state + 0x7f68);
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[7] = ldl_phys(sm_state + 0x7f60);
./tools/qemu-xen/target-i386/op_helper.c:        env->smbase = ldl_phys(sm_state + 0x7f00) & ~0x7fff;
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = ldl_phys(sm_state + 0x7ff0);
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[6] = ldl_phys(sm_state + 0x7fcc);
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[7] = ldl_phys(sm_state + 0x7fc8);
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.selector = ldl_phys(sm_state + 0x7fc4) & 0xffff;
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.base = ldl_phys(sm_state + 0x7f64);
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.limit = ldl_phys(sm_state + 0x7f60);
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.flags = (ldl_phys(sm_state + 0x7f5c) & 0xf0ff) << 8;
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.selector = ldl_phys(sm_state + 0x7fc0) & 0xffff;
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.base = ldl_phys(sm_state + 0x7f80);
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.limit = ldl_phys(sm_state + 0x7f7c);
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.flags = (ldl_phys(sm_state + 0x7f78) & 0xf0ff) << 8;
./tools/qemu-xen/target-i386/op_helper.c:    env->gdt.base = ldl_phys(sm_state + 0x7f74);
./tools/qemu-xen/target-i386/op_helper.c:    env->gdt.limit = ldl_phys(sm_state + 0x7f70);
./tools/qemu-xen/target-i386/op_helper.c:    env->idt.base = ldl_phys(sm_state + 0x7f58);
./tools/qemu-xen/target-i386/op_helper.c:    env->idt.limit = ldl_phys(sm_state + 0x7f54);
./tools/qemu-xen/target-i386/op_helper.c:        env->smbase = ldl_phys(sm_state + 0x7ef8) & ~0x7fff;
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags &= ~HF_SMM_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[6] |= DR6_BS;
./tools/qemu-xen/target-i386/op_helper.c:    esp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:        env->ldt.base = 0;
./tools/qemu-xen/target-i386/op_helper.c:        env->ldt.limit = 0;
./tools/qemu-xen/target-i386/op_helper.c:        dt = &env->gdt;
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK)
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:            load_seg_cache_raw_dt(&env->ldt, e1, e2);
./tools/qemu-xen/target-i386/op_helper.c:            env->ldt.base |= (target_ulong)e3 << 32;
./tools/qemu-xen/target-i386/op_helper.c:            load_seg_cache_raw_dt(&env->ldt, e1, e2);
./tools/qemu-xen/target-i386/op_helper.c:    env->ldt.selector = selector;
./tools/qemu-xen/target-i386/op_helper.c:        env->tr.base = 0;
./tools/qemu-xen/target-i386/op_helper.c:        env->tr.limit = 0;
./tools/qemu-xen/target-i386/op_helper.c:        env->tr.flags = 0;
./tools/qemu-xen/target-i386/op_helper.c:        dt = &env->gdt;
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK)
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:            load_seg_cache_raw_dt(&env->tr, e1, e2);
./tools/qemu-xen/target-i386/op_helper.c:            env->tr.base |= (target_ulong)e3 << 32;
./tools/qemu-xen/target-i386/op_helper.c:            load_seg_cache_raw_dt(&env->tr, e1, e2);
./tools/qemu-xen/target-i386/op_helper.c:    env->tr.selector = selector;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:            && (!(env->hflags & HF_CS64_MASK) || cpl == 3)
./tools/qemu-xen/target-i386/op_helper.c:            dt = &env->ldt;
./tools/qemu-xen/target-i386/op_helper.c:            dt = &env->gdt;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:            !(env->hflags & HF_LMA_MASK) && !(e2 & DESC_L_MASK))
./tools/qemu-xen/target-i386/op_helper.c:        cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:            next_eip = env->eip + next_eip_addend;
./tools/qemu-xen/target-i386/op_helper.c:    esp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:        PUSHL(ssp, esp, esp_mask, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:        PUSHW(ssp, esp, esp_mask, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = new_eip;
./tools/qemu-xen/target-i386/op_helper.c:    env->segs[R_CS].selector = new_cs;
./tools/qemu-xen/target-i386/op_helper.c:    env->segs[R_CS].base = (new_cs << 4);
./tools/qemu-xen/target-i386/op_helper.c:    next_eip = env->eip + next_eip_addend;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:            PUSHQ(rsp, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:            sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen/target-i386/op_helper.c:            ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:                PUSHL(ssp, sp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:                PUSHW(ssp, sp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:            old_sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen/target-i386/op_helper.c:            old_ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:                PUSHL(ssp, sp, sp_mask, env->segs[R_SS].selector);
./tools/qemu-xen/target-i386/op_helper.c:                PUSHW(ssp, sp, sp_mask, env->segs[R_SS].selector);
./tools/qemu-xen/target-i386/op_helper.c:            sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen/target-i386/op_helper.c:            ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:            PUSHL(ssp, sp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:            PUSHW(ssp, sp, sp_mask, env->segs[R_CS].selector);
./tools/qemu-xen/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:    env->segs[R_CS].selector = new_cs;
./tools/qemu-xen/target-i386/op_helper.c:    env->segs[R_CS].base = (new_cs << 4);
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = new_eip;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->eflags & VM_MASK)
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags2 &= ~HF2_NMI_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        (env->segs[seg_reg].selector & 0xfffc) == 0)
./tools/qemu-xen/target-i386/op_helper.c:    e2 = env->segs[seg_reg].flags;
./tools/qemu-xen/target-i386/op_helper.c:        sp_mask = get_sp_mask(env->segs[R_SS].flags);
./tools/qemu-xen/target-i386/op_helper.c:    ssp = env->segs[R_SS].base;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if (rpl == cpl && (!(env->hflags & HF_CS64_MASK) ||
./tools/qemu-xen/target-i386/op_helper.c:                       ((env->hflags & HF_CS64_MASK) && !is_iret))) {
./tools/qemu-xen/target-i386/op_helper.c:            if ((env->hflags & HF_LMA_MASK) && rpl != 3) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_CS64_MASK)
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = new_eip;
./tools/qemu-xen/target-i386/op_helper.c:        iopl = (env->eflags >> IOPL_SHIFT) & 3;
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = new_eip & 0xffff;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->eflags & NT_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_LMA_MASK)
./tools/qemu-xen/target-i386/op_helper.c:        tss_selector = lduw_kernel(env->tr.base + 0);
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags2 &= ~HF2_NMI_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->sysenter_cs == 0) {
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags &= ~(VM_MASK | IF_MASK | RF_MASK);
./tools/qemu-xen/target-i386/op_helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_CS, env->sysenter_cs & 0xfffc,
./tools/qemu-xen/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_CS, env->sysenter_cs & 0xfffc,
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_load_seg_cache(env, R_SS, (env->sysenter_cs + 8) & 0xfffc,
./tools/qemu-xen/target-i386/op_helper.c:    ESP = env->sysenter_esp;
./tools/qemu-xen/target-i386/op_helper.c:    EIP = env->sysenter_eip;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->sysenter_cs == 0 || cpl != 0) {
./tools/qemu-xen/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_CS, ((env->sysenter_cs + 32) & 0xfffc) | 3,
./tools/qemu-xen/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_SS, ((env->sysenter_cs + 40) & 0xfffc) | 3,
./tools/qemu-xen/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_CS, ((env->sysenter_cs + 16) & 0xfffc) | 3,
./tools/qemu-xen/target-i386/op_helper.c:        cpu_x86_load_seg_cache(env, R_SS, ((env->sysenter_cs + 24) & 0xfffc) | 3,
./tools/qemu-xen/target-i386/op_helper.c:        val = env->cr[reg];
./tools/qemu-xen/target-i386/op_helper.c:        if (!(env->hflags2 & HF2_VINTR_MASK)) {
./tools/qemu-xen/target-i386/op_helper.c:            val = cpu_get_apic_tpr(env->apic_state);
./tools/qemu-xen/target-i386/op_helper.c:            val = env->v_tpr;
./tools/qemu-xen/target-i386/op_helper.c:        if (!(env->hflags2 & HF2_VINTR_MASK)) {
./tools/qemu-xen/target-i386/op_helper.c:            cpu_set_apic_tpr(env->apic_state, t0);
./tools/qemu-xen/target-i386/op_helper.c:        env->v_tpr = t0 & 0x0f;
./tools/qemu-xen/target-i386/op_helper.c:        env->cr[reg] = t0;
./tools/qemu-xen/target-i386/op_helper.c:        env->dr[reg] = t0;
./tools/qemu-xen/target-i386/op_helper.c:        env->dr[7] = t0;
./tools/qemu-xen/target-i386/op_helper.c:        env->dr[reg] = t0;
./tools/qemu-xen/target-i386/op_helper.c:    t0 = (env->cr[0] & ~0xe) | (t0 & 0xf);
./tools/qemu-xen/target-i386/op_helper.c:    env->cr[0] &= ~CR0_TS_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags &= ~HF_TS_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if ((env->cr[4] & CR4_TSD_MASK) && ((env->hflags & HF_CPL_MASK) != 0)) {
./tools/qemu-xen/target-i386/op_helper.c:    val = cpu_get_tsc(env) + env->tsc_offset;
./tools/qemu-xen/target-i386/op_helper.c:    ECX = (uint32_t)(env->tsc_aux);
./tools/qemu-xen/target-i386/op_helper.c:    if ((env->cr[4] & CR4_PCE_MASK) && ((env->hflags & HF_CPL_MASK) != 0)) {
./tools/qemu-xen/target-i386/op_helper.c:        env->sysenter_cs = val & 0xffff;
./tools/qemu-xen/target-i386/op_helper.c:        env->sysenter_esp = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->sysenter_eip = val;
./tools/qemu-xen/target-i386/op_helper.c:        cpu_set_apic_base(env->apic_state, val);
./tools/qemu-xen/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_SYSCALL)
./tools/qemu-xen/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_LM)
./tools/qemu-xen/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_FFXSR)
./tools/qemu-xen/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_NX)
./tools/qemu-xen/target-i386/op_helper.c:            if (env->cpuid_ext3_features & CPUID_EXT3_SVM)
./tools/qemu-xen/target-i386/op_helper.c:            if (env->cpuid_ext2_features & CPUID_EXT2_FFXSR)
./tools/qemu-xen/target-i386/op_helper.c:            cpu_load_efer(env, (env->efer & ~update_mask) |
./tools/qemu-xen/target-i386/op_helper.c:        env->star = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->pat = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->vm_hsave = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->lstar = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->cstar = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->fmask = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->segs[R_FS].base = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->segs[R_GS].base = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->kernelgsbase = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->mtrr_var[((uint32_t)ECX - MSR_MTRRphysBase(0)) / 2].base = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->mtrr_var[((uint32_t)ECX - MSR_MTRRphysMask(0)) / 2].mask = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix64K_00000] = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix16K_80000 + 1] = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix4K_C0000 + 3] = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->mtrr_deftype = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->mcg_status = val;
./tools/qemu-xen/target-i386/op_helper.c:        if ((env->mcg_cap & MCG_CTL_P)
./tools/qemu-xen/target-i386/op_helper.c:            env->mcg_ctl = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->tsc_aux = val;
./tools/qemu-xen/target-i386/op_helper.c:        env->msr_ia32_misc_enable = val;
./tools/qemu-xen/target-i386/op_helper.c:            && (uint32_t)ECX < MSR_MC0_CTL + (4 * env->mcg_cap & 0xff)) {
./tools/qemu-xen/target-i386/op_helper.c:                env->mce_banks[offset] = val;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->sysenter_cs;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->sysenter_esp;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->sysenter_eip;
./tools/qemu-xen/target-i386/op_helper.c:        val = cpu_get_apic_base(env->apic_state);
./tools/qemu-xen/target-i386/op_helper.c:        val = env->efer;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->star;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->pat;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->vm_hsave;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->lstar;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->cstar;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->fmask;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->segs[R_FS].base;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->segs[R_GS].base;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->kernelgsbase;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->tsc_aux;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->mtrr_var[((uint32_t)ECX - MSR_MTRRphysBase(0)) / 2].base;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->mtrr_var[((uint32_t)ECX - MSR_MTRRphysMask(0)) / 2].mask;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->mtrr_fixed[0];
./tools/qemu-xen/target-i386/op_helper.c:        val = env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix16K_80000 + 1];
./tools/qemu-xen/target-i386/op_helper.c:        val = env->mtrr_fixed[(uint32_t)ECX - MSR_MTRRfix4K_C0000 + 3];
./tools/qemu-xen/target-i386/op_helper.c:        val = env->mtrr_deftype;
./tools/qemu-xen/target-i386/op_helper.c:        if (env->cpuid_features & CPUID_MTRR)
./tools/qemu-xen/target-i386/op_helper.c:        val = env->mcg_cap;
./tools/qemu-xen/target-i386/op_helper.c:        if (env->mcg_cap & MCG_CTL_P)
./tools/qemu-xen/target-i386/op_helper.c:            val = env->mcg_ctl;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->mcg_status;
./tools/qemu-xen/target-i386/op_helper.c:        val = env->msr_ia32_misc_enable;
./tools/qemu-xen/target-i386/op_helper.c:            && (uint32_t)ECX < MSR_MC0_CTL + (4 * env->mcg_cap & 0xff)) {
./tools/qemu-xen/target-i386/op_helper.c:            val = env->mce_banks[offset];
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    cpl = env->hflags & HF_CPL_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    u.f64 = floatx80_to_float64(a, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    return float64_to_floatx80(u.f64, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus |= mask;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->fpus & (~env->fpuc & FPUC_EM))
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= FPUS_SE | FPUS_B;
./tools/qemu-xen/target-i386/op_helper.c:    return floatx80_div(a, b, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    if (env->cr[0] & CR0_NE_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:    FT0 = float32_to_floatx80(u.f, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    FT0 = float64_to_floatx80(u.f, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    FT0 = int32_to_floatx80(val, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = float32_to_floatx80(u.f, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = float64_to_floatx80(u.f, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = int32_to_floatx80(val, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = int64_to_floatx80(val, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen/target-i386/op_helper.c:    u.f = floatx80_to_float32(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    u.f = floatx80_to_float64(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    val = floatx80_to_int32(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    val = floatx80_to_int32(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    val = floatx80_to_int64(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    val = floatx80_to_int32_round_to_zero(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    val = floatx80_to_int32_round_to_zero(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    val = floatx80_to_int64_round_to_zero(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    new_fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpregs[new_fpstt].d = helper_fldt(ptr);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = new_fpstt;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[new_fpstt] = 0; /* validate stack entry */
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = (env->fpstt - 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus &= (~0x4700);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = (env->fpstt + 1) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus &= (~0x4700);
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[(env->fpstt + st_index) & 7] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    ret = floatx80_compare(ST0, FT0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus = (env->fpus & ~0x4500) | fcom_ccval[ret + 1];
./tools/qemu-xen/target-i386/op_helper.c:    ret = floatx80_compare_quiet(ST0, FT0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus = (env->fpus & ~0x4500) | fcom_ccval[ret+ 1];
./tools/qemu-xen/target-i386/op_helper.c:    ret = floatx80_compare(ST0, FT0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ret = floatx80_compare_quiet(ST0, FT0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ST0 = floatx80_add(ST0, FT0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ST0 = floatx80_mul(ST0, FT0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ST0 = floatx80_sub(ST0, FT0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ST0 = floatx80_sub(FT0, ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ST(st_index) = floatx80_add(ST(st_index), ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ST(st_index) = floatx80_mul(ST(st_index), ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ST(st_index) = floatx80_sub(ST(st_index), ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    ST(st_index) = floatx80_sub(ST0, ST(st_index), &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    return (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen/target-i386/op_helper.c:    return env->fpuc;
./tools/qemu-xen/target-i386/op_helper.c:    switch(env->fpuc & RC_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:    set_float_rounding_mode(rnd_type, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    switch((env->fpuc >> 8) & 3) {
./tools/qemu-xen/target-i386/op_helper.c:    set_floatx80_rounding_precision(rnd_type, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpuc = val;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus &= 0x7f00;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->fpus & FPUS_SE)
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpuc = 0x37f;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[0] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[1] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[2] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[3] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[4] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[5] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[6] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[7] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    tmp = int64_to_floatx80(val, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:    val = floatx80_to_int64(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x4700);
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x400);  /* C2 <-- 0 */
./tools/qemu-xen/target-i386/op_helper.c:        ST0 = floatx80_div(floatx80_chs(floatx80_one), floatx80_zero, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:        ST0 = int32_to_floatx80(expdif, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= (q & 0x4) << (8 - 2);  /* (C0) <-- q2 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= (q & 0x2) << (14 - 1); /* (C3) <-- q1 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= (q & 0x1) << (9 - 0);  /* (C1) <-- q0 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;  /* C2 <-- 1 */
./tools/qemu-xen/target-i386/op_helper.c:       env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x4700); /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= (q & 0x4) << (8 - 2);  /* (C0) <-- q2 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= (q & 0x2) << (14 - 1); /* (C3) <-- q1 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= (q & 0x1) << (9 - 0);  /* (C1) <-- q0 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;  /* C2 <-- 1 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x4700);
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x4700);  /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen/target-i386/op_helper.c:    ST0 = floatx80_sqrt(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x400);  /* C2 <-- 0 */
./tools/qemu-xen/target-i386/op_helper.c:    ST0 = floatx80_round_to_int(ST0, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:        int n = floatx80_to_int32_round_to_zero(ST1, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:        ST0 = floatx80_scalbn(ST0, n, &env->fp_status);
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x400);  /* C2 <-- 0 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus &= (~0x400);  /* C2 <-- 0 */
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus &= (~0x4700);  /* (C3,C2,C1,C0) <-- 0000 */
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x200; /* C1 <-- 1 */
./tools/qemu-xen/target-i386/op_helper.c:            env->fpus |=  0x500 /*Infinity*/;
./tools/qemu-xen/target-i386/op_helper.c:            env->fpus |=  0x100 /*NaN*/;
./tools/qemu-xen/target-i386/op_helper.c:            env->fpus |=  0x4000 /*Zero*/;
./tools/qemu-xen/target-i386/op_helper.c:            env->fpus |= 0x4400 /*Denormal*/;
./tools/qemu-xen/target-i386/op_helper.c:        env->fpus |= 0x400;
./tools/qemu-xen/target-i386/op_helper.c:    fpus = (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen/target-i386/op_helper.c:	if (env->fptags[i]) {
./tools/qemu-xen/target-i386/op_helper.c:            tmp.d = env->fpregs[i].d;
./tools/qemu-xen/target-i386/op_helper.c:        stl(ptr, env->fpuc);
./tools/qemu-xen/target-i386/op_helper.c:        stw(ptr, env->fpuc);
./tools/qemu-xen/target-i386/op_helper.c:	env->fpuc = lduw(ptr);
./tools/qemu-xen/target-i386/op_helper.c:	env->fpuc = lduw(ptr);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = (fpus >> 11) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus = fpus & ~0x3800;
./tools/qemu-xen/target-i386/op_helper.c:        env->fptags[i] = ((fptag & 3) == 3);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpuc = 0x37f;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[0] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[1] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[2] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[3] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[4] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[5] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[6] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fptags[7] = 1;
./tools/qemu-xen/target-i386/op_helper.c:    if (!(env->cr[0] & CR0_PE_MASK) || (env->eflags & VM_MASK)) {
./tools/qemu-xen/target-i386/op_helper.c:    fpus = (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11;
./tools/qemu-xen/target-i386/op_helper.c:        fptag |= (env->fptags[i] << i);
./tools/qemu-xen/target-i386/op_helper.c:    stw(ptr, env->fpuc);
./tools/qemu-xen/target-i386/op_helper.c:    if (env->cr[4] & CR4_OSFXSR_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:        stl(ptr + 0x18, env->mxcsr); /* mxcsr */
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_CS64_MASK)
./tools/qemu-xen/target-i386/op_helper.c:        if (!(env->efer & MSR_EFER_FFXSR)
./tools/qemu-xen/target-i386/op_helper.c:          || (env->hflags & HF_CPL_MASK)
./tools/qemu-xen/target-i386/op_helper.c:          || !(env->hflags & HF_LMA_MASK)) {
./tools/qemu-xen/target-i386/op_helper.c:                stq(addr, env->xmm_regs[i].XMM_Q(0));
./tools/qemu-xen/target-i386/op_helper.c:                stq(addr + 8, env->xmm_regs[i].XMM_Q(1));
./tools/qemu-xen/target-i386/op_helper.c:    env->fpuc = lduw(ptr);
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = (fpus >> 11) & 7;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpus = fpus & ~0x3800;
./tools/qemu-xen/target-i386/op_helper.c:        env->fptags[i] = ((fptag >> i) & 1);
./tools/qemu-xen/target-i386/op_helper.c:    if (env->cr[4] & CR4_OSFXSR_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:        env->mxcsr = ldl(ptr + 0x18);
./tools/qemu-xen/target-i386/op_helper.c:        if (env->hflags & HF_CS64_MASK)
./tools/qemu-xen/target-i386/op_helper.c:        if (!(env->efer & MSR_EFER_FFXSR)
./tools/qemu-xen/target-i386/op_helper.c:          || (env->hflags & HF_CPL_MASK)
./tools/qemu-xen/target-i386/op_helper.c:          || !(env->hflags & HF_LMA_MASK)) {
./tools/qemu-xen/target-i386/op_helper.c:                env->xmm_regs[i].XMM_Q(0) = ldq(addr);
./tools/qemu-xen/target-i386/op_helper.c:                env->xmm_regs[i].XMM_Q(1) = ldq(addr + 8);
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags &= ~HF_INHIBIT_IRQ_MASK; /* needed if sti is just before */
./tools/qemu-xen/target-i386/op_helper.c:    env->halted = 1;
./tools/qemu-xen/target-i386/op_helper.c:    env->exception_index = EXCP_HLT;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->cpu_index != 0 || env->next_cpu != NULL) {
./tools/qemu-xen/target-i386/op_helper.c:    env->exception_index = EXCP_DEBUG;
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags &= ~RF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags &= ~IF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags |= IF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags &= ~VIF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags |= VIF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->eflags & VIP_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags |= HF_INHIBIT_IRQ_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags &= ~HF_INHIBIT_IRQ_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen/target-i386/op_helper.c:    env->vm_vmcb = addr;
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.gdtr.base), env->gdt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(env->vm_hsave + offsetof(struct vmcb, save.gdtr.limit), env->gdt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.idtr.base), env->idt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(env->vm_hsave + offsetof(struct vmcb, save.idtr.limit), env->idt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr0), env->cr[0]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr2), env->cr[2]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr3), env->cr[3]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr4), env->cr[4]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.dr6), env->dr[6]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.dr7), env->dr[7]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.efer), env->efer);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.rflags), compute_eflags());
./tools/qemu-xen/target-i386/op_helper.c:    svm_save_seg(env->vm_hsave + offsetof(struct vmcb, save.es), 
./tools/qemu-xen/target-i386/op_helper.c:                  &env->segs[R_ES]);
./tools/qemu-xen/target-i386/op_helper.c:    svm_save_seg(env->vm_hsave + offsetof(struct vmcb, save.cs), 
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_CS]);
./tools/qemu-xen/target-i386/op_helper.c:    svm_save_seg(env->vm_hsave + offsetof(struct vmcb, save.ss), 
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_SS]);
./tools/qemu-xen/target-i386/op_helper.c:    svm_save_seg(env->vm_hsave + offsetof(struct vmcb, save.ds), 
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_DS]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.rip),
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.rsp), ESP);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_hsave + offsetof(struct vmcb, save.rax), EAX);
./tools/qemu-xen/target-i386/op_helper.c:    env->intercept            = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept));
./tools/qemu-xen/target-i386/op_helper.c:    env->intercept_cr_read    = lduw_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_cr_read));
./tools/qemu-xen/target-i386/op_helper.c:    env->intercept_cr_write   = lduw_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_cr_write));
./tools/qemu-xen/target-i386/op_helper.c:    env->intercept_dr_read    = lduw_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_dr_read));
./tools/qemu-xen/target-i386/op_helper.c:    env->intercept_dr_write   = lduw_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_dr_write));
./tools/qemu-xen/target-i386/op_helper.c:    env->intercept_exceptions = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.intercept_exceptions));
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags |= HF_SVMI_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->tsc_offset = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.tsc_offset));
./tools/qemu-xen/target-i386/op_helper.c:    env->gdt.base  = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.gdtr.base));
./tools/qemu-xen/target-i386/op_helper.c:    env->gdt.limit = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, save.gdtr.limit));
./tools/qemu-xen/target-i386/op_helper.c:    env->idt.base  = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.idtr.base));
./tools/qemu-xen/target-i386/op_helper.c:    env->idt.limit = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, save.idtr.limit));
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_2), 0);
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_update_cr0(env, ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr0)));
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_update_cr4(env, ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr4)));
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_update_cr3(env, ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr3)));
./tools/qemu-xen/target-i386/op_helper.c:    env->cr[2] = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr2));
./tools/qemu-xen/target-i386/op_helper.c:    int_ctl = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_ctl));
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags2 &= ~(HF2_HIF_MASK | HF2_VINTR_MASK);
./tools/qemu-xen/target-i386/op_helper.c:        env->v_tpr = int_ctl & V_TPR_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        env->hflags2 |= HF2_VINTR_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        if (env->eflags & IF_MASK)
./tools/qemu-xen/target-i386/op_helper.c:            env->hflags2 |= HF2_HIF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:                  ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.efer)));
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags = 0;
./tools/qemu-xen/target-i386/op_helper.c:    load_eflags(ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rflags)),
./tools/qemu-xen/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_vmcb + offsetof(struct vmcb, save.es),
./tools/qemu-xen/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_vmcb + offsetof(struct vmcb, save.cs),
./tools/qemu-xen/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_vmcb + offsetof(struct vmcb, save.ss),
./tools/qemu-xen/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_vmcb + offsetof(struct vmcb, save.ds),
./tools/qemu-xen/target-i386/op_helper.c:    EIP = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rip));
./tools/qemu-xen/target-i386/op_helper.c:    env->eip = EIP;
./tools/qemu-xen/target-i386/op_helper.c:    ESP = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rsp));
./tools/qemu-xen/target-i386/op_helper.c:    EAX = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rax));
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[7] = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.dr7));
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[6] = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, save.dr6));
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_set_cpl(env, ldub_phys(env->vm_vmcb + offsetof(struct vmcb, save.cpl)));
./tools/qemu-xen/target-i386/op_helper.c:    switch(ldub_phys(env->vm_vmcb + offsetof(struct vmcb, control.tlb_ctl))) {
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags2 |= HF2_GIF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        env->interrupt_request |= CPU_INTERRUPT_VIRQ;
./tools/qemu-xen/target-i386/op_helper.c:    event_inj = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj));
./tools/qemu-xen/target-i386/op_helper.c:        uint32_t event_inj_err = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj_err));
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_index = vector;
./tools/qemu-xen/target-i386/op_helper.c:                env->error_code = event_inj_err;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_is_int = 0;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_next_eip = -1;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_index = EXCP02_NMI;
./tools/qemu-xen/target-i386/op_helper.c:                env->error_code = event_inj_err;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_is_int = 0;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_next_eip = EIP;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_index = vector;
./tools/qemu-xen/target-i386/op_helper.c:                env->error_code = event_inj_err;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_is_int = 0;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_next_eip = -1;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_index = vector;
./tools/qemu-xen/target-i386/op_helper.c:                env->error_code = event_inj_err;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_is_int = 1;
./tools/qemu-xen/target-i386/op_helper.c:                env->exception_next_eip = EIP;
./tools/qemu-xen/target-i386/op_helper.c:        qemu_log_mask(CPU_LOG_TB_IN_ASM, " %#x %#x\n", env->exception_index, env->error_code);
./tools/qemu-xen/target-i386/op_helper.c:                env->segs[R_FS].base);
./tools/qemu-xen/target-i386/op_helper.c:                 &env->tr);
./tools/qemu-xen/target-i386/op_helper.c:                 &env->ldt);
./tools/qemu-xen/target-i386/op_helper.c:    env->kernelgsbase = ldq_phys(addr + offsetof(struct vmcb, save.kernel_gs_base));
./tools/qemu-xen/target-i386/op_helper.c:    env->lstar = ldq_phys(addr + offsetof(struct vmcb, save.lstar));
./tools/qemu-xen/target-i386/op_helper.c:    env->cstar = ldq_phys(addr + offsetof(struct vmcb, save.cstar));
./tools/qemu-xen/target-i386/op_helper.c:    env->fmask = ldq_phys(addr + offsetof(struct vmcb, save.sfmask));
./tools/qemu-xen/target-i386/op_helper.c:    env->star = ldq_phys(addr + offsetof(struct vmcb, save.star));
./tools/qemu-xen/target-i386/op_helper.c:    env->sysenter_cs = ldq_phys(addr + offsetof(struct vmcb, save.sysenter_cs));
./tools/qemu-xen/target-i386/op_helper.c:    env->sysenter_esp = ldq_phys(addr + offsetof(struct vmcb, save.sysenter_esp));
./tools/qemu-xen/target-i386/op_helper.c:    env->sysenter_eip = ldq_phys(addr + offsetof(struct vmcb, save.sysenter_eip));
./tools/qemu-xen/target-i386/op_helper.c:                env->segs[R_FS].base);
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_FS]);
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_GS]);
./tools/qemu-xen/target-i386/op_helper.c:                 &env->tr);
./tools/qemu-xen/target-i386/op_helper.c:                 &env->ldt);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.kernel_gs_base), env->kernelgsbase);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.lstar), env->lstar);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.cstar), env->cstar);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.sfmask), env->fmask);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.star), env->star);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.sysenter_cs), env->sysenter_cs);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.sysenter_esp), env->sysenter_esp);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(addr + offsetof(struct vmcb, save.sysenter_eip), env->sysenter_eip);
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags2 |= HF2_GIF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags2 &= ~HF2_GIF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if (likely(!(env->hflags & HF_SVMI_MASK)))
./tools/qemu-xen/target-i386/op_helper.c:        if (env->intercept_cr_read & (1 << (type - SVM_EXIT_READ_CR0))) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->intercept_cr_write & (1 << (type - SVM_EXIT_WRITE_CR0))) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->intercept_dr_read & (1 << (type - SVM_EXIT_READ_DR0))) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->intercept_dr_write & (1 << (type - SVM_EXIT_WRITE_DR0))) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->intercept_exceptions & (1 << (type - SVM_EXIT_EXCP_BASE))) {
./tools/qemu-xen/target-i386/op_helper.c:        if (env->intercept & (1ULL << (SVM_EXIT_MSR - SVM_EXIT_INTR))) {
./tools/qemu-xen/target-i386/op_helper.c:            uint64_t addr = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.msrpm_base_pa));
./tools/qemu-xen/target-i386/op_helper.c:        if (env->intercept & (1ULL << (type - SVM_EXIT_INTR))) {
./tools/qemu-xen/target-i386/op_helper.c:    if (env->intercept & (1ULL << (SVM_EXIT_IOIO - SVM_EXIT_INTR))) {
./tools/qemu-xen/target-i386/op_helper.c:        uint64_t addr = ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.iopm_base_pa));
./tools/qemu-xen/target-i386/op_helper.c:            stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_2), 
./tools/qemu-xen/target-i386/op_helper.c:                     env->eip + next_eip_addend);
./tools/qemu-xen/target-i386/op_helper.c:                ldq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_2)),
./tools/qemu-xen/target-i386/op_helper.c:    if(env->hflags & HF_INHIBIT_IRQ_MASK) {
./tools/qemu-xen/target-i386/op_helper.c:        stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_state), SVM_INTERRUPT_SHADOW_MASK);
./tools/qemu-xen/target-i386/op_helper.c:        env->hflags &= ~HF_INHIBIT_IRQ_MASK;
./tools/qemu-xen/target-i386/op_helper.c:        stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_state), 0);
./tools/qemu-xen/target-i386/op_helper.c:    svm_save_seg(env->vm_vmcb + offsetof(struct vmcb, save.es), 
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_ES]);
./tools/qemu-xen/target-i386/op_helper.c:    svm_save_seg(env->vm_vmcb + offsetof(struct vmcb, save.cs), 
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_CS]);
./tools/qemu-xen/target-i386/op_helper.c:    svm_save_seg(env->vm_vmcb + offsetof(struct vmcb, save.ss), 
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_SS]);
./tools/qemu-xen/target-i386/op_helper.c:    svm_save_seg(env->vm_vmcb + offsetof(struct vmcb, save.ds), 
./tools/qemu-xen/target-i386/op_helper.c:                 &env->segs[R_DS]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.gdtr.base), env->gdt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, save.gdtr.limit), env->gdt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.idtr.base), env->idt.base);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, save.idtr.limit), env->idt.limit);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.efer), env->efer);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr0), env->cr[0]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr2), env->cr[2]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr3), env->cr[3]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.cr4), env->cr[4]);
./tools/qemu-xen/target-i386/op_helper.c:    int_ctl = ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_ctl));
./tools/qemu-xen/target-i386/op_helper.c:    int_ctl |= env->v_tpr & V_TPR_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    if (env->interrupt_request & CPU_INTERRUPT_VIRQ)
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.int_ctl), int_ctl);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rflags), compute_eflags());
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rip), env->eip);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rsp), ESP);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.rax), EAX);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.dr7), env->dr[7]);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, save.dr6), env->dr[6]);
./tools/qemu-xen/target-i386/op_helper.c:    stb_phys(env->vm_vmcb + offsetof(struct vmcb, save.cpl), env->hflags & HF_CPL_MASK);
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags2 &= ~(HF2_HIF_MASK | HF2_VINTR_MASK);
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags &= ~HF_SVMI_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->intercept = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->intercept_exceptions = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->interrupt_request &= ~CPU_INTERRUPT_VIRQ;
./tools/qemu-xen/target-i386/op_helper.c:    env->tsc_offset = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->gdt.base  = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.gdtr.base));
./tools/qemu-xen/target-i386/op_helper.c:    env->gdt.limit = ldl_phys(env->vm_hsave + offsetof(struct vmcb, save.gdtr.limit));
./tools/qemu-xen/target-i386/op_helper.c:    env->idt.base  = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.idtr.base));
./tools/qemu-xen/target-i386/op_helper.c:    env->idt.limit = ldl_phys(env->vm_hsave + offsetof(struct vmcb, save.idtr.limit));
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_update_cr0(env, ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr0)) | CR0_PE_MASK);
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_update_cr4(env, ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr4)));
./tools/qemu-xen/target-i386/op_helper.c:    cpu_x86_update_cr3(env, ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.cr3)));
./tools/qemu-xen/target-i386/op_helper.c:                  ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.efer)));
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags = 0;
./tools/qemu-xen/target-i386/op_helper.c:    load_eflags(ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.rflags)),
./tools/qemu-xen/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_hsave + offsetof(struct vmcb, save.es),
./tools/qemu-xen/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_hsave + offsetof(struct vmcb, save.cs),
./tools/qemu-xen/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_hsave + offsetof(struct vmcb, save.ss),
./tools/qemu-xen/target-i386/op_helper.c:    svm_load_seg_cache(env->vm_hsave + offsetof(struct vmcb, save.ds),
./tools/qemu-xen/target-i386/op_helper.c:    EIP = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.rip));
./tools/qemu-xen/target-i386/op_helper.c:    ESP = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.rsp));
./tools/qemu-xen/target-i386/op_helper.c:    EAX = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.rax));
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[6] = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.dr6));
./tools/qemu-xen/target-i386/op_helper.c:    env->dr[7] = ldq_phys(env->vm_hsave + offsetof(struct vmcb, save.dr7));
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_code), exit_code);
./tools/qemu-xen/target-i386/op_helper.c:    stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_1), exit_info_1);
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_int_info),
./tools/qemu-xen/target-i386/op_helper.c:             ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj)));
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_int_info_err),
./tools/qemu-xen/target-i386/op_helper.c:             ldl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj_err)));
./tools/qemu-xen/target-i386/op_helper.c:    stl_phys(env->vm_vmcb + offsetof(struct vmcb, control.event_inj), 0);
./tools/qemu-xen/target-i386/op_helper.c:    env->hflags2 &= ~HF2_GIF_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->cr[0] |= CR0_PE_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->eflags &= ~VM_MASK;
./tools/qemu-xen/target-i386/op_helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-i386/op_helper.c:    env->error_code = 0;
./tools/qemu-xen/target-i386/op_helper.c:    env->old_exception = -1;
./tools/qemu-xen/target-i386/op_helper.c:    env->fpstt = 0;
./tools/qemu-xen/target-i386/op_helper.c:    *(uint32_t *)(env->fptags) = 0;
./tools/qemu-xen/target-i386/op_helper.c:    *(uint32_t *)(env->fptags + 4) = 0;
./tools/qemu-xen/target-i386/op_helper.c:    *(uint32_t *)(env->fptags) = 0x01010101;
./tools/qemu-xen/target-i386/op_helper.c:    *(uint32_t *)(env->fptags + 4) = 0x01010101;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_vendor1 = def->vendor1;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_vendor2 = def->vendor2;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_vendor3 = def->vendor3;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_vendor1 = CPUID_VENDOR_INTEL_1;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_vendor2 = CPUID_VENDOR_INTEL_2;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_vendor3 = CPUID_VENDOR_INTEL_3;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_vendor_override = def->vendor_override;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_level = def->level;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_version = 0xf00 | ((def->family - 0x0f) << 20);
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_version = def->family << 8;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_version |= ((def->model & 0xf) << 4) | ((def->model >> 4) << 16);
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_version |= def->stepping;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_features = def->features;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_ext_features = def->ext_features;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_ext2_features = def->ext2_features;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_ext3_features = def->ext3_features;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_xlevel = def->xlevel;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_kvm_features = def->kvm_features;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_svm_features = def->svm_features;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_ext4_features = def->ext4_features;
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_xlevel2 = def->xlevel2;
./tools/qemu-xen/target-i386/cpuid.c:    env->tsc_khz = def->tsc_khz;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_features &= TCG_FEATURES;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_ext_features &= TCG_EXT_FEATURES;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_ext2_features &= (TCG_EXT2_FEATURES
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_ext3_features &= TCG_EXT3_FEATURES;
./tools/qemu-xen/target-i386/cpuid.c:        env->cpuid_svm_features &= TCG_SVM_FEATURES;
./tools/qemu-xen/target-i386/cpuid.c:            env->cpuid_model[i >> 2] |= c << (8 * (i & 3));
./tools/qemu-xen/target-i386/cpuid.c:    env->cpuid_features &= ~CPUID_APIC;
./tools/qemu-xen/target-i386/cpuid.c:    *ebx = env->cpuid_vendor1;
./tools/qemu-xen/target-i386/cpuid.c:    *edx = env->cpuid_vendor2;
./tools/qemu-xen/target-i386/cpuid.c:    *ecx = env->cpuid_vendor3;
./tools/qemu-xen/target-i386/cpuid.c:    if (kvm_enabled() && ! env->cpuid_vendor_override) {
./tools/qemu-xen/target-i386/cpuid.c:        if (index > env->cpuid_xlevel) {
./tools/qemu-xen/target-i386/cpuid.c:            if (env->cpuid_xlevel2 > 0) {
./tools/qemu-xen/target-i386/cpuid.c:                if (index > env->cpuid_xlevel2) {
./tools/qemu-xen/target-i386/cpuid.c:                    index = env->cpuid_xlevel2;
./tools/qemu-xen/target-i386/cpuid.c:                    index = env->cpuid_xlevel;
./tools/qemu-xen/target-i386/cpuid.c:                index =  env->cpuid_xlevel;
./tools/qemu-xen/target-i386/cpuid.c:        if (index > env->cpuid_level)
./tools/qemu-xen/target-i386/cpuid.c:            index = env->cpuid_level;
./tools/qemu-xen/target-i386/cpuid.c:        *eax = env->cpuid_level;
./tools/qemu-xen/target-i386/cpuid.c:        *eax = env->cpuid_version;
./tools/qemu-xen/target-i386/cpuid.c:        *ebx = (env->cpuid_apic_id << 24) | 8 << 8; /* CLFLUSH size in quad words, Linux wants it. */
./tools/qemu-xen/target-i386/cpuid.c:        *ecx = env->cpuid_ext_features;
./tools/qemu-xen/target-i386/cpuid.c:        *edx = env->cpuid_features;
./tools/qemu-xen/target-i386/cpuid.c:        if (env->nr_cores * env->nr_threads > 1) {
./tools/qemu-xen/target-i386/cpuid.c:            *ebx |= (env->nr_cores * env->nr_threads) << 16;
./tools/qemu-xen/target-i386/cpuid.c:        if (env->nr_cores > 1) {
./tools/qemu-xen/target-i386/cpuid.c:            *eax = (env->nr_cores - 1) << 26;
./tools/qemu-xen/target-i386/cpuid.c:                if (env->nr_threads > 1) {
./tools/qemu-xen/target-i386/cpuid.c:                    *eax |= (env->nr_threads - 1) << 14;
./tools/qemu-xen/target-i386/cpuid.c:            KVMState *s = env->kvm_state;
./tools/qemu-xen/target-i386/cpuid.c:        if (!(env->cpuid_ext_features & CPUID_EXT_XSAVE)) {
./tools/qemu-xen/target-i386/cpuid.c:            KVMState *s = env->kvm_state;
./tools/qemu-xen/target-i386/cpuid.c:        *eax = env->cpuid_xlevel;
./tools/qemu-xen/target-i386/cpuid.c:        *ebx = env->cpuid_vendor1;
./tools/qemu-xen/target-i386/cpuid.c:        *edx = env->cpuid_vendor2;
./tools/qemu-xen/target-i386/cpuid.c:        *ecx = env->cpuid_vendor3;
./tools/qemu-xen/target-i386/cpuid.c:        *eax = env->cpuid_version;
./tools/qemu-xen/target-i386/cpuid.c:        *ecx = env->cpuid_ext3_features;
./tools/qemu-xen/target-i386/cpuid.c:        *edx = env->cpuid_ext2_features;
./tools/qemu-xen/target-i386/cpuid.c:        if (env->nr_cores * env->nr_threads > 1) {
./tools/qemu-xen/target-i386/cpuid.c:        *eax = env->cpuid_model[(index - 0x80000002) * 4 + 0];
./tools/qemu-xen/target-i386/cpuid.c:        *ebx = env->cpuid_model[(index - 0x80000002) * 4 + 1];
./tools/qemu-xen/target-i386/cpuid.c:        *ecx = env->cpuid_model[(index - 0x80000002) * 4 + 2];
./tools/qemu-xen/target-i386/cpuid.c:        *edx = env->cpuid_model[(index - 0x80000002) * 4 + 3];
./tools/qemu-xen/target-i386/cpuid.c:        if (env->cpuid_ext2_features & CPUID_EXT2_LM) {
./tools/qemu-xen/target-i386/cpuid.c:            if (env->cpuid_features & CPUID_PSE36)
./tools/qemu-xen/target-i386/cpuid.c:        if (env->nr_cores * env->nr_threads > 1) {
./tools/qemu-xen/target-i386/cpuid.c:            *ecx |= (env->nr_cores * env->nr_threads) - 1;
./tools/qemu-xen/target-i386/cpuid.c:	if (env->cpuid_ext3_features & CPUID_EXT3_SVM) {
./tools/qemu-xen/target-i386/cpuid.c:		*edx = env->cpuid_svm_features; /* optional features */
./tools/qemu-xen/target-i386/cpuid.c:        *eax = env->cpuid_xlevel2;
./tools/qemu-xen/target-i386/cpuid.c:        *eax = env->cpuid_version;
./tools/qemu-xen/target-i386/cpuid.c:        *edx = env->cpuid_ext4_features;
./tools/qemu-xen/target-i386/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-i386/helper.c:    env->old_exception = -1;
./tools/qemu-xen/target-i386/helper.c:    env->hflags |= HF_SOFTMMU_MASK;
./tools/qemu-xen/target-i386/helper.c:    env->hflags2 |= HF2_GIF_MASK;
./tools/qemu-xen/target-i386/helper.c:    env->a20_mask = ~0x0;
./tools/qemu-xen/target-i386/helper.c:    env->smbase = 0x30000;
./tools/qemu-xen/target-i386/helper.c:    env->idt.limit = 0xffff;
./tools/qemu-xen/target-i386/helper.c:    env->gdt.limit = 0xffff;
./tools/qemu-xen/target-i386/helper.c:    env->ldt.limit = 0xffff;
./tools/qemu-xen/target-i386/helper.c:    env->ldt.flags = DESC_P_MASK | (2 << DESC_TYPE_SHIFT);
./tools/qemu-xen/target-i386/helper.c:    env->tr.limit = 0xffff;
./tools/qemu-xen/target-i386/helper.c:    env->tr.flags = DESC_P_MASK | (11 << DESC_TYPE_SHIFT);
./tools/qemu-xen/target-i386/helper.c:    env->eip = 0xfff0;
./tools/qemu-xen/target-i386/helper.c:    env->regs[R_EDX] = env->cpuid_version;
./tools/qemu-xen/target-i386/helper.c:    env->eflags = 0x2;
./tools/qemu-xen/target-i386/helper.c:        env->fptags[i] = 1;
./tools/qemu-xen/target-i386/helper.c:    env->fpuc = 0x37f;
./tools/qemu-xen/target-i386/helper.c:    env->mxcsr = 0x1f80;
./tools/qemu-xen/target-i386/helper.c:    env->pat = 0x0007040600070406ULL;
./tools/qemu-xen/target-i386/helper.c:    env->msr_ia32_misc_enable = MSR_IA32_MISC_ENABLE_DEFAULT;
./tools/qemu-xen/target-i386/helper.c:    memset(env->dr, 0, sizeof(env->dr));
./tools/qemu-xen/target-i386/helper.c:    env->dr[6] = DR6_FIXED_1;
./tools/qemu-xen/target-i386/helper.c:    env->dr[7] = DR7_FIXED_1;
./tools/qemu-xen/target-i386/helper.c:    int cpuver = env->cpuid_version;
./tools/qemu-xen/target-i386/helper.c:    if (env->hflags & HF_CS64_MASK) {
./tools/qemu-xen/target-i386/helper.c:    if (!(env->hflags & HF_PE_MASK) || !(sc->flags & DESC_P_MASK))
./tools/qemu-xen/target-i386/helper.c:                    sys_type_name[(env->hflags & HF_LMA_MASK) ? 1 : 0]
./tools/qemu-xen/target-i386/helper.c:    eflags = env->eflags;
./tools/qemu-xen/target-i386/helper.c:    if (env->hflags & HF_CS64_MASK) {
./tools/qemu-xen/target-i386/helper.c:                    env->regs[R_EAX],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[R_EBX],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[R_ECX],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[R_EDX],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[R_ESI],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[R_EDI],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[R_EBP],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[R_ESP],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[8],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[9],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[10],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[11],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[12],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[13],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[14],
./tools/qemu-xen/target-i386/helper.c:                    env->regs[15],
./tools/qemu-xen/target-i386/helper.c:                    env->eip, eflags,
./tools/qemu-xen/target-i386/helper.c:                    env->hflags & HF_CPL_MASK,
./tools/qemu-xen/target-i386/helper.c:                    (env->hflags >> HF_INHIBIT_IRQ_SHIFT) & 1,
./tools/qemu-xen/target-i386/helper.c:                    (env->a20_mask >> 20) & 1,
./tools/qemu-xen/target-i386/helper.c:                    (env->hflags >> HF_SMM_SHIFT) & 1,
./tools/qemu-xen/target-i386/helper.c:                    env->halted);
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->regs[R_EAX],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->regs[R_EBX],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->regs[R_ECX],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->regs[R_EDX],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->regs[R_ESI],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->regs[R_EDI],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->regs[R_EBP],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->regs[R_ESP],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->eip, eflags,
./tools/qemu-xen/target-i386/helper.c:                    env->hflags & HF_CPL_MASK,
./tools/qemu-xen/target-i386/helper.c:                    (env->hflags >> HF_INHIBIT_IRQ_SHIFT) & 1,
./tools/qemu-xen/target-i386/helper.c:                    (env->a20_mask >> 20) & 1,
./tools/qemu-xen/target-i386/helper.c:                    (env->hflags >> HF_SMM_SHIFT) & 1,
./tools/qemu-xen/target-i386/helper.c:                    env->halted);
./tools/qemu-xen/target-i386/helper.c:                               &env->segs[i]);
./tools/qemu-xen/target-i386/helper.c:    cpu_x86_dump_seg_cache(env, f, cpu_fprintf, "LDT", &env->ldt);
./tools/qemu-xen/target-i386/helper.c:    cpu_x86_dump_seg_cache(env, f, cpu_fprintf, "TR", &env->tr);
./tools/qemu-xen/target-i386/helper.c:    if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/helper.c:                    env->gdt.base, env->gdt.limit);
./tools/qemu-xen/target-i386/helper.c:                    env->idt.base, env->idt.limit);
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->cr[0],
./tools/qemu-xen/target-i386/helper.c:                    env->cr[2],
./tools/qemu-xen/target-i386/helper.c:                    env->cr[3],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->cr[4]);
./tools/qemu-xen/target-i386/helper.c:            cpu_fprintf(f, "DR%d=%016" PRIx64 " ", i, env->dr[i]);
./tools/qemu-xen/target-i386/helper.c:                    env->dr[6], env->dr[7]);
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->gdt.base, env->gdt.limit);
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->idt.base, env->idt.limit);
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->cr[0],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->cr[2],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->cr[3],
./tools/qemu-xen/target-i386/helper.c:                    (uint32_t)env->cr[4]);
./tools/qemu-xen/target-i386/helper.c:            cpu_fprintf(f, "DR%d=" TARGET_FMT_lx " ", i, env->dr[i]);
./tools/qemu-xen/target-i386/helper.c:                    env->dr[6], env->dr[7]);
./tools/qemu-xen/target-i386/helper.c:        if ((unsigned)env->cc_op < CC_OP_NB)
./tools/qemu-xen/target-i386/helper.c:            snprintf(cc_op_name, sizeof(cc_op_name), "%s", cc_op_str[env->cc_op]);
./tools/qemu-xen/target-i386/helper.c:            snprintf(cc_op_name, sizeof(cc_op_name), "[%d]", env->cc_op);
./tools/qemu-xen/target-i386/helper.c:        if (env->hflags & HF_CS64_MASK) {
./tools/qemu-xen/target-i386/helper.c:                        env->cc_src, env->cc_dst,
./tools/qemu-xen/target-i386/helper.c:                        (uint32_t)env->cc_src, (uint32_t)env->cc_dst,
./tools/qemu-xen/target-i386/helper.c:    cpu_fprintf(f, "EFER=%016" PRIx64 "\n", env->efer);
./tools/qemu-xen/target-i386/helper.c:            fptag |= ((!env->fptags[i]) << i);
./tools/qemu-xen/target-i386/helper.c:                    env->fpuc,
./tools/qemu-xen/target-i386/helper.c:                    (env->fpus & ~0x3800) | (env->fpstt & 0x7) << 11,
./tools/qemu-xen/target-i386/helper.c:                    env->fpstt,
./tools/qemu-xen/target-i386/helper.c:                    env->mxcsr);
./tools/qemu-xen/target-i386/helper.c:            u.d = env->fpregs[i].d;
./tools/qemu-xen/target-i386/helper.c:        if (env->hflags & HF_CS64_MASK)
./tools/qemu-xen/target-i386/helper.c:                        env->xmm_regs[i].XMM_L(3),
./tools/qemu-xen/target-i386/helper.c:                        env->xmm_regs[i].XMM_L(2),
./tools/qemu-xen/target-i386/helper.c:                        env->xmm_regs[i].XMM_L(1),
./tools/qemu-xen/target-i386/helper.c:                        env->xmm_regs[i].XMM_L(0));
./tools/qemu-xen/target-i386/helper.c:        target_ulong base = env->segs[R_CS].base + env->eip;
./tools/qemu-xen/target-i386/helper.c:        target_ulong offs = MIN(env->eip, DUMP_CODE_BYTES_BACKWARD);
./tools/qemu-xen/target-i386/helper.c:    if (a20_state != ((env->a20_mask >> 20) & 1)) {
./tools/qemu-xen/target-i386/helper.c:        env->a20_mask = ~(1 << 20) | (a20_state << 20);
./tools/qemu-xen/target-i386/helper.c:        (env->cr[0] & (CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK))) {
./tools/qemu-xen/target-i386/helper.c:    if (!(env->cr[0] & CR0_PG_MASK) && (new_cr0 & CR0_PG_MASK) &&
./tools/qemu-xen/target-i386/helper.c:        (env->efer & MSR_EFER_LME)) {
./tools/qemu-xen/target-i386/helper.c:        if (!(env->cr[4] & CR4_PAE_MASK))
./tools/qemu-xen/target-i386/helper.c:        env->efer |= MSR_EFER_LMA;
./tools/qemu-xen/target-i386/helper.c:        env->hflags |= HF_LMA_MASK;
./tools/qemu-xen/target-i386/helper.c:    } else if ((env->cr[0] & CR0_PG_MASK) && !(new_cr0 & CR0_PG_MASK) &&
./tools/qemu-xen/target-i386/helper.c:               (env->efer & MSR_EFER_LMA)) {
./tools/qemu-xen/target-i386/helper.c:        env->efer &= ~MSR_EFER_LMA;
./tools/qemu-xen/target-i386/helper.c:        env->hflags &= ~(HF_LMA_MASK | HF_CS64_MASK);
./tools/qemu-xen/target-i386/helper.c:        env->eip &= 0xffffffff;
./tools/qemu-xen/target-i386/helper.c:    env->cr[0] = new_cr0 | CR0_ET_MASK;
./tools/qemu-xen/target-i386/helper.c:    pe_state = (env->cr[0] & CR0_PE_MASK);
./tools/qemu-xen/target-i386/helper.c:    env->hflags = (env->hflags & ~HF_PE_MASK) | (pe_state << HF_PE_SHIFT);
./tools/qemu-xen/target-i386/helper.c:    env->hflags |= ((pe_state ^ 1) << HF_ADDSEG_SHIFT);
./tools/qemu-xen/target-i386/helper.c:    env->hflags = (env->hflags & ~(HF_MP_MASK | HF_EM_MASK | HF_TS_MASK)) |
./tools/qemu-xen/target-i386/helper.c:    env->cr[3] = new_cr3;
./tools/qemu-xen/target-i386/helper.c:    if (env->cr[0] & CR0_PG_MASK) {
./tools/qemu-xen/target-i386/helper.c:    printf("CR4 update: CR4=%08x\n", (uint32_t)env->cr[4]);
./tools/qemu-xen/target-i386/helper.c:        (env->cr[4] & (CR4_PGE_MASK | CR4_PAE_MASK | CR4_PSE_MASK))) {
./tools/qemu-xen/target-i386/helper.c:    if (!(env->cpuid_features & CPUID_SSE))
./tools/qemu-xen/target-i386/helper.c:        env->hflags |= HF_OSFXSR_MASK;
./tools/qemu-xen/target-i386/helper.c:        env->hflags &= ~HF_OSFXSR_MASK;
./tools/qemu-xen/target-i386/helper.c:    env->cr[4] = new_cr4;
./tools/qemu-xen/target-i386/helper.c:    env->cr[2] = addr;
./tools/qemu-xen/target-i386/helper.c:    env->error_code = (is_write << PG_ERROR_W_BIT);
./tools/qemu-xen/target-i386/helper.c:    env->error_code |= PG_ERROR_U_MASK;
./tools/qemu-xen/target-i386/helper.c:    env->exception_index = EXCP0E_PAGE;
./tools/qemu-xen/target-i386/helper.c:           addr, is_write1, is_user, env->eip);
./tools/qemu-xen/target-i386/helper.c:    if (!(env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen/target-i386/helper.c:    if (env->cr[4] & CR4_PAE_MASK) {
./tools/qemu-xen/target-i386/helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/helper.c:                env->error_code = 0;
./tools/qemu-xen/target-i386/helper.c:                env->exception_index = EXCP0D_GPF;
./tools/qemu-xen/target-i386/helper.c:            pml4e_addr = ((env->cr[3] & ~0xfff) + (((addr >> 39) & 0x1ff) << 3)) &
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:            if (!(env->efer & MSR_EFER_NXE) && (pml4e & PG_NX_MASK)) {
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:            if (!(env->efer & MSR_EFER_NXE) && (pdpe & PG_NX_MASK)) {
./tools/qemu-xen/target-i386/helper.c:            pdpe_addr = ((env->cr[3] & ~0x1f) + ((addr >> 27) & 0x18)) &
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:            env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:        if (!(env->efer & MSR_EFER_NXE) && (pde & PG_NX_MASK)) {
./tools/qemu-xen/target-i386/helper.c:                if ((env->cr[0] & CR0_WP_MASK) &&
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:            if (!(env->efer & MSR_EFER_NXE) && (pte & PG_NX_MASK)) {
./tools/qemu-xen/target-i386/helper.c:                if ((env->cr[0] & CR0_WP_MASK) &&
./tools/qemu-xen/target-i386/helper.c:        pde_addr = ((env->cr[3] & ~0xfff) + ((addr >> 20) & 0xffc)) &
./tools/qemu-xen/target-i386/helper.c:            env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:        if ((pde & PG_PSE_MASK) && (env->cr[4] & CR4_PSE_MASK)) {
./tools/qemu-xen/target-i386/helper.c:                if ((env->cr[0] & CR0_WP_MASK) &&
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:                if ((env->cr[0] & CR0_WP_MASK) &&
./tools/qemu-xen/target-i386/helper.c:            if (!(env->cr[0] & CR0_WP_MASK) ||
./tools/qemu-xen/target-i386/helper.c:    pte = pte & env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:        (env->efer & MSR_EFER_NXE) &&
./tools/qemu-xen/target-i386/helper.c:        (env->cr[4] & CR4_PAE_MASK))
./tools/qemu-xen/target-i386/helper.c:    if (env->intercept_exceptions & (1 << EXCP0E_PAGE)) {
./tools/qemu-xen/target-i386/helper.c:        stq_phys(env->vm_vmcb + offsetof(struct vmcb, control.exit_info_2), 
./tools/qemu-xen/target-i386/helper.c:        env->cr[2] = addr;
./tools/qemu-xen/target-i386/helper.c:    env->error_code = error_code;
./tools/qemu-xen/target-i386/helper.c:    env->exception_index = EXCP0E_PAGE;
./tools/qemu-xen/target-i386/helper.c:    if (env->cr[4] & CR4_PAE_MASK) {
./tools/qemu-xen/target-i386/helper.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/target-i386/helper.c:            pml4e_addr = ((env->cr[3] & ~0xfff) + (((addr >> 39) & 0x1ff) << 3)) &
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:            pdpe_addr = ((env->cr[3] & ~0x1f) + ((addr >> 27) & 0x18)) &
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:            env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:                env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:        if (!(env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen/target-i386/helper.c:            pde_addr = ((env->cr[3] & ~0xfff) + ((addr >> 20) & 0xffc)) & env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:            if ((pde & PG_PSE_MASK) && (env->cr[4] & CR4_PSE_MASK)) {
./tools/qemu-xen/target-i386/helper.c:                pte_addr = ((pde & ~0xfff) + ((addr >> 10) & 0xffc)) & env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:        pte = pte & env->a20_mask;
./tools/qemu-xen/target-i386/helper.c:    switch (hw_breakpoint_type(env->dr[7], index)) {
./tools/qemu-xen/target-i386/helper.c:        if (hw_breakpoint_enabled(env->dr[7], index))
./tools/qemu-xen/target-i386/helper.c:            err = cpu_breakpoint_insert(env, env->dr[index], BP_CPU,
./tools/qemu-xen/target-i386/helper.c:                                        &env->cpu_breakpoint[index]);
./tools/qemu-xen/target-i386/helper.c:        err = cpu_watchpoint_insert(env, env->dr[index],
./tools/qemu-xen/target-i386/helper.c:                                    hw_breakpoint_len(env->dr[7], index),
./tools/qemu-xen/target-i386/helper.c:                                    type, &env->cpu_watchpoint[index]);
./tools/qemu-xen/target-i386/helper.c:        env->cpu_breakpoint[index] = NULL;
./tools/qemu-xen/target-i386/helper.c:    if (!env->cpu_breakpoint[index])
./tools/qemu-xen/target-i386/helper.c:    switch (hw_breakpoint_type(env->dr[7], index)) {
./tools/qemu-xen/target-i386/helper.c:        if (hw_breakpoint_enabled(env->dr[7], index))
./tools/qemu-xen/target-i386/helper.c:            cpu_breakpoint_remove_by_ref(env, env->cpu_breakpoint[index]);
./tools/qemu-xen/target-i386/helper.c:        cpu_watchpoint_remove_by_ref(env, env->cpu_watchpoint[index]);
./tools/qemu-xen/target-i386/helper.c:    dr6 = env->dr[6] & ~0xf;
./tools/qemu-xen/target-i386/helper.c:        type = hw_breakpoint_type(env->dr[7], reg);
./tools/qemu-xen/target-i386/helper.c:        if ((type == 0 && env->dr[reg] == env->eip) ||
./tools/qemu-xen/target-i386/helper.c:            ((type & 1) && env->cpu_watchpoint[reg] &&
./tools/qemu-xen/target-i386/helper.c:             (env->cpu_watchpoint[reg]->flags & BP_WATCHPOINT_HIT))) {
./tools/qemu-xen/target-i386/helper.c:            if (hw_breakpoint_enabled(env->dr[7], reg))
./tools/qemu-xen/target-i386/helper.c:        env->dr[6] = dr6;
./tools/qemu-xen/target-i386/helper.c:    if (env->watchpoint_hit) {
./tools/qemu-xen/target-i386/helper.c:        if (env->watchpoint_hit->flags & BP_CPU) {
./tools/qemu-xen/target-i386/helper.c:            env->watchpoint_hit = NULL;
./tools/qemu-xen/target-i386/helper.c:        QTAILQ_FOREACH(bp, &env->breakpoints, entry)
./tools/qemu-xen/target-i386/helper.c:            if (bp->pc == env->eip) {
./tools/qemu-xen/target-i386/helper.c:    uint64_t *banks = cenv->mce_banks + 4 * params->bank;
./tools/qemu-xen/target-i386/helper.c:        && (cenv->mcg_status & MCG_STATUS_MCIP)) {
./tools/qemu-xen/target-i386/helper.c:        if ((cenv->mcg_cap & MCG_CTL_P) && cenv->mcg_ctl != ~(uint64_t)0) {
./tools/qemu-xen/target-i386/helper.c:                           cenv->cpu_index);
./tools/qemu-xen/target-i386/helper.c:                           cenv->cpu_index, params->bank);
./tools/qemu-xen/target-i386/helper.c:        if ((cenv->mcg_status & MCG_STATUS_MCIP) ||
./tools/qemu-xen/target-i386/helper.c:            !(cenv->cr[4] & CR4_MCE_MASK)) {
./tools/qemu-xen/target-i386/helper.c:                           cenv->cpu_index);
./tools/qemu-xen/target-i386/helper.c:        cenv->mcg_status = params->mcg_status;
./tools/qemu-xen/target-i386/helper.c:    unsigned bank_num = cenv->mcg_cap & 0xff;
./tools/qemu-xen/target-i386/helper.c:    if (!cenv->mcg_cap) {
./tools/qemu-xen/target-i386/helper.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/target-i386/helper.c:    if (((cenv->cpuid_version >> 8) & 0xf) >= 6
./tools/qemu-xen/target-i386/helper.c:        && (cenv->cpuid_features & (CPUID_MCE | CPUID_MCA)) ==
./tools/qemu-xen/target-i386/helper.c:        cenv->mcg_cap = MCE_CAP_DEF | MCE_BANKS_DEF;
./tools/qemu-xen/target-i386/helper.c:        cenv->mcg_ctl = ~(uint64_t)0;
./tools/qemu-xen/target-i386/helper.c:            cenv->mce_banks[bank * 4] = ~(uint64_t)0;
./tools/qemu-xen/target-i386/helper.c:        dt = &env->ldt;
./tools/qemu-xen/target-i386/helper.c:        dt = &env->gdt;
./tools/qemu-xen/target-i386/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/target-i386/helper.c:    env->cpuid_apic_id = env->cpu_index;
./tools/qemu-xen/target-i386/helper.c:    int sipi = env->interrupt_request & CPU_INTERRUPT_SIPI;
./tools/qemu-xen/target-i386/helper.c:    uint64_t pat = env->pat;
./tools/qemu-xen/target-i386/helper.c:    env->interrupt_request = sipi;
./tools/qemu-xen/target-i386/helper.c:    env->pat = pat;
./tools/qemu-xen/target-i386/helper.c:    apic_init_reset(env->apic_state);
./tools/qemu-xen/target-i386/helper.c:    env->halted = !cpu_is_bsp(env);
./tools/qemu-xen/target-i386/helper.c:    apic_sipi(env->apic_state);
./tools/qemu-xen/cpus.c:        icount -= (env->icount_decr.u16.low + env->icount_extra);
./tools/qemu-xen/cpus.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/cpus.c:        fprintf(stderr, "CPU #%d:\n", env->cpu_index);
./tools/qemu-xen/cpus.c:    return !runstate_is_running() || env->stopped;
./tools/qemu-xen/cpus.c:    if (env->stop) {
./tools/qemu-xen/cpus.c:    if (env->stopped || !runstate_is_running()) {
./tools/qemu-xen/cpus.c:    if (env->stop || env->queued_work_first) {
./tools/qemu-xen/cpus.c:    if (env->stopped || !runstate_is_running()) {
./tools/qemu-xen/cpus.c:    if (!env->halted || qemu_cpu_has_work(env) ||
./tools/qemu-xen/cpus.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/cpus.c:    env->stopped = 1;
./tools/qemu-xen/cpus.c:    if (!env->queued_work_first) {
./tools/qemu-xen/cpus.c:        env->queued_work_first = &wi;
./tools/qemu-xen/cpus.c:        env->queued_work_last->next = &wi;
./tools/qemu-xen/cpus.c:    env->queued_work_last = &wi;
./tools/qemu-xen/cpus.c:    if (!env->queued_work_first) {
./tools/qemu-xen/cpus.c:    while ((wi = env->queued_work_first)) {
./tools/qemu-xen/cpus.c:        env->queued_work_first = wi->next;
./tools/qemu-xen/cpus.c:    env->queued_work_last = NULL;
./tools/qemu-xen/cpus.c:    if (env->stop) {
./tools/qemu-xen/cpus.c:        env->stop = 0;
./tools/qemu-xen/cpus.c:        env->stopped = 1;
./tools/qemu-xen/cpus.c:    env->thread_kicked = false;
./tools/qemu-xen/cpus.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/cpus.c:        qemu_cond_wait(env->halt_cond, &qemu_global_mutex);
./tools/qemu-xen/cpus.c:    qemu_thread_get_self(env->thread);
./tools/qemu-xen/cpus.c:    env->thread_id = qemu_get_thread_id();
./tools/qemu-xen/cpus.c:    env->created = 1;
./tools/qemu-xen/cpus.c:    qemu_thread_get_self(env->thread);
./tools/qemu-xen/cpus.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/cpus.c:        env->thread_id = qemu_get_thread_id();
./tools/qemu-xen/cpus.c:        env->created = 1;
./tools/qemu-xen/cpus.c:    err = pthread_kill(env->thread->thread, SIG_IPI);
./tools/qemu-xen/cpus.c:        SuspendThread(env->thread->thread);
./tools/qemu-xen/cpus.c:        ResumeThread(env->thread->thread);
./tools/qemu-xen/cpus.c:    qemu_cond_broadcast(env->halt_cond);
./tools/qemu-xen/cpus.c:    if (kvm_enabled() && !env->thread_kicked) {
./tools/qemu-xen/cpus.c:        env->thread_kicked = true;
./tools/qemu-xen/cpus.c:    if (!cpu_single_env->thread_kicked) {
./tools/qemu-xen/cpus.c:        cpu_single_env->thread_kicked = true;
./tools/qemu-xen/cpus.c:    return qemu_thread_is_self(env->thread);
./tools/qemu-xen/cpus.c:        if (!penv->stopped) {
./tools/qemu-xen/cpus.c:        penv = (CPUState *)penv->next_cpu;
./tools/qemu-xen/cpus.c:        penv->stop = 1;
./tools/qemu-xen/cpus.c:        penv = (CPUState *)penv->next_cpu;
./tools/qemu-xen/cpus.c:            penv = (CPUState *)penv->next_cpu;
./tools/qemu-xen/cpus.c:        penv->stop = 0;
./tools/qemu-xen/cpus.c:        penv->stopped = 0;
./tools/qemu-xen/cpus.c:        penv = (CPUState *)penv->next_cpu;
./tools/qemu-xen/cpus.c:        env->thread = g_malloc0(sizeof(QemuThread));
./tools/qemu-xen/cpus.c:        env->halt_cond = g_malloc0(sizeof(QemuCond));
./tools/qemu-xen/cpus.c:        qemu_cond_init(env->halt_cond);
./tools/qemu-xen/cpus.c:        tcg_halt_cond = env->halt_cond;
./tools/qemu-xen/cpus.c:        qemu_thread_create(env->thread, qemu_tcg_cpu_thread_fn, env);
./tools/qemu-xen/cpus.c:        while (env->created == 0) {
./tools/qemu-xen/cpus.c:        tcg_cpu_thread = env->thread;
./tools/qemu-xen/cpus.c:        env->thread = tcg_cpu_thread;
./tools/qemu-xen/cpus.c:        env->halt_cond = tcg_halt_cond;
./tools/qemu-xen/cpus.c:    env->thread = g_malloc0(sizeof(QemuThread));
./tools/qemu-xen/cpus.c:    env->halt_cond = g_malloc0(sizeof(QemuCond));
./tools/qemu-xen/cpus.c:    qemu_cond_init(env->halt_cond);
./tools/qemu-xen/cpus.c:    qemu_thread_create(env->thread, qemu_kvm_cpu_thread_fn, env);
./tools/qemu-xen/cpus.c:    while (env->created == 0) {
./tools/qemu-xen/cpus.c:    env->nr_cores = smp_cores;
./tools/qemu-xen/cpus.c:    env->nr_threads = smp_threads;
./tools/qemu-xen/cpus.c:    env->stopped = 1;
./tools/qemu-xen/cpus.c:        cpu_single_env->stop = 0;
./tools/qemu-xen/cpus.c:        cpu_single_env->stopped = 1;
./tools/qemu-xen/cpus.c:        qemu_icount -= (env->icount_decr.u16.low + env->icount_extra);
./tools/qemu-xen/cpus.c:        env->icount_decr.u16.low = 0;
./tools/qemu-xen/cpus.c:        env->icount_extra = 0;
./tools/qemu-xen/cpus.c:        env->icount_decr.u16.low = decr;
./tools/qemu-xen/cpus.c:        env->icount_extra = count;
./tools/qemu-xen/cpus.c:        qemu_icount -= (env->icount_decr.u16.low
./tools/qemu-xen/cpus.c:                        + env->icount_extra);
./tools/qemu-xen/cpus.c:        env->icount_decr.u32 = 0;
./tools/qemu-xen/cpus.c:        env->icount_extra = 0;
./tools/qemu-xen/cpus.c:                          (env->singlestep_enabled & SSTEP_NOTIMER) == 0);
./tools/qemu-xen/cpus.c:        } else if (env->stop || env->stopped) {
./tools/qemu-xen/cpus.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/cpus.c:            if (node_cpumask[i] & (1 << env->cpu_index)) {
./tools/qemu-xen/cpus.c:                env->numa_node = i;
./tools/qemu-xen/cpus.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/cpus.c:        info->value->CPU = env->cpu_index;
./tools/qemu-xen/cpus.c:        info->value->halted = env->halted;
./tools/qemu-xen/cpus.c:        info->value->thread_id = env->thread_id;
./tools/qemu-xen/cpus.c:        info->value->pc = env->eip + env->segs[R_CS].base;
./tools/qemu-xen/cpus.c:        info->value->nip = env->nip;
./tools/qemu-xen/cpus.c:        info->value->pc = env->pc;
./tools/qemu-xen/cpus.c:        info->value->npc = env->npc;
./tools/qemu-xen/cpus.c:        info->value->PC = env->active_tc.PC;
./tools/qemu-xen/block.c:    if (!bdrv->bdrv_co_readv) {
./tools/qemu-xen/block.c:        bdrv->bdrv_co_readv = bdrv_co_readv_em;
./tools/qemu-xen/block.c:        bdrv->bdrv_co_writev = bdrv_co_writev_em;
./tools/qemu-xen/block.c:        if (!bdrv->bdrv_aio_readv) {
./tools/qemu-xen/block.c:            bdrv->bdrv_aio_readv = bdrv_aio_readv_em;
./tools/qemu-xen/block.c:            bdrv->bdrv_aio_writev = bdrv_aio_writev_em;
./tools/qemu-xen/block.c:        if (!strcmp(drv->format_name, *p)) {
./tools/qemu-xen/block.c:    if (!drv->bdrv_create)
./tools/qemu-xen/block.c:    return drv->bdrv_create(filename, options);
./tools/qemu-xen/block.c:     * Thanks to the brain-dead persistent naming schemes on udev-
./tools/qemu-xen/block.c:    /* Do not attempt drv->bdrv_getlength() on scsi-generic devices */
./tools/qemu-xen/block.c:    if (drv->bdrv_getlength) {
./tools/qemu-xen/block.c:        int64_t length = drv->bdrv_getlength(bs);
./tools/qemu-xen/block.c:    trace_bdrv_open_common(bs, filename, flags, drv->format_name);
./tools/qemu-xen/block.c:    bs->opaque = g_malloc0(drv->instance_size);
./tools/qemu-xen/block.c:    if (drv->bdrv_file_open) {
./tools/qemu-xen/block.c:        ret = drv->bdrv_file_open(bs, filename, open_flags);
./tools/qemu-xen/block.c:            ret = drv->bdrv_open(bs, open_flags);
./tools/qemu-xen/block.c:        if (bs1->drv && bs1->drv->protocol_name)
./tools/qemu-xen/block.c:                drv->format_name);
./tools/qemu-xen/block.c:        bs->drv->bdrv_close(bs);
./tools/qemu-xen/block.c:    if (bs->drv->bdrv_check == NULL) {
./tools/qemu-xen/block.c:    return bs->drv->bdrv_check(bs, res);
./tools/qemu-xen/block.c:        if (drv->bdrv_is_allocated(bs, sector, COMMIT_BUF_SECTORS, &n)) {
./tools/qemu-xen/block.c:    if (drv->bdrv_make_empty) {
./tools/qemu-xen/block.c:        ret = drv->bdrv_make_empty(bs);
./tools/qemu-xen/block.c:    if (drv->bdrv_change_backing_file != NULL) {
./tools/qemu-xen/block.c:        return drv->bdrv_change_backing_file(bs, backing_file, backing_fmt);
./tools/qemu-xen/block.c:    return drv->bdrv_co_readv(bs, sector_num, nb_sectors, qiov);
./tools/qemu-xen/block.c:    ret = drv->bdrv_co_writev(bs, sector_num, nb_sectors, qiov);
./tools/qemu-xen/block.c:    if (!drv->bdrv_truncate)
./tools/qemu-xen/block.c:    ret = drv->bdrv_truncate(bs, offset);
./tools/qemu-xen/block.c:    if (drv->bdrv_get_allocated_file_size) {
./tools/qemu-xen/block.c:        return drv->bdrv_get_allocated_file_size(bs);
./tools/qemu-xen/block.c:        if (drv->bdrv_getlength) {
./tools/qemu-xen/block.c:            return drv->bdrv_getlength(bs);
./tools/qemu-xen/block.c:    } else if (!bs->drv || !bs->drv->bdrv_set_key) {
./tools/qemu-xen/block.c:    ret = bs->drv->bdrv_set_key(bs, key);
./tools/qemu-xen/block.c:        pstrcpy(buf, buf_size, bs->drv->format_name);
./tools/qemu-xen/block.c:        it(opaque, drv->format_name);
./tools/qemu-xen/block.c:    if (bs->drv->bdrv_has_zero_init) {
./tools/qemu-xen/block.c:        return bs->drv->bdrv_has_zero_init(bs);
./tools/qemu-xen/block.c:    if (!bs->drv->bdrv_is_allocated) {
./tools/qemu-xen/block.c:    return bs->drv->bdrv_is_allocated(bs, sector_num, nb_sectors, pnum);
./tools/qemu-xen/block.c:                              bdrv->device_name,
./tools/qemu-xen/block.c:            info->value->inserted->drv = g_strdup(bs->drv->format_name);
./tools/qemu-xen/block.c:    if (!drv->bdrv_write_compressed)
./tools/qemu-xen/block.c:    return drv->bdrv_write_compressed(bs, sector_num, buf, nb_sectors);
./tools/qemu-xen/block.c:    if (!drv->bdrv_get_info)
./tools/qemu-xen/block.c:    return drv->bdrv_get_info(bs, bdi);
./tools/qemu-xen/block.c:    if (drv->bdrv_save_vmstate)
./tools/qemu-xen/block.c:        return drv->bdrv_save_vmstate(bs, buf, pos, size);
./tools/qemu-xen/block.c:    if (drv->bdrv_load_vmstate)
./tools/qemu-xen/block.c:        return drv->bdrv_load_vmstate(bs, buf, pos, size);
./tools/qemu-xen/block.c:    if (!drv || !drv->bdrv_debug_event) {
./tools/qemu-xen/block.c:    return drv->bdrv_debug_event(bs, event);
./tools/qemu-xen/block.c:    if (!drv->bdrv_snapshot_create) {
./tools/qemu-xen/block.c:    if (drv->bdrv_snapshot_create)
./tools/qemu-xen/block.c:        return drv->bdrv_snapshot_create(bs, sn_info);
./tools/qemu-xen/block.c:    if (drv->bdrv_snapshot_goto)
./tools/qemu-xen/block.c:        return drv->bdrv_snapshot_goto(bs, snapshot_id);
./tools/qemu-xen/block.c:        drv->bdrv_close(bs);
./tools/qemu-xen/block.c:        open_ret = drv->bdrv_open(bs, bs->open_flags);
./tools/qemu-xen/block.c:    if (drv->bdrv_snapshot_delete)
./tools/qemu-xen/block.c:        return drv->bdrv_snapshot_delete(bs, snapshot_id);
./tools/qemu-xen/block.c:    if (drv->bdrv_snapshot_list)
./tools/qemu-xen/block.c:        return drv->bdrv_snapshot_list(bs, psn_info);
./tools/qemu-xen/block.c:    if (drv->bdrv_snapshot_load_tmp) {
./tools/qemu-xen/block.c:        return drv->bdrv_snapshot_load_tmp(bs, snapshot_name);
./tools/qemu-xen/block.c:        if (!merge && bs->drv->bdrv_merge_requests) {
./tools/qemu-xen/block.c:            merge = bs->drv->bdrv_merge_requests(bs, &reqs[outidx], &reqs[i]);
./tools/qemu-xen/block.c:        if (reqs[outidx].qiov->niov + reqs[i].qiov->niov + 1 > IOV_MAX) {
./tools/qemu-xen/block.c:                reqs[outidx].qiov->niov + reqs[i].qiov->niov + 1);
./tools/qemu-xen/block.c:            qemu_iovec_concat(qiov, reqs[i].qiov, reqs[i].qiov->size);
./tools/qemu-xen/block.c:            reqs[outidx].nb_sectors = qiov->size >> 9;
./tools/qemu-xen/block.c:        qemu_iovec_from_buffer(acb->qiov, acb->bounce, acb->qiov->size);
./tools/qemu-xen/block.c:    acb->bounce = qemu_blockalign(bs, qiov->size);
./tools/qemu-xen/block.c:        acb->ret = bs->drv->bdrv_write(bs, sector_num, acb->bounce, nb_sectors);
./tools/qemu-xen/block.c:        acb->ret = bs->drv->bdrv_read(bs, sector_num, acb->bounce, nb_sectors);
./tools/qemu-xen/block.c:        acb = bs->drv->bdrv_aio_writev(bs, sector_num, iov, nb_sectors,
./tools/qemu-xen/block.c:        acb = bs->drv->bdrv_aio_readv(bs, sector_num, iov, nb_sectors,
./tools/qemu-xen/block.c:    if (bs->drv->bdrv_co_flush_to_os) {
./tools/qemu-xen/block.c:        ret = bs->drv->bdrv_co_flush_to_os(bs);
./tools/qemu-xen/block.c:    if (bs->drv->bdrv_co_flush_to_disk) {
./tools/qemu-xen/block.c:        return bs->drv->bdrv_co_flush_to_disk(bs);
./tools/qemu-xen/block.c:    } else if (bs->drv->bdrv_aio_flush) {
./tools/qemu-xen/block.c:        acb = bs->drv->bdrv_aio_flush(bs, bdrv_co_io_em_complete, &co);
./tools/qemu-xen/block.c:    if (bs->drv && bs->drv->bdrv_invalidate_cache) {
./tools/qemu-xen/block.c:        bs->drv->bdrv_invalidate_cache(bs);
./tools/qemu-xen/block.c:    } else if (bs->drv->bdrv_co_discard) {
./tools/qemu-xen/block.c:        return bs->drv->bdrv_co_discard(bs, sector_num, nb_sectors);
./tools/qemu-xen/block.c:    } else if (bs->drv->bdrv_aio_discard) {
./tools/qemu-xen/block.c:        acb = bs->drv->bdrv_aio_discard(bs, sector_num, nb_sectors,
./tools/qemu-xen/block.c:    if (!drv->bdrv_is_inserted)
./tools/qemu-xen/block.c:    return drv->bdrv_is_inserted(bs);
./tools/qemu-xen/block.c:    if (drv && drv->bdrv_media_changed) {
./tools/qemu-xen/block.c:        return drv->bdrv_media_changed(bs);
./tools/qemu-xen/block.c:    if (drv && drv->bdrv_eject) {
./tools/qemu-xen/block.c:        drv->bdrv_eject(bs, eject_flag);
./tools/qemu-xen/block.c:    if (drv && drv->bdrv_lock_medium) {
./tools/qemu-xen/block.c:        drv->bdrv_lock_medium(bs, locked);
./tools/qemu-xen/block.c:    if (drv && drv->bdrv_ioctl)
./tools/qemu-xen/block.c:        return drv->bdrv_ioctl(bs, req, buf);
./tools/qemu-xen/block.c:    if (drv && drv->bdrv_aio_ioctl)
./tools/qemu-xen/block.c:        return drv->bdrv_aio_ioctl(bs, req, buf, cb, opaque);
./tools/qemu-xen/block.c:                                              drv->create_options);
./tools/qemu-xen/block.c:                                              proto_drv->create_options);
./tools/qemu-xen/m68k-semi.c:    args = env->dregs[1];
./tools/qemu-xen/m68k-semi.c:    args = env->dregs[1];
./tools/qemu-xen/m68k-semi.c:        gdb_exit(env, env->dregs[0]);
./tools/qemu-xen/m68k-semi.c:        exit(env->dregs[0]);
./tools/qemu-xen/m68k-semi.c:        TaskState *ts = env->opaque;
./tools/qemu-xen/m68k-semi.c:        env->dregs[1] = ts->heap_limit;
./tools/qemu-xen/m68k-semi.c:        env->aregs[7] = ts->stack_base;
./tools/qemu-xen/m68k-semi.c:        env->dregs[1] = ram_size;
./tools/qemu-xen/m68k-semi.c:        env->aregs[7] = ram_size;
./tools/qemu-xen/i386-dis.c:  bfd_vma start = priv->insn_start + (priv->max_fetched - priv->the_buffer);
./tools/qemu-xen/i386-dis.c:  if (addr <= priv->the_buffer + MAX_MNEM_SIZE)
./tools/qemu-xen/i386-dis.c:					priv->max_fetched,
./tools/qemu-xen/i386-dis.c:					addr - priv->max_fetched,
./tools/qemu-xen/i386-dis.c:      if (priv->max_fetched == priv->the_buffer)
./tools/qemu-xen/i386-dis.c:      longjmp (priv->bailout, 1);
./tools/qemu-xen/i386-dis.c:    priv->max_fetched = addr;
./tools/qemu-xen/linux-aio.c:    return (ssize_t)(((uint64_t)ev->res2 << 32) | ev->res);
./tools/qemu-xen/linux-aio.c:                    laiocb->qiov->size - ret, ret);
./tools/qemu-xen/linux-aio.c:        io_prep_pwritev(iocbs, fd, qiov->iov, qiov->niov, offset);
./tools/qemu-xen/linux-aio.c:        io_prep_preadv(iocbs, fd, qiov->iov, qiov->niov, offset);
./tools/qemu-xen/m68k-dis.c:  bfd_vma start = priv->insn_start + (priv->max_fetched - priv->the_buffer);
./tools/qemu-xen/m68k-dis.c:				      priv->max_fetched,
./tools/qemu-xen/m68k-dis.c:				      addr - priv->max_fetched,
./tools/qemu-xen/m68k-dis.c:      longjmp (priv->bailout, 1);
./tools/qemu-xen/m68k-dis.c:    priv->max_fetched = addr;
./tools/qemu-xen/m68k-dis.c:  bfd_byte *buffer = priv->the_buffer;
./tools/qemu-xen/xtensa-semi.c:    uint32_t *regs = env->regs;
./tools/qemu-xen/qemu-io.c:    acb = bdrv_aio_readv(bs, offset >> 9, qiov, qiov->size >> 9,
./tools/qemu-xen/qemu-io.c:    *total = qiov->size;
./tools/qemu-xen/qemu-io.c:    acb = bdrv_aio_writev(bs, offset >> 9, qiov, qiov->size >> 9,
./tools/qemu-xen/qemu-io.c:    *total = qiov->size;
./tools/qemu-xen/qemu-io.c:        *total += reqs[i].qiov->size;
./tools/qemu-xen/qemu-io.c:        reqs[i].nb_sectors = reqs[i].qiov->size >> 9;
./tools/qemu-xen/qemu-io.c:    if (bs->drv && bs->drv->format_name) {
./tools/qemu-xen/qemu-io.c:        printf("format name: %s\n", bs->drv->format_name);
./tools/qemu-xen/qemu-io.c:    if (bs->drv && bs->drv->protocol_name) {
./tools/qemu-xen/qemu-io.c:        printf("format name: %s\n", bs->drv->protocol_name);
./tools/qemu-xen/target-sparc/machine.c:    // if env->cwp == env->nwindows - 1, this will set the ins of the last
./tools/qemu-xen/target-sparc/machine.c:    cpu_set_cwp(env, env->cwp);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_betls(f, &env->gregs[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->nwindows);
./tools/qemu-xen/target-sparc/machine.c:    for(i = 0; i < env->nwindows * 16; i++)
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_betls(f, &env->regbase[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be32(f, env->fpr[i].l.upper);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be32(f, env->fpr[i].l.lower);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_betls(f, &env->pc);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_betls(f, &env->npc);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_betls(f, &env->y);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_betls(f, &env->fsr);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_betls(f, &env->tbr);
./tools/qemu-xen/target-sparc/machine.c:    tmp = env->interrupt_index;
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->pil_in);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->wim);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be32s(f, &env->mmuregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->mxccdata[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->mxccregs[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->mmubpctrv);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->mmubpctrc);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->mmubpctrs);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->mmubpaction);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->mmubpregs[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->lsu);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->immuregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->dmmuregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->itlb[i].tag);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->itlb[i].tte);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->dtlb[i].tag);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->dtlb[i].tte);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->mmu_version);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->ts[i].tpc);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->ts[i].tnpc);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->ts[i].tstate);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be32s(f, &env->ts[i].tt);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->xcc);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->asi);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->pstate);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->tl);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->cansave);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->canrestore);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->otherwin);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->wstate);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->cleanwin);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->agregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->bgregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->igregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->mgregs[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->fprs);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->tick_cmpr);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->stick_cmpr);
./tools/qemu-xen/target-sparc/machine.c:    cpu_put_timer(f, env->tick);
./tools/qemu-xen/target-sparc/machine.c:    cpu_put_timer(f, env->stick);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->gsr);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be32s(f, &env->gl);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->hpstate);
./tools/qemu-xen/target-sparc/machine.c:        qemu_put_be64s(f, &env->htstate[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->hintp);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->htba);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->hver);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->hstick_cmpr);
./tools/qemu-xen/target-sparc/machine.c:    qemu_put_be64s(f, &env->ssr);
./tools/qemu-xen/target-sparc/machine.c:    cpu_put_timer(f, env->hstick);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_betls(f, &env->gregs[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->nwindows);
./tools/qemu-xen/target-sparc/machine.c:    for(i = 0; i < env->nwindows * 16; i++)
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_betls(f, &env->regbase[i]);
./tools/qemu-xen/target-sparc/machine.c:        env->fpr[i].l.upper = qemu_get_be32(f);
./tools/qemu-xen/target-sparc/machine.c:        env->fpr[i].l.lower = qemu_get_be32(f);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_betls(f, &env->pc);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_betls(f, &env->npc);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_betls(f, &env->y);
./tools/qemu-xen/target-sparc/machine.c:    env->cwp = 0; /* needed to ensure that the wrapping registers are
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_betls(f, &env->fsr);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_betls(f, &env->tbr);
./tools/qemu-xen/target-sparc/machine.c:    env->interrupt_index = tmp;
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->pil_in);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->wim);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be32s(f, &env->mmuregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->mxccdata[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->mxccregs[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->mmubpctrv);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->mmubpctrc);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->mmubpctrs);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->mmubpaction);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->mmubpregs[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->lsu);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->immuregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->dmmuregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->itlb[i].tag);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->itlb[i].tte);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->dtlb[i].tag);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->dtlb[i].tte);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->mmu_version);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->ts[i].tpc);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->ts[i].tnpc);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->ts[i].tstate);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be32s(f, &env->ts[i].tt);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->xcc);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->asi);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->pstate);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->tl);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->cansave);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->canrestore);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->otherwin);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->wstate);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->cleanwin);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->agregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->bgregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->igregs[i]);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->mgregs[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->fprs);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->tick_cmpr);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->stick_cmpr);
./tools/qemu-xen/target-sparc/machine.c:    cpu_get_timer(f, env->tick);
./tools/qemu-xen/target-sparc/machine.c:    cpu_get_timer(f, env->stick);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->gsr);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be32s(f, &env->gl);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->hpstate);
./tools/qemu-xen/target-sparc/machine.c:        qemu_get_be64s(f, &env->htstate[i]);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->hintp);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->htba);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->hver);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->hstick_cmpr);
./tools/qemu-xen/target-sparc/machine.c:    qemu_get_be64s(f, &env->ssr);
./tools/qemu-xen/target-sparc/machine.c:    cpu_get_timer(f, env->hstick);
./tools/qemu-xen/target-sparc/translate.c:    if (!(env->y & 1))
./tools/qemu-xen/target-sparc/translate.c:    // env->y = (b2 << 31) | (env->y >> 1);
./tools/qemu-xen/target-sparc/translate.c:    /* load env->tl into r_tl */
./tools/qemu-xen/target-sparc/translate.c:    /* calculate offset to current trap state from env->ts, reuse r_tl */
./tools/qemu-xen/target-sparc/translate.c:    /* tsptr = env->ts[env->tl & MAXTL_MASK] */
./tools/qemu-xen/target-sparc/translate.c:    dc->def = env->def;
./tools/qemu-xen/target-sparc/translate.c:    dc->singlestep = (env->singlestep_enabled || singlestep);
./tools/qemu-xen/target-sparc/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-sparc/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-sparc/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-sparc/translate.c:        if (env->cond) {
./tools/qemu-xen/target-sparc/translate.c:            env->npc = gen_opc_jump_pc[0];
./tools/qemu-xen/target-sparc/translate.c:            env->npc = gen_opc_jump_pc[1];
./tools/qemu-xen/target-sparc/translate.c:        env->npc = npc;
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->cwp == env->nwindows - 1) {
./tools/qemu-xen/target-sparc/win_helper.c:        memcpy32(env->regbase, env->regbase + env->nwindows * 16);
./tools/qemu-xen/target-sparc/win_helper.c:    env->cwp = new_cwp;
./tools/qemu-xen/target-sparc/win_helper.c:    if (new_cwp == env->nwindows - 1) {
./tools/qemu-xen/target-sparc/win_helper.c:        memcpy32(env->regbase + env->nwindows * 16, env->regbase);
./tools/qemu-xen/target-sparc/win_helper.c:    env->regwptr = env->regbase + (new_cwp * 16);
./tools/qemu-xen/target-sparc/win_helper.c:    return env->version | (env->psr & PSR_ICC) |
./tools/qemu-xen/target-sparc/win_helper.c:        (env->psref ? PSR_EF : 0) |
./tools/qemu-xen/target-sparc/win_helper.c:        (env->psrpil << 8) |
./tools/qemu-xen/target-sparc/win_helper.c:        (env->psrs ? PSR_S : 0) |
./tools/qemu-xen/target-sparc/win_helper.c:        (env->psrps ? PSR_PS : 0) |
./tools/qemu-xen/target-sparc/win_helper.c:        (env->psret ? PSR_ET : 0) | env->cwp;
./tools/qemu-xen/target-sparc/win_helper.c:    return env->psr & PSR_ICC;
./tools/qemu-xen/target-sparc/win_helper.c:    env->psr = val & PSR_ICC;
./tools/qemu-xen/target-sparc/win_helper.c:    env->psref = (val & PSR_EF) ? 1 : 0;
./tools/qemu-xen/target-sparc/win_helper.c:    env->psrpil = (val & PSR_PIL) >> 8;
./tools/qemu-xen/target-sparc/win_helper.c:    env->psrs = (val & PSR_S) ? 1 : 0;
./tools/qemu-xen/target-sparc/win_helper.c:    env->psrps = (val & PSR_PS) ? 1 : 0;
./tools/qemu-xen/target-sparc/win_helper.c:    env->psret = (val & PSR_ET) ? 1 : 0;
./tools/qemu-xen/target-sparc/win_helper.c:    env->cc_op = CC_OP_FLAGS;
./tools/qemu-xen/target-sparc/win_helper.c:    if (unlikely(cwp >= env->nwindows)) {
./tools/qemu-xen/target-sparc/win_helper.c:        cwp -= env->nwindows;
./tools/qemu-xen/target-sparc/win_helper.c:        cwp += env->nwindows;
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->psret == 1) {
./tools/qemu-xen/target-sparc/win_helper.c:    env->psret = 1;
./tools/qemu-xen/target-sparc/win_helper.c:    cwp = cpu_cwp_inc(env, env->cwp + 1) ;
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->wim & (1 << cwp)) {
./tools/qemu-xen/target-sparc/win_helper.c:    env->psrs = env->psrps;
./tools/qemu-xen/target-sparc/win_helper.c:    cwp = cpu_cwp_dec(env, env->cwp - 1);
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->wim & (1 << cwp)) {
./tools/qemu-xen/target-sparc/win_helper.c:    cwp = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->wim & (1 << cwp)) {
./tools/qemu-xen/target-sparc/win_helper.c:    if ((new_psr & PSR_CWP) >= env->nwindows) {
./tools/qemu-xen/target-sparc/win_helper.c:    cwp = cpu_cwp_dec(env, env->cwp - 1);
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->cansave == 0) {
./tools/qemu-xen/target-sparc/win_helper.c:        helper_raise_exception(env, TT_SPILL | (env->otherwin != 0 ?
./tools/qemu-xen/target-sparc/win_helper.c:                                                 ((env->wstate & 0x38) >> 1)) :
./tools/qemu-xen/target-sparc/win_helper.c:                                                ((env->wstate & 0x7) << 2)));
./tools/qemu-xen/target-sparc/win_helper.c:        if (env->cleanwin - env->canrestore == 0) {
./tools/qemu-xen/target-sparc/win_helper.c:            env->cansave--;
./tools/qemu-xen/target-sparc/win_helper.c:            env->canrestore++;
./tools/qemu-xen/target-sparc/win_helper.c:    cwp = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->canrestore == 0) {
./tools/qemu-xen/target-sparc/win_helper.c:        helper_raise_exception(env, TT_FILL | (env->otherwin != 0 ?
./tools/qemu-xen/target-sparc/win_helper.c:                                                ((env->wstate & 0x38) >> 1)) :
./tools/qemu-xen/target-sparc/win_helper.c:                                               ((env->wstate & 0x7) << 2)));
./tools/qemu-xen/target-sparc/win_helper.c:        env->cansave++;
./tools/qemu-xen/target-sparc/win_helper.c:        env->canrestore--;
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->cansave != env->nwindows - 2) {
./tools/qemu-xen/target-sparc/win_helper.c:        helper_raise_exception(env, TT_SPILL | (env->otherwin != 0 ?
./tools/qemu-xen/target-sparc/win_helper.c:                                                 ((env->wstate & 0x38) >> 1)) :
./tools/qemu-xen/target-sparc/win_helper.c:                                                ((env->wstate & 0x7) << 2)));
./tools/qemu-xen/target-sparc/win_helper.c:    env->cansave++;
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->otherwin == 0) {
./tools/qemu-xen/target-sparc/win_helper.c:        env->canrestore--;
./tools/qemu-xen/target-sparc/win_helper.c:        env->otherwin--;
./tools/qemu-xen/target-sparc/win_helper.c:    env->canrestore++;
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->cleanwin < env->nwindows - 1) {
./tools/qemu-xen/target-sparc/win_helper.c:        env->cleanwin++;
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->otherwin == 0) {
./tools/qemu-xen/target-sparc/win_helper.c:        env->cansave--;
./tools/qemu-xen/target-sparc/win_helper.c:        env->otherwin--;
./tools/qemu-xen/target-sparc/win_helper.c:    return ((env->xcc >> 20) << 4) | ((psr & PSR_ICC) >> 20);
./tools/qemu-xen/target-sparc/win_helper.c:    env->xcc = (val >> 4) << 20;
./tools/qemu-xen/target-sparc/win_helper.c:    env->psr = (val & 0xf) << 20;
./tools/qemu-xen/target-sparc/win_helper.c:    return env->nwindows - 1 - env->cwp;
./tools/qemu-xen/target-sparc/win_helper.c:    if (unlikely(cwp >= env->nwindows || cwp < 0)) {
./tools/qemu-xen/target-sparc/win_helper.c:        cwp %= env->nwindows;
./tools/qemu-xen/target-sparc/win_helper.c:    cpu_set_cwp(env, env->nwindows - 1 - cwp);
./tools/qemu-xen/target-sparc/win_helper.c:        return env->bgregs;
./tools/qemu-xen/target-sparc/win_helper.c:        return env->agregs;
./tools/qemu-xen/target-sparc/win_helper.c:        return env->mgregs;
./tools/qemu-xen/target-sparc/win_helper.c:        return env->igregs;
./tools/qemu-xen/target-sparc/win_helper.c:    if (env->def->features & CPU_FEATURE_GL) {
./tools/qemu-xen/target-sparc/win_helper.c:    pstate_regs = env->pstate & 0xc01;
./tools/qemu-xen/target-sparc/win_helper.c:        memcpy32(dst, env->gregs);
./tools/qemu-xen/target-sparc/win_helper.c:        memcpy32(env->gregs, src);
./tools/qemu-xen/target-sparc/win_helper.c:    env->pstate = new_pstate;
./tools/qemu-xen/target-sparc/win_helper.c:    trace_win_helper_wrpil(env->psrpil, (uint32_t)new_pil);
./tools/qemu-xen/target-sparc/win_helper.c:    env->psrpil = new_pil;
./tools/qemu-xen/target-sparc/win_helper.c:    env->pc = tsptr->tnpc;
./tools/qemu-xen/target-sparc/win_helper.c:    env->npc = tsptr->tnpc + 4;
./tools/qemu-xen/target-sparc/win_helper.c:    env->asi = (tsptr->tstate >> 24) & 0xff;
./tools/qemu-xen/target-sparc/win_helper.c:    env->tl--;
./tools/qemu-xen/target-sparc/win_helper.c:    trace_win_helper_done(env->tl);
./tools/qemu-xen/target-sparc/win_helper.c:    env->pc = tsptr->tpc;
./tools/qemu-xen/target-sparc/win_helper.c:    env->npc = tsptr->tnpc;
./tools/qemu-xen/target-sparc/win_helper.c:    env->asi = (tsptr->tstate >> 24) & 0xff;
./tools/qemu-xen/target-sparc/win_helper.c:    env->tl--;
./tools/qemu-xen/target-sparc/win_helper.c:    trace_win_helper_retry(env->tl);
./tools/qemu-xen/target-sparc/mmu_helper.c:    if ((env->mmuregs[0] & MMU_E) == 0) { /* MMU disabled */
./tools/qemu-xen/target-sparc/mmu_helper.c:        if (rw == 2 && (env->mmuregs[0] & env->def->mmu_bm)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            *physical = env->prom_addr | (address & 0x7ffffULL);
./tools/qemu-xen/target-sparc/mmu_helper.c:    pde_ptr = (env->mmuregs[1] << 4) + (env->mmuregs[2] << 2);
./tools/qemu-xen/target-sparc/mmu_helper.c:    if (error_code && !((env->mmuregs[0] & MMU_NF) && is_user)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:    if (env->mmuregs[3]) { /* Fault status register */
./tools/qemu-xen/target-sparc/mmu_helper.c:        env->mmuregs[3] = 1; /* overflow (not read before another fault) */
./tools/qemu-xen/target-sparc/mmu_helper.c:    env->mmuregs[3] |= (access_index << 5) | error_code | 2;
./tools/qemu-xen/target-sparc/mmu_helper.c:    env->mmuregs[4] = address; /* Fault address register */
./tools/qemu-xen/target-sparc/mmu_helper.c:    if ((env->mmuregs[0] & MMU_NF) || env->psret == 0)  {
./tools/qemu-xen/target-sparc/mmu_helper.c:            env->exception_index = TT_TFAULT;
./tools/qemu-xen/target-sparc/mmu_helper.c:            env->exception_index = TT_DFAULT;
./tools/qemu-xen/target-sparc/mmu_helper.c:    pde_ptr = (target_phys_addr_t)(env->mmuregs[1] << 4) +
./tools/qemu-xen/target-sparc/mmu_helper.c:        (env->mmuregs[2] << 2);
./tools/qemu-xen/target-sparc/mmu_helper.c:    pde_ptr = (env->mmuregs[1] << 4) + (env->mmuregs[2] << 2);
./tools/qemu-xen/target-sparc/mmu_helper.c:                   (target_phys_addr_t)env->mmuregs[1] << 4, env->mmuregs[2]);
./tools/qemu-xen/target-sparc/mmu_helper.c:    int cwp = env->cwp;
./tools/qemu-xen/target-sparc/mmu_helper.c:        for (i = 0; i < env->nwindows; i++) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            target_ulong fp = env->regbase[cwp * 16 + 22];
./tools/qemu-xen/target-sparc/mmu_helper.c:            if (env->wim & (1 << cwp)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                u.v = cpu_to_be32(env->regbase[reg]);
./tools/qemu-xen/target-sparc/mmu_helper.c:    if ((env->lsu & DMMU_E) == 0) { /* DMMU disabled */
./tools/qemu-xen/target-sparc/mmu_helper.c:        context = env->dmmu.mmu_primary_context & 0x1fff;
./tools/qemu-xen/target-sparc/mmu_helper.c:        context = env->dmmu.mmu_secondary_context & 0x1fff;
./tools/qemu-xen/target-sparc/mmu_helper.c:        if (ultrasparc_tag_match(&env->dtlb[i], address, context, physical)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            if (TTE_IS_PRIV(env->dtlb[i].tte) && is_user) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                trace_mmu_helper_dfault(address, context, mmu_idx, env->tl);
./tools/qemu-xen/target-sparc/mmu_helper.c:                if (TTE_IS_SIDEEFFECT(env->dtlb[i].tte)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                if (TTE_IS_NFO(env->dtlb[i].tte)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                env->exception_index = TT_DFAULT;
./tools/qemu-xen/target-sparc/mmu_helper.c:            } else if (!TTE_IS_W_OK(env->dtlb[i].tte) && (rw == 1)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                env->exception_index = TT_DPROT;
./tools/qemu-xen/target-sparc/mmu_helper.c:                trace_mmu_helper_dprot(address, context, mmu_idx, env->tl);
./tools/qemu-xen/target-sparc/mmu_helper.c:                if (TTE_IS_W_OK(env->dtlb[i].tte)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                TTE_SET_USED(env->dtlb[i].tte);
./tools/qemu-xen/target-sparc/mmu_helper.c:            if (env->dmmu.sfsr & SFSR_VALID_BIT) { /* Fault status register */
./tools/qemu-xen/target-sparc/mmu_helper.c:            if (env->pstate & PS_PRIV) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            env->dmmu.sfsr = sfsr | SFSR_VALID_BIT;
./tools/qemu-xen/target-sparc/mmu_helper.c:            env->dmmu.sfar = address; /* Fault address register */
./tools/qemu-xen/target-sparc/mmu_helper.c:            env->dmmu.tag_access = (address & ~0x1fffULL) | context;
./tools/qemu-xen/target-sparc/mmu_helper.c:    env->dmmu.tag_access = (address & ~0x1fffULL) | context;
./tools/qemu-xen/target-sparc/mmu_helper.c:    env->exception_index = TT_DMISS;
./tools/qemu-xen/target-sparc/mmu_helper.c:    if ((env->lsu & IMMU_E) == 0 || (env->pstate & PS_RED) != 0) {
./tools/qemu-xen/target-sparc/mmu_helper.c:    if (env->tl == 0) {
./tools/qemu-xen/target-sparc/mmu_helper.c:        context = env->dmmu.mmu_primary_context & 0x1fff;
./tools/qemu-xen/target-sparc/mmu_helper.c:        if (ultrasparc_tag_match(&env->itlb[i],
./tools/qemu-xen/target-sparc/mmu_helper.c:            if (TTE_IS_PRIV(env->itlb[i].tte) && is_user) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                if (env->immu.sfsr & SFSR_VALID_BIT) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                    env->immu.sfsr = SFSR_OW_BIT; /* overflow (not read before
./tools/qemu-xen/target-sparc/mmu_helper.c:                    env->immu.sfsr = 0;
./tools/qemu-xen/target-sparc/mmu_helper.c:                if (env->pstate & PS_PRIV) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                    env->immu.sfsr |= SFSR_PR_BIT;
./tools/qemu-xen/target-sparc/mmu_helper.c:                if (env->tl > 0) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                    env->immu.sfsr |= SFSR_CT_NUCLEUS;
./tools/qemu-xen/target-sparc/mmu_helper.c:                env->immu.sfsr |= SFSR_FT_PRIV_BIT | SFSR_VALID_BIT;
./tools/qemu-xen/target-sparc/mmu_helper.c:                env->exception_index = TT_TFAULT;
./tools/qemu-xen/target-sparc/mmu_helper.c:                env->immu.tag_access = (address & ~0x1fffULL) | context;
./tools/qemu-xen/target-sparc/mmu_helper.c:            TTE_SET_USED(env->itlb[i].tte);
./tools/qemu-xen/target-sparc/mmu_helper.c:    env->immu.tag_access = (address & ~0x1fffULL) | context;
./tools/qemu-xen/target-sparc/mmu_helper.c:    env->exception_index = TT_TMISS;
./tools/qemu-xen/target-sparc/mmu_helper.c:    if (env->tl > 0 && mmu_idx != MMU_NUCLEUS_IDX) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            trace_mmu_helper_get_phys_addr_code(env->tl, mmu_idx,
./tools/qemu-xen/target-sparc/mmu_helper.c:                                                env->dmmu.mmu_primary_context,
./tools/qemu-xen/target-sparc/mmu_helper.c:                                                env->dmmu.mmu_secondary_context,
./tools/qemu-xen/target-sparc/mmu_helper.c:            trace_mmu_helper_get_phys_addr_data(env->tl, mmu_idx,
./tools/qemu-xen/target-sparc/mmu_helper.c:                                                env->dmmu.mmu_primary_context,
./tools/qemu-xen/target-sparc/mmu_helper.c:                                                env->dmmu.mmu_secondary_context,
./tools/qemu-xen/target-sparc/mmu_helper.c:        trace_mmu_helper_mmu_fault(address, paddr, mmu_idx, env->tl,
./tools/qemu-xen/target-sparc/mmu_helper.c:                                   env->dmmu.mmu_primary_context,
./tools/qemu-xen/target-sparc/mmu_helper.c:                                   env->dmmu.mmu_secondary_context);
./tools/qemu-xen/target-sparc/mmu_helper.c:                   env->dmmu.mmu_primary_context,
./tools/qemu-xen/target-sparc/mmu_helper.c:                   env->dmmu.mmu_secondary_context);
./tools/qemu-xen/target-sparc/mmu_helper.c:    if ((env->lsu & DMMU_E) == 0) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            switch (TTE_PGSIZE(env->dtlb[i].tte)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            if (TTE_IS_VALID(env->dtlb[i].tte)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                               env->dtlb[i].tag & (uint64_t)~0x1fffULL,
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_PA(env->dtlb[i].tte),
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_IS_PRIV(env->dtlb[i].tte) ? "priv" : "user",
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_IS_W_OK(env->dtlb[i].tte) ? "RW" : "RO",
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_IS_LOCKED(env->dtlb[i].tte) ?
./tools/qemu-xen/target-sparc/mmu_helper.c:                               env->dtlb[i].tag & (uint64_t)0x1fffULL,
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_IS_GLOBAL(env->dtlb[i].tte) ?
./tools/qemu-xen/target-sparc/mmu_helper.c:    if ((env->lsu & IMMU_E) == 0) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            switch (TTE_PGSIZE(env->itlb[i].tte)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:            if (TTE_IS_VALID(env->itlb[i].tte)) {
./tools/qemu-xen/target-sparc/mmu_helper.c:                               env->itlb[i].tag & (uint64_t)~0x1fffULL,
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_PA(env->itlb[i].tte),
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_IS_PRIV(env->itlb[i].tte) ? "priv" : "user",
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_IS_LOCKED(env->itlb[i].tte) ?
./tools/qemu-xen/target-sparc/mmu_helper.c:                               env->itlb[i].tag & (uint64_t)0x1fffULL,
./tools/qemu-xen/target-sparc/mmu_helper.c:                               TTE_IS_GLOBAL(env->itlb[i].tte) ?
./tools/qemu-xen/target-sparc/op_helper.c:           "\n", addr, env->pc);
./tools/qemu-xen/target-sparc/ldst_helper.c:#define QT0 (env->qt0)
./tools/qemu-xen/target-sparc/ldst_helper.c:#define QT1 (env->qt1)
./tools/qemu-xen/target-sparc/ldst_helper.c:               "\n", addr, env->pc);
./tools/qemu-xen/target-sparc/ldst_helper.c:           env->mxccdata[0], env->mxccdata[1],
./tools/qemu-xen/target-sparc/ldst_helper.c:           env->mxccdata[2], env->mxccdata[3]);
./tools/qemu-xen/target-sparc/ldst_helper.c:           env->mxccregs[0], env->mxccregs[1],
./tools/qemu-xen/target-sparc/ldst_helper.c:           env->mxccregs[2], env->mxccregs[3],
./tools/qemu-xen/target-sparc/ldst_helper.c:           env->mxccregs[4], env->mxccregs[5],
./tools/qemu-xen/target-sparc/ldst_helper.c:           env->mxccregs[6], env->mxccregs[7]);
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->cache_control = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:        ret = env->cache_control;
./tools/qemu-xen/target-sparc/ldst_helper.c:            if (env->def->features & CPU_FEATURE_CACHE_CTRL) {
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mxccregs[3];
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mxccregs[3];
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mxccregs[5];
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mxccregs[7];
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = env->mmuregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmuregs[3] = 0;
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mmuregs[3];
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mmuregs[4];
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mmubpregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mmubpregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mmubpregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->mmubpregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmubpregs[reg] = 0ULL;
./tools/qemu-xen/target-sparc/ldst_helper.c:        ret = env->mmubpctrv;
./tools/qemu-xen/target-sparc/ldst_helper.c:        ret = env->mmubpctrc;
./tools/qemu-xen/target-sparc/ldst_helper.c:        ret = env->mmubpctrs;
./tools/qemu-xen/target-sparc/ldst_helper.c:        ret = env->mmubpaction;
./tools/qemu-xen/target-sparc/ldst_helper.c:            if (env->def->features & CPU_FEATURE_CACHE_CTRL) {
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccdata[0] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccdata[1] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccdata[2] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccdata[3] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccregs[0] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mxccdata[0] = ldq_phys((env->mxccregs[0] & 0xffffffffULL) +
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mxccdata[1] = ldq_phys((env->mxccregs[0] & 0xffffffffULL) +
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mxccdata[2] = ldq_phys((env->mxccregs[0] & 0xffffffffULL) +
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mxccdata[3] = ldq_phys((env->mxccregs[0] & 0xffffffffULL) +
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccregs[1] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:            stq_phys((env->mxccregs[1] & 0xffffffffULL) +  0,
./tools/qemu-xen/target-sparc/ldst_helper.c:                     env->mxccdata[0]);
./tools/qemu-xen/target-sparc/ldst_helper.c:            stq_phys((env->mxccregs[1] & 0xffffffffULL) +  8,
./tools/qemu-xen/target-sparc/ldst_helper.c:                     env->mxccdata[1]);
./tools/qemu-xen/target-sparc/ldst_helper.c:            stq_phys((env->mxccregs[1] & 0xffffffffULL) + 16,
./tools/qemu-xen/target-sparc/ldst_helper.c:                     env->mxccdata[2]);
./tools/qemu-xen/target-sparc/ldst_helper.c:            stq_phys((env->mxccregs[1] & 0xffffffffULL) + 24,
./tools/qemu-xen/target-sparc/ldst_helper.c:                     env->mxccdata[3]);
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccregs[3] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccregs[3] = (env->mxccregs[3] & 0xffffffff00000000ULL)
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccregs[6] &= ~val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mxccregs[7] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:            oldreg = env->mmuregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmuregs[reg] = (env->mmuregs[reg] & 0xff000000) |
./tools/qemu-xen/target-sparc/ldst_helper.c:                if ((oldreg & (MMU_E | MMU_NF | env->def->mmu_bm)) !=
./tools/qemu-xen/target-sparc/ldst_helper.c:                    (env->mmuregs[reg] & (MMU_E | MMU_NF | env->def->mmu_bm))) {
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmuregs[reg] = val & env->def->mmu_ctpr_mask;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmuregs[reg] = val & env->def->mmu_cxr_mask;
./tools/qemu-xen/target-sparc/ldst_helper.c:                if (oldreg != env->mmuregs[reg]) {
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmuregs[reg] = val & env->def->mmu_trcr_mask;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmuregs[3] = val & env->def->mmu_sfsr_mask;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmuregs[4] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmuregs[reg] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:            if (oldreg != env->mmuregs[reg]) {
./tools/qemu-xen/target-sparc/ldst_helper.c:                            reg, oldreg, env->mmuregs[reg]);
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmubpregs[reg] = (val & 0xfffffffffULL);
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmubpregs[reg] = (val & 0xfffffffffULL);
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmubpregs[reg] = (val & 0x7fULL);
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->mmubpregs[reg] = (val & 0xfULL);
./tools/qemu-xen/target-sparc/ldst_helper.c:                        env->mmuregs[reg]);
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->mmubpctrv = val & 0xffffffff;
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->mmubpctrc = val & 0x3;
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->mmubpctrs = val & 0x3;
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->mmubpaction = val & 0x1fff;
./tools/qemu-xen/target-sparc/ldst_helper.c:    if ((asi < 0x80 && (env->pstate & PS_PRIV) == 0)
./tools/qemu-xen/target-sparc/ldst_helper.c:            && !(env->hpstate & HS_PRIV))) {
./tools/qemu-xen/target-sparc/ldst_helper.c:        if (env->pstate & PS_PRIV) {
./tools/qemu-xen/target-sparc/ldst_helper.c:            /* env->exception_index is set in get_physical_address_data(). */
./tools/qemu-xen/target-sparc/ldst_helper.c:            helper_raise_exception(env, env->exception_index);
./tools/qemu-xen/target-sparc/ldst_helper.c:        if ((asi & 0x80) && (env->pstate & PS_PRIV)) {
./tools/qemu-xen/target-sparc/ldst_helper.c:        ret = env->lsu;
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = ultrasparc_tag_target(env->immu.tag_access);
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->immuregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:            /* env->immuregs[5] holds I-MMU TSB register value
./tools/qemu-xen/target-sparc/ldst_helper.c:               env->immuregs[6] holds I-MMU Tag Access register value */
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = ultrasparc_tsb_pointer(env->immu.tsb, env->immu.tag_access,
./tools/qemu-xen/target-sparc/ldst_helper.c:            /* env->immuregs[5] holds I-MMU TSB register value
./tools/qemu-xen/target-sparc/ldst_helper.c:               env->immuregs[6] holds I-MMU Tag Access register value */
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = ultrasparc_tsb_pointer(env->immu.tsb, env->immu.tag_access,
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = env->itlb[reg].tte;
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = env->itlb[reg].tag;
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = ultrasparc_tag_target(env->dmmu.tag_access);
./tools/qemu-xen/target-sparc/ldst_helper.c:                ret = env->dmmuregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:            /* env->dmmuregs[5] holds D-MMU TSB register value
./tools/qemu-xen/target-sparc/ldst_helper.c:               env->dmmuregs[6] holds D-MMU Tag Access register value */
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = ultrasparc_tsb_pointer(env->dmmu.tsb, env->dmmu.tag_access,
./tools/qemu-xen/target-sparc/ldst_helper.c:            /* env->dmmuregs[5] holds D-MMU TSB register value
./tools/qemu-xen/target-sparc/ldst_helper.c:               env->dmmuregs[6] holds D-MMU Tag Access register value */
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = ultrasparc_tsb_pointer(env->dmmu.tsb, env->dmmu.tag_access,
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = env->dtlb[reg].tte;
./tools/qemu-xen/target-sparc/ldst_helper.c:            ret = env->dtlb[reg].tag;
./tools/qemu-xen/target-sparc/ldst_helper.c:    if ((asi < 0x80 && (env->pstate & PS_PRIV) == 0)
./tools/qemu-xen/target-sparc/ldst_helper.c:            && !(env->hpstate & HS_PRIV))) {
./tools/qemu-xen/target-sparc/ldst_helper.c:        if ((asi & 0x80) && (env->pstate & PS_PRIV)) {
./tools/qemu-xen/target-sparc/ldst_helper.c:            oldreg = env->lsu;
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->lsu = val & (DMMU_E | IMMU_E);
./tools/qemu-xen/target-sparc/ldst_helper.c:            if (oldreg != env->lsu) {
./tools/qemu-xen/target-sparc/ldst_helper.c:                            oldreg, env->lsu);
./tools/qemu-xen/target-sparc/ldst_helper.c:            oldreg = env->immuregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->immu.sfsr = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                            PRIx64 "\n", env->immu.tsb, val);
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->immu.tsb = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->immu.tag_access = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:            if (oldreg != env->immuregs[reg]) {
./tools/qemu-xen/target-sparc/ldst_helper.c:                            PRIx64 "\n", reg, oldreg, env->immuregs[reg]);
./tools/qemu-xen/target-sparc/ldst_helper.c:        replace_tlb_1bit_lru(env->itlb, env->immu.tag_access, val, "immu", env);
./tools/qemu-xen/target-sparc/ldst_helper.c:            replace_tlb_entry(&env->itlb[i], env->immu.tag_access, val, env);
./tools/qemu-xen/target-sparc/ldst_helper.c:        demap_tlb(env->itlb, addr, "immu", env);
./tools/qemu-xen/target-sparc/ldst_helper.c:            oldreg = env->dmmuregs[reg];
./tools/qemu-xen/target-sparc/ldst_helper.c:                    env->dmmu.sfar = 0;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->dmmu.sfsr = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->dmmu.mmu_primary_context = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->dmmu.mmu_secondary_context = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                            PRIx64 "\n", env->dmmu.tsb, val);
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->dmmu.tsb = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->dmmu.tag_access = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:                env->dmmuregs[reg] = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:            if (oldreg != env->dmmuregs[reg]) {
./tools/qemu-xen/target-sparc/ldst_helper.c:                            PRIx64 "\n", reg, oldreg, env->dmmuregs[reg]);
./tools/qemu-xen/target-sparc/ldst_helper.c:        replace_tlb_1bit_lru(env->dtlb, env->dmmu.tag_access, val, "dmmu", env);
./tools/qemu-xen/target-sparc/ldst_helper.c:            replace_tlb_entry(&env->dtlb[i], env->dmmu.tag_access, val, env);
./tools/qemu-xen/target-sparc/ldst_helper.c:        demap_tlb(env->dtlb, addr, "dmmu", env);
./tools/qemu-xen/target-sparc/ldst_helper.c:    if ((asi < 0x80 && (env->pstate & PS_PRIV) == 0)
./tools/qemu-xen/target-sparc/ldst_helper.c:            && !(env->hpstate & HS_PRIV))) {
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->gregs[1] = ldq_nucleus(addr + 8);
./tools/qemu-xen/target-sparc/ldst_helper.c:                bswap64s(&env->gregs[1]);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->gregs[rd] = ldq_nucleus(addr);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->gregs[rd + 1] = ldq_nucleus(addr + 8);
./tools/qemu-xen/target-sparc/ldst_helper.c:                bswap64s(&env->gregs[rd]);
./tools/qemu-xen/target-sparc/ldst_helper.c:                bswap64s(&env->gregs[rd + 1]);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->regwptr[rd] = ldq_nucleus(addr);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->regwptr[rd + 1] = ldq_nucleus(addr + 8);
./tools/qemu-xen/target-sparc/ldst_helper.c:                bswap64s(&env->regwptr[rd]);
./tools/qemu-xen/target-sparc/ldst_helper.c:                bswap64s(&env->regwptr[rd + 1]);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->gregs[1] = helper_ld_asi(addr + 4, asi, 4, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->gregs[rd] = helper_ld_asi(addr, asi, 4, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->gregs[rd + 1] = helper_ld_asi(addr + 4, asi, 4, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->regwptr[rd] = helper_ld_asi(addr, asi, 4, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->regwptr[rd + 1] = helper_ld_asi(addr + 4, asi, 4, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->fpr[rd/2].ll = helper_ld_asi(addr, asi & 0x8f, 8, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->fpr[rd/2].ll = helper_ld_asi(addr, asi & 0x19, 8, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->fpr[rd/2].l.lower = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->fpr[rd/2].l.upper = val;
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->fpr[rd/2].ll = helper_ld_asi(addr, asi, size, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->fpr[rd/2].ll = helper_ld_asi(addr, asi, 8, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->fpr[rd/2 + 1].ll = helper_ld_asi(addr + 8, asi, 8, 0);
./tools/qemu-xen/target-sparc/ldst_helper.c:            helper_st_asi(addr, env->fpr[rd/2].ll, asi & 0x8f, 8);
./tools/qemu-xen/target-sparc/ldst_helper.c:            helper_st_asi(addr, env->fpr[rd/2].ll, asi & 0x19, 8);
./tools/qemu-xen/target-sparc/ldst_helper.c:            val = env->fpr[rd/2].l.lower;
./tools/qemu-xen/target-sparc/ldst_helper.c:            val = env->fpr[rd/2].l.upper;
./tools/qemu-xen/target-sparc/ldst_helper.c:        helper_st_asi(addr, env->fpr[rd/2].ll, asi, size);
./tools/qemu-xen/target-sparc/ldst_helper.c:        helper_st_asi(addr, env->fpr[rd/2].ll, asi, 8);
./tools/qemu-xen/target-sparc/ldst_helper.c:        helper_st_asi(addr + 8, env->fpr[rd/2 + 1].ll, asi, 8);
./tools/qemu-xen/target-sparc/ldst_helper.c:               size == 1 ? "" : "s", addr, is_asi, env->pc);
./tools/qemu-xen/target-sparc/ldst_helper.c:               size == 1 ? "" : "s", addr, env->pc);
./tools/qemu-xen/target-sparc/ldst_helper.c:    fault_type = (env->mmuregs[3] & 0x1c) >> 2;
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->mmuregs[3] = 0; /* Fault status register */
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mmuregs[3] |= 1 << 16;
./tools/qemu-xen/target-sparc/ldst_helper.c:        if (env->psrs) {
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mmuregs[3] |= 1 << 5;
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mmuregs[3] |= 1 << 6;
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mmuregs[3] |= 1 << 7;
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->mmuregs[3] |= (5 << 2) | 2;
./tools/qemu-xen/target-sparc/ldst_helper.c:            env->mmuregs[4] = addr; /* Fault address register */
./tools/qemu-xen/target-sparc/ldst_helper.c:    if (fault_type == ((env->mmuregs[3] & 0x1c)) >> 2) {
./tools/qemu-xen/target-sparc/ldst_helper.c:        env->mmuregs[3] |= 1;
./tools/qemu-xen/target-sparc/ldst_helper.c:    if ((env->mmuregs[0] & MMU_E) && !(env->mmuregs[0] & MMU_NF)) {
./tools/qemu-xen/target-sparc/ldst_helper.c:    if (env->mmuregs[0] & MMU_NF) {
./tools/qemu-xen/target-sparc/ldst_helper.c:           "\n", addr, env->pc);
./tools/qemu-xen/target-sparc/int64_helper.c:    int intno = env->exception_index;
./tools/qemu-xen/target-sparc/int64_helper.c:                env->pc,
./tools/qemu-xen/target-sparc/int64_helper.c:                env->npc, env->regwptr[6]);
./tools/qemu-xen/target-sparc/int64_helper.c:            ptr = (uint8_t *)env->pc;
./tools/qemu-xen/target-sparc/int64_helper.c:    if (env->tl >= env->maxtl) {
./tools/qemu-xen/target-sparc/int64_helper.c:                  " Error state", env->exception_index, env->tl, env->maxtl);
./tools/qemu-xen/target-sparc/int64_helper.c:    if (env->tl < env->maxtl - 1) {
./tools/qemu-xen/target-sparc/int64_helper.c:        env->tl++;
./tools/qemu-xen/target-sparc/int64_helper.c:        env->pstate |= PS_RED;
./tools/qemu-xen/target-sparc/int64_helper.c:        if (env->tl < env->maxtl) {
./tools/qemu-xen/target-sparc/int64_helper.c:            env->tl++;
./tools/qemu-xen/target-sparc/int64_helper.c:        ((env->asi & 0xff) << 24) | ((env->pstate & 0xf3f) << 8) |
./tools/qemu-xen/target-sparc/int64_helper.c:    tsptr->tpc = env->pc;
./tools/qemu-xen/target-sparc/int64_helper.c:    tsptr->tnpc = env->npc;
./tools/qemu-xen/target-sparc/int64_helper.c:        cpu_set_cwp(env, cpu_cwp_dec(env, env->cwp - 1));
./tools/qemu-xen/target-sparc/int64_helper.c:        cpu_set_cwp(env, cpu_cwp_dec(env, env->cwp - env->cansave - 2));
./tools/qemu-xen/target-sparc/int64_helper.c:        cpu_set_cwp(env, cpu_cwp_inc(env, env->cwp + 1));
./tools/qemu-xen/target-sparc/int64_helper.c:    env->tbr &= ~0x7fffULL;
./tools/qemu-xen/target-sparc/int64_helper.c:    env->tbr |= ((env->tl > 1) ? 1 << 14 : 0) | (intno << 5);
./tools/qemu-xen/target-sparc/int64_helper.c:    env->pc = env->tbr;
./tools/qemu-xen/target-sparc/int64_helper.c:    env->npc = env->pc + 4;
./tools/qemu-xen/target-sparc/int64_helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-sparc/int64_helper.c:    return &env->ts[env->tl & MAXTL_MASK];
./tools/qemu-xen/target-sparc/int64_helper.c:    if (env->softint != value) {
./tools/qemu-xen/target-sparc/int64_helper.c:        env->softint = value;
./tools/qemu-xen/target-sparc/int64_helper.c:    if (do_modify_softint(env, env->softint | (uint32_t)value)) {
./tools/qemu-xen/target-sparc/int64_helper.c:        trace_int_helper_set_softint(env->softint);
./tools/qemu-xen/target-sparc/int64_helper.c:    if (do_modify_softint(env, env->softint & (uint32_t)~value)) {
./tools/qemu-xen/target-sparc/int64_helper.c:        trace_int_helper_clear_softint(env->softint);
./tools/qemu-xen/target-sparc/int64_helper.c:        trace_int_helper_write_softint(env->softint);
./tools/qemu-xen/target-sparc/cpu_init.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-sparc/cpu_init.c:    env->cwp = 0;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->wim = 1;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->regwptr = env->regbase + (env->cwp * 16);
./tools/qemu-xen/target-sparc/cpu_init.c:    env->cleanwin = env->nwindows - 2;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->cansave = env->nwindows - 2;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->pstate = PS_RMO | PS_PEF | PS_IE;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->asi = 0x82; /* Primary no-fault */
./tools/qemu-xen/target-sparc/cpu_init.c:    env->psret = 0;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->psrs = 1;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->psrps = 1;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->pstate = PS_PRIV|PS_RED|PS_PEF|PS_AG;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->hpstate = cpu_has_hypervisor(env) ? HS_PRIV : 0;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->tl = env->maxtl;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->lsu = 0;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->mmuregs[0] &= ~(MMU_E | MMU_NF);
./tools/qemu-xen/target-sparc/cpu_init.c:    env->mmuregs[0] |= env->def->mmu_bm;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->pc = 0;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->npc = env->pc + 4;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->cache_control = 0;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->def = g_new0(sparc_def_t, 1);
./tools/qemu-xen/target-sparc/cpu_init.c:    memcpy(env->def, def, sizeof(*def));
./tools/qemu-xen/target-sparc/cpu_init.c:    if ((env->def->features & CPU_FEATURE_FLOAT)) {
./tools/qemu-xen/target-sparc/cpu_init.c:        env->def->features |= CPU_FEATURE_FLOAT128;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->version = def->iu_version;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->fsr = def->fpu_version;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->nwindows = def->nwindows;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->mmuregs[0] |= def->mmu_version;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->mxccregs[7] |= def->mxcc_version;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->mmu_version = def->mmu_version;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->maxtl = def->maxtl;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->version |= def->maxtl << 8;
./tools/qemu-xen/target-sparc/cpu_init.c:    env->version |= def->nwindows - 1;
./tools/qemu-xen/target-sparc/cpu_init.c:    g_free(env->def);
./tools/qemu-xen/target-sparc/cpu_init.c:    env->mxccregs[7] = ((cpu + 8) & 0xf) << 24;
./tools/qemu-xen/target-sparc/cpu_init.c:    cpu_fprintf(f, "pc: " TARGET_FMT_lx "  npc: " TARGET_FMT_lx "\n", env->pc,
./tools/qemu-xen/target-sparc/cpu_init.c:                env->npc);
./tools/qemu-xen/target-sparc/cpu_init.c:        cpu_fprintf(f, " " TARGET_FMT_lx, env->gregs[i]);
./tools/qemu-xen/target-sparc/cpu_init.c:            cpu_fprintf(f, TARGET_FMT_lx " ", env->regwptr[i + x * 8]);
./tools/qemu-xen/target-sparc/cpu_init.c:        cpu_fprintf(f, " %016" PRIx64, env->fpr[i].ll);
./tools/qemu-xen/target-sparc/cpu_init.c:    cpu_fprintf(f, "pstate: %08x ccr: %02x (icc: ", env->pstate,
./tools/qemu-xen/target-sparc/cpu_init.c:    cpu_fprintf(f, ") asi: %02x tl: %d pil: %x\n", env->asi, env->tl,
./tools/qemu-xen/target-sparc/cpu_init.c:                env->psrpil);
./tools/qemu-xen/target-sparc/cpu_init.c:                env->cansave, env->canrestore, env->otherwin, env->wstate,
./tools/qemu-xen/target-sparc/cpu_init.c:                env->cleanwin, env->nwindows - 1 - env->cwp);
./tools/qemu-xen/target-sparc/cpu_init.c:                TARGET_FMT_lx "\n", env->fsr, env->y, env->fprs);
./tools/qemu-xen/target-sparc/cpu_init.c:    cpu_fprintf(f, " SPE: %c%c%c) wim: %08x\n", env->psrs ? 'S' : '-',
./tools/qemu-xen/target-sparc/cpu_init.c:                env->psrps ? 'P' : '-', env->psret ? 'E' : '-',
./tools/qemu-xen/target-sparc/cpu_init.c:                env->wim);
./tools/qemu-xen/target-sparc/cpu_init.c:                env->fsr, env->y);
./tools/qemu-xen/target-sparc/fop_helper.c:#define QT0 (env->qt0)
./tools/qemu-xen/target-sparc/fop_helper.c:#define QT1 (env->qt1)
./tools/qemu-xen/target-sparc/fop_helper.c:    status = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_NVC;
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_OFC;
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_UFC;
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_DZC;
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_NXC;
./tools/qemu-xen/target-sparc/fop_helper.c:        if ((env->fsr & FSR_CEXC_MASK) & ((env->fsr & FSR_TEM_MASK) >> 23)) {
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_FTT_IEEE_EXCP;
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= (env->fsr & FSR_CEXC_MASK) << 5;
./tools/qemu-xen/target-sparc/fop_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:        ret = float32_ ## name (src1, src2, &env->fp_status);   \
./tools/qemu-xen/target-sparc/fop_helper.c:        ret = float64_ ## name (src1, src2, &env->fp_status);   \
./tools/qemu-xen/target-sparc/fop_helper.c:        QT0 = float128_ ## name (QT0, QT1, &env->fp_status);    \
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float64_mul(float32_to_float64(src1, &env->fp_status),
./tools/qemu-xen/target-sparc/fop_helper.c:                      float32_to_float64(src2, &env->fp_status),
./tools/qemu-xen/target-sparc/fop_helper.c:                      &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    QT0 = float128_mul(float64_to_float128(src1, &env->fp_status),
./tools/qemu-xen/target-sparc/fop_helper.c:                       float64_to_float128(src2, &env->fp_status),
./tools/qemu-xen/target-sparc/fop_helper.c:                       &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = int32_to_float32(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    return int32_to_float64(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    QT0 = int32_to_float128(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = int64_to_float32(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = int64_to_float64(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    QT0 = int64_to_float128(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float64_to_float32(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float32_to_float64(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float128_to_float32(QT1, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    QT0 = float32_to_float128(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float128_to_float64(QT1, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    QT0 = float64_to_float128(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float32_to_int32_round_to_zero(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float64_to_int32_round_to_zero(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float128_to_int32_round_to_zero(QT1, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float32_to_int64_round_to_zero(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float64_to_int64_round_to_zero(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float128_to_int64_round_to_zero(QT1, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float32_sqrt(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    ret = float64_sqrt(src, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    QT0 = float128_sqrt(QT1, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:        env->fsr &= FSR_FTT_NMASK;                                      \
./tools/qemu-xen/target-sparc/fop_helper.c:            (env->fsr & FSR_NVM)) {                                     \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_NVC;                                        \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_FTT_IEEE_EXCP;                              \
./tools/qemu-xen/target-sparc/fop_helper.c:        switch (glue(size, _compare) (reg1, reg2, &env->fp_status)) {   \
./tools/qemu-xen/target-sparc/fop_helper.c:            if ((env->fsr & FSR_NVM)) {                                 \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr |= FSR_NVC;                                    \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr |= FSR_FTT_IEEE_EXCP;                          \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);             \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr |= (FSR_FCC1 | FSR_FCC0) << FS;                \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr |= FSR_NVA;                                    \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);                 \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_FCC0 << FS;                                 \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);                 \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_FCC1 << FS;                                 \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);                 \
./tools/qemu-xen/target-sparc/fop_helper.c:        env->fsr &= FSR_FTT_NMASK;                                      \
./tools/qemu-xen/target-sparc/fop_helper.c:            (env->fsr & FSR_NVM)) {                                     \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_NVC;                                        \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_FTT_IEEE_EXCP;                              \
./tools/qemu-xen/target-sparc/fop_helper.c:        switch (glue(size, _compare) (src1, src2, &env->fp_status)) {   \
./tools/qemu-xen/target-sparc/fop_helper.c:            if ((env->fsr & FSR_NVM)) {                                 \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr |= FSR_NVC;                                    \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr |= FSR_FTT_IEEE_EXCP;                          \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);             \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr |= (FSR_FCC1 | FSR_FCC0) << FS;                \
./tools/qemu-xen/target-sparc/fop_helper.c:                env->fsr |= FSR_NVA;                                    \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);                 \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_FCC0 << FS;                                 \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);                 \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr |= FSR_FCC1 << FS;                                 \
./tools/qemu-xen/target-sparc/fop_helper.c:            env->fsr &= ~((FSR_FCC1 | FSR_FCC0) << FS);                 \
./tools/qemu-xen/target-sparc/fop_helper.c:    switch (env->fsr & FSR_RD_MASK) {
./tools/qemu-xen/target-sparc/fop_helper.c:    set_float_rounding_mode(rnd_mode, &env->fp_status);
./tools/qemu-xen/target-sparc/fop_helper.c:    env->fsr = (new_fsr & FSR_LDFSR_MASK) | (env->fsr & FSR_LDFSR_OLDMASK);
./tools/qemu-xen/target-sparc/fop_helper.c:    env->fsr = (new_fsr & FSR_LDXFSR_MASK) | (env->fsr & FSR_LDXFSR_OLDMASK);
./tools/qemu-xen/target-sparc/helper.c:    env->exception_index = tt;
./tools/qemu-xen/target-sparc/helper.c:    env->exception_index = EXCP_DEBUG;
./tools/qemu-xen/target-sparc/helper.c:    x0 = (a & 0xffffffff) | ((int64_t) (env->y) << 32);
./tools/qemu-xen/target-sparc/helper.c:        env->cc_dst = x0;
./tools/qemu-xen/target-sparc/helper.c:        env->cc_src2 = overflow;
./tools/qemu-xen/target-sparc/helper.c:        env->cc_op = CC_OP_DIV;
./tools/qemu-xen/target-sparc/helper.c:    x0 = (a & 0xffffffff) | ((int64_t) (env->y) << 32);
./tools/qemu-xen/target-sparc/helper.c:        env->cc_dst = x0;
./tools/qemu-xen/target-sparc/helper.c:        env->cc_src2 = overflow;
./tools/qemu-xen/target-sparc/helper.c:        env->cc_op = CC_OP_DIV;
./tools/qemu-xen/target-sparc/int32_helper.c:    int cwp, intno = env->exception_index;
./tools/qemu-xen/target-sparc/int32_helper.c:                env->pc,
./tools/qemu-xen/target-sparc/int32_helper.c:                env->npc, env->regwptr[6]);
./tools/qemu-xen/target-sparc/int32_helper.c:            ptr = (uint8_t *)env->pc;
./tools/qemu-xen/target-sparc/int32_helper.c:    if (env->psret == 0) {
./tools/qemu-xen/target-sparc/int32_helper.c:        if (env->exception_index == 0x80 &&
./tools/qemu-xen/target-sparc/int32_helper.c:            env->def->features & CPU_FEATURE_TA0_SHUTDOWN) {
./tools/qemu-xen/target-sparc/int32_helper.c:                      env->exception_index);
./tools/qemu-xen/target-sparc/int32_helper.c:    env->psret = 0;
./tools/qemu-xen/target-sparc/int32_helper.c:    cwp = cpu_cwp_dec(env, env->cwp - 1);
./tools/qemu-xen/target-sparc/int32_helper.c:    env->regwptr[9] = env->pc;
./tools/qemu-xen/target-sparc/int32_helper.c:    env->regwptr[10] = env->npc;
./tools/qemu-xen/target-sparc/int32_helper.c:    env->psrps = env->psrs;
./tools/qemu-xen/target-sparc/int32_helper.c:    env->psrs = 1;
./tools/qemu-xen/target-sparc/int32_helper.c:    env->tbr = (env->tbr & TBR_BASE_MASK) | (intno << 4);
./tools/qemu-xen/target-sparc/int32_helper.c:    env->pc = env->tbr;
./tools/qemu-xen/target-sparc/int32_helper.c:    env->npc = env->pc + 4;
./tools/qemu-xen/target-sparc/int32_helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-sparc/int32_helper.c:    if ((intno & ~15) == TT_EXTINT && env->qemu_irq_ack != NULL) {
./tools/qemu-xen/target-sparc/int32_helper.c:        env->qemu_irq_ack(env, env->irq_manager, intno);
./tools/qemu-xen/target-sparc/int32_helper.c:    if (env->cache_control & CACHE_CTRL_IF) {
./tools/qemu-xen/target-sparc/int32_helper.c:        state = env->cache_control & CACHE_STATE_MASK;
./tools/qemu-xen/target-sparc/int32_helper.c:        env->cache_control &= ~CACHE_STATE_MASK;
./tools/qemu-xen/target-sparc/int32_helper.c:        env->cache_control |= state;
./tools/qemu-xen/target-sparc/int32_helper.c:    if (env->cache_control & CACHE_CTRL_DF) {
./tools/qemu-xen/target-sparc/int32_helper.c:        state = (env->cache_control >> 2) & CACHE_STATE_MASK;
./tools/qemu-xen/target-sparc/int32_helper.c:        env->cache_control &= ~(CACHE_STATE_MASK << 2);
./tools/qemu-xen/target-sparc/int32_helper.c:        env->cache_control |= (state << 2);
./tools/qemu-xen/target-sparc/cc_helper.c:    return env->psr & PSR_ICC;
./tools/qemu-xen/target-sparc/cc_helper.c:    return env->psr & PSR_CARRY;
./tools/qemu-xen/target-sparc/cc_helper.c:    return env->xcc & PSR_ICC;
./tools/qemu-xen/target-sparc/cc_helper.c:    return env->xcc & PSR_CARRY;
./tools/qemu-xen/target-sparc/cc_helper.c:    env->psr = new_psr;
./tools/qemu-xen/target-sparc/cc_helper.c:    env->xcc = new_psr;
./tools/qemu-xen/savevm.c:    if (dev && dev->parent_bus && dev->parent_bus->info->get_dev_path) {
./tools/qemu-xen/savevm.c:        char *id = dev->parent_bus->info->get_dev_path(dev);
./tools/qemu-xen/savevm.c:    if (dev && dev->parent_bus && dev->parent_bus->info->get_dev_path) {
./tools/qemu-xen/savevm.c:        char *path = dev->parent_bus->info->get_dev_path(dev);
./tools/qemu-xen/savevm.c:    if (dev && dev->parent_bus && dev->parent_bus->info->get_dev_path) {
./tools/qemu-xen/savevm.c:        char *id = dev->parent_bus->info->get_dev_path(dev);
./tools/qemu-xen/darwin-user/main.c:                      env->spr[SPR_DAR]);
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)env->nip;
./tools/qemu-xen/darwin-user/main.c:                      env->spr[SPR_DAR]);
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen/darwin-user/main.c:            switch (env->error_code & ~0xF) {
./tools/qemu-xen/darwin-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen/darwin-user/main.c:                              env->error_code);
./tools/qemu-xen/darwin-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen/darwin-user/main.c:                              env->error_code & 0xF);
./tools/qemu-xen/darwin-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen/darwin-user/main.c:                              env->error_code & 0xF);
./tools/qemu-xen/darwin-user/main.c:                          env->error_code);
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)(env->nip - 4);
./tools/qemu-xen/darwin-user/main.c:            if(((int)env->gpr[0]) <= SYS_MAXSYSCALL && ((int)env->gpr[0])>0)
./tools/qemu-xen/darwin-user/main.c:                ret = do_unix_syscall(env, env->gpr[0]/*, env->gpr[3], env->gpr[4],
./tools/qemu-xen/darwin-user/main.c:                                      env->gpr[5], env->gpr[6], env->gpr[7],
./tools/qemu-xen/darwin-user/main.c:                                      env->gpr[8], env->gpr[9], env->gpr[10]*/);
./tools/qemu-xen/darwin-user/main.c:            else if(((int)env->gpr[0])<0)
./tools/qemu-xen/darwin-user/main.c:                ret = do_mach_syscall(env, env->gpr[0], env->gpr[3], env->gpr[4],
./tools/qemu-xen/darwin-user/main.c:                                      env->gpr[5], env->gpr[6], env->gpr[7],
./tools/qemu-xen/darwin-user/main.c:                                      env->gpr[8], env->gpr[9], env->gpr[10]);
./tools/qemu-xen/darwin-user/main.c:                ret = do_thread_syscall(env, env->gpr[0], env->gpr[3], env->gpr[4],
./tools/qemu-xen/darwin-user/main.c:                                        env->gpr[5], env->gpr[6], env->gpr[7],
./tools/qemu-xen/darwin-user/main.c:                                        env->gpr[8], env->gpr[9], env->gpr[10]);
./tools/qemu-xen/darwin-user/main.c:            if(((int)env->gpr[0]) <= SYS_MAXSYSCALL && ((int)env->gpr[0])>0)
./tools/qemu-xen/darwin-user/main.c:                    env->nip += 0;
./tools/qemu-xen/darwin-user/main.c:                    env->nip += 4;
./tools/qemu-xen/darwin-user/main.c:            env->gpr[3] = ret;
./tools/qemu-xen/darwin-user/main.c:        env->eflags = env->eflags | 0x1;
./tools/qemu-xen/darwin-user/main.c:        env->eflags &= ~0x1;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_EAX] = ret;
./tools/qemu-xen/darwin-user/main.c:        uint32_t *params = (uint32_t *)env->regs[R_ESP];
./tools/qemu-xen/darwin-user/main.c:            do_commpage(env,  env->eip,   *(params + 1), *(params + 2),
./tools/qemu-xen/darwin-user/main.c:            ret = do_mach_syscall(env,  env->regs[R_EAX],
./tools/qemu-xen/darwin-user/main.c:            int saved_stack = env->regs[R_ESP];
./tools/qemu-xen/darwin-user/main.c:            env->regs[R_ESP] = env->regs[R_ECX];
./tools/qemu-xen/darwin-user/main.c:            ret = do_unix_syscall(env, env->regs[R_EAX]);
./tools/qemu-xen/darwin-user/main.c:            env->regs[R_ECX] = env->regs[R_ESP];
./tools/qemu-xen/darwin-user/main.c:            env->regs[R_ESP] = saved_stack;
./tools/qemu-xen/darwin-user/main.c:            ret = do_unix_syscall(env, env->regs[R_EAX]/*,
./tools/qemu-xen/darwin-user/main.c:            ret = do_thread_syscall(env,  env->regs[R_EAX],
./tools/qemu-xen/darwin-user/main.c:            if (!(env->error_code & 1))
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)env->cr[2];
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)env->eip;
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)env->eip;
./tools/qemu-xen/darwin-user/main.c:            info.si_addr = (void*)env->eip;
./tools/qemu-xen/darwin-user/main.c:            pc = (void*)(env->segs[R_CS].base + env->eip);
./tools/qemu-xen/darwin-user/main.c:    env->opaque = ts;
./tools/qemu-xen/darwin-user/main.c:    env->cr[0] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK;
./tools/qemu-xen/darwin-user/main.c:    env->hflags |= HF_PE_MASK;
./tools/qemu-xen/darwin-user/main.c:    if (env->cpuid_features & CPUID_SSE) {
./tools/qemu-xen/darwin-user/main.c:        env->cr[4] |= CR4_OSFXSR_MASK;
./tools/qemu-xen/darwin-user/main.c:        env->hflags |= HF_OSFXSR_MASK;
./tools/qemu-xen/darwin-user/main.c:    env->eflags |= IF_MASK;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_EAX] = regs->eax;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_EBX] = regs->ebx;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_ECX] = regs->ecx;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_EDX] = regs->edx;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_ESI] = regs->esi;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_EDI] = regs->edi;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_EBP] = regs->ebp;
./tools/qemu-xen/darwin-user/main.c:    env->regs[R_ESP] = regs->esp;
./tools/qemu-xen/darwin-user/main.c:    env->eip = regs->eip;
./tools/qemu-xen/darwin-user/main.c:    env->ldt.base = (uint32_t) ldt_table;
./tools/qemu-xen/darwin-user/main.c:    env->ldt.limit = sizeof(ldt_table) - 1;
./tools/qemu-xen/darwin-user/main.c:    env->gdt.base = (uint32_t)gdt_table;
./tools/qemu-xen/darwin-user/main.c:    env->gdt.limit = sizeof(gdt_table) - 1;
./tools/qemu-xen/darwin-user/main.c:    env->sysenter_cs = 0x1; //XXX
./tools/qemu-xen/darwin-user/main.c:    env->sysenter_eip = (int)syscallbackdoor;
./tools/qemu-xen/darwin-user/main.c:    env->sysenter_esp = (int)malloc(64);
./tools/qemu-xen/darwin-user/main.c:    env->tr.base = (uint32_t) tss;
./tools/qemu-xen/darwin-user/main.c:    env->tr.limit = sizeof(tss) - 1;
./tools/qemu-xen/darwin-user/main.c:    env->tr.flags = DESC_P_MASK | (0x9 << DESC_TYPE_SHIFT);
./tools/qemu-xen/darwin-user/main.c:    env->idt.base = (uint32_t) idt_table;
./tools/qemu-xen/darwin-user/main.c:    env->idt.limit = sizeof(idt_table) - 1;
./tools/qemu-xen/darwin-user/main.c:        env->msr &= ~((target_ulong)1 << MSR_SF);
./tools/qemu-xen/darwin-user/main.c:        env->msr |= (target_ulong)1 << MSR_SF;
./tools/qemu-xen/darwin-user/main.c:        env->nip = regs->nip;
./tools/qemu-xen/darwin-user/main.c:            env->gpr[i] = regs->gpr[i];
./tools/qemu-xen/darwin-user/signal.c:        esp = env->regs[R_ESP];
./tools/qemu-xen/darwin-user/signal.c:	env->regs[R_ESP] = (unsigned long) frame;
./tools/qemu-xen/darwin-user/signal.c:	env->eip = (unsigned long) ka->sa.sa_handler;
./tools/qemu-xen/darwin-user/signal.c:	env->eflags &= ~TF_MASK;
./tools/qemu-xen/darwin-user/signal.c:    env->regs[R_EAX] = tswapl(scp->sc_eax);
./tools/qemu-xen/darwin-user/signal.c:    env->regs[R_EBX] = tswapl(scp->sc_ebx);
./tools/qemu-xen/darwin-user/signal.c:    env->regs[R_ECX] = tswapl(scp->sc_ecx);
./tools/qemu-xen/darwin-user/signal.c:    env->regs[R_EDX] = tswapl(scp->sc_edx);
./tools/qemu-xen/darwin-user/signal.c:    env->regs[R_EDI] = tswapl(scp->sc_edi);
./tools/qemu-xen/darwin-user/signal.c:    env->regs[R_ESI] = tswapl(scp->sc_esi);
./tools/qemu-xen/darwin-user/signal.c:    env->regs[R_EBP] = tswapl(scp->sc_ebp);
./tools/qemu-xen/darwin-user/signal.c:    env->regs[R_ESP] = tswapl(scp->sc_esp);
./tools/qemu-xen/darwin-user/signal.c:    env->segs[R_SS].selector = (void*)tswapl(scp->sc_ss);
./tools/qemu-xen/darwin-user/signal.c:    env->eflags = tswapl(scp->sc_eflags);
./tools/qemu-xen/darwin-user/signal.c:    env->eip = tswapl(scp->sc_eip);
./tools/qemu-xen/darwin-user/signal.c:    env->segs[R_CS].selector = (void*)tswapl(scp->sc_cs);
./tools/qemu-xen/darwin-user/signal.c:    env->segs[R_DS].selector = (void*)tswapl(scp->sc_ds);
./tools/qemu-xen/darwin-user/signal.c:    env->segs[R_ES].selector = (void*)tswapl(scp->sc_es);
./tools/qemu-xen/darwin-user/signal.c:    env->segs[R_FS].selector = (void*)tswapl(scp->sc_fs);
./tools/qemu-xen/darwin-user/signal.c:    env->segs[R_GS].selector = (void*)tswapl(scp->sc_gs);
./tools/qemu-xen/darwin-user/signal.c:    return env->regs[R_EAX];
./tools/qemu-xen/target-microblaze/translate.c:          && (dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)
./tools/qemu-xen/target-microblaze/translate.c:          && !((dc->env->pvr.regs[2] & PVR2_USE_PCMP_INSTR))) {
./tools/qemu-xen/target-microblaze/translate.c:        if (!(dc->env->pvr.regs[2] & PVR2_USE_MSR_INSTR)) {
./tools/qemu-xen/target-microblaze/translate.c:         && (dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)
./tools/qemu-xen/target-microblaze/translate.c:         && !(dc->env->pvr.regs[0] & PVR0_USE_HW_MUL_MASK)) {
./tools/qemu-xen/target-microblaze/translate.c:        && !((dc->env->pvr.regs[2] & PVR2_USE_MUL64_MASK))) {
./tools/qemu-xen/target-microblaze/translate.c:    if ((dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)
./tools/qemu-xen/target-microblaze/translate.c:          && !((dc->env->pvr.regs[0] & PVR0_USE_DIV_MASK))) {
./tools/qemu-xen/target-microblaze/translate.c:          && (dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)
./tools/qemu-xen/target-microblaze/translate.c:          && !(dc->env->pvr.regs[0] & PVR0_USE_BARREL_MASK)) {
./tools/qemu-xen/target-microblaze/translate.c:          && (dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)) {
./tools/qemu-xen/target-microblaze/translate.c:    if ((dc->env->pvr.regs[2] & PVR2_UNALIGNED_EXC_MASK) && size > 1) {
./tools/qemu-xen/target-microblaze/translate.c:          && (dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)) {
./tools/qemu-xen/target-microblaze/translate.c:    if ((dc->env->pvr.regs[2] & PVR2_UNALIGNED_EXC_MASK) && size > 1) {
./tools/qemu-xen/target-microblaze/translate.c:    r = dc->env->pvr.regs[2] & PVR2_USE_FPU2_MASK;
./tools/qemu-xen/target-microblaze/translate.c:          && (dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)
./tools/qemu-xen/target-microblaze/translate.c:          && !((dc->env->pvr.regs[2] & PVR2_USE_FPU_MASK))) {
./tools/qemu-xen/target-microblaze/translate.c:          && (dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)) {
./tools/qemu-xen/target-microblaze/translate.c:              && (dc->env->pvr.regs[2] & PVR2_ILL_OPCODE_EXC_MASK)
./tools/qemu-xen/target-microblaze/translate.c:              && (dc->env->pvr.regs[2] & PVR2_OPCODE_0x0_ILL_MASK)) {
./tools/qemu-xen/target-microblaze/translate.c:    if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-microblaze/translate.c:        QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-microblaze/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-microblaze/translate.c:        if (env->singlestep_enabled)
./tools/qemu-xen/target-microblaze/translate.c:    if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen/target-microblaze/translate.c:                env->sregs[SR_PC], lookup_symbol(env->sregs[SR_PC]));
./tools/qemu-xen/target-microblaze/translate.c:             env->sregs[SR_MSR], env->sregs[SR_ESR], env->sregs[SR_EAR],
./tools/qemu-xen/target-microblaze/translate.c:             env->debug, env->imm, env->iflags, env->sregs[SR_FSR]);
./tools/qemu-xen/target-microblaze/translate.c:             env->btaken, env->btarget,
./tools/qemu-xen/target-microblaze/translate.c:             (env->sregs[SR_MSR] & MSR_UM) ? "user" : "kernel",
./tools/qemu-xen/target-microblaze/translate.c:             (env->sregs[SR_MSR] & MSR_UMS) ? "user" : "kernel",
./tools/qemu-xen/target-microblaze/translate.c:             (env->sregs[SR_MSR] & MSR_EIP),
./tools/qemu-xen/target-microblaze/translate.c:             (env->sregs[SR_MSR] & MSR_IE));
./tools/qemu-xen/target-microblaze/translate.c:        cpu_fprintf(f, "r%2.2d=%8.8x ", i, env->regs[i]);
./tools/qemu-xen/target-microblaze/translate.c:    set_float_rounding_mode(float_round_nearest_even, &env->fp_status);
./tools/qemu-xen/target-microblaze/translate.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-microblaze/translate.c:    env->pvr.regs[0] = PVR0_PVR_FULL_MASK \
./tools/qemu-xen/target-microblaze/translate.c:    env->pvr.regs[2] = PVR2_D_OPB_MASK \
./tools/qemu-xen/target-microblaze/translate.c:    env->pvr.regs[10] = 0x0c000000; /* Default to spartan 3a dsp family.  */
./tools/qemu-xen/target-microblaze/translate.c:    env->pvr.regs[11] = PVR11_USE_MMU | (16 << 17);
./tools/qemu-xen/target-microblaze/translate.c:    env->sregs[SR_MSR] = MSR_EE | MSR_IE | MSR_VM | MSR_UM;
./tools/qemu-xen/target-microblaze/translate.c:    env->pvr.regs[10] = 0x0c000000; /* Spartan 3a dsp.  */
./tools/qemu-xen/target-microblaze/translate.c:    env->sregs[SR_MSR] = 0;
./tools/qemu-xen/target-microblaze/translate.c:    mmu_init(&env->mmu);
./tools/qemu-xen/target-microblaze/translate.c:    env->mmu.c_mmu = 3;
./tools/qemu-xen/target-microblaze/translate.c:    env->mmu.c_mmu_tlb_access = 3;
./tools/qemu-xen/target-microblaze/translate.c:    env->mmu.c_mmu_zones = 16;
./tools/qemu-xen/target-microblaze/translate.c:    env->sregs[SR_PC] = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-microblaze/mmu.c:    struct microblaze_mmu *mmu = &env->mmu;
./tools/qemu-xen/target-microblaze/mmu.c:    struct microblaze_mmu *mmu = &env->mmu;
./tools/qemu-xen/target-microblaze/mmu.c:    if (env->mmu.c_mmu < 2 || !env->mmu.c_mmu_tlb_access) {
./tools/qemu-xen/target-microblaze/mmu.c:            if (!(env->mmu.c_mmu_tlb_access & 1)) {
./tools/qemu-xen/target-microblaze/mmu.c:            i = env->mmu.regs[MMU_R_TLBX] & 0xff;
./tools/qemu-xen/target-microblaze/mmu.c:            r = env->mmu.rams[rn & 1][i];
./tools/qemu-xen/target-microblaze/mmu.c:                env->mmu.regs[MMU_R_PID] = env->mmu.tids[i];
./tools/qemu-xen/target-microblaze/mmu.c:            if (!(env->mmu.c_mmu_tlb_access & 1)) {
./tools/qemu-xen/target-microblaze/mmu.c:            r = env->mmu.regs[rn];
./tools/qemu-xen/target-microblaze/mmu.c:            r = env->mmu.regs[rn];
./tools/qemu-xen/target-microblaze/mmu.c:    D(qemu_log("%s rn=%d=%x old=%x\n", __func__, rn, v, env->mmu.regs[rn]));
./tools/qemu-xen/target-microblaze/mmu.c:    if (env->mmu.c_mmu < 2 || !env->mmu.c_mmu_tlb_access) {
./tools/qemu-xen/target-microblaze/mmu.c:            i = env->mmu.regs[MMU_R_TLBX] & 0xff;
./tools/qemu-xen/target-microblaze/mmu.c:                             i, env->sregs[SR_PC]);
./tools/qemu-xen/target-microblaze/mmu.c:                env->mmu.tids[i] = env->mmu.regs[MMU_R_PID] & 0xff;
./tools/qemu-xen/target-microblaze/mmu.c:            env->mmu.rams[rn & 1][i] = v;
./tools/qemu-xen/target-microblaze/mmu.c:            if (env->mmu.c_mmu_tlb_access <= 1) {
./tools/qemu-xen/target-microblaze/mmu.c:            if (v != env->mmu.regs[rn]) {
./tools/qemu-xen/target-microblaze/mmu.c:            env->mmu.regs[rn] = v;
./tools/qemu-xen/target-microblaze/mmu.c:            if (env->mmu.c_mmu_tlb_access <= 1) {
./tools/qemu-xen/target-microblaze/mmu.c:            if (v != env->mmu.regs[rn]) {
./tools/qemu-xen/target-microblaze/mmu.c:                env->mmu.regs[rn] = v;
./tools/qemu-xen/target-microblaze/mmu.c:            if (env->mmu.c_mmu_tlb_access <= 1) {
./tools/qemu-xen/target-microblaze/mmu.c:            hit = mmu_translate(&env->mmu, &lu,
./tools/qemu-xen/target-microblaze/mmu.c:                env->mmu.regs[MMU_R_TLBX] = lu.idx;
./tools/qemu-xen/target-microblaze/mmu.c:                env->mmu.regs[MMU_R_TLBX] |= 0x80000000;
./tools/qemu-xen/target-microblaze/mmu.c:            env->mmu.regs[rn] = v;
./tools/qemu-xen/target-microblaze/op_helper.c:    env->exception_index = index;
./tools/qemu-xen/target-microblaze/op_helper.c:    qemu_log("PC=%8.8x\n", env->sregs[SR_PC]);
./tools/qemu-xen/target-microblaze/op_helper.c:             env->sregs[SR_MSR], env->sregs[SR_ESR], env->sregs[SR_EAR],
./tools/qemu-xen/target-microblaze/op_helper.c:             env->debug, env->imm, env->iflags);
./tools/qemu-xen/target-microblaze/op_helper.c:             env->btaken, env->btarget,
./tools/qemu-xen/target-microblaze/op_helper.c:             (env->sregs[SR_MSR] & MSR_UM) ? "user" : "kernel",
./tools/qemu-xen/target-microblaze/op_helper.c:             (env->sregs[SR_MSR] & MSR_UMS) ? "user" : "kernel",
./tools/qemu-xen/target-microblaze/op_helper.c:             (env->sregs[SR_MSR] & MSR_EIP),
./tools/qemu-xen/target-microblaze/op_helper.c:             (env->sregs[SR_MSR] & MSR_IE));
./tools/qemu-xen/target-microblaze/op_helper.c:        qemu_log("r%2.2d=%8.8x ", i, env->regs[i]);
./tools/qemu-xen/target-microblaze/op_helper.c:        env->sregs[SR_MSR] |= MSR_DZ;
./tools/qemu-xen/target-microblaze/op_helper.c:        if ((env->sregs[SR_MSR] & MSR_EE)
./tools/qemu-xen/target-microblaze/op_helper.c:            && !(env->pvr.regs[2] & PVR2_DIV_ZERO_EXC_MASK)) {
./tools/qemu-xen/target-microblaze/op_helper.c:            env->sregs[SR_ESR] = ESR_EC_DIVZERO;
./tools/qemu-xen/target-microblaze/op_helper.c:    env->sregs[SR_MSR] &= ~MSR_DZ;
./tools/qemu-xen/target-microblaze/op_helper.c:    env->sregs[SR_ESR] = ESR_EC_FPU;
./tools/qemu-xen/target-microblaze/op_helper.c:        env->sregs[SR_FSR] |= FSR_IO;
./tools/qemu-xen/target-microblaze/op_helper.c:        env->sregs[SR_FSR] |= FSR_DZ;
./tools/qemu-xen/target-microblaze/op_helper.c:        env->sregs[SR_FSR] |= FSR_OF;
./tools/qemu-xen/target-microblaze/op_helper.c:        env->sregs[SR_FSR] |= FSR_UF;
./tools/qemu-xen/target-microblaze/op_helper.c:        && (env->pvr.regs[2] & PVR2_FPU_EXC_MASK)
./tools/qemu-xen/target-microblaze/op_helper.c:        && (env->sregs[SR_MSR] & MSR_EE)) {
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    fd.f = float32_add(fa.f, fb.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    fd.f = float32_sub(fb.f, fa.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    fd.f = float32_mul(fa.f, fb.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    fd.f = float32_div(fb.f, fa.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    r = float32_lt(fb.f, fa.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    r = float32_eq_quiet(fa.f, fb.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    r = float32_le(fa.f, fb.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    r = float32_lt(fa.f, fb.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    r = !float32_eq_quiet(fa.f, fb.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    r = !float32_lt(fa.f, fb.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    fd.f = int32_to_float32(fa.l, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    r = float32_to_int32(fa.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    fd.l = float32_sqrt(fa.f, &env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:    flags = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-microblaze/op_helper.c:            env->sregs[SR_EAR] = addr;
./tools/qemu-xen/target-microblaze/op_helper.c:            env->sregs[SR_ESR] = ESR_EC_UNALIGNED_DATA | (wr << 10) \
./tools/qemu-xen/target-microblaze/op_helper.c:                env->sregs[SR_ESR] |= 1 << 11;
./tools/qemu-xen/target-microblaze/op_helper.c:            if (!(env->sregs[SR_MSR] & MSR_EE)) {
./tools/qemu-xen/target-microblaze/op_helper.c:    if (!(env->sregs[SR_MSR] & MSR_EE)) {
./tools/qemu-xen/target-microblaze/op_helper.c:    env->sregs[SR_EAR] = addr;
./tools/qemu-xen/target-microblaze/op_helper.c:        if ((env->pvr.regs[2] & PVR2_IOPB_BUS_EXC_MASK)) {
./tools/qemu-xen/target-microblaze/op_helper.c:            env->sregs[SR_ESR] = ESR_EC_INSN_BUS;
./tools/qemu-xen/target-microblaze/op_helper.c:        if ((env->pvr.regs[2] & PVR2_DOPB_BUS_EXC_MASK)) {
./tools/qemu-xen/target-microblaze/op_helper.c:            env->sregs[SR_ESR] = ESR_EC_DATA_BUS;
./tools/qemu-xen/target-microblaze/helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-microblaze/helper.c:    env->regs[14] = env->sregs[SR_PC];
./tools/qemu-xen/target-microblaze/helper.c:    env->exception_index = 0xaa;
./tools/qemu-xen/target-microblaze/helper.c:    if (env->pvr.regs[0] & PVR0_USE_MMU) {
./tools/qemu-xen/target-microblaze/helper.c:        if ((env->pvr.regs[0] & PVR0_PVR_FULL_MASK)
./tools/qemu-xen/target-microblaze/helper.c:            && (env->pvr.regs[11] & PVR11_USE_MMU) != PVR11_USE_MMU) {
./tools/qemu-xen/target-microblaze/helper.c:    if (mmu_available && (env->sregs[SR_MSR] & MSR_VM)) {
./tools/qemu-xen/target-microblaze/helper.c:        hit = mmu_translate(&env->mmu, &lu, address, rw, mmu_idx);
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_EAR] = address;
./tools/qemu-xen/target-microblaze/helper.c:                    env->sregs[SR_ESR] = rw == 2 ? 17 : 16;
./tools/qemu-xen/target-microblaze/helper.c:                    env->sregs[SR_ESR] |= (rw == 1) << 10;
./tools/qemu-xen/target-microblaze/helper.c:                    env->sregs[SR_ESR] = rw == 2 ? 19 : 18;
./tools/qemu-xen/target-microblaze/helper.c:                    env->sregs[SR_ESR] |= (rw == 1) << 10;
./tools/qemu-xen/target-microblaze/helper.c:            if (env->exception_index == EXCP_MMU) {
./tools/qemu-xen/target-microblaze/helper.c:            env->exception_index = EXCP_MMU;
./tools/qemu-xen/target-microblaze/helper.c:    assert(!((env->iflags & D_FLAG) && (env->iflags & IMM_FLAG)));
./tools/qemu-xen/target-microblaze/helper.c:    assert(!(env->iflags & (DRTI_FLAG | DRTE_FLAG | DRTB_FLAG)));
./tools/qemu-xen/target-microblaze/helper.c:/*    assert(env->sregs[SR_MSR] & (MSR_EE)); Only for HW exceptions.  */
./tools/qemu-xen/target-microblaze/helper.c:    switch (env->exception_index) {
./tools/qemu-xen/target-microblaze/helper.c:            if (!(env->pvr.regs[0] & PVR0_USE_EXC_MASK)) {
./tools/qemu-xen/target-microblaze/helper.c:            env->regs[17] = env->sregs[SR_PC] + 4;
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_ESR] &= ~(1 << 12);
./tools/qemu-xen/target-microblaze/helper.c:            if (env->iflags & D_FLAG) {
./tools/qemu-xen/target-microblaze/helper.c:                env->sregs[SR_ESR] |= 1 << 12 ;
./tools/qemu-xen/target-microblaze/helper.c:                env->sregs[SR_BTR] = env->btarget;
./tools/qemu-xen/target-microblaze/helper.c:            t = (env->sregs[SR_MSR] & (MSR_VM | MSR_UM)) << 1;
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] &= ~(MSR_VMS | MSR_UMS | MSR_VM | MSR_UM);
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] |= t;
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] |= MSR_EIP;
./tools/qemu-xen/target-microblaze/helper.c:                          env->sregs[SR_PC], env->sregs[SR_EAR],
./tools/qemu-xen/target-microblaze/helper.c:                          env->sregs[SR_ESR], env->iflags);
./tools/qemu-xen/target-microblaze/helper.c:            env->iflags &= ~(IMM_FLAG | D_FLAG);
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_PC] = 0x20;
./tools/qemu-xen/target-microblaze/helper.c:            env->regs[17] = env->sregs[SR_PC];
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_ESR] &= ~(1 << 12);
./tools/qemu-xen/target-microblaze/helper.c:            if (env->iflags & D_FLAG) {
./tools/qemu-xen/target-microblaze/helper.c:                D(qemu_log("D_FLAG set at exception bimm=%d\n", env->bimm));
./tools/qemu-xen/target-microblaze/helper.c:                env->sregs[SR_ESR] |= 1 << 12 ;
./tools/qemu-xen/target-microblaze/helper.c:                env->sregs[SR_BTR] = env->btarget;
./tools/qemu-xen/target-microblaze/helper.c:                env->regs[17] -= 4;
./tools/qemu-xen/target-microblaze/helper.c:                if (env->bimm) {
./tools/qemu-xen/target-microblaze/helper.c:                                  env->sregs[SR_PC], env->iflags);
./tools/qemu-xen/target-microblaze/helper.c:                    env->regs[17] -= 4;
./tools/qemu-xen/target-microblaze/helper.c:            } else if (env->iflags & IMM_FLAG) {
./tools/qemu-xen/target-microblaze/helper.c:                env->regs[17] -= 4;
./tools/qemu-xen/target-microblaze/helper.c:            t = (env->sregs[SR_MSR] & (MSR_VM | MSR_UM)) << 1;
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] &= ~(MSR_VMS | MSR_UMS | MSR_VM | MSR_UM);
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] |= t;
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] |= MSR_EIP;
./tools/qemu-xen/target-microblaze/helper.c:                          env->sregs[SR_PC], env->sregs[SR_EAR], env->iflags);
./tools/qemu-xen/target-microblaze/helper.c:            env->iflags &= ~(IMM_FLAG | D_FLAG);
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_PC] = 0x20;
./tools/qemu-xen/target-microblaze/helper.c:            assert(!(env->sregs[SR_MSR] & (MSR_EIP | MSR_BIP)));
./tools/qemu-xen/target-microblaze/helper.c:            assert(env->sregs[SR_MSR] & MSR_IE);
./tools/qemu-xen/target-microblaze/helper.c:            assert(!(env->iflags & D_FLAG));
./tools/qemu-xen/target-microblaze/helper.c:            t = (env->sregs[SR_MSR] & (MSR_VM | MSR_UM)) << 1;
./tools/qemu-xen/target-microblaze/helper.c:                sym = lookup_symbol(env->sregs[SR_PC]);
./tools/qemu-xen/target-microblaze/helper.c:                         env->sregs[SR_PC], env->sregs[SR_MSR], t, env->iflags,
./tools/qemu-xen/target-microblaze/helper.c:                         env->sregs[SR_PC], env->sregs[SR_MSR], t, env->iflags);
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] &= ~(MSR_VMS | MSR_UMS | MSR_VM \
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] |= t;
./tools/qemu-xen/target-microblaze/helper.c:            env->regs[14] = env->sregs[SR_PC];
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_PC] = 0x10;
./tools/qemu-xen/target-microblaze/helper.c:            assert(!(env->iflags & IMM_FLAG));
./tools/qemu-xen/target-microblaze/helper.c:            assert(!(env->iflags & D_FLAG));
./tools/qemu-xen/target-microblaze/helper.c:            t = (env->sregs[SR_MSR] & (MSR_VM | MSR_UM)) << 1;
./tools/qemu-xen/target-microblaze/helper.c:                        env->sregs[SR_PC], env->sregs[SR_MSR], t, env->iflags);
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] &= ~(MSR_VMS | MSR_UMS | MSR_VM | MSR_UM);
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] |= t;
./tools/qemu-xen/target-microblaze/helper.c:            env->sregs[SR_MSR] |= MSR_BIP;
./tools/qemu-xen/target-microblaze/helper.c:            if (env->exception_index == EXCP_HW_BREAK) {
./tools/qemu-xen/target-microblaze/helper.c:                env->regs[16] = env->sregs[SR_PC];
./tools/qemu-xen/target-microblaze/helper.c:                env->sregs[SR_MSR] |= MSR_BIP;
./tools/qemu-xen/target-microblaze/helper.c:                env->sregs[SR_PC] = 0x18;
./tools/qemu-xen/target-microblaze/helper.c:                env->sregs[SR_PC] = env->btarget;
./tools/qemu-xen/target-microblaze/helper.c:                      env->exception_index);
./tools/qemu-xen/target-microblaze/helper.c:    if (env->sregs[SR_MSR] & MSR_VM) {
./tools/qemu-xen/target-microblaze/helper.c:        hit = mmu_translate(&env->mmu, &lu, addr, 0, 0);
./tools/qemu-xen/tests/qruncom.c:    env->regs[R_ESP] = (env->regs[R_ESP] & ~0xffff) | ((env->regs[R_ESP] - 2) & 0xffff);
./tools/qemu-xen/tests/qruncom.c:    *(uint16_t *)seg_to_linear(env->segs[R_SS].selector, env->regs[R_ESP]) = val;
./tools/qemu-xen/tests/qruncom.c:    env->cr[0] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK;
./tools/qemu-xen/tests/qruncom.c:    env->hflags |= HF_PE_MASK | VM_MASK;
./tools/qemu-xen/tests/qruncom.c:    env->eflags |= IF_MASK | VM_MASK;
./tools/qemu-xen/tests/qruncom.c:    env->eip = 0x100;
./tools/qemu-xen/tests/qruncom.c:    env->regs[R_ESP] = 0xfffe;
./tools/qemu-xen/tests/qruncom.c:    env->idt.base = (unsigned long)idt_table;
./tools/qemu-xen/tests/qruncom.c:    env->idt.limit = sizeof(idt_table) - 1;
./tools/qemu-xen/tests/qruncom.c:    *seg_to_linear(env->segs[R_CS].selector, 0) = 0xb4; /* mov ah, $0 */
./tools/qemu-xen/tests/qruncom.c:    *seg_to_linear(env->segs[R_CS].selector, 1) = 0x00;
./tools/qemu-xen/tests/qruncom.c:    *seg_to_linear(env->segs[R_CS].selector, 2) = 0xcd; /* int $0x21 */
./tools/qemu-xen/tests/qruncom.c:    *seg_to_linear(env->segs[R_CS].selector, 3) = 0x21;
./tools/qemu-xen/tests/qruncom.c:    env->regs[R_ESI] = 0x100;
./tools/qemu-xen/tests/qruncom.c:    env->regs[R_ECX] = 0xff;
./tools/qemu-xen/tests/qruncom.c:    env->regs[R_EBP] = 0x0900;
./tools/qemu-xen/tests/qruncom.c:    env->regs[R_EDI] = 0xfffe;
./tools/qemu-xen/tests/qruncom.c:                int_num = *(uint8_t *)(env->segs[R_CS].base + env->eip + 1);
./tools/qemu-xen/tests/qruncom.c:                ah = (env->regs[R_EAX] >> 8) & 0xff;
./tools/qemu-xen/tests/qruncom.c:                        uint8_t c = env->regs[R_EDX];
./tools/qemu-xen/tests/qruncom.c:                            c = *seg_to_linear(env->segs[R_DS].selector, env->regs[R_EAX]);
./tools/qemu-xen/tests/qruncom.c:                        env->regs[R_EAX] = (env->regs[R_EAX] & ~0xff) | '$';
./tools/qemu-xen/tests/qruncom.c:                env->eip += 2;
./tools/qemu-xen/qemu-img.c:                                              drv->create_options);
./tools/qemu-xen/qemu-img.c:                                              proto_drv->create_options);
./tools/qemu-xen/qemu-img.c:                                              drv->create_options);
./tools/qemu-xen/qemu-img.c:                                              proto_drv->create_options);
./tools/qemu-xen/qemu-img.c:        if (!drv->bdrv_write_compressed) {
./tools/qemu-xen/vl.c:    /* only the linux version is qdev-ified, usb-bsd still needs this */
./tools/qemu-xen/target-xtensa/translate.c:    if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-xtensa/translate.c:        QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-xtensa/translate.c:    dc.config = env->config;
./tools/qemu-xen/target-xtensa/translate.c:    dc.singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-xtensa/translate.c:    dc.lbeg = env->sregs[LBEG];
./tools/qemu-xen/target-xtensa/translate.c:    dc.lend = env->sregs[LEND];
./tools/qemu-xen/target-xtensa/translate.c:    if (env->singlestep_enabled && env->exception_taken) {
./tools/qemu-xen/target-xtensa/translate.c:        env->exception_taken = 0;
./tools/qemu-xen/target-xtensa/translate.c:        if (env->singlestep_enabled) {
./tools/qemu-xen/target-xtensa/translate.c:    cpu_fprintf(f, "PC=%08x\n\n", env->pc);
./tools/qemu-xen/target-xtensa/translate.c:            cpu_fprintf(f, "%s=%08x%c", sregnames[i], env->sregs[i],
./tools/qemu-xen/target-xtensa/translate.c:            cpu_fprintf(f, "%s=%08x%c", uregnames[i], env->uregs[i],
./tools/qemu-xen/target-xtensa/translate.c:        cpu_fprintf(f, "A%02d=%08x%c", i, env->regs[i],
./tools/qemu-xen/target-xtensa/translate.c:    for (i = 0; i < env->config->nareg; ++i) {
./tools/qemu-xen/target-xtensa/translate.c:        cpu_fprintf(f, "AR%02d=%08x%c", i, env->phys_regs[i],
./tools/qemu-xen/target-xtensa/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-xtensa/op_helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_UNALIGNED_EXCEPTION) &&
./tools/qemu-xen/target-xtensa/op_helper.c:            !xtensa_option_enabled(env->config, XTENSA_OPTION_HW_ALIGNMENT)) {
./tools/qemu-xen/target-xtensa/op_helper.c:                env->pc, LOAD_STORE_ALIGNMENT_CAUSE, addr);
./tools/qemu-xen/target-xtensa/op_helper.c:            HELPER(exception_cause_vaddr)(env->pc, ret, vaddr);
./tools/qemu-xen/target-xtensa/op_helper.c:    env->exception_index = excp;
./tools/qemu-xen/target-xtensa/op_helper.c:    env->pc = pc;
./tools/qemu-xen/target-xtensa/op_helper.c:    if (env->sregs[PS] & PS_EXCM) {
./tools/qemu-xen/target-xtensa/op_helper.c:        if (env->config->ndepc) {
./tools/qemu-xen/target-xtensa/op_helper.c:            env->sregs[DEPC] = pc;
./tools/qemu-xen/target-xtensa/op_helper.c:            env->sregs[EPC1] = pc;
./tools/qemu-xen/target-xtensa/op_helper.c:        env->sregs[EPC1] = pc;
./tools/qemu-xen/target-xtensa/op_helper.c:        vector = (env->sregs[PS] & PS_UM) ? EXC_USER : EXC_KERNEL;
./tools/qemu-xen/target-xtensa/op_helper.c:    env->sregs[EXCCAUSE] = cause;
./tools/qemu-xen/target-xtensa/op_helper.c:    env->sregs[PS] |= PS_EXCM;
./tools/qemu-xen/target-xtensa/op_helper.c:    env->sregs[EXCVADDR] = vaddr;
./tools/qemu-xen/target-xtensa/op_helper.c:    assert(phys < env->config->nareg);
./tools/qemu-xen/target-xtensa/op_helper.c:    if (phys + n <= env->config->nareg) {
./tools/qemu-xen/target-xtensa/op_helper.c:        memcpy(env->regs + window, env->phys_regs + phys,
./tools/qemu-xen/target-xtensa/op_helper.c:        uint32_t n1 = env->config->nareg - phys;
./tools/qemu-xen/target-xtensa/op_helper.c:        memcpy(env->regs + window, env->phys_regs + phys,
./tools/qemu-xen/target-xtensa/op_helper.c:        memcpy(env->regs + window + n1, env->phys_regs,
./tools/qemu-xen/target-xtensa/op_helper.c:    assert(phys < env->config->nareg);
./tools/qemu-xen/target-xtensa/op_helper.c:    if (phys + n <= env->config->nareg) {
./tools/qemu-xen/target-xtensa/op_helper.c:        memcpy(env->phys_regs + phys, env->regs + window,
./tools/qemu-xen/target-xtensa/op_helper.c:        uint32_t n1 = env->config->nareg - phys;
./tools/qemu-xen/target-xtensa/op_helper.c:        memcpy(env->phys_regs + phys, env->regs + window,
./tools/qemu-xen/target-xtensa/op_helper.c:        memcpy(env->phys_regs, env->regs + window + n1,
./tools/qemu-xen/target-xtensa/op_helper.c:    return a & (env->config->nareg / 4 - 1);
./tools/qemu-xen/target-xtensa/op_helper.c:    copy_window_from_phys(env, 0, env->sregs[WINDOW_BASE] * 4, 16);
./tools/qemu-xen/target-xtensa/op_helper.c:    copy_phys_from_window(env, env->sregs[WINDOW_BASE] * 4, 0, 16);
./tools/qemu-xen/target-xtensa/op_helper.c:    env->sregs[WINDOW_BASE] = windowbase_bound(position, env);
./tools/qemu-xen/target-xtensa/op_helper.c:    rotate_window_abs(env->sregs[WINDOW_BASE] + delta);
./tools/qemu-xen/target-xtensa/op_helper.c:    int callinc = (env->sregs[PS] & PS_CALLINC) >> PS_CALLINC_SHIFT;
./tools/qemu-xen/target-xtensa/op_helper.c:    if (s > 3 || ((env->sregs[PS] & (PS_WOE | PS_EXCM)) ^ PS_WOE) != 0) {
./tools/qemu-xen/target-xtensa/op_helper.c:                pc, env->sregs[PS]);
./tools/qemu-xen/target-xtensa/op_helper.c:        env->regs[(callinc << 2) | (s & 3)] = env->regs[s] - (imm << 3);
./tools/qemu-xen/target-xtensa/op_helper.c:        env->sregs[WINDOW_START] |=
./tools/qemu-xen/target-xtensa/op_helper.c:            windowstart_bit(env->sregs[WINDOW_BASE], env);
./tools/qemu-xen/target-xtensa/op_helper.c:    uint32_t windowbase = windowbase_bound(env->sregs[WINDOW_BASE], env);
./tools/qemu-xen/target-xtensa/op_helper.c:    uint32_t windowstart = env->sregs[WINDOW_START];
./tools/qemu-xen/target-xtensa/op_helper.c:    if ((env->sregs[PS] & (PS_WOE | PS_EXCM)) ^ PS_WOE) {
./tools/qemu-xen/target-xtensa/op_helper.c:    env->sregs[PS] = (env->sregs[PS] & ~PS_OWB) |
./tools/qemu-xen/target-xtensa/op_helper.c:    env->sregs[EPC1] = env->pc = pc;
./tools/qemu-xen/target-xtensa/op_helper.c:    int n = (env->regs[0] >> 30) & 0x3;
./tools/qemu-xen/target-xtensa/op_helper.c:    uint32_t windowbase = windowbase_bound(env->sregs[WINDOW_BASE], env);
./tools/qemu-xen/target-xtensa/op_helper.c:    uint32_t windowstart = env->sregs[WINDOW_START];
./tools/qemu-xen/target-xtensa/op_helper.c:            ((env->sregs[PS] & (PS_WOE | PS_EXCM)) ^ PS_WOE) != 0) {
./tools/qemu-xen/target-xtensa/op_helper.c:                pc, env->sregs[PS], m, n);
./tools/qemu-xen/target-xtensa/op_helper.c:        ret_pc = (pc & 0xc0000000) | (env->regs[0] & 0x3fffffff);
./tools/qemu-xen/target-xtensa/op_helper.c:        if (windowstart & windowstart_bit(env->sregs[WINDOW_BASE], env)) {
./tools/qemu-xen/target-xtensa/op_helper.c:            env->sregs[WINDOW_START] &= ~windowstart_bit(owb, env);
./tools/qemu-xen/target-xtensa/op_helper.c:            env->sregs[PS] = (env->sregs[PS] & ~PS_OWB) |
./tools/qemu-xen/target-xtensa/op_helper.c:            env->sregs[EPC1] = env->pc = pc;
./tools/qemu-xen/target-xtensa/op_helper.c:    rotate_window_abs((env->sregs[PS] & PS_OWB) >> PS_OWB_SHIFT);
./tools/qemu-xen/target-xtensa/op_helper.c:    if ((env->sregs[WINDOW_START] &
./tools/qemu-xen/target-xtensa/op_helper.c:            (windowstart_bit(env->sregs[WINDOW_BASE] - 3, env) |
./tools/qemu-xen/target-xtensa/op_helper.c:             windowstart_bit(env->sregs[WINDOW_BASE] - 2, env) |
./tools/qemu-xen/target-xtensa/op_helper.c:             windowstart_bit(env->sregs[WINDOW_BASE] - 1, env))) == 0) {
./tools/qemu-xen/target-xtensa/op_helper.c:    if (env->sregs[LBEG] != v) {
./tools/qemu-xen/target-xtensa/op_helper.c:                env->sregs[LEND] - 1, env->sregs[LEND], 0);
./tools/qemu-xen/target-xtensa/op_helper.c:        env->sregs[LBEG] = v;
./tools/qemu-xen/target-xtensa/op_helper.c:    if (env->sregs[LEND] != v) {
./tools/qemu-xen/target-xtensa/op_helper.c:                env->sregs[LEND] - 1, env->sregs[LEND], 0);
./tools/qemu-xen/target-xtensa/op_helper.c:        env->sregs[LEND] = v;
./tools/qemu-xen/target-xtensa/op_helper.c:                env->sregs[LEND] - 1, env->sregs[LEND], 0);
./tools/qemu-xen/target-xtensa/op_helper.c:    env->pc = pc;
./tools/qemu-xen/target-xtensa/op_helper.c:    env->sregs[PS] = (env->sregs[PS] & ~PS_INTLEVEL) |
./tools/qemu-xen/target-xtensa/op_helper.c:    if (env->pending_irq_level) {
./tools/qemu-xen/target-xtensa/op_helper.c:    env->halt_clock = qemu_get_clock_ns(vm_clock);
./tools/qemu-xen/target-xtensa/op_helper.c:    env->halted = 1;
./tools/qemu-xen/target-xtensa/op_helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_TIMER_INTERRUPT)) {
./tools/qemu-xen/target-xtensa/op_helper.c:    if (v != env->sregs[RASID]) {
./tools/qemu-xen/target-xtensa/op_helper.c:        env->sregs[RASID] = v;
./tools/qemu-xen/target-xtensa/op_helper.c:    uint32_t tlbcfg = env->sregs[dtlb ? DTLBCFG : ITLBCFG];
./tools/qemu-xen/target-xtensa/op_helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_MMU)) {
./tools/qemu-xen/target-xtensa/op_helper.c:            env->config->dtlb.varway56 :
./tools/qemu-xen/target-xtensa/op_helper.c:            env->config->itlb.varway56;
./tools/qemu-xen/target-xtensa/op_helper.c:                env->config->dtlb.nrefillentries :
./tools/qemu-xen/target-xtensa/op_helper.c:                env->config->itlb.nrefillentries) == 32;
./tools/qemu-xen/target-xtensa/op_helper.c:            env->config->dtlb.varway56 :
./tools/qemu-xen/target-xtensa/op_helper.c:            env->config->itlb.varway56;
./tools/qemu-xen/target-xtensa/op_helper.c:        env->config->dtlb.varway56 :
./tools/qemu-xen/target-xtensa/op_helper.c:        env->config->itlb.varway56;
./tools/qemu-xen/target-xtensa/op_helper.c:                env->config->dtlb.nrefillentries :
./tools/qemu-xen/target-xtensa/op_helper.c:                env->config->itlb.nrefillentries) == 32;
./tools/qemu-xen/target-xtensa/op_helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_MMU)) {
./tools/qemu-xen/target-xtensa/op_helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_MMU)) {
./tools/qemu-xen/target-xtensa/op_helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_MMU)) {
./tools/qemu-xen/target-xtensa/op_helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_MMU)) {
./tools/qemu-xen/target-xtensa/op_helper.c:            HELPER(exception_cause_vaddr)(env->pc, res, v);
./tools/qemu-xen/target-xtensa/op_helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_MMU)) {
./tools/qemu-xen/target-xtensa/op_helper.c:            entry->asid = (env->sregs[RASID] >> ((pte >> 1) & 0x18)) & 0xff;
./tools/qemu-xen/target-xtensa/op_helper.c:        if (xtensa_option_enabled(env->config,
./tools/qemu-xen/target-xtensa/helper.c:    env->exception_taken = 0;
./tools/qemu-xen/target-xtensa/helper.c:    env->pc = env->config->exception_vector[EXC_RESET];
./tools/qemu-xen/target-xtensa/helper.c:    env->sregs[LITBASE] &= ~1;
./tools/qemu-xen/target-xtensa/helper.c:    env->sregs[PS] = xtensa_option_enabled(env->config,
./tools/qemu-xen/target-xtensa/helper.c:    env->sregs[VECBASE] = env->config->vecbase;
./tools/qemu-xen/target-xtensa/helper.c:    env->pending_irq_level = 0;
./tools/qemu-xen/target-xtensa/helper.c:    env->config = config;
./tools/qemu-xen/target-xtensa/helper.c:    if (xtensa_option_enabled(env->config,
./tools/qemu-xen/target-xtensa/helper.c:        return vector - env->config->vecbase + env->sregs[VECBASE];
./tools/qemu-xen/target-xtensa/helper.c:    int level = env->pending_irq_level;
./tools/qemu-xen/target-xtensa/helper.c:            level <= env->config->nlevel &&
./tools/qemu-xen/target-xtensa/helper.c:            (env->config->level_mask[level] &
./tools/qemu-xen/target-xtensa/helper.c:             env->sregs[INTSET] &
./tools/qemu-xen/target-xtensa/helper.c:             env->sregs[INTENABLE])) {
./tools/qemu-xen/target-xtensa/helper.c:            env->sregs[EPC1 + level - 1] = env->pc;
./tools/qemu-xen/target-xtensa/helper.c:            env->sregs[EPS2 + level - 2] = env->sregs[PS];
./tools/qemu-xen/target-xtensa/helper.c:            env->sregs[PS] =
./tools/qemu-xen/target-xtensa/helper.c:                (env->sregs[PS] & ~PS_INTLEVEL) | level | PS_EXCM;
./tools/qemu-xen/target-xtensa/helper.c:            env->pc = relocated_vector(env,
./tools/qemu-xen/target-xtensa/helper.c:                    env->config->interrupt_vector[level]);
./tools/qemu-xen/target-xtensa/helper.c:            env->sregs[EXCCAUSE] = LEVEL1_INTERRUPT_CAUSE;
./tools/qemu-xen/target-xtensa/helper.c:            if (env->sregs[PS] & PS_EXCM) {
./tools/qemu-xen/target-xtensa/helper.c:                if (env->config->ndepc) {
./tools/qemu-xen/target-xtensa/helper.c:                    env->sregs[DEPC] = env->pc;
./tools/qemu-xen/target-xtensa/helper.c:                    env->sregs[EPC1] = env->pc;
./tools/qemu-xen/target-xtensa/helper.c:                env->exception_index = EXC_DOUBLE;
./tools/qemu-xen/target-xtensa/helper.c:                env->sregs[EPC1] = env->pc;
./tools/qemu-xen/target-xtensa/helper.c:                env->exception_index =
./tools/qemu-xen/target-xtensa/helper.c:                    (env->sregs[PS] & PS_UM) ? EXC_USER : EXC_KERNEL;
./tools/qemu-xen/target-xtensa/helper.c:            env->sregs[PS] |= PS_EXCM;
./tools/qemu-xen/target-xtensa/helper.c:        env->exception_taken = 1;
./tools/qemu-xen/target-xtensa/helper.c:    if (env->exception_index == EXC_IRQ) {
./tools/qemu-xen/target-xtensa/helper.c:                __func__, env->pending_irq_level, xtensa_get_cintlevel(env),
./tools/qemu-xen/target-xtensa/helper.c:                env->pc, env->regs[0], env->sregs[PS],
./tools/qemu-xen/target-xtensa/helper.c:                env->sregs[INTSET], env->sregs[INTENABLE],
./tools/qemu-xen/target-xtensa/helper.c:                env->sregs[CCOUNT]);
./tools/qemu-xen/target-xtensa/helper.c:    switch (env->exception_index) {
./tools/qemu-xen/target-xtensa/helper.c:                __func__, env->exception_index,
./tools/qemu-xen/target-xtensa/helper.c:                env->pc, env->regs[0], env->sregs[PS], env->sregs[CCOUNT]);
./tools/qemu-xen/target-xtensa/helper.c:        if (env->config->exception_vector[env->exception_index]) {
./tools/qemu-xen/target-xtensa/helper.c:            env->pc = relocated_vector(env,
./tools/qemu-xen/target-xtensa/helper.c:                    env->config->exception_vector[env->exception_index]);
./tools/qemu-xen/target-xtensa/helper.c:            env->exception_taken = 1;
./tools/qemu-xen/target-xtensa/helper.c:                    __func__, env->pc, env->exception_index);
./tools/qemu-xen/target-xtensa/helper.c:                __func__, env->pc, env->exception_index);
./tools/qemu-xen/target-xtensa/helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_MMU)) {
./tools/qemu-xen/target-xtensa/helper.c:        env->sregs[RASID] = 0x04030201;
./tools/qemu-xen/target-xtensa/helper.c:        env->sregs[ITLBCFG] = 0;
./tools/qemu-xen/target-xtensa/helper.c:        env->sregs[DTLBCFG] = 0;
./tools/qemu-xen/target-xtensa/helper.c:        env->autorefill_idx = 0;
./tools/qemu-xen/target-xtensa/helper.c:        reset_tlb_mmu_all_ways(env, &env->config->itlb, env->itlb);
./tools/qemu-xen/target-xtensa/helper.c:        reset_tlb_mmu_all_ways(env, &env->config->dtlb, env->dtlb);
./tools/qemu-xen/target-xtensa/helper.c:        reset_tlb_mmu_ways56(env, &env->config->itlb, env->itlb);
./tools/qemu-xen/target-xtensa/helper.c:        reset_tlb_mmu_ways56(env, &env->config->dtlb, env->dtlb);
./tools/qemu-xen/target-xtensa/helper.c:        reset_tlb_region_way0(env, env->itlb);
./tools/qemu-xen/target-xtensa/helper.c:        reset_tlb_region_way0(env, env->dtlb);
./tools/qemu-xen/target-xtensa/helper.c:        if (((env->sregs[RASID] >> i * 8) & 0xff) == asid) {
./tools/qemu-xen/target-xtensa/helper.c:        &env->config->dtlb : &env->config->itlb;
./tools/qemu-xen/target-xtensa/helper.c:        env->dtlb : env->itlb;
./tools/qemu-xen/target-xtensa/helper.c:            (mmu_idx != 0 || ((vaddr ^ env->sregs[PTEVADDR]) & 0xffc00000)) &&
./tools/qemu-xen/target-xtensa/helper.c:        (env->sregs[PTEVADDR] | (vaddr >> 10)) & 0xfffffffc;
./tools/qemu-xen/target-xtensa/helper.c:        *wi = (++env->autorefill_idx) & 0x3;
./tools/qemu-xen/target-xtensa/helper.c:    if (xtensa_option_enabled(env->config, XTENSA_OPTION_MMU)) {
./tools/qemu-xen/target-xtensa/helper.c:    } else if (xtensa_option_bits_enabled(env->config,
./tools/qemu-xen/usb-bsd.c:    if (dev->ep_fd[ep] < 0) {
./tools/qemu-xen/usb-bsd.c:        snprintf(buf, sizeof(buf) - 1, "%s.%d", dev->devpath, ep);
./tools/qemu-xen/usb-bsd.c:        snprintf(buf, sizeof(buf) - 1, "%s.%02d", dev->devpath, ep);
./tools/qemu-xen/usb-bsd.c:        dev->ep_fd[ep] = fd;
./tools/qemu-xen/usb-bsd.c:    return dev->ep_fd[ep];
./tools/qemu-xen/usb-bsd.c:        if (dev->ep_fd[epnum] >= 0) {
./tools/qemu-xen/usb-bsd.c:            close(dev->ep_fd[epnum]);
./tools/qemu-xen/usb-bsd.c:            dev->ep_fd[epnum] = -1;
./tools/qemu-xen/usb-bsd.c:        dev->addr = value;
./tools/qemu-xen/usb-bsd.c:        dev->dev.speed = USB_SPEED_LOW - 1;
./tools/qemu-xen/usb-bsd.c:        dev->dev.speedmask = USB_SPEED_MASK_LOW;
./tools/qemu-xen/usb-bsd.c:        dev->dev.speed = USB_SPEED_FULL - 1;
./tools/qemu-xen/usb-bsd.c:        dev->dev.speedmask = USB_SPEED_MASK_FULL;
./tools/qemu-xen/usb-bsd.c:        pstrcpy(dev->dev.product_desc, sizeof(dev->dev.product_desc),
./tools/qemu-xen/usb-bsd.c:        snprintf(dev->dev.product_desc, sizeof(dev->dev.product_desc),
./tools/qemu-xen/usb-bsd.c:    pstrcpy(dev->devpath, sizeof(dev->devpath), "/dev/");
./tools/qemu-xen/usb-bsd.c:    pstrcat(dev->devpath, sizeof(dev->devpath), dev_info.udi_devnames[0]);
./tools/qemu-xen/usb-bsd.c:        dev->ep_fd[i] = -1;
./tools/qemu-xen/hmp.c:    monitor_printf(mon, "  Bus %2" PRId64 ", ", dev->bus);
./tools/qemu-xen/hmp.c:                   dev->slot, dev->function);
./tools/qemu-xen/hmp.c:    if (dev->class_info.has_desc) {
./tools/qemu-xen/hmp.c:        monitor_printf(mon, "%s", dev->class_info.desc);
./tools/qemu-xen/hmp.c:        monitor_printf(mon, "Class %04" PRId64, dev->class_info.class);
./tools/qemu-xen/hmp.c:                   dev->id.vendor, dev->id.device);
./tools/qemu-xen/hmp.c:    if (dev->has_irq) {
./tools/qemu-xen/hmp.c:        monitor_printf(mon, "      IRQ %" PRId64 ".\n", dev->irq);
./tools/qemu-xen/hmp.c:    if (dev->has_pci_bridge) {
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.number);
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.secondary);
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.subordinate);
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.io_range->base,
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.io_range->limit);
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.memory_range->base,
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.memory_range->limit);
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.prefetchable_range->base,
./tools/qemu-xen/hmp.c:                       dev->pci_bridge->bus.prefetchable_range->limit);
./tools/qemu-xen/hmp.c:    for (region = dev->regions; region; region = region->next) {
./tools/qemu-xen/hmp.c:    monitor_printf(mon, "      id \"%s\"\n", dev->qdev_id);
./tools/qemu-xen/hmp.c:    if (dev->has_pci_bridge) {
./tools/qemu-xen/hmp.c:        if (dev->pci_bridge->has_devices) {
./tools/qemu-xen/hmp.c:            for (cdev = dev->pci_bridge->devices; cdev; cdev = cdev->next) {
./tools/qemu-xen/hmp.c:                hmp_info_pci_device(mon, cdev->value);
./tools/qemu-xen/hmp.c:        for (dev = info->value->devices; dev; dev = dev->next) {
./tools/qemu-xen/hmp.c:            hmp_info_pci_device(mon, dev->value);
./tools/qemu-xen/qapi/qapi-visit-core.c:    if (!error_is_set(errp) && v->start_handle) {
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->start_handle(v, obj, kind, name, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:    if (!error_is_set(errp) && v->end_handle) {
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->end_handle(v, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->start_struct(v, obj, kind, name, size, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->end_struct(v, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->start_list(v, name, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        return v->next_list(v, list, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->end_list(v, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:    if (!error_is_set(errp) && v->start_optional) {
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->start_optional(v, present, name, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:    if (!error_is_set(errp) && v->end_optional) {
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->end_optional(v, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->type_enum(v, obj, strings, kind, name, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->type_int(v, obj, name, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->type_bool(v, obj, name, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->type_str(v, obj, name, errp);
./tools/qemu-xen/qapi/qapi-visit-core.c:        v->type_number(v, obj, name, errp);
./tools/qemu-xen/qapi/qmp-input-visitor.c:    if (qiv->nb_stack == 0) {
./tools/qemu-xen/qapi/qmp-input-visitor.c:        qobj = qiv->obj;
./tools/qemu-xen/qapi/qmp-input-visitor.c:        qobj = qiv->stack[qiv->nb_stack - 1].obj;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    } else if (qiv->nb_stack > 0 && qobject_type(qobj) == QTYPE_QLIST) {
./tools/qemu-xen/qapi/qmp-input-visitor.c:        return qlist_entry_obj(qiv->stack[qiv->nb_stack - 1].entry);
./tools/qemu-xen/qapi/qmp-input-visitor.c:    qiv->stack[qiv->nb_stack].obj = obj;
./tools/qemu-xen/qapi/qmp-input-visitor.c:        qiv->stack[qiv->nb_stack].entry = qlist_first(qobject_to_qlist(obj));
./tools/qemu-xen/qapi/qmp-input-visitor.c:    qiv->nb_stack++;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    if (qiv->nb_stack >= QIV_STACK_SIZE) {
./tools/qemu-xen/qapi/qmp-input-visitor.c:    qiv->nb_stack--;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    if (qiv->nb_stack < 0) {
./tools/qemu-xen/qapi/qmp-input-visitor.c:    StackObject *so = &qiv->stack[qiv->nb_stack - 1];
./tools/qemu-xen/qapi/qmp-input-visitor.c:    return &v->visitor;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    qobject_decref(v->obj);
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.start_struct = qmp_input_start_struct;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.end_struct = qmp_input_end_struct;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.start_list = qmp_input_start_list;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.next_list = qmp_input_next_list;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.end_list = qmp_input_end_list;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.type_enum = qmp_input_type_enum;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.type_int = qmp_input_type_int;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.type_bool = qmp_input_type_bool;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.type_str = qmp_input_type_str;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.type_number = qmp_input_type_number;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.start_optional = qmp_input_start_optional;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->visitor.end_optional = qmp_input_end_optional;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    v->obj = obj;
./tools/qemu-xen/qapi/qmp-input-visitor.c:    qobject_incref(v->obj);
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    QTAILQ_INSERT_HEAD(&qov->stack, e, node);
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    StackEntry *e = QTAILQ_FIRST(&qov->stack);
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    QTAILQ_REMOVE(&qov->stack, e, node);
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    StackEntry *e = QTAILQ_FIRST(&qov->stack);
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    return &v->visitor;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.start_struct = qapi_dealloc_start_struct;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.end_struct = qapi_dealloc_end_struct;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.start_list = qapi_dealloc_start_list;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.next_list = qapi_dealloc_next_list;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.end_list = qapi_dealloc_end_list;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.type_enum = qapi_dealloc_type_enum;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.type_int = qapi_dealloc_type_int;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.type_bool = qapi_dealloc_type_bool;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.type_str = qapi_dealloc_type_str;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    v->visitor.type_number = qapi_dealloc_type_number;
./tools/qemu-xen/qapi/qapi-dealloc-visitor.c:    QTAILQ_INIT(&v->stack);
./tools/qemu-xen/qapi/qmp-output-visitor.c:    QTAILQ_INSERT_HEAD(&qov->stack, e, node);
./tools/qemu-xen/qapi/qmp-output-visitor.c:    QStackEntry *e = QTAILQ_FIRST(&qov->stack);
./tools/qemu-xen/qapi/qmp-output-visitor.c:    QTAILQ_REMOVE(&qov->stack, e, node);
./tools/qemu-xen/qapi/qmp-output-visitor.c:    QStackEntry *e = QTAILQ_LAST(&qov->stack, QStack);
./tools/qemu-xen/qapi/qmp-output-visitor.c:    QStackEntry *e = QTAILQ_FIRST(&qov->stack);
./tools/qemu-xen/qapi/qmp-output-visitor.c:    if (QTAILQ_EMPTY(&qov->stack)) {
./tools/qemu-xen/qapi/qmp-output-visitor.c:    QStackEntry *e = QTAILQ_FIRST(&qov->stack);
./tools/qemu-xen/qapi/qmp-output-visitor.c:    return &v->visitor;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    QTAILQ_FOREACH_SAFE(e, &v->stack, node, tmp) {
./tools/qemu-xen/qapi/qmp-output-visitor.c:        QTAILQ_REMOVE(&v->stack, e, node);
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.start_struct = qmp_output_start_struct;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.end_struct = qmp_output_end_struct;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.start_list = qmp_output_start_list;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.next_list = qmp_output_next_list;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.end_list = qmp_output_end_list;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.type_enum = qmp_output_type_enum;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.type_int = qmp_output_type_int;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.type_bool = qmp_output_type_bool;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.type_str = qmp_output_type_str;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    v->visitor.type_number = qmp_output_type_number;
./tools/qemu-xen/qapi/qmp-output-visitor.c:    QTAILQ_INIT(&v->stack);
./tools/qemu-xen/target-unicore32/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-unicore32/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-unicore32/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-unicore32/translate.c:             !env->singlestep_enabled &&
./tools/qemu-xen/target-unicore32/translate.c:    if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen/target-unicore32/translate.c:        cpu_fprintf(f, "R%02d=%08x", i, env->regs[i]);
./tools/qemu-xen/target-unicore32/translate.c:        d.d = env->ucf64.regs[i];
./tools/qemu-xen/target-unicore32/translate.c:    cpu_fprintf(f, "FPSCR: %08x\n", (int)env->ucf64.xregs[UC32_UCF64_FPSCR]);
./tools/qemu-xen/target-unicore32/translate.c:    env->regs[31] = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-unicore32/op_helper.c:    env->exception_index = excp;
./tools/qemu-xen/target-unicore32/op_helper.c:    ZF = (env->ZF == 0);
./tools/qemu-xen/target-unicore32/op_helper.c:    return env->uncached_asr | (env->NF & 0x80000000) | (ZF << 30) |
./tools/qemu-xen/target-unicore32/op_helper.c:        (env->CF << 29) | ((env->VF & 0x80000000) >> 3);
./tools/qemu-xen/target-unicore32/op_helper.c:        env->ZF = (~val) & ASR_Z;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->NF = val;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = (val >> 29) & 1;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->VF = (val << 3) & 0x80000000;
./tools/qemu-xen/target-unicore32/op_helper.c:    if ((env->uncached_asr ^ val) & mask & ASR_M) {
./tools/qemu-xen/target-unicore32/op_helper.c:    env->uncached_asr = (env->uncached_asr & ~mask) | (val & mask);
./tools/qemu-xen/target-unicore32/op_helper.c:        val = env->banked_r29[0];
./tools/qemu-xen/target-unicore32/op_helper.c:        val = env->banked_r30[0];
./tools/qemu-xen/target-unicore32/op_helper.c:        val = env->regs[regno];
./tools/qemu-xen/target-unicore32/op_helper.c:        env->banked_r29[0] = val;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->banked_r30[0] = val;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->regs[regno] = val;
./tools/qemu-xen/target-unicore32/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen/target-unicore32/op_helper.c:    env->CF = result < a;
./tools/qemu-xen/target-unicore32/op_helper.c:    env->VF = (a ^ b ^ -1) & (a ^ result);
./tools/qemu-xen/target-unicore32/op_helper.c:    if (!env->CF) {
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = result < a;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = result <= a;
./tools/qemu-xen/target-unicore32/op_helper.c:    env->VF = (a ^ b ^ -1) & (a ^ result);
./tools/qemu-xen/target-unicore32/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen/target-unicore32/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen/target-unicore32/op_helper.c:    env->CF = a >= b;
./tools/qemu-xen/target-unicore32/op_helper.c:    env->VF = (a ^ b) & (a ^ result);
./tools/qemu-xen/target-unicore32/op_helper.c:    if (!env->CF) {
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = a > b;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = a >= b;
./tools/qemu-xen/target-unicore32/op_helper.c:    env->VF = (a ^ b) & (a ^ result);
./tools/qemu-xen/target-unicore32/op_helper.c:    env->NF = env->ZF = result;
./tools/qemu-xen/target-unicore32/op_helper.c:            env->CF = x & 1;
./tools/qemu-xen/target-unicore32/op_helper.c:            env->CF = 0;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = (x >> (32 - shift)) & 1;
./tools/qemu-xen/target-unicore32/op_helper.c:            env->CF = (x >> 31) & 1;
./tools/qemu-xen/target-unicore32/op_helper.c:            env->CF = 0;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = (x >> 31) & 1;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen/target-unicore32/op_helper.c:            env->CF = (x >> 31) & 1;
./tools/qemu-xen/target-unicore32/op_helper.c:        env->CF = (x >> (shift - 1)) & 1;
./tools/qemu-xen/target-unicore32/helper.c:    env->features |= feature;
./tools/qemu-xen/target-unicore32/helper.c:        env->ucf64.xregs[UC32_UCF64_FPSCR] = 0;
./tools/qemu-xen/target-unicore32/helper.c:        env->cp0.c0_cachetype = 0x1dd20d2;
./tools/qemu-xen/target-unicore32/helper.c:        env->cp0.c1_sys = 0x00090078;
./tools/qemu-xen/target-unicore32/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/target-unicore32/helper.c:    env->cp0.c0_cpuid = id;
./tools/qemu-xen/target-unicore32/helper.c:    env->uncached_asr = ASR_MODE_USER;
./tools/qemu-xen/target-unicore32/helper.c:    env->regs[31] = 0;
./tools/qemu-xen/target-unicore32/helper.c:    env->exception_index = -1;
./tools/qemu-xen/target-unicore32/helper.c:    env->exception_index = UC32_EXCP_TRAP;
./tools/qemu-xen/target-unicore32/helper.c:    env->cp0.c4_faultaddr = address;
./tools/qemu-xen/target-unicore32/helper.c:    fpscr = (env->ucf64.xregs[UC32_UCF64_FPSCR] & UCF64_FPSCR_MASK);
./tools/qemu-xen/target-unicore32/helper.c:    i = get_float_exception_flags(&env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    changed = env->ucf64.xregs[UC32_UCF64_FPSCR];
./tools/qemu-xen/target-unicore32/helper.c:    env->ucf64.xregs[UC32_UCF64_FPSCR] = (val & UCF64_FPSCR_MASK);
./tools/qemu-xen/target-unicore32/helper.c:        set_float_rounding_mode(i, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    set_float_exception_flags(i, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float32_add(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float64_add(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float32_sub(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float64_sub(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float32_mul(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float64_mul(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float32_div(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float64_div(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    flag = float32_compare_quiet(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    env->CF = 0;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:    env->ucf64.xregs[UC32_UCF64_FPSCR] = (env->CF << 29)
./tools/qemu-xen/target-unicore32/helper.c:                    | (env->ucf64.xregs[UC32_UCF64_FPSCR] & 0x0fffffff);
./tools/qemu-xen/target-unicore32/helper.c:    flag = float64_compare_quiet(a, b, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    env->CF = 0;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:            env->CF = 1;
./tools/qemu-xen/target-unicore32/helper.c:    env->ucf64.xregs[UC32_UCF64_FPSCR] = (env->CF << 29)
./tools/qemu-xen/target-unicore32/helper.c:                    | (env->ucf64.xregs[UC32_UCF64_FPSCR] & 0x0fffffff);
./tools/qemu-xen/target-unicore32/helper.c:    return int32_to_float32(ucf64_stoi(x), &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return int32_to_float64(ucf64_stoi(x), &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return ucf64_itos(float32_to_int32(x, &env->ucf64.fp_status));
./tools/qemu-xen/target-unicore32/helper.c:    return ucf64_itos(float64_to_int32(x, &env->ucf64.fp_status));
./tools/qemu-xen/target-unicore32/helper.c:    return float32_to_float64(x, &env->ucf64.fp_status);
./tools/qemu-xen/target-unicore32/helper.c:    return float64_to_float32(x, &env->ucf64.fp_status);
./tools/qemu-xen/monitor.c:    for(env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/monitor.c:        if (env->cpu_index == cpu_index) {
./tools/qemu-xen/monitor.c:                if ((env->efer & MSR_EFER_LMA) &&
./tools/qemu-xen/monitor.c:                    (env->segs[R_CS].flags & DESC_L_MASK))
./tools/qemu-xen/monitor.c:                if (!(env->segs[R_CS].flags & DESC_B_MASK))
./tools/qemu-xen/monitor.c:    pgd = env->cr[3] & ~0xfff;
./tools/qemu-xen/monitor.c:            if ((pde & PG_PSE_MASK) && (env->cr[4] & CR4_PSE_MASK)) {
./tools/qemu-xen/monitor.c:    pdp_addr = env->cr[3] & ~0x1f;
./tools/qemu-xen/monitor.c:    pml4_addr = env->cr[3] & 0x3fffffffff000ULL;
./tools/qemu-xen/monitor.c:    if (!(env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen/monitor.c:    if (env->cr[4] & CR4_PAE_MASK) {
./tools/qemu-xen/monitor.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/monitor.c:    pgd = env->cr[3] & ~0xfff;
./tools/qemu-xen/monitor.c:            if ((pde & PG_PSE_MASK) && (env->cr[4] & CR4_PSE_MASK)) {
./tools/qemu-xen/monitor.c:    pdp_addr = env->cr[3] & ~0x1f;
./tools/qemu-xen/monitor.c:    pml4_addr = env->cr[3] & 0x3fffffffff000ULL;
./tools/qemu-xen/monitor.c:    if (!(env->cr[0] & CR0_PG_MASK)) {
./tools/qemu-xen/monitor.c:    if (env->cr[4] & CR4_PAE_MASK) {
./tools/qemu-xen/monitor.c:        if (env->hflags & HF_LMA_MASK) {
./tools/qemu-xen/monitor.c:        print_tlb (mon, i, &env->itlb[i]);
./tools/qemu-xen/monitor.c:        print_tlb (mon, i, &env->utlb[i]);
./tools/qemu-xen/monitor.c:        for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/monitor.c:            if (env->numa_node == i) {
./tools/qemu-xen/monitor.c:                monitor_printf(mon, " %d", env->cpu_index);
./tools/qemu-xen/monitor.c:    for (env = first_cpu; env != NULL; env = env->next_cpu) {
./tools/qemu-xen/monitor.c:    for (cenv = first_cpu; cenv != NULL; cenv = cenv->next_cpu) {
./tools/qemu-xen/monitor.c:        if (cenv->cpu_index == cpu_index) {
./tools/qemu-xen/monitor.c:    return env->eip + env->segs[R_CS].base;
./tools/qemu-xen/monitor.c:        u |= env->crf[i] << (32 - (4 * i));
./tools/qemu-xen/monitor.c:    return env->msr;
./tools/qemu-xen/monitor.c:    return env->xer;
./tools/qemu-xen/monitor.c:    return env->regwptr[val];
./tools/qemu-xen/target-mips/machine.c:    save_tc(f, &env->active_tc);
./tools/qemu-xen/target-mips/machine.c:    save_fpu(f, &env->active_fpu);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->mvp->CP0_MVPControl);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->mvp->CP0_MVPConf0);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->mvp->CP0_MVPConf1);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_be32s(f, &env->tlb->nb_tlb);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_be32s(f, &env->tlb->tlb_in_use);
./tools/qemu-xen/target-mips/machine.c:        uint16_t flags = ((env->tlb->mmu.r4k.tlb[i].G << 10) |
./tools/qemu-xen/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].C0 << 7) |
./tools/qemu-xen/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].C1 << 4) |
./tools/qemu-xen/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].V0 << 3) |
./tools/qemu-xen/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].V1 << 2) |
./tools/qemu-xen/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].D0 << 1) |
./tools/qemu-xen/target-mips/machine.c:                          (env->tlb->mmu.r4k.tlb[i].D1 << 0));
./tools/qemu-xen/target-mips/machine.c:        qemu_put_betls(f, &env->tlb->mmu.r4k.tlb[i].VPN);
./tools/qemu-xen/target-mips/machine.c:        qemu_put_be32s(f, &env->tlb->mmu.r4k.tlb[i].PageMask);
./tools/qemu-xen/target-mips/machine.c:        asid = env->tlb->mmu.r4k.tlb[i].ASID;
./tools/qemu-xen/target-mips/machine.c:        qemu_put_betls(f, &env->tlb->mmu.r4k.tlb[i].PFN[0]);
./tools/qemu-xen/target-mips/machine.c:        qemu_put_betls(f, &env->tlb->mmu.r4k.tlb[i].PFN[1]);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_be32s(f, &env->current_tc);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_be32s(f, &env->current_fpu);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->error_code);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_be32s(f, &env->hflags);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->btarget);
./tools/qemu-xen/target-mips/machine.c:    i = env->bcond;
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Index);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Random);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_VPEControl);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_VPEConf0);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_VPEConf1);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_YQMask);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_VPESchedule);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_VPEScheFBack);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_VPEOpt);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_EntryLo0);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_EntryLo1);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_Context);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_PageMask);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_PageGrain);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Wired);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf0);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf1);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf2);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf3);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSConf4);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_HWREna);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_BadVAddr);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Count);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_EntryHi);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Compare);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Status);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_IntCtl);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSCtl);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_SRSMap);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Cause);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_EPC);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_PRid);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_EBase);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config0);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config1);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config2);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config3);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config6);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Config7);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->lladdr);
./tools/qemu-xen/target-mips/machine.c:        qemu_put_betls(f, &env->CP0_WatchLo[i]);
./tools/qemu-xen/target-mips/machine.c:        qemu_put_sbe32s(f, &env->CP0_WatchHi[i]);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_XContext);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Framemask);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Debug);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_DEPC);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_Performance0);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_TagLo);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_DataLo);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_TagHi);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_DataHi);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_betls(f, &env->CP0_ErrorEPC);
./tools/qemu-xen/target-mips/machine.c:    qemu_put_sbe32s(f, &env->CP0_DESAVE);
./tools/qemu-xen/target-mips/machine.c:        save_tc(f, &env->tcs[i]);
./tools/qemu-xen/target-mips/machine.c:        save_fpu(f, &env->fpus[i]);
./tools/qemu-xen/target-mips/machine.c:    load_tc(f, &env->active_tc);
./tools/qemu-xen/target-mips/machine.c:    load_fpu(f, &env->active_fpu);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->mvp->CP0_MVPControl);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->mvp->CP0_MVPConf0);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->mvp->CP0_MVPConf1);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_be32s(f, &env->tlb->nb_tlb);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_be32s(f, &env->tlb->tlb_in_use);
./tools/qemu-xen/target-mips/machine.c:        qemu_get_betls(f, &env->tlb->mmu.r4k.tlb[i].VPN);
./tools/qemu-xen/target-mips/machine.c:        qemu_get_be32s(f, &env->tlb->mmu.r4k.tlb[i].PageMask);
./tools/qemu-xen/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].ASID = asid;
./tools/qemu-xen/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].G = (flags >> 10) & 1;
./tools/qemu-xen/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].C0 = (flags >> 7) & 3;
./tools/qemu-xen/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].C1 = (flags >> 4) & 3;
./tools/qemu-xen/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].V0 = (flags >> 3) & 1;
./tools/qemu-xen/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].V1 = (flags >> 2) & 1;
./tools/qemu-xen/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].D0 = (flags >> 1) & 1;
./tools/qemu-xen/target-mips/machine.c:        env->tlb->mmu.r4k.tlb[i].D1 = (flags >> 0) & 1;
./tools/qemu-xen/target-mips/machine.c:        qemu_get_betls(f, &env->tlb->mmu.r4k.tlb[i].PFN[0]);
./tools/qemu-xen/target-mips/machine.c:        qemu_get_betls(f, &env->tlb->mmu.r4k.tlb[i].PFN[1]);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_be32s(f, &env->current_tc);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_be32s(f, &env->current_fpu);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->error_code);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_be32s(f, &env->hflags);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->btarget);
./tools/qemu-xen/target-mips/machine.c:    env->bcond = i;
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Index);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Random);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_VPEControl);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_VPEConf0);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_VPEConf1);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_YQMask);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_VPESchedule);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_VPEScheFBack);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_VPEOpt);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_EntryLo0);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_EntryLo1);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_Context);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_PageMask);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_PageGrain);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Wired);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf0);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf1);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf2);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf3);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSConf4);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_HWREna);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_BadVAddr);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Count);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_EntryHi);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Compare);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Status);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_IntCtl);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSCtl);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_SRSMap);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Cause);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_EPC);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_PRid);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_EBase);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config0);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config1);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config2);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config3);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config6);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Config7);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->lladdr);
./tools/qemu-xen/target-mips/machine.c:        qemu_get_betls(f, &env->CP0_WatchLo[i]);
./tools/qemu-xen/target-mips/machine.c:        qemu_get_sbe32s(f, &env->CP0_WatchHi[i]);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_XContext);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Framemask);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Debug);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_DEPC);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_Performance0);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_TagLo);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_DataLo);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_TagHi);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_DataHi);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_betls(f, &env->CP0_ErrorEPC);
./tools/qemu-xen/target-mips/machine.c:    qemu_get_sbe32s(f, &env->CP0_DESAVE);
./tools/qemu-xen/target-mips/machine.c:        load_tc(f, &env->tcs[i]);
./tools/qemu-xen/target-mips/machine.c:        load_fpu(f, &env->fpus[i]);
./tools/qemu-xen/target-mips/translate.c:        ctx->btarget = env->btarget;
./tools/qemu-xen/target-mips/translate.c:    if (unlikely(!(env->insn_flags & flags)))
./tools/qemu-xen/target-mips/translate.c:    if (rt == 0 && env->insn_flags & (INSN_LOONGSON2E | INSN_LOONGSON2F)) {
./tools/qemu-xen/target-mips/translate.c:    if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen/target-mips/translate.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/translate.c:    if ((env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP)) == 0 &&
./tools/qemu-xen/target-mips/translate.c:        ((env->tcs[other_tc].CP0_TCBind & (0xf << CP0TCBd_CurVPE)) !=
./tools/qemu-xen/target-mips/translate.c:         (env->active_tc.CP0_TCBind & (0xf << CP0TCBd_CurVPE))))
./tools/qemu-xen/target-mips/translate.c:    else if ((env->CP0_VPEControl & (0xff << CP0VPECo_TargTC)) >
./tools/qemu-xen/target-mips/translate.c:             (env->mvp->CP0_MVPConf0 & (0xff << CP0MVPC0_PTC)))
./tools/qemu-xen/target-mips/translate.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/translate.c:    if ((env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP)) == 0 &&
./tools/qemu-xen/target-mips/translate.c:        ((env->tcs[other_tc].CP0_TCBind & (0xf << CP0TCBd_CurVPE)) !=
./tools/qemu-xen/target-mips/translate.c:         (env->active_tc.CP0_TCBind & (0xf << CP0TCBd_CurVPE))))
./tools/qemu-xen/target-mips/translate.c:    else if ((env->CP0_VPEControl & (0xff << CP0VPECo_TargTC)) >
./tools/qemu-xen/target-mips/translate.c:             (env->mvp->CP0_MVPConf0 & (0xff << CP0MVPC0_PTC)))
./tools/qemu-xen/target-mips/translate.c:        if (!env->tlb->helper_tlbwi)
./tools/qemu-xen/target-mips/translate.c:        if (!env->tlb->helper_tlbwr)
./tools/qemu-xen/target-mips/translate.c:        if (!env->tlb->helper_tlbp)
./tools/qemu-xen/target-mips/translate.c:        if (!env->tlb->helper_tlbr)
./tools/qemu-xen/target-mips/translate.c:            if (env->insn_flags & (ASE_MIPS16 | ASE_MICROMIPS)) {
./tools/qemu-xen/target-mips/translate.c:        if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen/target-mips/translate.c:        env->CP0_BadVAddr = ctx->pc;
./tools/qemu-xen/target-mips/translate.c:        env->CP0_BadVAddr = ctx->pc;
./tools/qemu-xen/target-mips/translate.c:                if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen/target-mips/translate.c:                if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen/target-mips/translate.c:            if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen/target-mips/translate.c:                if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen/target-mips/translate.c:                if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen/target-mips/translate.c:                if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen/target-mips/translate.c:        if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen/target-mips/translate.c:        if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen/target-mips/translate.c:    ctx.singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-mips/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-mips/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-mips/translate.c:        } else if (env->insn_flags & ASE_MICROMIPS) {
./tools/qemu-xen/target-mips/translate.c:        } else if (env->insn_flags & ASE_MIPS16) {
./tools/qemu-xen/target-mips/translate.c:        if (env->singlestep_enabled && (ctx.hflags & MIPS_HFLAG_BMASK) == 0)
./tools/qemu-xen/target-mips/translate.c:    if (env->singlestep_enabled && ctx.bstate != BS_BRANCH) {
./tools/qemu-xen/target-mips/translate.c:    int is_fpu64 = !!(env->hflags & MIPS_HFLAG_F64);
./tools/qemu-xen/target-mips/translate.c:                env->active_fpu.fcr0, env->active_fpu.fcr31, is_fpu64,
./tools/qemu-xen/target-mips/translate.c:                get_float_exception_flags(&env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/translate.c:        printfpr(&env->active_fpu.fpr[i]);
./tools/qemu-xen/target-mips/translate.c:    if (!SIGN_EXT_P(env->active_tc.PC))
./tools/qemu-xen/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: pc=0x" TARGET_FMT_lx "\n", env->active_tc.PC);
./tools/qemu-xen/target-mips/translate.c:    if (!SIGN_EXT_P(env->active_tc.HI[0]))
./tools/qemu-xen/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: HI=0x" TARGET_FMT_lx "\n", env->active_tc.HI[0]);
./tools/qemu-xen/target-mips/translate.c:    if (!SIGN_EXT_P(env->active_tc.LO[0]))
./tools/qemu-xen/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: LO=0x" TARGET_FMT_lx "\n", env->active_tc.LO[0]);
./tools/qemu-xen/target-mips/translate.c:    if (!SIGN_EXT_P(env->btarget))
./tools/qemu-xen/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: btarget=0x" TARGET_FMT_lx "\n", env->btarget);
./tools/qemu-xen/target-mips/translate.c:        if (!SIGN_EXT_P(env->active_tc.gpr[i]))
./tools/qemu-xen/target-mips/translate.c:            cpu_fprintf(f, "BROKEN: %s=0x" TARGET_FMT_lx "\n", regnames[i], env->active_tc.gpr[i]);
./tools/qemu-xen/target-mips/translate.c:    if (!SIGN_EXT_P(env->CP0_EPC))
./tools/qemu-xen/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: EPC=0x" TARGET_FMT_lx "\n", env->CP0_EPC);
./tools/qemu-xen/target-mips/translate.c:    if (!SIGN_EXT_P(env->lladdr))
./tools/qemu-xen/target-mips/translate.c:        cpu_fprintf(f, "BROKEN: LLAddr=0x" TARGET_FMT_lx "\n", env->lladdr);
./tools/qemu-xen/target-mips/translate.c:                env->active_tc.PC, env->active_tc.HI[0], env->active_tc.LO[0],
./tools/qemu-xen/target-mips/translate.c:                env->hflags, env->btarget, env->bcond);
./tools/qemu-xen/target-mips/translate.c:        cpu_fprintf(f, " %s " TARGET_FMT_lx, regnames[i], env->active_tc.gpr[i]);
./tools/qemu-xen/target-mips/translate.c:                env->CP0_Status, env->CP0_Cause, env->CP0_EPC);
./tools/qemu-xen/target-mips/translate.c:                env->CP0_Config0, env->CP0_Config1, env->lladdr);
./tools/qemu-xen/target-mips/translate.c:    if (env->hflags & MIPS_HFLAG_FPU)
./tools/qemu-xen/target-mips/translate.c:    env->cpu_model = def;
./tools/qemu-xen/target-mips/translate.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/target-mips/translate.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-mips/translate.c:    env->CP0_PRid = env->cpu_model->CP0_PRid;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Config0 = env->cpu_model->CP0_Config0;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Config0 |= (1 << CP0C0_BE);
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Config1 = env->cpu_model->CP0_Config1;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Config2 = env->cpu_model->CP0_Config2;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Config3 = env->cpu_model->CP0_Config3;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Config6 = env->cpu_model->CP0_Config6;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Config7 = env->cpu_model->CP0_Config7;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_LLAddr_rw_bitmask = env->cpu_model->CP0_LLAddr_rw_bitmask
./tools/qemu-xen/target-mips/translate.c:                                 << env->cpu_model->CP0_LLAddr_shift;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_LLAddr_shift = env->cpu_model->CP0_LLAddr_shift;
./tools/qemu-xen/target-mips/translate.c:    env->SYNCI_Step = env->cpu_model->SYNCI_Step;
./tools/qemu-xen/target-mips/translate.c:    env->CCRes = env->cpu_model->CCRes;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Status_rw_bitmask = env->cpu_model->CP0_Status_rw_bitmask;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_TCStatus_rw_bitmask = env->cpu_model->CP0_TCStatus_rw_bitmask;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSCtl = env->cpu_model->CP0_SRSCtl;
./tools/qemu-xen/target-mips/translate.c:    env->current_tc = 0;
./tools/qemu-xen/target-mips/translate.c:    env->SEGBITS = env->cpu_model->SEGBITS;
./tools/qemu-xen/target-mips/translate.c:    env->SEGMask = (target_ulong)((1ULL << env->cpu_model->SEGBITS) - 1);
./tools/qemu-xen/target-mips/translate.c:    if (env->cpu_model->insn_flags & ISA_MIPS3) {
./tools/qemu-xen/target-mips/translate.c:        env->SEGMask |= 3ULL << 62;
./tools/qemu-xen/target-mips/translate.c:    env->PABITS = env->cpu_model->PABITS;
./tools/qemu-xen/target-mips/translate.c:    env->PAMask = (target_ulong)((1ULL << env->cpu_model->PABITS) - 1);
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf0_rw_bitmask = env->cpu_model->CP0_SRSConf0_rw_bitmask;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf0 = env->cpu_model->CP0_SRSConf0;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf1_rw_bitmask = env->cpu_model->CP0_SRSConf1_rw_bitmask;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf1 = env->cpu_model->CP0_SRSConf1;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf2_rw_bitmask = env->cpu_model->CP0_SRSConf2_rw_bitmask;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf2 = env->cpu_model->CP0_SRSConf2;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf3_rw_bitmask = env->cpu_model->CP0_SRSConf3_rw_bitmask;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf3 = env->cpu_model->CP0_SRSConf3;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf4_rw_bitmask = env->cpu_model->CP0_SRSConf4_rw_bitmask;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_SRSConf4 = env->cpu_model->CP0_SRSConf4;
./tools/qemu-xen/target-mips/translate.c:    env->insn_flags = env->cpu_model->insn_flags;
./tools/qemu-xen/target-mips/translate.c:    env->hflags = MIPS_HFLAG_UM;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_HWREna |= (1 << 1);
./tools/qemu-xen/target-mips/translate.c:    if (env->CP0_Config1 & (1 << CP0C1_FP)) {
./tools/qemu-xen/target-mips/translate.c:        env->hflags |= MIPS_HFLAG_FPU;
./tools/qemu-xen/target-mips/translate.c:    if (env->active_fpu.fcr0 & (1 << FCR0_F64)) {
./tools/qemu-xen/target-mips/translate.c:        env->hflags |= MIPS_HFLAG_F64;
./tools/qemu-xen/target-mips/translate.c:    if (env->hflags & MIPS_HFLAG_BMASK) {
./tools/qemu-xen/target-mips/translate.c:        env->CP0_ErrorEPC = env->active_tc.PC - 4;
./tools/qemu-xen/target-mips/translate.c:        env->CP0_ErrorEPC = env->active_tc.PC;
./tools/qemu-xen/target-mips/translate.c:    env->active_tc.PC = (int32_t)0xBFC00000;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Random = env->tlb->nb_tlb - 1;
./tools/qemu-xen/target-mips/translate.c:    env->tlb->tlb_in_use = env->tlb->nb_tlb;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Wired = 0;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_EBase = 0x80000000 | (env->cpu_index & 0x3FF);
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Status = (1 << CP0St_BEV) | (1 << CP0St_ERL);
./tools/qemu-xen/target-mips/translate.c:    env->CP0_IntCtl = 0xe0000000;
./tools/qemu-xen/target-mips/translate.c:            env->CP0_WatchLo[i] = 0;
./tools/qemu-xen/target-mips/translate.c:            env->CP0_WatchHi[i] = 0x80000000;
./tools/qemu-xen/target-mips/translate.c:        env->CP0_WatchLo[7] = 0;
./tools/qemu-xen/target-mips/translate.c:        env->CP0_WatchHi[7] = 0;
./tools/qemu-xen/target-mips/translate.c:    env->CP0_Debug = (1 << CP0DB_CNT) | (0x1 << CP0DB_VER);
./tools/qemu-xen/target-mips/translate.c:    env->hflags = MIPS_HFLAG_CP0;
./tools/qemu-xen/target-mips/translate.c:    if (env->CP0_Config3 & (1 << CP0C3_MT)) {
./tools/qemu-xen/target-mips/translate.c:        for (i = 0; i < ARRAY_SIZE(env->tcs); i++) {
./tools/qemu-xen/target-mips/translate.c:            env->tcs[i].CP0_TCBind = env->cpu_index << CP0TCBd_CurVPE;
./tools/qemu-xen/target-mips/translate.c:            env->tcs[i].CP0_TCHalt = 1;
./tools/qemu-xen/target-mips/translate.c:        env->active_tc.CP0_TCHalt = 1;
./tools/qemu-xen/target-mips/translate.c:        env->halted = 1;
./tools/qemu-xen/target-mips/translate.c:        if (!env->cpu_index) {
./tools/qemu-xen/target-mips/translate.c:            env->mvp->CP0_MVPControl |= (1 << CP0MVPCo_EVP);
./tools/qemu-xen/target-mips/translate.c:            env->CP0_VPEConf0 |= (1 << CP0VPEC0_MVP) | (1 << CP0VPEC0_VPA);
./tools/qemu-xen/target-mips/translate.c:            env->halted = 0;
./tools/qemu-xen/target-mips/translate.c:            env->active_tc.CP0_TCHalt = 0;
./tools/qemu-xen/target-mips/translate.c:            env->tcs[0].CP0_TCHalt = 0;
./tools/qemu-xen/target-mips/translate.c:            env->active_tc.CP0_TCStatus = (1 << CP0TCSt_A);
./tools/qemu-xen/target-mips/translate.c:            env->tcs[0].CP0_TCStatus = (1 << CP0TCSt_A);
./tools/qemu-xen/target-mips/translate.c:    if (env->cpu_model->insn_flags & ISA_MIPS3) {
./tools/qemu-xen/target-mips/translate.c:        env->hflags |= MIPS_HFLAG_64;
./tools/qemu-xen/target-mips/translate.c:    env->exception_index = EXCP_NONE;
./tools/qemu-xen/target-mips/translate.c:    env->active_tc.PC = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-mips/translate.c:    env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen/target-mips/translate.c:    env->hflags |= gen_opc_hflags[pc_pos];
./tools/qemu-xen/target-mips/op_helper.c:    env->hflags &= ~(MIPS_HFLAG_COP1X | MIPS_HFLAG_64 | MIPS_HFLAG_CP0 |
./tools/qemu-xen/target-mips/op_helper.c:    if (!(env->CP0_Status & (1 << CP0St_EXL)) &&
./tools/qemu-xen/target-mips/op_helper.c:        !(env->CP0_Status & (1 << CP0St_ERL)) &&
./tools/qemu-xen/target-mips/op_helper.c:        !(env->hflags & MIPS_HFLAG_DM)) {
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags |= (env->CP0_Status >> CP0St_KSU) & MIPS_HFLAG_KSU;
./tools/qemu-xen/target-mips/op_helper.c:    if (((env->hflags & MIPS_HFLAG_KSU) != MIPS_HFLAG_UM) ||
./tools/qemu-xen/target-mips/op_helper.c:        (env->CP0_Status & (1 << CP0St_PX)) ||
./tools/qemu-xen/target-mips/op_helper.c:        (env->CP0_Status & (1 << CP0St_UX))) {
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags |= MIPS_HFLAG_64;
./tools/qemu-xen/target-mips/op_helper.c:    if (env->CP0_Status & (1 << CP0St_UX)) {
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags |= MIPS_HFLAG_UX;
./tools/qemu-xen/target-mips/op_helper.c:    if ((env->CP0_Status & (1 << CP0St_CU0)) ||
./tools/qemu-xen/target-mips/op_helper.c:        !(env->hflags & MIPS_HFLAG_KSU)) {
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags |= MIPS_HFLAG_CP0;
./tools/qemu-xen/target-mips/op_helper.c:    if (env->CP0_Status & (1 << CP0St_CU1)) {
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags |= MIPS_HFLAG_FPU;
./tools/qemu-xen/target-mips/op_helper.c:    if (env->CP0_Status & (1 << CP0St_FR)) {
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags |= MIPS_HFLAG_F64;
./tools/qemu-xen/target-mips/op_helper.c:    if (env->insn_flags & ISA_MIPS32R2) {
./tools/qemu-xen/target-mips/op_helper.c:        if (env->active_fpu.fcr0 & (1 << FCR0_F64)) {
./tools/qemu-xen/target-mips/op_helper.c:            env->hflags |= MIPS_HFLAG_COP1X;
./tools/qemu-xen/target-mips/op_helper.c:    } else if (env->insn_flags & ISA_MIPS32) {
./tools/qemu-xen/target-mips/op_helper.c:        if (env->hflags & MIPS_HFLAG_64) {
./tools/qemu-xen/target-mips/op_helper.c:            env->hflags |= MIPS_HFLAG_COP1X;
./tools/qemu-xen/target-mips/op_helper.c:    } else if (env->insn_flags & ISA_MIPS4) {
./tools/qemu-xen/target-mips/op_helper.c:        if (env->CP0_Status & (1 << CP0St_CU3)) {
./tools/qemu-xen/target-mips/op_helper.c:            env->hflags |= MIPS_HFLAG_COP1X;
./tools/qemu-xen/target-mips/op_helper.c:    env->exception_index = exception;
./tools/qemu-xen/target-mips/op_helper.c:    env->error_code = error_code;
./tools/qemu-xen/target-mips/op_helper.c:    return ((uint64_t)(env->active_tc.HI[0]) << 32) | (uint32_t)env->active_tc.LO[0];
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.LO[0] = (int32_t)HILO;
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.HI[0] = (int32_t)(HILO >> 32);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.LO[0] = (int32_t)(HILO & 0xFFFFFFFF);
./tools/qemu-xen/target-mips/op_helper.c:    arg1 = env->active_tc.HI[0] = (int32_t)(HILO >> 32);
./tools/qemu-xen/target-mips/op_helper.c:    arg1 = env->active_tc.LO[0] = (int32_t)(HILO & 0xFFFFFFFF);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.HI[0] = (int32_t)(HILO >> 32);
./tools/qemu-xen/target-mips/op_helper.c:    muls64(&(env->active_tc.LO[0]), &(env->active_tc.HI[0]), arg1, arg2);
./tools/qemu-xen/target-mips/op_helper.c:    mulu64(&(env->active_tc.LO[0]), &(env->active_tc.HI[0]), arg1, arg2);
./tools/qemu-xen/target-mips/op_helper.c:    env->lladdr = do_translate_address(arg, 0);                               \
./tools/qemu-xen/target-mips/op_helper.c:    env->llval = do_##insn(arg, mem_idx);                                     \
./tools/qemu-xen/target-mips/op_helper.c:    return env->llval;                                                        \
./tools/qemu-xen/target-mips/op_helper.c:        env->CP0_BadVAddr = arg2;                                             \
./tools/qemu-xen/target-mips/op_helper.c:    if (do_translate_address(arg2, 1) == env->lladdr) {                       \
./tools/qemu-xen/target-mips/op_helper.c:        if (tmp == env->llval) {                                              \
./tools/qemu-xen/target-mips/op_helper.c:            env->active_tc.gpr[multiple_regs[i]] = (target_long) ldfun(addr);
./tools/qemu-xen/target-mips/op_helper.c:        env->active_tc.gpr[31] = (target_long) ldfun(addr);
./tools/qemu-xen/target-mips/op_helper.c:            stfun(addr, env->active_tc.gpr[multiple_regs[i]]);
./tools/qemu-xen/target-mips/op_helper.c:        stfun(addr, env->active_tc.gpr[31]);
./tools/qemu-xen/target-mips/op_helper.c:            env->active_tc.gpr[multiple_regs[i]] = ldfun(addr);
./tools/qemu-xen/target-mips/op_helper.c:        env->active_tc.gpr[31] = ldfun(addr);
./tools/qemu-xen/target-mips/op_helper.c:            stfun(addr, env->active_tc.gpr[multiple_regs[i]]);
./tools/qemu-xen/target-mips/op_helper.c:        stfun(addr, env->active_tc.gpr[31]);
./tools/qemu-xen/target-mips/op_helper.c:    int vpe_idx, nr_threads = env->nr_threads;
./tools/qemu-xen/target-mips/op_helper.c:    if (!(env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP))) {
./tools/qemu-xen/target-mips/op_helper.c:        *tc = env->current_tc;
./tools/qemu-xen/target-mips/op_helper.c:    asid = env->CP0_EntryHi & 0xff;
./tools/qemu-xen/target-mips/op_helper.c:    return env->mvp->CP0_MVPControl;
./tools/qemu-xen/target-mips/op_helper.c:    return env->mvp->CP0_MVPConf0;
./tools/qemu-xen/target-mips/op_helper.c:    return env->mvp->CP0_MVPConf1;
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCStatus;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCBind;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.PC;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCHalt;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCContext;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCSchedule;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCScheFBack;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    return (int32_t)(env->lladdr >> env->CP0_LLAddr_shift);
./tools/qemu-xen/target-mips/op_helper.c:    return (int32_t)env->CP0_WatchLo[sel];
./tools/qemu-xen/target-mips/op_helper.c:    return env->CP0_WatchHi[sel];
./tools/qemu-xen/target-mips/op_helper.c:    target_ulong t0 = env->CP0_Debug;
./tools/qemu-xen/target-mips/op_helper.c:    if (env->hflags & MIPS_HFLAG_DM)
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.PC;
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCHalt;
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCContext;
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCSchedule;
./tools/qemu-xen/target-mips/op_helper.c:    return env->active_tc.CP0_TCScheFBack;
./tools/qemu-xen/target-mips/op_helper.c:    return env->lladdr >> env->CP0_LLAddr_shift;
./tools/qemu-xen/target-mips/op_helper.c:    return env->CP0_WatchLo[sel];
./tools/qemu-xen/target-mips/op_helper.c:    unsigned int tmp = env->tlb->nb_tlb;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Index = (env->CP0_Index & 0x80000000) | (arg1 & (num - 1));
./tools/qemu-xen/target-mips/op_helper.c:    if (env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP))
./tools/qemu-xen/target-mips/op_helper.c:    if (env->mvp->CP0_MVPControl & (1 << CP0MVPCo_VPC))
./tools/qemu-xen/target-mips/op_helper.c:    newval = (env->mvp->CP0_MVPControl & ~mask) | (arg1 & mask);
./tools/qemu-xen/target-mips/op_helper.c:    env->mvp->CP0_MVPControl = newval;
./tools/qemu-xen/target-mips/op_helper.c:    newval = (env->CP0_VPEControl & ~mask) | (arg1 & mask);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_VPEControl = newval;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    if (env->CP0_VPEConf0 & (1 << CP0VPEC0_MVP)) {
./tools/qemu-xen/target-mips/op_helper.c:        if (env->CP0_VPEConf0 & (1 << CP0VPEC0_VPA))
./tools/qemu-xen/target-mips/op_helper.c:    newval = (env->CP0_VPEConf0 & ~mask) | (arg1 & mask);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_VPEConf0 = newval;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    if (env->mvp->CP0_MVPControl & (1 << CP0MVPCo_VPC))
./tools/qemu-xen/target-mips/op_helper.c:    newval = (env->CP0_VPEConf1 & ~mask) | (arg1 & mask);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_VPEConf1 = newval;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_YQMask = 0x00000000;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_VPEOpt = arg1 & 0x0000ffff;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_EntryLo0 = arg1 & 0x3FFFFFFF;
./tools/qemu-xen/target-mips/op_helper.c:    uint32_t mask = env->CP0_TCStatus_rw_bitmask;
./tools/qemu-xen/target-mips/op_helper.c:    newval = (env->active_tc.CP0_TCStatus & ~mask) | (arg1 & mask);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.CP0_TCStatus = newval;
./tools/qemu-xen/target-mips/op_helper.c:    sync_c0_tcstatus(env, env->current_tc, newval);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    if (env->mvp->CP0_MVPControl & (1 << CP0MVPCo_VPC))
./tools/qemu-xen/target-mips/op_helper.c:    newval = (env->active_tc.CP0_TCBind & ~mask) | (arg1 & mask);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.CP0_TCBind = newval;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.PC = arg1;
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.CP0_TCStatus &= ~(1 << CP0TCSt_TDS);
./tools/qemu-xen/target-mips/op_helper.c:    env->lladdr = 0ULL;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.CP0_TCHalt = arg1 & 0x1;
./tools/qemu-xen/target-mips/op_helper.c:    if (env->active_tc.CP0_TCHalt & 1) {
./tools/qemu-xen/target-mips/op_helper.c:        mips_tc_sleep(env, env->current_tc);
./tools/qemu-xen/target-mips/op_helper.c:        mips_tc_wake(env, env->current_tc);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.CP0_TCContext = arg1;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.CP0_TCSchedule = arg1;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.CP0_TCScheFBack = arg1;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_EntryLo1 = arg1 & 0x3FFFFFFF;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Context = (env->CP0_Context & 0x007FFFFF) | (arg1 & ~0x007FFFFF);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_PageMask = arg1 & (0x1FFFFFFF & (TARGET_PAGE_MASK << 1));
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_PageGrain = 0;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Wired = arg1 % env->tlb->nb_tlb;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_SRSConf0 |= arg1 & env->CP0_SRSConf0_rw_bitmask;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_SRSConf1 |= arg1 & env->CP0_SRSConf1_rw_bitmask;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_SRSConf2 |= arg1 & env->CP0_SRSConf2_rw_bitmask;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_SRSConf3 |= arg1 & env->CP0_SRSConf3_rw_bitmask;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_SRSConf4 |= arg1 & env->CP0_SRSConf4_rw_bitmask;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_HWREna = arg1 & 0x0000000F;
./tools/qemu-xen/target-mips/op_helper.c:    val &= env->SEGMask;
./tools/qemu-xen/target-mips/op_helper.c:    old = env->CP0_EntryHi;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_EntryHi = val;
./tools/qemu-xen/target-mips/op_helper.c:    if (env->CP0_Config3 & (1 << CP0C3_MT)) {
./tools/qemu-xen/target-mips/op_helper.c:        sync_c0_entryhi(env, env->current_tc);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    uint32_t mask = env->CP0_Status_rw_bitmask;
./tools/qemu-xen/target-mips/op_helper.c:    old = env->CP0_Status;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Status = (env->CP0_Status & ~mask) | val;
./tools/qemu-xen/target-mips/op_helper.c:    if (env->CP0_Config3 & (1 << CP0C3_MT)) {
./tools/qemu-xen/target-mips/op_helper.c:        sync_c0_status(env, env->current_tc);
./tools/qemu-xen/target-mips/op_helper.c:                old, old & env->CP0_Cause & CP0Ca_IP_mask,
./tools/qemu-xen/target-mips/op_helper.c:                val, val & env->CP0_Cause & CP0Ca_IP_mask,
./tools/qemu-xen/target-mips/op_helper.c:                env->CP0_Cause);
./tools/qemu-xen/target-mips/op_helper.c:        switch (env->hflags & MIPS_HFLAG_KSU) {
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_IntCtl = (env->CP0_IntCtl & ~0x000003e0) | (arg1 & 0x000003e0);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_SRSCtl = (env->CP0_SRSCtl & ~mask) | (arg1 & mask);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_EBase = (env->CP0_EBase & ~0x3FFFF000) | (arg1 & 0x3FFFF000);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Config0 = (env->CP0_Config0 & 0x81FFFFF8) | (arg1 & 0x00000007);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Config2 = (env->CP0_Config2 & 0x8FFF0FFF);
./tools/qemu-xen/target-mips/op_helper.c:    target_long mask = env->CP0_LLAddr_rw_bitmask;
./tools/qemu-xen/target-mips/op_helper.c:    arg1 = arg1 << env->CP0_LLAddr_shift;
./tools/qemu-xen/target-mips/op_helper.c:    env->lladdr = (env->lladdr & ~mask) | (arg1 & mask);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_WatchLo[sel] = (arg1 & ~0x7);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_WatchHi[sel] = (arg1 & 0x40FF0FF8);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_WatchHi[sel] &= ~(env->CP0_WatchHi[sel] & arg1 & 0x7);
./tools/qemu-xen/target-mips/op_helper.c:    target_ulong mask = (1ULL << (env->SEGBITS - 7)) - 1;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_XContext = (env->CP0_XContext & mask) | (arg1 & ~mask);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Framemask = arg1; /* XXX */
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Debug = (env->CP0_Debug & 0x8C03FC1F) | (arg1 & 0x13300120);
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags |= MIPS_HFLAG_DM;
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags &= ~MIPS_HFLAG_DM;
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Performance0 = arg1 & 0x000007ff;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_TagLo = arg1 & 0xFFFFFCF6;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_DataLo = arg1; /* XXX */
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_TagHi = arg1; /* XXX */
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_DataHi = arg1; /* XXX */
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    int other_tc = env->CP0_VPEControl & (0xff << CP0VPECo_TargTC);
./tools/qemu-xen/target-mips/op_helper.c:    target_ulong prev = env->mvp->CP0_MVPControl;
./tools/qemu-xen/target-mips/op_helper.c:    target_ulong prev = env->mvp->CP0_MVPControl;
./tools/qemu-xen/target-mips/op_helper.c:            if (env->CP0_VPEControl & (1 << CP0VPECo_YSI) &&
./tools/qemu-xen/target-mips/op_helper.c:                env->active_tc.CP0_TCStatus & (1 << CP0TCSt_DT)) {
./tools/qemu-xen/target-mips/op_helper.c:                env->CP0_VPEControl &= ~(0x7 << CP0VPECo_EXCPT);
./tools/qemu-xen/target-mips/op_helper.c:                env->CP0_VPEControl |= 4 << CP0VPECo_EXCPT;
./tools/qemu-xen/target-mips/op_helper.c:            env->CP0_VPEControl &= ~(0x7 << CP0VPECo_EXCPT);
./tools/qemu-xen/target-mips/op_helper.c:        env->CP0_VPEControl &= ~(0x7 << CP0VPECo_EXCPT);
./tools/qemu-xen/target-mips/op_helper.c:        env->CP0_VPEControl |= 2 << CP0VPECo_EXCPT;
./tools/qemu-xen/target-mips/op_helper.c:    return env->CP0_YQMask;
./tools/qemu-xen/target-mips/op_helper.c:    env->tlb->tlb_in_use = env->tlb->nb_tlb;
./tools/qemu-xen/target-mips/op_helper.c:    /* Discard entries from env->tlb[first] onwards.  */
./tools/qemu-xen/target-mips/op_helper.c:    while (env->tlb->tlb_in_use > first) {
./tools/qemu-xen/target-mips/op_helper.c:        r4k_invalidate_tlb(env, --env->tlb->tlb_in_use, 0);
./tools/qemu-xen/target-mips/op_helper.c:    tlb = &env->tlb->mmu.r4k.tlb[idx];
./tools/qemu-xen/target-mips/op_helper.c:    tlb->VPN = env->CP0_EntryHi & (TARGET_PAGE_MASK << 1);
./tools/qemu-xen/target-mips/op_helper.c:    tlb->VPN &= env->SEGMask;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->PageMask = env->CP0_PageMask;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->G = env->CP0_EntryLo0 & env->CP0_EntryLo1 & 1;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->V0 = (env->CP0_EntryLo0 & 2) != 0;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->D0 = (env->CP0_EntryLo0 & 4) != 0;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->C0 = (env->CP0_EntryLo0 >> 3) & 0x7;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->PFN[0] = (env->CP0_EntryLo0 >> 6) << 12;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->V1 = (env->CP0_EntryLo1 & 2) != 0;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->D1 = (env->CP0_EntryLo1 & 4) != 0;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->C1 = (env->CP0_EntryLo1 >> 3) & 0x7;
./tools/qemu-xen/target-mips/op_helper.c:    tlb->PFN[1] = (env->CP0_EntryLo1 >> 6) << 12;
./tools/qemu-xen/target-mips/op_helper.c:    idx = (env->CP0_Index & ~0x80000000) % env->tlb->nb_tlb;
./tools/qemu-xen/target-mips/op_helper.c:    r4k_mips_tlb_flush_extra (env, env->tlb->nb_tlb);
./tools/qemu-xen/target-mips/op_helper.c:    ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen/target-mips/op_helper.c:    for (i = 0; i < env->tlb->nb_tlb; i++) {
./tools/qemu-xen/target-mips/op_helper.c:        tlb = &env->tlb->mmu.r4k.tlb[i];
./tools/qemu-xen/target-mips/op_helper.c:        tag = env->CP0_EntryHi & ~mask;
./tools/qemu-xen/target-mips/op_helper.c:            env->CP0_Index = i;
./tools/qemu-xen/target-mips/op_helper.c:    if (i == env->tlb->nb_tlb) {
./tools/qemu-xen/target-mips/op_helper.c:        for (i = env->tlb->nb_tlb; i < env->tlb->tlb_in_use; i++) {
./tools/qemu-xen/target-mips/op_helper.c:            tlb = &env->tlb->mmu.r4k.tlb[i];
./tools/qemu-xen/target-mips/op_helper.c:            tag = env->CP0_EntryHi & ~mask;
./tools/qemu-xen/target-mips/op_helper.c:        env->CP0_Index |= 0x80000000;
./tools/qemu-xen/target-mips/op_helper.c:    ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen/target-mips/op_helper.c:    idx = (env->CP0_Index & ~0x80000000) % env->tlb->nb_tlb;
./tools/qemu-xen/target-mips/op_helper.c:    tlb = &env->tlb->mmu.r4k.tlb[idx];
./tools/qemu-xen/target-mips/op_helper.c:    r4k_mips_tlb_flush_extra(env, env->tlb->nb_tlb);
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_EntryHi = tlb->VPN | tlb->ASID;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_PageMask = tlb->PageMask;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_EntryLo0 = tlb->G | (tlb->V0 << 1) | (tlb->D0 << 2) |
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_EntryLo1 = tlb->G | (tlb->V1 << 1) | (tlb->D1 << 2) |
./tools/qemu-xen/target-mips/op_helper.c:    env->tlb->helper_tlbwi();
./tools/qemu-xen/target-mips/op_helper.c:    env->tlb->helper_tlbwr();
./tools/qemu-xen/target-mips/op_helper.c:    env->tlb->helper_tlbp();
./tools/qemu-xen/target-mips/op_helper.c:    env->tlb->helper_tlbr();
./tools/qemu-xen/target-mips/op_helper.c:    target_ulong t0 = env->CP0_Status;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Status = t0 & ~(1 << CP0St_IE);
./tools/qemu-xen/target-mips/op_helper.c:    target_ulong t0 = env->CP0_Status;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_Status = t0 | (1 << CP0St_IE);
./tools/qemu-xen/target-mips/op_helper.c:                env->active_tc.PC, env->CP0_EPC);
./tools/qemu-xen/target-mips/op_helper.c:        if (env->CP0_Status & (1 << CP0St_ERL))
./tools/qemu-xen/target-mips/op_helper.c:            qemu_log(" ErrorEPC " TARGET_FMT_lx, env->CP0_ErrorEPC);
./tools/qemu-xen/target-mips/op_helper.c:        if (env->hflags & MIPS_HFLAG_DM)
./tools/qemu-xen/target-mips/op_helper.c:            qemu_log(" DEPC " TARGET_FMT_lx, env->CP0_DEPC);
./tools/qemu-xen/target-mips/op_helper.c:                env->active_tc.PC, env->CP0_EPC);
./tools/qemu-xen/target-mips/op_helper.c:        if (env->CP0_Status & (1 << CP0St_ERL))
./tools/qemu-xen/target-mips/op_helper.c:            qemu_log(" ErrorEPC " TARGET_FMT_lx, env->CP0_ErrorEPC);
./tools/qemu-xen/target-mips/op_helper.c:        if (env->hflags & MIPS_HFLAG_DM)
./tools/qemu-xen/target-mips/op_helper.c:            qemu_log(" DEPC " TARGET_FMT_lx, env->CP0_DEPC);
./tools/qemu-xen/target-mips/op_helper.c:        switch (env->hflags & MIPS_HFLAG_KSU) {
./tools/qemu-xen/target-mips/op_helper.c:    env->active_tc.PC = error_pc & ~(target_ulong)1;
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags |= MIPS_HFLAG_M16;
./tools/qemu-xen/target-mips/op_helper.c:        env->hflags &= ~(MIPS_HFLAG_M16);
./tools/qemu-xen/target-mips/op_helper.c:    if (env->CP0_Status & (1 << CP0St_ERL)) {
./tools/qemu-xen/target-mips/op_helper.c:        set_pc(env->CP0_ErrorEPC);
./tools/qemu-xen/target-mips/op_helper.c:        env->CP0_Status &= ~(1 << CP0St_ERL);
./tools/qemu-xen/target-mips/op_helper.c:        set_pc(env->CP0_EPC);
./tools/qemu-xen/target-mips/op_helper.c:        env->CP0_Status &= ~(1 << CP0St_EXL);
./tools/qemu-xen/target-mips/op_helper.c:    env->lladdr = 1;
./tools/qemu-xen/target-mips/op_helper.c:    set_pc(env->CP0_DEPC);
./tools/qemu-xen/target-mips/op_helper.c:    env->hflags &= MIPS_HFLAG_DM;
./tools/qemu-xen/target-mips/op_helper.c:    env->lladdr = 1;
./tools/qemu-xen/target-mips/op_helper.c:    if ((env->hflags & MIPS_HFLAG_CP0) ||
./tools/qemu-xen/target-mips/op_helper.c:        (env->CP0_HWREna & (1 << 0)))
./tools/qemu-xen/target-mips/op_helper.c:        return env->CP0_EBase & 0x3ff;
./tools/qemu-xen/target-mips/op_helper.c:    if ((env->hflags & MIPS_HFLAG_CP0) ||
./tools/qemu-xen/target-mips/op_helper.c:        (env->CP0_HWREna & (1 << 1)))
./tools/qemu-xen/target-mips/op_helper.c:        return env->SYNCI_Step;
./tools/qemu-xen/target-mips/op_helper.c:    if ((env->hflags & MIPS_HFLAG_CP0) ||
./tools/qemu-xen/target-mips/op_helper.c:        (env->CP0_HWREna & (1 << 2)))
./tools/qemu-xen/target-mips/op_helper.c:        return env->CP0_Count;
./tools/qemu-xen/target-mips/op_helper.c:    if ((env->hflags & MIPS_HFLAG_CP0) ||
./tools/qemu-xen/target-mips/op_helper.c:        (env->CP0_HWREna & (1 << 3)))
./tools/qemu-xen/target-mips/op_helper.c:        return env->CCRes;
./tools/qemu-xen/target-mips/op_helper.c:        if (env->active_tc.gpr[4] == 0)
./tools/qemu-xen/target-mips/op_helper.c:            env->active_tc.gpr[2] = -1;
./tools/qemu-xen/target-mips/op_helper.c:        env->active_tc.gpr[2] = -1;
./tools/qemu-xen/target-mips/op_helper.c:        printf("%c", (char)(env->active_tc.gpr[4] & 0xFF));
./tools/qemu-xen/target-mips/op_helper.c:            unsigned char *fmt = (void *)(unsigned long)env->active_tc.gpr[4];
./tools/qemu-xen/target-mips/op_helper.c:    env->halted = 1;
./tools/qemu-xen/target-mips/op_helper.c:    env->CP0_BadVAddr = addr;
./tools/qemu-xen/target-mips/op_helper.c:        helper_raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(ieee_rm[env->active_fpu.fcr31 & 3], &env->active_fpu.fp_status)
./tools/qemu-xen/target-mips/op_helper.c:    set_flush_to_zero((env->active_fpu.fcr31 & (1 << 24)) != 0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:        arg1 = (int32_t)env->active_fpu.fcr0;
./tools/qemu-xen/target-mips/op_helper.c:        arg1 = ((env->active_fpu.fcr31 >> 24) & 0xfe) | ((env->active_fpu.fcr31 >> 23) & 0x1);
./tools/qemu-xen/target-mips/op_helper.c:        arg1 = env->active_fpu.fcr31 & 0x0003f07c;
./tools/qemu-xen/target-mips/op_helper.c:        arg1 = (env->active_fpu.fcr31 & 0x00000f83) | ((env->active_fpu.fcr31 >> 22) & 0x4);
./tools/qemu-xen/target-mips/op_helper.c:        arg1 = (int32_t)env->active_fpu.fcr31;
./tools/qemu-xen/target-mips/op_helper.c:        env->active_fpu.fcr31 = (env->active_fpu.fcr31 & 0x017fffff) | ((arg1 & 0xfe) << 24) |
./tools/qemu-xen/target-mips/op_helper.c:        env->active_fpu.fcr31 = (env->active_fpu.fcr31 & 0xfffc0f83) | (arg1 & 0x0003f07c);
./tools/qemu-xen/target-mips/op_helper.c:        env->active_fpu.fcr31 = (env->active_fpu.fcr31 & 0xfefff07c) | (arg1 & 0x00000f83) |
./tools/qemu-xen/target-mips/op_helper.c:        env->active_fpu.fcr31 = arg1;
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if ((GET_FP_ENABLE(env->active_fpu.fcr31) | 0x20) & GET_FP_CAUSE(env->active_fpu.fcr31))
./tools/qemu-xen/target-mips/op_helper.c:    int tmp = ieee_ex_to_mips(get_float_exception_flags(&env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    SET_FP_CAUSE(env->active_fpu.fcr31, tmp);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_ENABLE(env->active_fpu.fcr31) & tmp)
./tools/qemu-xen/target-mips/op_helper.c:        UPDATE_FP_FLAGS(env->active_fpu.fcr31, tmp);
./tools/qemu-xen/target-mips/op_helper.c:    return float64_sqrt(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    return float32_sqrt(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float32_to_float64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = int32_to_float64(wt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = int64_to_float64(dt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float64_to_int64(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float32_to_int64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = int32_to_float32(dt0 & 0XFFFFFFFF, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = int32_to_float32(dt0 >> 32, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float32_to_int32(fdt0 & 0XFFFFFFFF, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wth2 = float32_to_int32(fdt0 >> 32, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID)) {
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float64_to_float32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = int32_to_float32(wt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = int64_to_float32(dt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float32_to_int32(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float64_to_int32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_nearest_even, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float64_to_int64(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_nearest_even, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float32_to_int64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_nearest_even, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float64_to_int32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_nearest_even, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float32_to_int32(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float64_to_int64_round_to_zero(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float32_to_int64_round_to_zero(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float64_to_int32_round_to_zero(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float32_to_int32_round_to_zero(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_up, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float64_to_int64(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_up, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float32_to_int64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_up, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float64_to_int32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_up, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float32_to_int32(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_down, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float64_to_int64(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_down, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float32_to_int64(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_down, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float64_to_int32(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_rounding_mode(float_round_down, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float32_to_int32(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & (FP_OVERFLOW | FP_INVALID))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_div(FLOAT_ONE64, fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_sqrt(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_div(FLOAT_ONE64, fdt2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_sqrt(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_div(FLOAT_ONE64, fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fdt0 & 0XFFFFFFFF, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_div(FLOAT_ONE32, fdt0 >> 32, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_sqrt(fdt0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_div(FLOAT_ONE64, fdt2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_sqrt(fst0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_sqrt(fdt0 & 0XFFFFFFFF, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_sqrt(fdt0 >> 32, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_div(FLOAT_ONE32, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_div(FLOAT_ONE32, fsth2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);            \
./tools/qemu-xen/target-mips/op_helper.c:    dt2 = float64_ ## name (fdt0, fdt1, &env->active_fpu.fp_status);     \
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & FP_INVALID)                \
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);            \
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float32_ ## name (fst0, fst1, &env->active_fpu.fp_status);     \
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & FP_INVALID)                \
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);            \
./tools/qemu-xen/target-mips/op_helper.c:    wt2 = float32_ ## name (fst0, fst1, &env->active_fpu.fp_status);     \
./tools/qemu-xen/target-mips/op_helper.c:    wth2 = float32_ ## name (fsth0, fsth1, &env->active_fpu.fp_status);  \
./tools/qemu-xen/target-mips/op_helper.c:    if (GET_FP_CAUSE(env->active_fpu.fcr31) & FP_INVALID) {              \
./tools/qemu-xen/target-mips/op_helper.c:    fdt0 = float64_ ## name1 (fdt0, fdt1, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    return float64_ ## name2 (fdt0, fdt2, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fst0 = float32_ ## name1 (fst0, fst1, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    return float32_ ## name2 (fst0, fst2, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fst0 = float32_ ## name1 (fst0, fst1, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fsth0 = float32_ ## name1 (fsth0, fsth1, &env->active_fpu.fp_status);       \
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_ ## name2 (fst0, fst2, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_ ## name2 (fsth0, fsth2, &env->active_fpu.fp_status);       \
./tools/qemu-xen/target-mips/op_helper.c:    fdt0 = float64_ ## name1 (fdt0, fdt1, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_ ## name2 (fdt0, fdt2, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fst0 = float32_ ## name1 (fst0, fst1, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_ ## name2 (fst0, fst2, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fst0 = float32_ ## name1 (fst0, fst1, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fsth0 = float32_ ## name1 (fsth0, fsth1, &env->active_fpu.fp_status);       \
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_ ## name2 (fst0, fst2, &env->active_fpu.fp_status);          \
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_ ## name2 (fsth0, fsth2, &env->active_fpu.fp_status);       \
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_mul(fdt0, fdt2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_chs(float64_sub(fdt2, FLOAT_ONE64, &env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_mul(fst0, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_chs(float32_sub(fst2, FLOAT_ONE32, &env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_mul(fst0, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_mul(fsth0, fsth2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_chs(float32_sub(fst2, FLOAT_ONE32, &env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_chs(float32_sub(fsth2, FLOAT_ONE32, &env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_mul(fdt0, fdt2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_sub(fdt2, FLOAT_ONE64, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fdt2 = float64_chs(float64_div(fdt2, FLOAT_TWO64, &env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_mul(fst0, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_sub(fst2, FLOAT_ONE32, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_chs(float32_div(fst2, FLOAT_TWO32, &env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_mul(fst0, fst2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_mul(fsth0, fsth2, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_sub(fst2, FLOAT_ONE32, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_sub(fsth2, FLOAT_ONE32, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_chs(float32_div(fst2, FLOAT_TWO32, &env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_chs(float32_div(fsth2, FLOAT_TWO32, &env->active_fpu.fp_status));
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_add (fst0, fsth0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_add (fst1, fsth1, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fst2 = float32_mul (fst0, fsth0, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    fsth2 = float32_mul (fst1, fsth1, &env->active_fpu.fp_status);
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);  \
./tools/qemu-xen/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                      \
./tools/qemu-xen/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                    \
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);  \
./tools/qemu-xen/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                      \
./tools/qemu-xen/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                    \
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(f,   (float64_unordered_quiet(fdt1, fdt0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(un,  float64_unordered_quiet(fdt1, fdt0, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(eq,  float64_eq_quiet(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(ueq, float64_unordered_quiet(fdt1, fdt0, &env->active_fpu.fp_status)  || float64_eq_quiet(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(olt, float64_lt_quiet(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(ult, float64_unordered_quiet(fdt1, fdt0, &env->active_fpu.fp_status)  || float64_lt_quiet(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(ole, float64_le_quiet(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(ule, float64_unordered_quiet(fdt1, fdt0, &env->active_fpu.fp_status)  || float64_le_quiet(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(sf,  (float64_unordered(fdt1, fdt0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(ngle,float64_unordered(fdt1, fdt0, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(seq, float64_eq(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(ngl, float64_unordered(fdt1, fdt0, &env->active_fpu.fp_status)  || float64_eq(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(lt,  float64_lt(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(nge, float64_unordered(fdt1, fdt0, &env->active_fpu.fp_status)  || float64_lt(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(le,  float64_le(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_D(ngt, float64_unordered(fdt1, fdt0, &env->active_fpu.fp_status)  || float64_le(fdt0, fdt1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);  \
./tools/qemu-xen/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                      \
./tools/qemu-xen/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                    \
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);  \
./tools/qemu-xen/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                      \
./tools/qemu-xen/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                    \
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(f,   (float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(un,  float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(eq,  float32_eq_quiet(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(ueq, float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status)  || float32_eq_quiet(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(olt, float32_lt_quiet(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(ult, float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status)  || float32_lt_quiet(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(ole, float32_le_quiet(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(ule, float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status)  || float32_le_quiet(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(sf,  (float32_unordered(fst1, fst0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(ngle,float32_unordered(fst1, fst0, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(seq, float32_eq(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(ngl, float32_unordered(fst1, fst0, &env->active_fpu.fp_status)  || float32_eq(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(lt,  float32_lt(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(nge, float32_unordered(fst1, fst0, &env->active_fpu.fp_status)  || float32_lt(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(le,  float32_le(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_S(ngt, float32_unordered(fst1, fst0, &env->active_fpu.fp_status)  || float32_le(fst0, fst1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:    set_float_exception_flags(0, &env->active_fpu.fp_status);   \
./tools/qemu-xen/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                       \
./tools/qemu-xen/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                     \
./tools/qemu-xen/target-mips/op_helper.c:        SET_FP_COND(cc + 1, env->active_fpu);                   \
./tools/qemu-xen/target-mips/op_helper.c:        CLEAR_FP_COND(cc + 1, env->active_fpu);                 \
./tools/qemu-xen/target-mips/op_helper.c:        SET_FP_COND(cc, env->active_fpu);                       \
./tools/qemu-xen/target-mips/op_helper.c:        CLEAR_FP_COND(cc, env->active_fpu);                     \
./tools/qemu-xen/target-mips/op_helper.c:        SET_FP_COND(cc + 1, env->active_fpu);                   \
./tools/qemu-xen/target-mips/op_helper.c:        CLEAR_FP_COND(cc + 1, env->active_fpu);                 \
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(f,   (float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status), 0),
./tools/qemu-xen/target-mips/op_helper.c:                 (float32_unordered_quiet(fsth1, fsth0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(un,  float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_unordered_quiet(fsth1, fsth0, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(eq,  float32_eq_quiet(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_eq_quiet(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(ueq, float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status)    || float32_eq_quiet(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_unordered_quiet(fsth1, fsth0, &env->active_fpu.fp_status)  || float32_eq_quiet(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(olt, float32_lt_quiet(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_lt_quiet(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(ult, float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status)    || float32_lt_quiet(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_unordered_quiet(fsth1, fsth0, &env->active_fpu.fp_status)  || float32_lt_quiet(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(ole, float32_le_quiet(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_le_quiet(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(ule, float32_unordered_quiet(fst1, fst0, &env->active_fpu.fp_status)    || float32_le_quiet(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_unordered_quiet(fsth1, fsth0, &env->active_fpu.fp_status)  || float32_le_quiet(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(sf,  (float32_unordered(fst1, fst0, &env->active_fpu.fp_status), 0),
./tools/qemu-xen/target-mips/op_helper.c:                 (float32_unordered(fsth1, fsth0, &env->active_fpu.fp_status), 0))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(ngle,float32_unordered(fst1, fst0, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_unordered(fsth1, fsth0, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(seq, float32_eq(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_eq(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(ngl, float32_unordered(fst1, fst0, &env->active_fpu.fp_status)    || float32_eq(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_unordered(fsth1, fsth0, &env->active_fpu.fp_status)  || float32_eq(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(lt,  float32_lt(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_lt(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(nge, float32_unordered(fst1, fst0, &env->active_fpu.fp_status)    || float32_lt(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_unordered(fsth1, fsth0, &env->active_fpu.fp_status)  || float32_lt(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(le,  float32_le(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_le(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/op_helper.c:FOP_COND_PS(ngt, float32_unordered(fst1, fst0, &env->active_fpu.fp_status)    || float32_le(fst0, fst1, &env->active_fpu.fp_status),
./tools/qemu-xen/target-mips/op_helper.c:                 float32_unordered(fsth1, fsth0, &env->active_fpu.fp_status)  || float32_le(fsth0, fsth1, &env->active_fpu.fp_status))
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->nb_tlb = 1;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->map_address = &no_mmu_map_address;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->nb_tlb = 1;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->map_address = &fixed_mmu_map_address;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->nb_tlb = 1 + ((def->CP0_Config1 >> CP0C1_MMU) & 63);
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->map_address = &r4k_map_address;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->helper_tlbwi = r4k_helper_tlbwi;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->helper_tlbwr = r4k_helper_tlbwr;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->helper_tlbp = r4k_helper_tlbp;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb->helper_tlbr = r4k_helper_tlbr;
./tools/qemu-xen/target-mips/translate_init.c:    env->tlb = g_malloc0(sizeof(CPUMIPSTLBContext));
./tools/qemu-xen/target-mips/translate_init.c:        env->fpus[i].fcr0 = def->CP1_fcr0;
./tools/qemu-xen/target-mips/translate_init.c:    memcpy(&env->active_fpu, &env->fpus[0], sizeof(env->active_fpu));
./tools/qemu-xen/target-mips/translate_init.c:    env->mvp = g_malloc0(sizeof(CPUMIPSMVPContext));
./tools/qemu-xen/target-mips/translate_init.c:    env->mvp->CP0_MVPConf0 = (1 << CP0MVPC0_M) | (1 << CP0MVPC0_TLBS) |
./tools/qemu-xen/target-mips/translate_init.c:    env->mvp->CP0_MVPConf0 |= (env->tlb->nb_tlb << CP0MVPC0_PTLBE);
./tools/qemu-xen/target-mips/translate_init.c:    env->mvp->CP0_MVPConf1 = (1 << CP0MVPC1_CIM) | (1 << CP0MVPC1_CIF) |
./tools/qemu-xen/target-mips/helper.c:        if (!(env->CP0_Status & (1 << CP0St_ERL)))
./tools/qemu-xen/target-mips/helper.c:    uint8_t ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen/target-mips/helper.c:    for (i = 0; i < env->tlb->tlb_in_use; i++) {
./tools/qemu-xen/target-mips/helper.c:        r4k_tlb_t *tlb = &env->tlb->mmu.r4k.tlb[i];
./tools/qemu-xen/target-mips/helper.c:        tag &= env->SEGMask;
./tools/qemu-xen/target-mips/helper.c:    int user_mode = (env->hflags & MIPS_HFLAG_MODE) == MIPS_HFLAG_UM;
./tools/qemu-xen/target-mips/helper.c:    int supervisor_mode = (env->hflags & MIPS_HFLAG_MODE) == MIPS_HFLAG_SM;
./tools/qemu-xen/target-mips/helper.c:    int UX = (env->CP0_Status & (1 << CP0St_UX)) != 0;
./tools/qemu-xen/target-mips/helper.c:    int SX = (env->CP0_Status & (1 << CP0St_SX)) != 0;
./tools/qemu-xen/target-mips/helper.c:    int KX = (env->CP0_Status & (1 << CP0St_KX)) != 0;
./tools/qemu-xen/target-mips/helper.c:    qemu_log("user mode %d h %08x\n", user_mode, env->hflags);
./tools/qemu-xen/target-mips/helper.c:        if (env->CP0_Status & (1 << CP0St_ERL)) {
./tools/qemu-xen/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen/target-mips/helper.c:        if (UX && address <= (0x3FFFFFFFFFFFFFFFULL & env->SEGMask)) {
./tools/qemu-xen/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen/target-mips/helper.c:            SX && address <= (0x7FFFFFFFFFFFFFFFULL & env->SEGMask)) {
./tools/qemu-xen/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen/target-mips/helper.c:            (address & 0x07FFFFFFFFFFFFFFULL) <= env->PAMask) {
./tools/qemu-xen/target-mips/helper.c:            *physical = address & env->PAMask;
./tools/qemu-xen/target-mips/helper.c:            address <= (0xFFFFFFFF7FFFFFFFULL & env->SEGMask)) {
./tools/qemu-xen/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen/target-mips/helper.c:            ret = env->tlb->map_address(env, physical, prot, address, rw, access_type);
./tools/qemu-xen/target-mips/helper.c:    env->CP0_BadVAddr = address;
./tools/qemu-xen/target-mips/helper.c:    env->CP0_Context = (env->CP0_Context & ~0x007fffff) |
./tools/qemu-xen/target-mips/helper.c:    env->CP0_EntryHi =
./tools/qemu-xen/target-mips/helper.c:        (env->CP0_EntryHi & 0xFF) | (address & (TARGET_PAGE_MASK << 1));
./tools/qemu-xen/target-mips/helper.c:    env->CP0_EntryHi &= env->SEGMask;
./tools/qemu-xen/target-mips/helper.c:    env->CP0_XContext = (env->CP0_XContext & ((~0ULL) << (env->SEGBITS - 7))) |
./tools/qemu-xen/target-mips/helper.c:                        ((address & 0xC00000000000ULL) >> (55 - env->SEGBITS)) |
./tools/qemu-xen/target-mips/helper.c:                        ((address & ((1ULL << env->SEGBITS) - 1) & 0xFFFFFFFFFFFFE000ULL) >> 9);
./tools/qemu-xen/target-mips/helper.c:    env->exception_index = exception;
./tools/qemu-xen/target-mips/helper.c:    env->error_code = error_code;
./tools/qemu-xen/target-mips/helper.c:              __func__, env->active_tc.PC, address, rw, mmu_idx);
./tools/qemu-xen/target-mips/helper.c:    isa_mode = !!(env->hflags & MIPS_HFLAG_M16);
./tools/qemu-xen/target-mips/helper.c:    bad_pc = env->active_tc.PC | isa_mode;
./tools/qemu-xen/target-mips/helper.c:    if (env->hflags & MIPS_HFLAG_BMASK) {
./tools/qemu-xen/target-mips/helper.c:        bad_pc -= (env->hflags & MIPS_HFLAG_B16 ? 2 : 4);
./tools/qemu-xen/target-mips/helper.c:    env->hflags &= ~(MIPS_HFLAG_M16);
./tools/qemu-xen/target-mips/helper.c:    if (env->insn_flags & ASE_MICROMIPS) {
./tools/qemu-xen/target-mips/helper.c:        env->hflags |= (!!(env->CP0_Config3
./tools/qemu-xen/target-mips/helper.c:    if (qemu_log_enabled() && env->exception_index != EXCP_EXT_INTERRUPT) {
./tools/qemu-xen/target-mips/helper.c:        if (env->exception_index < 0 || env->exception_index > EXCP_LAST)
./tools/qemu-xen/target-mips/helper.c:            name = excp_names[env->exception_index];
./tools/qemu-xen/target-mips/helper.c:                 __func__, env->active_tc.PC, env->CP0_EPC, name);
./tools/qemu-xen/target-mips/helper.c:    if (env->exception_index == EXCP_EXT_INTERRUPT &&
./tools/qemu-xen/target-mips/helper.c:        (env->hflags & MIPS_HFLAG_DM))
./tools/qemu-xen/target-mips/helper.c:        env->exception_index = EXCP_DINT;
./tools/qemu-xen/target-mips/helper.c:    switch (env->exception_index) {
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DSS;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_DEPC = env->active_tc.PC | !!(env->hflags & MIPS_HFLAG_M16);
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DINT;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DIB;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DBp;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DDBS;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Debug |= 1 << CP0DB_DDBL;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_DEPC = exception_resume_pc(env);
./tools/qemu-xen/target-mips/helper.c:        env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen/target-mips/helper.c:        env->hflags |= MIPS_HFLAG_DM | MIPS_HFLAG_64 | MIPS_HFLAG_CP0;
./tools/qemu-xen/target-mips/helper.c:        env->hflags &= ~(MIPS_HFLAG_KSU);
./tools/qemu-xen/target-mips/helper.c:        if (!(env->CP0_Status & (1 << CP0St_EXL)))
./tools/qemu-xen/target-mips/helper.c:            env->CP0_Cause &= ~(1 << CP0Ca_BD);
./tools/qemu-xen/target-mips/helper.c:        env->active_tc.PC = (int32_t)0xBFC00480;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Status |= (1 << CP0St_SR);
./tools/qemu-xen/target-mips/helper.c:        memset(env->CP0_WatchLo, 0, sizeof(*env->CP0_WatchLo));
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Status |= (1 << CP0St_NMI);
./tools/qemu-xen/target-mips/helper.c:        env->CP0_ErrorEPC = exception_resume_pc(env);
./tools/qemu-xen/target-mips/helper.c:        env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Status |= (1 << CP0St_ERL) | (1 << CP0St_BEV);
./tools/qemu-xen/target-mips/helper.c:        env->hflags |= MIPS_HFLAG_64 | MIPS_HFLAG_CP0;
./tools/qemu-xen/target-mips/helper.c:        env->hflags &= ~(MIPS_HFLAG_KSU);
./tools/qemu-xen/target-mips/helper.c:        if (!(env->CP0_Status & (1 << CP0St_EXL)))
./tools/qemu-xen/target-mips/helper.c:            env->CP0_Cause &= ~(1 << CP0Ca_BD);
./tools/qemu-xen/target-mips/helper.c:        env->active_tc.PC = (int32_t)0xBFC00000;
./tools/qemu-xen/target-mips/helper.c:        if (env->CP0_Cause & (1 << CP0Ca_IV))
./tools/qemu-xen/target-mips/helper.c:        if (env->CP0_Config3 & ((1 << CP0C3_VInt) | (1 << CP0C3_VEIC))) {
./tools/qemu-xen/target-mips/helper.c:            unsigned int pending = (env->CP0_Cause & CP0Ca_IP_mask) >> 8;
./tools/qemu-xen/target-mips/helper.c:            pending &= env->CP0_Status >> 8;
./tools/qemu-xen/target-mips/helper.c:            spacing = (env->CP0_IntCtl >> CP0IntCtl_VS) & ((1 << 6) - 1);
./tools/qemu-xen/target-mips/helper.c:            if (env->CP0_Config3 & (1 << CP0C3_VInt)) {
./tools/qemu-xen/target-mips/helper.c:        if (env->error_code == 1 && !(env->CP0_Status & (1 << CP0St_EXL))) {
./tools/qemu-xen/target-mips/helper.c:            int R = env->CP0_BadVAddr >> 62;
./tools/qemu-xen/target-mips/helper.c:            int UX = (env->CP0_Status & (1 << CP0St_UX)) != 0;
./tools/qemu-xen/target-mips/helper.c:            int SX = (env->CP0_Status & (1 << CP0St_SX)) != 0;
./tools/qemu-xen/target-mips/helper.c:            int KX = (env->CP0_Status & (1 << CP0St_KX)) != 0;
./tools/qemu-xen/target-mips/helper.c:                (!(env->insn_flags & (INSN_LOONGSON2E | INSN_LOONGSON2F))))
./tools/qemu-xen/target-mips/helper.c:        if (env->error_code == 1 && !(env->CP0_Status & (1 << CP0St_EXL))) {
./tools/qemu-xen/target-mips/helper.c:            int R = env->CP0_BadVAddr >> 62;
./tools/qemu-xen/target-mips/helper.c:            int UX = (env->CP0_Status & (1 << CP0St_UX)) != 0;
./tools/qemu-xen/target-mips/helper.c:            int SX = (env->CP0_Status & (1 << CP0St_SX)) != 0;
./tools/qemu-xen/target-mips/helper.c:            int KX = (env->CP0_Status & (1 << CP0St_KX)) != 0;
./tools/qemu-xen/target-mips/helper.c:                (!(env->insn_flags & (INSN_LOONGSON2E | INSN_LOONGSON2F))))
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Cause = (env->CP0_Cause & ~(0x3 << CP0Ca_CE)) |
./tools/qemu-xen/target-mips/helper.c:                         (env->error_code << CP0Ca_CE);
./tools/qemu-xen/target-mips/helper.c:        if (env->CP0_Status & (1 << CP0St_BEV)) {
./tools/qemu-xen/target-mips/helper.c:        if (!(env->CP0_Status & (1 << CP0St_EXL))) {
./tools/qemu-xen/target-mips/helper.c:            env->CP0_EPC = exception_resume_pc(env);
./tools/qemu-xen/target-mips/helper.c:            if (env->hflags & MIPS_HFLAG_BMASK) {
./tools/qemu-xen/target-mips/helper.c:                env->CP0_Cause |= (1 << CP0Ca_BD);
./tools/qemu-xen/target-mips/helper.c:                env->CP0_Cause &= ~(1 << CP0Ca_BD);
./tools/qemu-xen/target-mips/helper.c:            env->CP0_Status |= (1 << CP0St_EXL);
./tools/qemu-xen/target-mips/helper.c:            env->hflags |= MIPS_HFLAG_64 | MIPS_HFLAG_CP0;
./tools/qemu-xen/target-mips/helper.c:            env->hflags &= ~(MIPS_HFLAG_KSU);
./tools/qemu-xen/target-mips/helper.c:        env->hflags &= ~MIPS_HFLAG_BMASK;
./tools/qemu-xen/target-mips/helper.c:        if (env->CP0_Status & (1 << CP0St_BEV)) {
./tools/qemu-xen/target-mips/helper.c:            env->active_tc.PC = (int32_t)0xBFC00200;
./tools/qemu-xen/target-mips/helper.c:            env->active_tc.PC = (int32_t)(env->CP0_EBase & ~0x3ff);
./tools/qemu-xen/target-mips/helper.c:        env->active_tc.PC += offset;
./tools/qemu-xen/target-mips/helper.c:        env->CP0_Cause = (env->CP0_Cause & ~(0x1f << CP0Ca_EC)) | (cause << CP0Ca_EC);
./tools/qemu-xen/target-mips/helper.c:        qemu_log("Invalid MIPS exception %d. Exiting\n", env->exception_index);
./tools/qemu-xen/target-mips/helper.c:        printf("Invalid MIPS exception %d. Exiting\n", env->exception_index);
./tools/qemu-xen/target-mips/helper.c:    if (qemu_log_enabled() && env->exception_index != EXCP_EXT_INTERRUPT) {
./tools/qemu-xen/target-mips/helper.c:                __func__, env->active_tc.PC, env->CP0_EPC, cause,
./tools/qemu-xen/target-mips/helper.c:                env->CP0_Status, env->CP0_Cause, env->CP0_BadVAddr,
./tools/qemu-xen/target-mips/helper.c:                env->CP0_DEPC);
./tools/qemu-xen/target-mips/helper.c:    env->exception_index = EXCP_NONE;
./tools/qemu-xen/target-mips/helper.c:    uint8_t ASID = env->CP0_EntryHi & 0xFF;
./tools/qemu-xen/target-mips/helper.c:    tlb = &env->tlb->mmu.r4k.tlb[idx];
./tools/qemu-xen/target-mips/helper.c:    if (use_extra && env->tlb->tlb_in_use < MIPS_TLB_MAX) {
./tools/qemu-xen/target-mips/helper.c:        env->tlb->mmu.r4k.tlb[env->tlb->tlb_in_use] = *tlb;
./tools/qemu-xen/target-mips/helper.c:        env->tlb->tlb_in_use++;
./tools/qemu-xen/target-mips/helper.c:        if (addr >= (0xFFFFFFFF80000000ULL & env->SEGMask)) {
./tools/qemu-xen/target-mips/helper.c:        if (addr >= (0xFFFFFFFF80000000ULL & env->SEGMask)) {
./tools/qemu-xen/target-ppc/machine.c:        qemu_put_betls(f, &env->gpr[i]);
./tools/qemu-xen/target-ppc/machine.c:        qemu_put_betls(f, &env->gprh[i]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->lr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->ctr);
./tools/qemu-xen/target-ppc/machine.c:        qemu_put_be32s(f, &env->crf[i]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->xer);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->reserve_addr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->msr);
./tools/qemu-xen/target-ppc/machine.c:        qemu_put_betls(f, &env->tgpr[i]);
./tools/qemu-xen/target-ppc/machine.c:        u.d = env->fpr[i];
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_be32s(f, &env->fpscr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->access_type);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->asr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->slb_nr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->spr[SPR_SDR1]);
./tools/qemu-xen/target-ppc/machine.c:        qemu_put_betls(f, &env->sr[i]);
./tools/qemu-xen/target-ppc/machine.c:            qemu_put_betls(f, &env->DBAT[i][j]);
./tools/qemu-xen/target-ppc/machine.c:            qemu_put_betls(f, &env->IBAT[i][j]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->nb_tlb);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->tlb_per_way);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->nb_ways);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->last_way);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->id_tlbs);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->nb_pids);
./tools/qemu-xen/target-ppc/machine.c:    if (env->tlb.tlb6) {
./tools/qemu-xen/target-ppc/machine.c:        for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen/target-ppc/machine.c:            qemu_put_betls(f, &env->tlb.tlb6[i].pte0);
./tools/qemu-xen/target-ppc/machine.c:            qemu_put_betls(f, &env->tlb.tlb6[i].pte1);
./tools/qemu-xen/target-ppc/machine.c:            qemu_put_betls(f, &env->tlb.tlb6[i].EPN);
./tools/qemu-xen/target-ppc/machine.c:        qemu_put_betls(f, &env->pb[i]);
./tools/qemu-xen/target-ppc/machine.c:        qemu_put_betls(f, &env->spr[i]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_be32s(f, &env->vscr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_be64s(f, &env->spe_acc);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_be32s(f, &env->spe_fscr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->msr_mask);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_be32s(f, &env->flags);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->error_code);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_be32s(f, &env->pending_interrupts);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_be32s(f, &env->irq_input_state);
./tools/qemu-xen/target-ppc/machine.c:        qemu_put_betls(f, &env->excp_vectors[i]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->excp_prefix);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->hreset_excp_prefix);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->ivor_mask);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->ivpr_mask);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->hreset_vector);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->nip);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->hflags);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_betls(f, &env->hflags_nmsr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->mmu_idx);
./tools/qemu-xen/target-ppc/machine.c:    qemu_put_sbe32s(f, &env->power_mode);
./tools/qemu-xen/target-ppc/machine.c:        qemu_get_betls(f, &env->gpr[i]);
./tools/qemu-xen/target-ppc/machine.c:        qemu_get_betls(f, &env->gprh[i]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->lr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->ctr);
./tools/qemu-xen/target-ppc/machine.c:        qemu_get_be32s(f, &env->crf[i]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->xer);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->reserve_addr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->msr);
./tools/qemu-xen/target-ppc/machine.c:        qemu_get_betls(f, &env->tgpr[i]);
./tools/qemu-xen/target-ppc/machine.c:        env->fpr[i] = u.d;
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_be32s(f, &env->fpscr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->access_type);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->asr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->slb_nr);
./tools/qemu-xen/target-ppc/machine.c:        qemu_get_betls(f, &env->sr[i]);
./tools/qemu-xen/target-ppc/machine.c:            qemu_get_betls(f, &env->DBAT[i][j]);
./tools/qemu-xen/target-ppc/machine.c:            qemu_get_betls(f, &env->IBAT[i][j]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->nb_tlb);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->tlb_per_way);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->nb_ways);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->last_way);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->id_tlbs);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->nb_pids);
./tools/qemu-xen/target-ppc/machine.c:    if (env->tlb.tlb6) {
./tools/qemu-xen/target-ppc/machine.c:        for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen/target-ppc/machine.c:            qemu_get_betls(f, &env->tlb.tlb6[i].pte0);
./tools/qemu-xen/target-ppc/machine.c:            qemu_get_betls(f, &env->tlb.tlb6[i].pte1);
./tools/qemu-xen/target-ppc/machine.c:            qemu_get_betls(f, &env->tlb.tlb6[i].EPN);
./tools/qemu-xen/target-ppc/machine.c:        qemu_get_betls(f, &env->pb[i]);
./tools/qemu-xen/target-ppc/machine.c:        qemu_get_betls(f, &env->spr[i]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_be32s(f, &env->vscr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_be64s(f, &env->spe_acc);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_be32s(f, &env->spe_fscr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->msr_mask);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_be32s(f, &env->flags);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->error_code);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_be32s(f, &env->pending_interrupts);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_be32s(f, &env->irq_input_state);
./tools/qemu-xen/target-ppc/machine.c:        qemu_get_betls(f, &env->excp_vectors[i]);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->excp_prefix);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->hreset_excp_prefix);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->ivor_mask);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->ivpr_mask);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->hreset_vector);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->nip);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->hflags);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_betls(f, &env->hflags_nmsr);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->mmu_idx);
./tools/qemu-xen/target-ppc/machine.c:    qemu_get_sbe32s(f, &env->power_mode);
./tools/qemu-xen/target-ppc/translate.c:                env->nip, env->lr, env->ctr, env->xer);
./tools/qemu-xen/target-ppc/translate.c:                TARGET_FMT_lx " idx %d\n", env->msr, env->spr[SPR_HID0],
./tools/qemu-xen/target-ppc/translate.c:                env->hflags, env->mmu_idx);
./tools/qemu-xen/target-ppc/translate.c:        cpu_fprintf(f, "%01x", env->crf[i]);
./tools/qemu-xen/target-ppc/translate.c:        if (env->crf[i] & 0x08)
./tools/qemu-xen/target-ppc/translate.c:        else if (env->crf[i] & 0x04)
./tools/qemu-xen/target-ppc/translate.c:        else if (env->crf[i] & 0x02)
./tools/qemu-xen/target-ppc/translate.c:        cpu_fprintf(f, " %c%c", a, env->crf[i] & 0x01 ? 'O' : ' ');
./tools/qemu-xen/target-ppc/translate.c:                env->reserve_addr);
./tools/qemu-xen/target-ppc/translate.c:        cpu_fprintf(f, " %016" PRIx64, *((uint64_t *)&env->fpr[i]));
./tools/qemu-xen/target-ppc/translate.c:    cpu_fprintf(f, "FPSCR %08x\n", env->fpscr);
./tools/qemu-xen/target-ppc/translate.c:                env->spr[SPR_SRR0], env->spr[SPR_SRR1],
./tools/qemu-xen/target-ppc/translate.c:                env->spr[SPR_PVR], env->spr[SPR_VRSAVE]);
./tools/qemu-xen/target-ppc/translate.c:                env->spr[SPR_SPRG0], env->spr[SPR_SPRG1],
./tools/qemu-xen/target-ppc/translate.c:                env->spr[SPR_SPRG2], env->spr[SPR_SPRG3]);
./tools/qemu-xen/target-ppc/translate.c:                env->spr[SPR_SPRG4], env->spr[SPR_SPRG5],
./tools/qemu-xen/target-ppc/translate.c:                env->spr[SPR_SPRG6], env->spr[SPR_SPRG7]);
./tools/qemu-xen/target-ppc/translate.c:    if (env->excp_model == POWERPC_EXCP_BOOKE) {
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_CSRR0], env->spr[SPR_BOOKE_CSRR1],
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_MCSRR0], env->spr[SPR_BOOKE_MCSRR1]);
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_TCR], env->spr[SPR_BOOKE_TSR],
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_ESR], env->spr[SPR_BOOKE_DEAR]);
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_PIR], env->spr[SPR_BOOKE_DECAR],
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_IVPR], env->spr[SPR_BOOKE_EPCR]);
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_MCSR], env->spr[SPR_BOOKE_SPRG8],
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_EPR]);
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_Exxx_MCAR], env->spr[SPR_BOOKE_PID1],
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_PID2], env->spr[SPR_E500_SVR]);
./tools/qemu-xen/target-ppc/translate.c:    if (env->flags & POWERPC_FLAG_CFAR) {
./tools/qemu-xen/target-ppc/translate.c:        cpu_fprintf(f, " CFAR " TARGET_FMT_lx"\n", env->cfar);
./tools/qemu-xen/target-ppc/translate.c:    switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/translate.c:        cpu_fprintf(f, " SDR1 " TARGET_FMT_lx "\n", env->spr[SPR_SDR1]);
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_MAS0], env->spr[SPR_BOOKE_MAS1],
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_MAS2], env->spr[SPR_BOOKE_MAS3]);
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_MAS4], env->spr[SPR_BOOKE_MAS6],
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_MAS7], env->spr[SPR_BOOKE_PID]);
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_MMUCFG], env->spr[SPR_BOOKE_TLB0CFG],
./tools/qemu-xen/target-ppc/translate.c:                    env->spr[SPR_BOOKE_TLB1CFG]);
./tools/qemu-xen/target-ppc/translate.c:    t1 = env->opcodes;
./tools/qemu-xen/target-ppc/translate.c:    ctx.spr_cb = env->spr_cb;
./tools/qemu-xen/target-ppc/translate.c:    ctx.mem_idx = env->mmu_idx;
./tools/qemu-xen/target-ppc/translate.c:    ctx.le_mode = env->hflags & (1 << MSR_LE) ? 1 : 0;
./tools/qemu-xen/target-ppc/translate.c:    ctx.has_cfar = !!(env->flags & POWERPC_FLAG_CFAR);
./tools/qemu-xen/target-ppc/translate.c:    if ((env->flags & POWERPC_FLAG_SPE) && msr_spe)
./tools/qemu-xen/target-ppc/translate.c:    if ((env->flags & POWERPC_FLAG_VRE) && msr_vr)
./tools/qemu-xen/target-ppc/translate.c:    if ((env->flags & POWERPC_FLAG_SE) && msr_se)
./tools/qemu-xen/target-ppc/translate.c:    if ((env->flags & POWERPC_FLAG_BE) && msr_be)
./tools/qemu-xen/target-ppc/translate.c:    if (unlikely(env->singlestep_enabled))
./tools/qemu-xen/target-ppc/translate.c:        if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-ppc/translate.c:            QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-ppc/translate.c:        table = env->opcodes;
./tools/qemu-xen/target-ppc/translate.c:                            (env->singlestep_enabled) ||
./tools/qemu-xen/target-ppc/translate.c:        if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen/target-ppc/translate.c:        flags = env->bfd_mach;
./tools/qemu-xen/target-ppc/translate.c:    env->nip = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-ppc/kvm.c:    if (cenv->excp_model == POWERPC_EXCP_BOOKE) {
./tools/qemu-xen/target-ppc/kvm.c:    sregs.pvr = cenv->spr[SPR_PVR];
./tools/qemu-xen/target-ppc/kvm.c:        !kvm_check_extension(env->kvm_state, KVM_CAP_SW_TLB)) {
./tools/qemu-xen/target-ppc/kvm.c:    assert(entries == env->nb_tlb);
./tools/qemu-xen/target-ppc/kvm.c:    env->tlb_dirty = true;
./tools/qemu-xen/target-ppc/kvm.c:    cfg.array = (uintptr_t)env->tlb.tlbm;
./tools/qemu-xen/target-ppc/kvm.c:    env->kvm_sw_tlb = true;
./tools/qemu-xen/target-ppc/kvm.c:    switch (cenv->mmu_model) {
./tools/qemu-xen/target-ppc/kvm.c:    if (!env->kvm_sw_tlb) {
./tools/qemu-xen/target-ppc/kvm.c:    bitmap = g_malloc((env->nb_tlb + 7) / 8);
./tools/qemu-xen/target-ppc/kvm.c:    memset(bitmap, 0xFF, (env->nb_tlb + 7) / 8);
./tools/qemu-xen/target-ppc/kvm.c:    dirty_tlb.num_dirty = env->nb_tlb;
./tools/qemu-xen/target-ppc/kvm.c:    regs.ctr = env->ctr;
./tools/qemu-xen/target-ppc/kvm.c:    regs.lr  = env->lr;
./tools/qemu-xen/target-ppc/kvm.c:    regs.xer = env->xer;
./tools/qemu-xen/target-ppc/kvm.c:    regs.msr = env->msr;
./tools/qemu-xen/target-ppc/kvm.c:    regs.pc = env->nip;
./tools/qemu-xen/target-ppc/kvm.c:    regs.srr0 = env->spr[SPR_SRR0];
./tools/qemu-xen/target-ppc/kvm.c:    regs.srr1 = env->spr[SPR_SRR1];
./tools/qemu-xen/target-ppc/kvm.c:    regs.sprg0 = env->spr[SPR_SPRG0];
./tools/qemu-xen/target-ppc/kvm.c:    regs.sprg1 = env->spr[SPR_SPRG1];
./tools/qemu-xen/target-ppc/kvm.c:    regs.sprg2 = env->spr[SPR_SPRG2];
./tools/qemu-xen/target-ppc/kvm.c:    regs.sprg3 = env->spr[SPR_SPRG3];
./tools/qemu-xen/target-ppc/kvm.c:    regs.sprg4 = env->spr[SPR_SPRG4];
./tools/qemu-xen/target-ppc/kvm.c:    regs.sprg5 = env->spr[SPR_SPRG5];
./tools/qemu-xen/target-ppc/kvm.c:    regs.sprg6 = env->spr[SPR_SPRG6];
./tools/qemu-xen/target-ppc/kvm.c:    regs.sprg7 = env->spr[SPR_SPRG7];
./tools/qemu-xen/target-ppc/kvm.c:    regs.pid = env->spr[SPR_BOOKE_PID];
./tools/qemu-xen/target-ppc/kvm.c:        regs.gpr[i] = env->gpr[i];
./tools/qemu-xen/target-ppc/kvm.c:    if (env->tlb_dirty) {
./tools/qemu-xen/target-ppc/kvm.c:        env->tlb_dirty = false;
./tools/qemu-xen/target-ppc/kvm.c:        env->crf[i] = cr & 15;
./tools/qemu-xen/target-ppc/kvm.c:    env->ctr = regs.ctr;
./tools/qemu-xen/target-ppc/kvm.c:    env->lr = regs.lr;
./tools/qemu-xen/target-ppc/kvm.c:    env->xer = regs.xer;
./tools/qemu-xen/target-ppc/kvm.c:    env->msr = regs.msr;
./tools/qemu-xen/target-ppc/kvm.c:    env->nip = regs.pc;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SRR0] = regs.srr0;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SRR1] = regs.srr1;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SPRG0] = regs.sprg0;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SPRG1] = regs.sprg1;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SPRG2] = regs.sprg2;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SPRG3] = regs.sprg3;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SPRG4] = regs.sprg4;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SPRG5] = regs.sprg5;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SPRG6] = regs.sprg6;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_SPRG7] = regs.sprg7;
./tools/qemu-xen/target-ppc/kvm.c:    env->spr[SPR_BOOKE_PID] = regs.pid;
./tools/qemu-xen/target-ppc/kvm.c:        env->gpr[i] = regs.gpr[i];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_CSRR0] = sregs.u.e.csrr0;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_CSRR1] = sregs.u.e.csrr1;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_ESR] = sregs.u.e.esr;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_DEAR] = sregs.u.e.dear;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MCSR] = sregs.u.e.mcsr;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_TSR] = sregs.u.e.tsr;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_TCR] = sregs.u.e.tcr;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_DECR] = sregs.u.e.dec;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_TBL] = sregs.u.e.tb & 0xffffffff;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_TBU] = sregs.u.e.tb >> 32;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_VRSAVE] = sregs.u.e.vrsave;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_PIR] = sregs.u.e.pir;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MCSRR0] = sregs.u.e.mcsrr0;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MCSRR1] = sregs.u.e.mcsrr1;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_DECAR] = sregs.u.e.decar;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVPR] = sregs.u.e.ivpr;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_EPCR] = sregs.u.e.epcr;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_SPRG8] = sregs.u.e.sprg8;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR0] = sregs.u.e.ivor_low[0];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR1] = sregs.u.e.ivor_low[1];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR2] = sregs.u.e.ivor_low[2];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR3] = sregs.u.e.ivor_low[3];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR4] = sregs.u.e.ivor_low[4];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR5] = sregs.u.e.ivor_low[5];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR6] = sregs.u.e.ivor_low[6];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR7] = sregs.u.e.ivor_low[7];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR8] = sregs.u.e.ivor_low[8];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR9] = sregs.u.e.ivor_low[9];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR10] = sregs.u.e.ivor_low[10];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR11] = sregs.u.e.ivor_low[11];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR12] = sregs.u.e.ivor_low[12];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR13] = sregs.u.e.ivor_low[13];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR14] = sregs.u.e.ivor_low[14];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_IVOR15] = sregs.u.e.ivor_low[15];
./tools/qemu-xen/target-ppc/kvm.c:                env->spr[SPR_BOOKE_IVOR32] = sregs.u.e.ivor_high[0];
./tools/qemu-xen/target-ppc/kvm.c:                env->spr[SPR_BOOKE_IVOR33] = sregs.u.e.ivor_high[1];
./tools/qemu-xen/target-ppc/kvm.c:                env->spr[SPR_BOOKE_IVOR34] = sregs.u.e.ivor_high[2];
./tools/qemu-xen/target-ppc/kvm.c:                env->spr[SPR_BOOKE_IVOR35] = sregs.u.e.ivor_high[3];
./tools/qemu-xen/target-ppc/kvm.c:                env->spr[SPR_BOOKE_IVOR36] = sregs.u.e.ivor_high[4];
./tools/qemu-xen/target-ppc/kvm.c:                env->spr[SPR_BOOKE_IVOR37] = sregs.u.e.ivor_high[5];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MAS0] = sregs.u.e.mas0;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MAS1] = sregs.u.e.mas1;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MAS2] = sregs.u.e.mas2;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MAS3] = sregs.u.e.mas7_3 & 0xffffffff;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MAS4] = sregs.u.e.mas4;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MAS6] = sregs.u.e.mas6;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_MAS7] = sregs.u.e.mas7_3 >> 32;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_MMUCFG] = sregs.u.e.mmucfg;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_TLB0CFG] = sregs.u.e.tlbcfg[0];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_TLB1CFG] = sregs.u.e.tlbcfg[1];
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_EPR] = sregs.u.e.epr;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_EPLC] = sregs.u.e.eplc;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_BOOKE_EPSC] = sregs.u.e.epsc;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_E500_SVR] = sregs.u.e.impl.fsl.svr;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_Exxx_MCAR] = sregs.u.e.impl.fsl.mcar;
./tools/qemu-xen/target-ppc/kvm.c:            env->spr[SPR_HID0] = sregs.u.e.impl.fsl.hid0;
./tools/qemu-xen/target-ppc/kvm.c:                env->spr[SPR_BOOKE_PID1] = sregs.u.e.impl.fsl.pid1;
./tools/qemu-xen/target-ppc/kvm.c:                env->spr[SPR_BOOKE_PID2] = sregs.u.e.impl.fsl.pid2;
./tools/qemu-xen/target-ppc/kvm.c:            env->sr[i] = sregs.u.s.ppc32.sr[i];
./tools/qemu-xen/target-ppc/kvm.c:            env->DBAT[0][i] = sregs.u.s.ppc32.dbat[i] & 0xffffffff;
./tools/qemu-xen/target-ppc/kvm.c:            env->DBAT[1][i] = sregs.u.s.ppc32.dbat[i] >> 32;
./tools/qemu-xen/target-ppc/kvm.c:            env->IBAT[0][i] = sregs.u.s.ppc32.ibat[i] & 0xffffffff;
./tools/qemu-xen/target-ppc/kvm.c:            env->IBAT[1][i] = sregs.u.s.ppc32.ibat[i] >> 32;
./tools/qemu-xen/target-ppc/kvm.c:     * interrupt, reset, etc) in PPC-specific env->irq_input_state. */
./tools/qemu-xen/target-ppc/kvm.c:        (env->interrupt_request & CPU_INTERRUPT_HARD) &&
./tools/qemu-xen/target-ppc/kvm.c:        (env->irq_input_state & (1<<PPC_INPUT_INT)))
./tools/qemu-xen/target-ppc/kvm.c:            printf("cpu %d fail inject %x\n", env->cpu_index, irq);
./tools/qemu-xen/target-ppc/kvm.c:    return env->halted;
./tools/qemu-xen/target-ppc/kvm.c:    if (!(env->interrupt_request & CPU_INTERRUPT_HARD) && (msr_ee)) {
./tools/qemu-xen/target-ppc/kvm.c:        env->halted = 1;
./tools/qemu-xen/target-ppc/kvm.c:        env->exception_index = EXCP_HLT;
./tools/qemu-xen/target-ppc/kvm.c:    if (ppc_dcr_read(env->dcr_env, dcrn, data) < 0)
./tools/qemu-xen/target-ppc/kvm.c:    if (ppc_dcr_write(env->dcr_env, dcrn, data) < 0)
./tools/qemu-xen/target-ppc/kvm.c:    if (kvm_check_extension(env->kvm_state, KVM_CAP_PPC_GET_PVINFO) &&
./tools/qemu-xen/target-ppc/kvm.c:        !kvm_vm_ioctl(env->kvm_state, KVM_PPC_GET_PVINFO, &pvinfo)) {
./tools/qemu-xen/target-ppc/kvm.c:    reg.u.reg64 = env->spr[SPR_HIOR];
./tools/qemu-xen/target-ppc/kvm.c:    sregs.u.s.sdr1 = env->spr[SPR_SDR1];
./tools/qemu-xen/target-ppc/op_helper.c:    env->exception_index = exception;
./tools/qemu-xen/target-ppc/op_helper.c:    env->error_code = error_code;
./tools/qemu-xen/target-ppc/op_helper.c:             env->spr[sprn]);
./tools/qemu-xen/target-ppc/op_helper.c:             env->spr[sprn]);
./tools/qemu-xen/target-ppc/op_helper.c:    hid0 = env->spr[SPR_HID0];
./tools/qemu-xen/target-ppc/op_helper.c:        env->hflags &= ~(1 << MSR_LE);
./tools/qemu-xen/target-ppc/op_helper.c:        env->hflags_nmsr &= ~(1 << MSR_LE);
./tools/qemu-xen/target-ppc/op_helper.c:        env->hflags_nmsr |= (1 << MSR_LE) & (((val >> 3) & 1) << MSR_LE);
./tools/qemu-xen/target-ppc/op_helper.c:        env->hflags |= env->hflags_nmsr;
./tools/qemu-xen/target-ppc/op_helper.c:                 val & 0x8 ? 'l' : 'b', env->hflags);
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_HID0] = (uint32_t)val;
./tools/qemu-xen/target-ppc/op_helper.c:    if (likely(env->pb[num] != value)) {
./tools/qemu-xen/target-ppc/op_helper.c:        env->pb[num] = value;
./tools/qemu-xen/target-ppc/op_helper.c:            env->gpr[reg] = bswap32(ldl(addr));
./tools/qemu-xen/target-ppc/op_helper.c:            env->gpr[reg] = ldl(addr);
./tools/qemu-xen/target-ppc/op_helper.c:            stl(addr, bswap32((uint32_t)env->gpr[reg]));
./tools/qemu-xen/target-ppc/op_helper.c:            stl(addr, (uint32_t)env->gpr[reg]);
./tools/qemu-xen/target-ppc/op_helper.c:        env->gpr[reg] = ldl(addr);
./tools/qemu-xen/target-ppc/op_helper.c:        env->gpr[reg] = 0;
./tools/qemu-xen/target-ppc/op_helper.c:            env->gpr[reg] |= ldub(addr) << sh;
./tools/qemu-xen/target-ppc/op_helper.c:        stl(addr, env->gpr[reg]);
./tools/qemu-xen/target-ppc/op_helper.c:            stb(addr, (env->gpr[reg] >> sh) & 0xFF);
./tools/qemu-xen/target-ppc/op_helper.c:    if (env->reserve_addr == addr)
./tools/qemu-xen/target-ppc/op_helper.c:        env->reserve_addr = (target_ulong)-1ULL;
./tools/qemu-xen/target-ppc/op_helper.c:    do_dcbz(addr, env->dcache_line_size);
./tools/qemu-xen/target-ppc/op_helper.c:    if (((env->spr[SPR_970_HID5] >> 7) & 0x3) == 1)
./tools/qemu-xen/target-ppc/op_helper.c:        do_dcbz(addr, env->dcache_line_size);
./tools/qemu-xen/target-ppc/op_helper.c:    addr &= ~(env->dcache_line_size - 1);
./tools/qemu-xen/target-ppc/op_helper.c:            env->gpr[reg] = (env->gpr[reg] & ~(0xFF << d)) | (c << d);
./tools/qemu-xen/target-ppc/op_helper.c:        env->xer &= ~(1 << XER_OV);
./tools/qemu-xen/target-ppc/op_helper.c:        env->xer |= (1 << XER_OV) | (1 << XER_SO);
./tools/qemu-xen/target-ppc/op_helper.c:                env->xer &= ~(1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:                env->xer |= (1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:            env->xer |= (1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:                env->xer &= ~(1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:                env->xer |= (1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:            env->xer |= (1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_CA);
./tools/qemu-xen/target-ppc/op_helper.c:    d.d = float32_to_float64(f.f, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    f.f = float64_to_float32(d.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr &= ~(0x1F << FPSCR_FPRF);
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= ret << FPSCR_FPRF;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXSNAN;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXSOFT;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXISI;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXIDI;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXZDZ;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXIMZ;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXVC;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr &= ~(0xF << FPSCR_FPCC);
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 0x11 << FPSCR_FPCC;
./tools/qemu-xen/target-ppc/op_helper.c:            env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen/target-ppc/op_helper.c:            env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_VXVC;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXSQRT;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr &= ~((1 << FPSCR_FR) | (1 << FPSCR_FI));
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr &= ~(0xF << FPSCR_FPCC);
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 0x11 << FPSCR_FPCC;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VXCVI;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr &= ~((1 << FPSCR_FR) | (1 << FPSCR_FI));
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr &= ~(0xF << FPSCR_FPCC);
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 0x11 << FPSCR_FPCC;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_VX;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_ZX;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr &= ~((1 << FPSCR_FR) | (1 << FPSCR_FI));
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_OX;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen/target-ppc/op_helper.c:        env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_OX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_XX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FI;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_UX;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen/target-ppc/op_helper.c:        env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_UX;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_XX;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen/target-ppc/op_helper.c:        env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_XX;
./tools/qemu-xen/target-ppc/op_helper.c:    set_float_rounding_mode(rnd_type, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    prev = (env->fpscr >> bit) & 1;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr &= ~(1 << bit);
./tools/qemu-xen/target-ppc/op_helper.c:    prev = (env->fpscr >> bit) & 1;
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= 1 << bit;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_VX;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FX;
./tools/qemu-xen/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXSNAN;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXISI;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXIDI;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXZDZ;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXIMZ;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXVC;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXSOFT;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXSQRT;
./tools/qemu-xen/target-ppc/op_helper.c:                    env->error_code |= POWERPC_EXCP_FP_VXCVI;
./tools/qemu-xen/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_OX;
./tools/qemu-xen/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_UX;
./tools/qemu-xen/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_ZX;
./tools/qemu-xen/target-ppc/op_helper.c:                env->error_code = POWERPC_EXCP_FP | POWERPC_EXCP_FP_XX;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen/target-ppc/op_helper.c:            env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen/target-ppc/op_helper.c:    prev = env->fpscr;
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr &= ~(0xF << (4 * i));
./tools/qemu-xen/target-ppc/op_helper.c:            env->fpscr |= new & (0xF << (4 * i));
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_VX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr &= ~(1 << FPSCR_VX);
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr |= 1 << FPSCR_FEX;
./tools/qemu-xen/target-ppc/op_helper.c:        env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen/target-ppc/op_helper.c:        env->error_code = POWERPC_EXCP_FP;
./tools/qemu-xen/target-ppc/op_helper.c:        env->fpscr &= ~(1 << FPSCR_FEX);
./tools/qemu-xen/target-ppc/op_helper.c:    if (env->exception_index == POWERPC_EXCP_PROGRAM &&
./tools/qemu-xen/target-ppc/op_helper.c:        (env->error_code & POWERPC_EXCP_FP)) {
./tools/qemu-xen/target-ppc/op_helper.c:            helper_raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen/target-ppc/op_helper.c:        int status = get_float_exception_flags(&env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    set_float_exception_flags(0, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg1.d = float64_add(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg1.d = float64_sub(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg1.d = float64_mul(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg1.d = float64_div(farg1.d, farg2.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.ll = float64_to_int32(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.ll = float64_to_int32_round_to_zero(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    farg.d = int64_to_float64(arg, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.ll = float64_to_int64(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.ll = float64_to_int64_round_to_zero(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        set_float_rounding_mode(rounding_mode, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.ll = float64_round_to_int(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft0_128 = float64_to_float128(farg1.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft1_128 = float64_to_float128(farg2.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft0_128 = float128_mul(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            ft1_128 = float64_to_float128(farg3.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            ft0_128 = float128_add(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            farg1.d = float128_to_float64(ft0_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft0_128 = float64_to_float128(farg1.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft1_128 = float64_to_float128(farg2.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft0_128 = float128_mul(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            ft1_128 = float64_to_float128(farg3.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            ft0_128 = float128_sub(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            farg1.d = float128_to_float64(ft0_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft0_128 = float64_to_float128(farg1.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft1_128 = float64_to_float128(farg2.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft0_128 = float128_mul(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            ft1_128 = float64_to_float128(farg3.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            ft0_128 = float128_add(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            farg1.d = float128_to_float64(ft0_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft0_128 = float64_to_float128(farg1.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft1_128 = float64_to_float128(farg2.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        ft0_128 = float128_mul(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            ft1_128 = float64_to_float128(farg3.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            ft0_128 = float128_sub(ft0_128, ft1_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:            farg1.d = float128_to_float64(ft0_128, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    f32 = float64_to_float32(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    farg.d = float32_to_float64(f32, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.d = float64_sqrt(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    farg.d = float64_div(float64_one, farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    farg.d = float64_div(float64_one, farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    f32 = float64_to_float32(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    farg.d = float32_to_float64(f32, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.d = float64_sqrt(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.d = float64_div(float64_one, farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        f32 = float64_to_float32(farg.d, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:        farg.d = float32_to_float64(f32, &env->fp_status);
./tools/qemu-xen/target-ppc/op_helper.c:    } else if (float64_lt(farg1.d, farg2.d, &env->fp_status)) {
./tools/qemu-xen/target-ppc/op_helper.c:    } else if (!float64_le(farg1.d, farg2.d, &env->fp_status)) {
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr &= ~(0x0F << FPSCR_FPRF);
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= ret << FPSCR_FPRF;
./tools/qemu-xen/target-ppc/op_helper.c:    env->crf[crfD] = ret;
./tools/qemu-xen/target-ppc/op_helper.c:    } else if (float64_lt(farg1.d, farg2.d, &env->fp_status)) {
./tools/qemu-xen/target-ppc/op_helper.c:    } else if (!float64_le(farg1.d, farg2.d, &env->fp_status)) {
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr &= ~(0x0F << FPSCR_FPRF);
./tools/qemu-xen/target-ppc/op_helper.c:    env->fpscr |= ret << FPSCR_FPRF;
./tools/qemu-xen/target-ppc/op_helper.c:    env->crf[crfD] = ret;
./tools/qemu-xen/target-ppc/op_helper.c:        env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen/target-ppc/op_helper.c:            msr |= env->msr & ~((uint64_t)0xFFFFFFFF);
./tools/qemu-xen/target-ppc/op_helper.c:    env->nip = nip & ~((target_ulong)0x00000003);
./tools/qemu-xen/target-ppc/op_helper.c:    cpu_dump_rfi(env->nip, env->msr);
./tools/qemu-xen/target-ppc/op_helper.c:    env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_SRR0], env->spr[SPR_SRR1],
./tools/qemu-xen/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_SRR0], env->spr[SPR_SRR1],
./tools/qemu-xen/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_HSRR0], env->spr[SPR_HSRR1],
./tools/qemu-xen/target-ppc/op_helper.c:        return env->icache_line_size;
./tools/qemu-xen/target-ppc/op_helper.c:        return env->dcache_line_size;
./tools/qemu-xen/target-ppc/op_helper.c:        return (env->icache_line_size < env->dcache_line_size) ?
./tools/qemu-xen/target-ppc/op_helper.c:                env->icache_line_size : env->dcache_line_size;
./tools/qemu-xen/target-ppc/op_helper.c:        return (env->icache_line_size > env->dcache_line_size) ?
./tools/qemu-xen/target-ppc/op_helper.c:                env->icache_line_size : env->dcache_line_size;
./tools/qemu-xen/target-ppc/op_helper.c:    uint64_t tmp = (uint64_t)arg1 << 32 | env->spr[SPR_MQ];
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_MQ] = 0;
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_MQ] = tmp % arg2;
./tools/qemu-xen/target-ppc/op_helper.c:    uint64_t tmp = (uint64_t)arg1 << 32 | env->spr[SPR_MQ];
./tools/qemu-xen/target-ppc/op_helper.c:        env->xer |= (1 << XER_OV) | (1 << XER_SO);
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_MQ] = 0;
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_MQ] = tmp % arg2;
./tools/qemu-xen/target-ppc/op_helper.c:            env->xer |= (1 << XER_OV) | (1 << XER_SO);
./tools/qemu-xen/target-ppc/op_helper.c:            env->xer &= ~(1 << XER_OV);
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_MQ] = 0;
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_MQ] = (int32_t)arg1 % (int32_t)arg2;
./tools/qemu-xen/target-ppc/op_helper.c:        env->xer |= (1 << XER_OV) | (1 << XER_SO);
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_MQ] = 0;
./tools/qemu-xen/target-ppc/op_helper.c:        env->xer &= ~(1 << XER_OV);
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_MQ] = (int32_t)arg1 % (int32_t)arg2;
./tools/qemu-xen/target-ppc/op_helper.c:    nb_BATs = env->nb_BATs;
./tools/qemu-xen/target-ppc/op_helper.c:    env->nb_BATs = 0;
./tools/qemu-xen/target-ppc/op_helper.c:    env->nb_BATs = nb_BATs;
./tools/qemu-xen/target-ppc/op_helper.c:    do_rfi(env->lr, env->ctr, 0x0000FFFF, 0);
./tools/qemu-xen/target-ppc/op_helper.c:    if (unlikely(env->dcr_env == NULL)) {
./tools/qemu-xen/target-ppc/op_helper.c:    } else if (unlikely(ppc_dcr_read(env->dcr_env, (uint32_t)dcrn, &val) != 0)) {
./tools/qemu-xen/target-ppc/op_helper.c:    if (unlikely(env->dcr_env == NULL)) {
./tools/qemu-xen/target-ppc/op_helper.c:    } else if (unlikely(ppc_dcr_write(env->dcr_env, (uint32_t)dcrn, (uint32_t)val) != 0)) {
./tools/qemu-xen/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_40x_SRR2], env->spr[SPR_40x_SRR3],
./tools/qemu-xen/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_BOOKE_CSRR0], SPR_BOOKE_CSRR1,
./tools/qemu-xen/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_BOOKE_DSRR0], SPR_BOOKE_DSRR1,
./tools/qemu-xen/target-ppc/op_helper.c:    do_rfi(env->spr[SPR_BOOKE_MCSRR0], SPR_BOOKE_MCSRR1,
./tools/qemu-xen/target-ppc/op_helper.c:                env->crf[0] = 0x4;
./tools/qemu-xen/target-ppc/op_helper.c:                env->crf[0] = 0x8;
./tools/qemu-xen/target-ppc/op_helper.c:        env->crf[0] = 0x2;
./tools/qemu-xen/target-ppc/op_helper.c:    env->xer = (env->xer & ~0x7F) | i;
./tools/qemu-xen/target-ppc/op_helper.c:        env->crf[0] |= xer_so;
./tools/qemu-xen/target-ppc/op_helper.c:    env->vscr = r->u32[3];
./tools/qemu-xen/target-ppc/op_helper.c:    env->vscr = r->u32[0];
./tools/qemu-xen/target-ppc/op_helper.c:    set_flush_to_zero(vscr_nj, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:                r->f[i] = func(a->f[i], b->f[i], &env->vec_status);     \
./tools/qemu-xen/target-ppc/op_helper.c:            env->vscr |= (1 << VSCR_SAT);                               \
./tools/qemu-xen/target-ppc/op_helper.c:            float32 t = cvt(b->element[i], &env->vec_status);           \
./tools/qemu-xen/target-ppc/op_helper.c:            r->f[i] = float32_scalbn (t, -uim, &env->vec_status);       \
./tools/qemu-xen/target-ppc/op_helper.c:            env->crf[6] = ((all != 0) << 3) | ((none == 0) << 1);       \
./tools/qemu-xen/target-ppc/op_helper.c:            int rel = float32_compare_quiet(a->f[i], b->f[i], &env->vec_status); \
./tools/qemu-xen/target-ppc/op_helper.c:            env->crf[6] = ((all != 0) << 3) | ((none == 0) << 1);       \
./tools/qemu-xen/target-ppc/op_helper.c:        int le_rel = float32_compare_quiet(a->f[i], b->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            int ge_rel = float32_compare_quiet(a->f[i], bneg, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:        env->crf[6] = (all_in == 0) << 1;
./tools/qemu-xen/target-ppc/op_helper.c:        float_status s = env->vec_status;                               \
./tools/qemu-xen/target-ppc/op_helper.c:            env->vscr |= (1 << VSCR_SAT);                               \
./tools/qemu-xen/target-ppc/op_helper.c:            af = float32_to_float64(a->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            bf = float32_to_float64(b->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            cf = float32_to_float64(c->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            t = float64_mul(af, cf, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            t = float64_add(t, bf, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            r->f[i] = float64_to_float32(t, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:                if (float32_lt_quiet(a->f[i], b->f[i], &env->vec_status)) { \
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:            af = float32_to_float64(a->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            bf = float32_to_float64(b->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            cf = float32_to_float64(c->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            t = float64_mul(af, cf, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            t = float64_sub(t, bf, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            r->f[i] = float64_to_float32(t, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            env->vscr |= (1 << VSCR_SAT);                               \
./tools/qemu-xen/target-ppc/op_helper.c:            r->f[i] = float32_div(float32_one, b->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:        float_status s = env->vec_status;                               \
./tools/qemu-xen/target-ppc/op_helper.c:            float32 t = float32_sqrt(b->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            r->f[i] = float32_div(float32_one, t, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            r->f[i] = float32_exp2(b->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:            r->f[i] = float32_log2(b->f[i], &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:        env->vscr |= (1 << VSCR_SAT);
./tools/qemu-xen/target-ppc/op_helper.c:    u.f = int32_to_float32(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.f = uint32_to_float32(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_to_int32(u.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_to_uint32(u.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_to_int32_round_to_zero(u.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_to_uint32_round_to_zero(u.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.f = int32_to_float32(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    tmp = int64_to_float32(1ULL << 32, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.f = float32_div(u.f, tmp, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.f = uint32_to_float32(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    tmp = uint64_to_float32(1ULL << 32, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.f = float32_div(u.f, tmp, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    tmp = uint64_to_float32(1ULL << 32, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.f = float32_mul(u.f, tmp, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_to_int32(u.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    tmp = uint64_to_float32(1ULL << 32, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.f = float32_mul(u.f, tmp, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_to_uint32(u.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u1.f = float32_add(u1.f, u2.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u1.f = float32_sub(u1.f, u2.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u1.f = float32_mul(u1.f, u2.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u1.f = float32_div(u1.f, u2.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_lt(u1.f, u2.f, &env->vec_status) ? 4 : 0;
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_le(u1.f, u2.f, &env->vec_status) ? 0 : 4;
./tools/qemu-xen/target-ppc/op_helper.c:    return float32_eq(u1.f, u2.f, &env->vec_status) ? 4 : 0;
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = int32_to_float64(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = int64_to_float64(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = uint32_to_float64(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = uint64_to_float64(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_to_int32(u.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_to_uint32(u.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_to_int32_round_to_zero(u.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_to_int64_round_to_zero(u.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_to_uint32_round_to_zero(u.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_to_uint64_round_to_zero(u.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = int32_to_float64(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    tmp = int64_to_float64(1ULL << 32, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = float64_div(u.d, tmp, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = uint32_to_float64(val, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    tmp = int64_to_float64(1ULL << 32, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = float64_div(u.d, tmp, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    tmp = uint64_to_float64(1ULL << 32, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = float64_mul(u.d, tmp, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_to_int32(u.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    tmp = uint64_to_float64(1ULL << 32, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u.d = float64_mul(u.d, tmp, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_to_uint32(u.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u2.f = float64_to_float32(u1.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u2.d = float32_to_float64(u1.f, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u1.d = float64_add(u1.d, u2.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u1.d = float64_sub(u1.d, u2.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u1.d = float64_mul(u1.d, u2.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    u1.d = float64_div(u1.d, u2.d, &env->vec_status);
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_lt(u1.d, u2.d, &env->vec_status) ? 4 : 0;
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_le(u1.d, u2.d, &env->vec_status) ? 0 : 4;
./tools/qemu-xen/target-ppc/op_helper.c:    return float64_eq_quiet(u1.d, u2.d, &env->vec_status) ? 4 : 0;
./tools/qemu-xen/target-ppc/op_helper.c:        helper_raise_exception_err(env->exception_index, env->error_code);
./tools/qemu-xen/target-ppc/op_helper.c:    if (env->mmu_model & POWERPC_MMU_64)
./tools/qemu-xen/target-ppc/op_helper.c:    return env->sr[sr_num];
./tools/qemu-xen/target-ppc/op_helper.c:    RPN = env->spr[SPR_RPA];
./tools/qemu-xen/target-ppc/op_helper.c:        CMP = env->spr[SPR_ICMP];
./tools/qemu-xen/target-ppc/op_helper.c:        EPN = env->spr[SPR_IMISS];
./tools/qemu-xen/target-ppc/op_helper.c:        CMP = env->spr[SPR_DCMP];
./tools/qemu-xen/target-ppc/op_helper.c:        EPN = env->spr[SPR_DMISS];
./tools/qemu-xen/target-ppc/op_helper.c:    way = (env->spr[SPR_SRR1] >> 17) & 1;
./tools/qemu-xen/target-ppc/op_helper.c:    RPN = env->spr[SPR_PTELO];
./tools/qemu-xen/target-ppc/op_helper.c:    CMP = env->spr[SPR_PTEHI];
./tools/qemu-xen/target-ppc/op_helper.c:    EPN = env->spr[SPR_TLBMISS] & ~0x3;
./tools/qemu-xen/target-ppc/op_helper.c:    way = env->spr[SPR_TLBMISS] & 0x3;
./tools/qemu-xen/target-ppc/op_helper.c:    tlb = &env->tlb.tlbe[entry];
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_40x_PID] = tlb->PID;
./tools/qemu-xen/target-ppc/op_helper.c:    tlb = &env->tlb.tlbe[entry];
./tools/qemu-xen/target-ppc/op_helper.c:    tlb = &env->tlb.tlbe[entry];
./tools/qemu-xen/target-ppc/op_helper.c:    tlb->PID = env->spr[SPR_40x_PID]; /* PID */
./tools/qemu-xen/target-ppc/op_helper.c:    tlb = &env->tlb.tlbe[entry];
./tools/qemu-xen/target-ppc/op_helper.c:    return ppcemb_tlb_search(env, address, env->spr[SPR_40x_PID]);
./tools/qemu-xen/target-ppc/op_helper.c:    tlb = &env->tlb.tlbe[entry];
./tools/qemu-xen/target-ppc/op_helper.c:        tlb->PID = env->spr[SPR_440_MMUCR] & 0x000000FF;
./tools/qemu-xen/target-ppc/op_helper.c:    tlb = &env->tlb.tlbe[entry];
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_440_MMUCR] &= ~0x000000FF;
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_440_MMUCR] |= tlb->PID;
./tools/qemu-xen/target-ppc/op_helper.c:    return ppcemb_tlb_search(env, address, env->spr[SPR_440_MMUCR] & 0xFF);
./tools/qemu-xen/target-ppc/op_helper.c:    int esel = (env->spr[SPR_BOOKE_MAS0] & MAS0_ESEL_MASK) >> MAS0_ESEL_SHIFT;
./tools/qemu-xen/target-ppc/op_helper.c:    int ea = (env->spr[SPR_BOOKE_MAS2] & MAS2_EPN_MASK);
./tools/qemu-xen/target-ppc/op_helper.c:    tlb = (env->spr[SPR_BOOKE_MAS0] & MAS0_TLBSEL_MASK) >> MAS0_TLBSEL_SHIFT;
./tools/qemu-xen/target-ppc/op_helper.c:    tlbncfg = env->spr[SPR_BOOKE_TLB0CFG + tlb];
./tools/qemu-xen/target-ppc/op_helper.c:    if ((tlbncfg & TLBnCFG_HES) && (env->spr[SPR_BOOKE_MAS0] & MAS0_HES)) {
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[pidn] = pid;
./tools/qemu-xen/target-ppc/op_helper.c:    switch (env->spr[SPR_BOOKE_MAS0] & MAS0_WQ_MASK) {
./tools/qemu-xen/target-ppc/op_helper.c:    if (((env->spr[SPR_BOOKE_MAS0] & MAS0_ATSEL) == MAS0_ATSEL_LRAT) &&
./tools/qemu-xen/target-ppc/op_helper.c:    tlbn = (env->spr[SPR_BOOKE_MAS0] & MAS0_TLBSEL_MASK) >> MAS0_TLBSEL_SHIFT;
./tools/qemu-xen/target-ppc/op_helper.c:    tlbncfg = env->spr[SPR_BOOKE_TLB0CFG + tlbn];
./tools/qemu-xen/target-ppc/op_helper.c:    tlb->mas7_3 = ((uint64_t)env->spr[SPR_BOOKE_MAS7] << 32) |
./tools/qemu-xen/target-ppc/op_helper.c:                  env->spr[SPR_BOOKE_MAS3];
./tools/qemu-xen/target-ppc/op_helper.c:    tlb->mas1 = env->spr[SPR_BOOKE_MAS1];
./tools/qemu-xen/target-ppc/op_helper.c:    tlb->mas2 = env->spr[SPR_BOOKE_MAS2] & 0xffffffff;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS0] = tlbn << MAS0_TLBSEL_SHIFT;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS0] |= way << MAS0_ESEL_SHIFT;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS0] |= env->last_way << MAS0_NV_SHIFT;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS1] = tlb->mas1;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS2] = tlb->mas2;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS3] = tlb->mas7_3;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS7] = tlb->mas7_3 >> 32;
./tools/qemu-xen/target-ppc/op_helper.c:    spid = (env->spr[SPR_BOOKE_MAS6] & MAS6_SPID_MASK) >> MAS6_SPID_SHIFT;
./tools/qemu-xen/target-ppc/op_helper.c:    sas = env->spr[SPR_BOOKE_MAS6] & MAS6_SAS;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS0] = env->spr[SPR_BOOKE_MAS4] & MAS4_TLBSELD_MASK;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS1] = env->spr[SPR_BOOKE_MAS4] & MAS4_TSIZED_MASK;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS2] = env->spr[SPR_BOOKE_MAS4] & MAS4_WIMGED_MASK;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS3] = 0;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS7] = 0;
./tools/qemu-xen/target-ppc/op_helper.c:    if (env->spr[SPR_BOOKE_MAS6] & MAS6_SAS) {
./tools/qemu-xen/target-ppc/op_helper.c:        env->spr[SPR_BOOKE_MAS1] |= MAS1_TS;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS1] |= (env->spr[SPR_BOOKE_MAS6] >> 16)
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS0] |= env->last_way << MAS0_ESEL_SHIFT;
./tools/qemu-xen/target-ppc/op_helper.c:    env->last_way++;
./tools/qemu-xen/target-ppc/op_helper.c:    env->last_way &= booke206_tlb_ways(env, 0) - 1;
./tools/qemu-xen/target-ppc/op_helper.c:    env->spr[SPR_BOOKE_MAS0] |= env->last_way << MAS0_NV_SHIFT;
./tools/qemu-xen/target-ppc/translate_init.c:    env->vscr = val;
./tools/qemu-xen/target-ppc/translate_init.c:    set_float_rounding_mode(float_round_nearest_even, &env->vec_status);
./tools/qemu-xen/target-ppc/translate_init.c:    set_flush_to_zero(vscr_nj, &env->vec_status);
./tools/qemu-xen/target-ppc/translate_init.c:    spr = &env->spr_cb[num];
./tools/qemu-xen/target-ppc/translate_init.c:    if (spr->name != NULL ||env-> spr[num] != 0x00000000 ||
./tools/qemu-xen/target-ppc/translate_init.c:    env->spr[num] = initial_value;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_BATs += 4;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_BATs += 4;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = nb_tlbs;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = nb_ways;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_6XX;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_BATs = 4;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = nb_tlbs;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = nb_ways;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_6XX;
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->nb_pids > 1) {
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->nb_pids > 2) {
./tools/qemu-xen/target-ppc/translate_init.c:    switch (env->nb_ways) {
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PIT]      = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FIT]      = 0x00001010;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00001020;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DEBUG]    = 0x00002000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF0UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PIT]      = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FIT]      = 0x00001010;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00001020;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLB]     = 0x00001100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLB]     = 0x00001200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DEBUG]    = 0x00002000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF0UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPA]      = 0x00000E00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EMUL]     = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DABR]     = 0x00001C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MEXTBR]   = 0x00001E00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_NMEXTBR]  = 0x00001F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF0UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPA]      = 0x00000E00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EMUL]     = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLB]     = 0x00001100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLB]     = 0x00001200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLBE]    = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLBE]    = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DABR]     = 0x00001C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MEXTBR]   = 0x00001E00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_NMEXTBR]  = 0x00001F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF0UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000A00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000FFC;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_APU]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FIT]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLB]     = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLB]     = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DEBUG]    = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SPEU]     = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EFPDI]    = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EFPRI]    = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFF7UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_CRITICAL] = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_APU]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FIT]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DTLB]     = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ITLB]     = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DEBUG]    = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivor_mask = 0x0000FFE0UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivpr_mask = 0xFFFF0000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IO]       = 0x00000A00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RUNM]     = 0x00002000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0xFFF00000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0x00000100UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_WDT]      = 0x00001500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EMUL]     = 0x00001600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0xFFF00000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0xFFF00000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0x00000100UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0xFFF00000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0x0000000000000100ULL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPU]      = 0x00000F20;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPUA]     = 0x00001600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPU]      = 0x00000F20;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IFTLB]    = 0x00001000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DLTLB]    = 0x00001100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSTLB]    = 0x00001200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SMI]      = 0x00001400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPUA]     = 0x00001600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000UL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0xFFFFFFFCUL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSEG]     = 0x00000380;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISEG]     = 0x00000480;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_HDECR]    = 0x00000980;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPU]      = 0x00000F20;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MAINT]    = 0x00001600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPUA]     = 0x00001700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000FFF00000ULL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0x0000000000000100ULL;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_RESET]    = 0x00000100;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MCHECK]   = 0x00000200;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSI]      = 0x00000300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DSEG]     = 0x00000380;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISI]      = 0x00000400;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ISEG]     = 0x00000480;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_EXTERNAL] = 0x00000500;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_ALIGN]    = 0x00000600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PROGRAM]  = 0x00000700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_FPU]      = 0x00000800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_DECR]     = 0x00000900;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_HDECR]    = 0x00000980;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_SYSCALL]  = 0x00000C00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_TRACE]    = 0x00000D00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_PERFM]    = 0x00000F00;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPU]      = 0x00000F20;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_IABR]     = 0x00001300;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_MAINT]    = 0x00001600;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_VPUA]     = 0x00001700;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_vectors[POWERPC_EXCP_THERM]    = 0x00001800;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_vector = 0x0000000000000100ULL;
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00E00000)
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00600000)
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 1;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_EMB;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_pids = 3;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 2;
./tools/qemu-xen/target-ppc/translate_init.c:    env->id_tlbs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:        cpu_abort(env, "Unknown CPU: " TARGET_FMT_lx "\n", env->spr[SPR_PVR]);
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_MAS;
./tools/qemu-xen/target-ppc/translate_init.c:        env->nb_tlb += booke206_tlb_size(env, i);
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00600000)
./tools/qemu-xen/target-ppc/translate_init.c:    env->slb_nr = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00600000)
./tools/qemu-xen/target-ppc/translate_init.c:    env->slb_nr = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x00600000)
./tools/qemu-xen/target-ppc/translate_init.c:    env->slb_nr = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->spr[SPR_HID0] & 0x01C00000)
./tools/qemu-xen/target-ppc/translate_init.c:    env->slb_nr = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    env->slb_nr = 32;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 128;
./tools/qemu-xen/target-ppc/translate_init.c:    env->dcache_line_size = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->icache_line_size = 64;
./tools/qemu-xen/target-ppc/translate_init.c:    env->irq_inputs = NULL;
./tools/qemu-xen/target-ppc/translate_init.c:        env->excp_vectors[i] = (target_ulong)(-1ULL);
./tools/qemu-xen/target-ppc/translate_init.c:    env->hreset_excp_prefix = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivor_mask = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->ivpr_mask = 0x00000000;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_BATs = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_tlb = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->nb_ways = 0;
./tools/qemu-xen/target-ppc/translate_init.c:    env->tlb_type = TLB_NONE;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_prefix = env->hreset_excp_prefix;
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 25)) {
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_SPE | POWERPC_FLAG_VRE)) {
./tools/qemu-xen/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_SPE | POWERPC_FLAG_VRE)) {
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 17)) {
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_TGPR | POWERPC_FLAG_CE)) {
./tools/qemu-xen/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_TGPR | POWERPC_FLAG_CE)) {
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 10)) {
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_SE | POWERPC_FLAG_DWE |
./tools/qemu-xen/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_SE | POWERPC_FLAG_DWE |
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 9)) {
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_BE | POWERPC_FLAG_DE)) {
./tools/qemu-xen/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_BE | POWERPC_FLAG_DE)) {
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->msr_mask & (1 << 2)) {
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->flags & (POWERPC_FLAG_PX | POWERPC_FLAG_PMM)) {
./tools/qemu-xen/target-ppc/translate_init.c:    } else if (env->flags & (POWERPC_FLAG_PX | POWERPC_FLAG_PMM)) {
./tools/qemu-xen/target-ppc/translate_init.c:    if ((env->flags & (POWERPC_FLAG_RTC_CLK | POWERPC_FLAG_BUS_CLK)) == 0) {
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->nb_tlb != 0) {
./tools/qemu-xen/target-ppc/translate_init.c:        int nb_tlb = env->nb_tlb;
./tools/qemu-xen/target-ppc/translate_init.c:        if (env->id_tlbs != 0)
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->tlb_type) {
./tools/qemu-xen/target-ppc/translate_init.c:            env->tlb.tlb6 = g_malloc0(nb_tlb * sizeof(ppc6xx_tlb_t));
./tools/qemu-xen/target-ppc/translate_init.c:            env->tlb.tlbe = g_malloc0(nb_tlb * sizeof(ppcemb_tlb_t));
./tools/qemu-xen/target-ppc/translate_init.c:            env->tlb.tlbm = g_malloc0(nb_tlb * sizeof(ppcmas_tlb_t));
./tools/qemu-xen/target-ppc/translate_init.c:        env->tlb_per_way = env->nb_tlb / env->nb_ways;
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->irq_inputs == NULL) {
./tools/qemu-xen/target-ppc/translate_init.c:    if (env->check_pow == NULL) {
./tools/qemu-xen/target-ppc/translate_init.c:            spr = &env->spr_cb[n];
./tools/qemu-xen/target-ppc/translate_init.c:    fill_new_table(env->opcodes, 0x40);
./tools/qemu-xen/target-ppc/translate_init.c:            if (register_insn(env->opcodes, opc) < 0) {
./tools/qemu-xen/target-ppc/translate_init.c:    fix_opcode_tables(env->opcodes);
./tools/qemu-xen/target-ppc/translate_init.c:        table = env->opcodes;
./tools/qemu-xen/target-ppc/translate_init.c:                table = env->opcodes;
./tools/qemu-xen/target-ppc/translate_init.c:                handler = env->opcodes[opc1];
./tools/qemu-xen/target-ppc/translate_init.c:        stfq_p(mem_buf, env->fpr[n]);
./tools/qemu-xen/target-ppc/translate_init.c:        stl_p(mem_buf, env->fpscr);
./tools/qemu-xen/target-ppc/translate_init.c:        env->fpr[n] = ldfq_p(mem_buf);
./tools/qemu-xen/target-ppc/translate_init.c:        stq_p(mem_buf, env->avr[n].u64[0]);
./tools/qemu-xen/target-ppc/translate_init.c:        stq_p(mem_buf+8, env->avr[n].u64[1]);
./tools/qemu-xen/target-ppc/translate_init.c:        stq_p(mem_buf, env->avr[n].u64[1]);
./tools/qemu-xen/target-ppc/translate_init.c:        stq_p(mem_buf+8, env->avr[n].u64[0]);
./tools/qemu-xen/target-ppc/translate_init.c:        stl_p(mem_buf, env->vscr);
./tools/qemu-xen/target-ppc/translate_init.c:        stl_p(mem_buf, (uint32_t)env->spr[SPR_VRSAVE]);
./tools/qemu-xen/target-ppc/translate_init.c:        env->avr[n].u64[0] = ldq_p(mem_buf);
./tools/qemu-xen/target-ppc/translate_init.c:        env->avr[n].u64[1] = ldq_p(mem_buf+8);
./tools/qemu-xen/target-ppc/translate_init.c:        env->avr[n].u64[1] = ldq_p(mem_buf);
./tools/qemu-xen/target-ppc/translate_init.c:        env->avr[n].u64[0] = ldq_p(mem_buf+8);
./tools/qemu-xen/target-ppc/translate_init.c:        env->vscr = ldl_p(mem_buf);
./tools/qemu-xen/target-ppc/translate_init.c:        env->spr[SPR_VRSAVE] = (target_ulong)ldl_p(mem_buf);
./tools/qemu-xen/target-ppc/translate_init.c:        stl_p(mem_buf, env->gpr[n] >> 32);
./tools/qemu-xen/target-ppc/translate_init.c:        stl_p(mem_buf, env->gprh[n]);
./tools/qemu-xen/target-ppc/translate_init.c:        stq_p(mem_buf, env->spe_acc);
./tools/qemu-xen/target-ppc/translate_init.c:        stl_p(mem_buf, env->spe_fscr);
./tools/qemu-xen/target-ppc/translate_init.c:        target_ulong lo = (uint32_t)env->gpr[n];
./tools/qemu-xen/target-ppc/translate_init.c:        env->gpr[n] = lo | hi;
./tools/qemu-xen/target-ppc/translate_init.c:        env->gprh[n] = ldl_p(mem_buf);
./tools/qemu-xen/target-ppc/translate_init.c:        env->spe_acc = ldq_p(mem_buf);
./tools/qemu-xen/target-ppc/translate_init.c:        env->spe_fscr = ldl_p(mem_buf);
./tools/qemu-xen/target-ppc/translate_init.c:    env->msr_mask = def->msr_mask;
./tools/qemu-xen/target-ppc/translate_init.c:    env->mmu_model = def->mmu_model;
./tools/qemu-xen/target-ppc/translate_init.c:    env->excp_model = def->excp_model;
./tools/qemu-xen/target-ppc/translate_init.c:    env->bus_model = def->bus_model;
./tools/qemu-xen/target-ppc/translate_init.c:    env->insns_flags = def->insns_flags;
./tools/qemu-xen/target-ppc/translate_init.c:    env->insns_flags2 = def->insns_flags2;
./tools/qemu-xen/target-ppc/translate_init.c:        env->insns_flags &= PPC_TCG_INSNS;
./tools/qemu-xen/target-ppc/translate_init.c:        env->insns_flags2 &= PPC_TCG_INSNS2;
./tools/qemu-xen/target-ppc/translate_init.c:    env->flags = def->flags;
./tools/qemu-xen/target-ppc/translate_init.c:    env->bfd_mach = def->bfd_mach;
./tools/qemu-xen/target-ppc/translate_init.c:    env->check_pow = def->check_pow;
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->excp_model) {
./tools/qemu-xen/target-ppc/translate_init.c:        switch (env->bus_model) {
./tools/qemu-xen/target-ppc/translate_init.c:        if (env->tlb != NULL) {
./tools/qemu-xen/target-ppc/translate_init.c:                   env->nb_tlb, env->id_tlbs ? "splitted" : "merged",
./tools/qemu-xen/target-ppc/translate_init.c:                   env->nb_ways);
./tools/qemu-xen/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_SPE)
./tools/qemu-xen/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_VRE)
./tools/qemu-xen/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_TGPR)
./tools/qemu-xen/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_CE)
./tools/qemu-xen/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_SE)
./tools/qemu-xen/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_DWE)
./tools/qemu-xen/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_UBLE)
./tools/qemu-xen/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_BE)
./tools/qemu-xen/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_DE)
./tools/qemu-xen/target-ppc/translate_init.c:        if (env->flags & POWERPC_FLAG_PX)
./tools/qemu-xen/target-ppc/translate_init.c:        else if (env->flags & POWERPC_FLAG_PMM)
./tools/qemu-xen/target-ppc/translate_init.c:        if (env->flags == POWERPC_FLAG_NONE)
./tools/qemu-xen/target-ppc/translate_init.c:               env->flags & POWERPC_FLAG_RTC_CLK ? "RTC clock" : "bus clock");
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_DSISR] = error_code;
./tools/qemu-xen/target-ppc/helper.c:    env->exception_index = exception;
./tools/qemu-xen/target-ppc/helper.c:    env->error_code = error_code;
./tools/qemu-xen/target-ppc/helper.c:    nr = (eaddr >> TARGET_PAGE_BITS) & (env->tlb_per_way - 1);
./tools/qemu-xen/target-ppc/helper.c:    nr += env->tlb_per_way * way;
./tools/qemu-xen/target-ppc/helper.c:    if (is_code && env->id_tlbs == 1)
./tools/qemu-xen/target-ppc/helper.c:        nr += env->nb_tlb;
./tools/qemu-xen/target-ppc/helper.c:    max = env->nb_tlb;
./tools/qemu-xen/target-ppc/helper.c:    if (env->id_tlbs == 1)
./tools/qemu-xen/target-ppc/helper.c:        tlb = &env->tlb.tlb6[nr];
./tools/qemu-xen/target-ppc/helper.c:    for (way = 0; way < env->nb_ways; way++) {
./tools/qemu-xen/target-ppc/helper.c:        tlb = &env->tlb.tlb6[nr];
./tools/qemu-xen/target-ppc/helper.c:                      env->nb_tlb, eaddr);
./tools/qemu-xen/target-ppc/helper.c:    tlb = &env->tlb.tlb6[nr];
./tools/qemu-xen/target-ppc/helper.c:              " PTE1 " TARGET_FMT_lx "\n", nr, env->nb_tlb, EPN, pte0, pte1);
./tools/qemu-xen/target-ppc/helper.c:    env->last_way = way;
./tools/qemu-xen/target-ppc/helper.c:    for (way = 0; way < env->nb_ways; way++) {
./tools/qemu-xen/target-ppc/helper.c:        tlb = &env->tlb.tlb6[nr];
./tools/qemu-xen/target-ppc/helper.c:                      "] <> " TARGET_FMT_lx "\n", nr, env->nb_tlb,
./tools/qemu-xen/target-ppc/helper.c:                  TARGET_FMT_lx " %c %c\n", nr, env->nb_tlb,
./tools/qemu-xen/target-ppc/helper.c:        pte_update_flags(ctx, &env->tlb.tlb6[best].pte1, ret, rw);
./tools/qemu-xen/target-ppc/helper.c:        BATlt = env->IBAT[1];
./tools/qemu-xen/target-ppc/helper.c:        BATut = env->IBAT[0];
./tools/qemu-xen/target-ppc/helper.c:        BATlt = env->DBAT[1];
./tools/qemu-xen/target-ppc/helper.c:        BATut = env->DBAT[0];
./tools/qemu-xen/target-ppc/helper.c:    for (i = 0; i < env->nb_BATs; i++) {
./tools/qemu-xen/target-ppc/helper.c:        if (unlikely(env->mmu_model == POWERPC_MMU_601)) {
./tools/qemu-xen/target-ppc/helper.c:    return (hash * pte_size * 8) & env->htab_mask;
./tools/qemu-xen/target-ppc/helper.c:            if (env->external_htab) {
./tools/qemu-xen/target-ppc/helper.c:                pte0 = ldq_p(env->external_htab + pteg_off + (i * 16));
./tools/qemu-xen/target-ppc/helper.c:                pte1 = ldq_p(env->external_htab + pteg_off + (i * 16) + 8);
./tools/qemu-xen/target-ppc/helper.c:                pte0 = ldq_phys(env->htab_base + pteg_off + (i * 16));
./tools/qemu-xen/target-ppc/helper.c:                pte1 = ldq_phys(env->htab_base + pteg_off + (i * 16) + 8);
./tools/qemu-xen/target-ppc/helper.c:            if (env->external_htab) {
./tools/qemu-xen/target-ppc/helper.c:                pte0 = ldl_p(env->external_htab + pteg_off + (i * 8));
./tools/qemu-xen/target-ppc/helper.c:                pte1 = ldl_p(env->external_htab + pteg_off + (i * 8) + 4);
./tools/qemu-xen/target-ppc/helper.c:                pte0 = ldl_phys(env->htab_base + pteg_off + (i * 8));
./tools/qemu-xen/target-ppc/helper.c:                pte1 = ldl_phys(env->htab_base + pteg_off + (i * 8) + 4);
./tools/qemu-xen/target-ppc/helper.c:                if (env->external_htab) {
./tools/qemu-xen/target-ppc/helper.c:                    stq_p(env->external_htab + pteg_off + (good * 16) + 8,
./tools/qemu-xen/target-ppc/helper.c:                    stq_phys_notdirty(env->htab_base + pteg_off +
./tools/qemu-xen/target-ppc/helper.c:                if (env->external_htab) {
./tools/qemu-xen/target-ppc/helper.c:                    stl_p(env->external_htab + pteg_off + (good * 8) + 4,
./tools/qemu-xen/target-ppc/helper.c:                    stl_phys_notdirty(env->htab_base + pteg_off +
./tools/qemu-xen/target-ppc/helper.c:    if (env->mmu_model & POWERPC_MMU_64)
./tools/qemu-xen/target-ppc/helper.c:    for (n = 0; n < env->slb_nr; n++) {
./tools/qemu-xen/target-ppc/helper.c:        ppc_slb_t *slb = &env->slb[n];
./tools/qemu-xen/target-ppc/helper.c:    for (n = 1; n < env->slb_nr; n++) {
./tools/qemu-xen/target-ppc/helper.c:        ppc_slb_t *slb = &env->slb[n];
./tools/qemu-xen/target-ppc/helper.c:    ppc_slb_t *slb = &env->slb[slot];
./tools/qemu-xen/target-ppc/helper.c:    if (rb & (0x1000 - env->slb_nr)) {
./tools/qemu-xen/target-ppc/helper.c:    if ((rs & SLB_VSID_B) && !(env->mmu_model & POWERPC_MMU_1TSEG)) {
./tools/qemu-xen/target-ppc/helper.c:    ppc_slb_t *slb = &env->slb[slot];
./tools/qemu-xen/target-ppc/helper.c:    if (slot >= env->slb_nr) {
./tools/qemu-xen/target-ppc/helper.c:    ppc_slb_t *slb = &env->slb[slot];
./tools/qemu-xen/target-ppc/helper.c:    if (slot >= env->slb_nr) {
./tools/qemu-xen/target-ppc/helper.c:    if (env->mmu_model & POWERPC_MMU_64) {
./tools/qemu-xen/target-ppc/helper.c:        sr = env->sr[eaddr >> 28];
./tools/qemu-xen/target-ppc/helper.c:                eaddr, (int)(eaddr >> 28), sr, env->nip, env->lr, (int)msr_ir,
./tools/qemu-xen/target-ppc/helper.c:                    env->htab_base, env->htab_mask, hash);
./tools/qemu-xen/target-ppc/helper.c:            if (unlikely(env->mmu_model == POWERPC_MMU_SOFT_6xx ||
./tools/qemu-xen/target-ppc/helper.c:                         env->mmu_model == POWERPC_MMU_SOFT_74xx)) {
./tools/qemu-xen/target-ppc/helper.c:                        env->htab_base, env->htab_mask, vsid, ctx->ptem,
./tools/qemu-xen/target-ppc/helper.c:                                " hash=" TARGET_FMT_plx "\n", env->htab_base,
./tools/qemu-xen/target-ppc/helper.c:                                env->htab_mask, vsid, ctx->ptem, ctx->hash[1]);
./tools/qemu-xen/target-ppc/helper.c:        sr = env->sr[eaddr >> 28];
./tools/qemu-xen/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen/target-ppc/helper.c:        tlb = &env->tlb.tlbe[i];
./tools/qemu-xen/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen/target-ppc/helper.c:        tlb = &env->tlb.tlbe[i];
./tools/qemu-xen/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen/target-ppc/helper.c:        tlb = &env->tlb.tlbe[i];
./tools/qemu-xen/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen/target-ppc/helper.c:        tlb = &env->tlb.tlbe[i];
./tools/qemu-xen/target-ppc/helper.c:                             env->spr[SPR_40x_PID], 0, i) < 0)
./tools/qemu-xen/target-ppc/helper.c:        zpr = (env->spr[SPR_40x_ZPR] >> (30 - (2 * zsel))) & 0x3;
./tools/qemu-xen/target-ppc/helper.c:                env->spr[SPR_40x_ESR] = 1 << 22;
./tools/qemu-xen/target-ppc/helper.c:                env->spr[SPR_40x_ESR] = 0;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_405_SLER] = val;
./tools/qemu-xen/target-ppc/helper.c:                         env->spr[SPR_BOOKE_PID],
./tools/qemu-xen/target-ppc/helper.c:                         !env->nb_pids, i) >= 0) {
./tools/qemu-xen/target-ppc/helper.c:    if (env->spr[SPR_BOOKE_PID1] &&
./tools/qemu-xen/target-ppc/helper.c:                         env->spr[SPR_BOOKE_PID1], 0, i) >= 0) {
./tools/qemu-xen/target-ppc/helper.c:    if (env->spr[SPR_BOOKE_PID2] &&
./tools/qemu-xen/target-ppc/helper.c:                         env->spr[SPR_BOOKE_PID2], 0, i) >= 0) {
./tools/qemu-xen/target-ppc/helper.c:    for (i = 0; i < env->nb_tlb; i++) {
./tools/qemu-xen/target-ppc/helper.c:        tlb = &env->tlb.tlbe[i];
./tools/qemu-xen/target-ppc/helper.c:    ppcmas_tlb_t *tlb = env->tlb.tlbm;
./tools/qemu-xen/target-ppc/helper.c:    tlbncfg = env->spr[SPR_BOOKE_TLB0CFG + tlbn];
./tools/qemu-xen/target-ppc/helper.c:                         env->spr[SPR_BOOKE_PID]) >= 0) {
./tools/qemu-xen/target-ppc/helper.c:    if (env->spr[SPR_BOOKE_PID1] &&
./tools/qemu-xen/target-ppc/helper.c:                         env->spr[SPR_BOOKE_PID1]) >= 0) {
./tools/qemu-xen/target-ppc/helper.c:    if (env->spr[SPR_BOOKE_PID2] &&
./tools/qemu-xen/target-ppc/helper.c:                         env->spr[SPR_BOOKE_PID2]) >= 0) {
./tools/qemu-xen/target-ppc/helper.c:    entry = &env->tlb.tlbm[offset];
./tools/qemu-xen/target-ppc/helper.c:    if (kvm_enabled() && !env->kvm_sw_tlb) {
./tools/qemu-xen/target-ppc/helper.c:    switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/helper.c:    switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/helper.c:                (env->pb[0] < env->pb[1] &&
./tools/qemu-xen/target-ppc/helper.c:                 eaddr >= env->pb[0] && eaddr < env->pb[1]) ||
./tools/qemu-xen/target-ppc/helper.c:                (env->pb[2] < env->pb[3] &&
./tools/qemu-xen/target-ppc/helper.c:                 eaddr >= env->pb[2] && eaddr < env->pb[3]) ? 1 : 0;
./tools/qemu-xen/target-ppc/helper.c:        if (env->mmu_model == POWERPC_MMU_BOOKE) {
./tools/qemu-xen/target-ppc/helper.c:        } else if (env->mmu_model == POWERPC_MMU_BOOKE206) {
./tools/qemu-xen/target-ppc/helper.c:        switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/helper.c:            if (env->nb_BATs != 0)
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS0] = env->spr[SPR_BOOKE_MAS4] & MAS4_TLBSELD_MASK;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS1] = env->spr[SPR_BOOKE_MAS4] & MAS4_TSIZED_MASK;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS2] = env->spr[SPR_BOOKE_MAS4] & MAS4_WIMGED_MASK;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS3] = 0;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS6] = 0;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS7] = 0;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_BOOKE_MAS1] |= MAS1_TS;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_BOOKE_MAS6] |= MAS6_SAS;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS1] |= MAS1_VALID;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS2] |= address & MAS2_EPN_MASK;
./tools/qemu-xen/target-ppc/helper.c:    switch (env->spr[SPR_BOOKE_MAS4] & MAS4_TIDSELD_PIDZ) {
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_BOOKE_MAS1] |= env->spr[SPR_BOOKE_PID] << MAS1_TID_SHIFT;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_BOOKE_MAS1] |= env->spr[SPR_BOOKE_PID1] << MAS1_TID_SHIFT;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_BOOKE_MAS1] |= env->spr[SPR_BOOKE_PID2] << MAS1_TID_SHIFT;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS6] |= env->spr[SPR_BOOKE_PID] << 16;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS0] |= env->last_way << MAS0_ESEL_SHIFT;
./tools/qemu-xen/target-ppc/helper.c:    env->last_way++;
./tools/qemu-xen/target-ppc/helper.c:    env->last_way &= booke206_tlb_ways(env, 0) - 1;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[SPR_BOOKE_MAS0] |= env->last_way << MAS0_NV_SHIFT;
./tools/qemu-xen/target-ppc/helper.c:        access_type = env->access_type;
./tools/qemu-xen/target-ppc/helper.c:                switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_IFTLB;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 1 << 18;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_IMISS] = address;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_ICMP] = 0x80000000 | ctx.ptem;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_IFTLB;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ITLB;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_40x_DEAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_40x_ESR] = 0x00000000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0x40000000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ITLB;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_BOOKE_DEAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen/target-ppc/helper.c:                env->error_code = 0x08000000;
./tools/qemu-xen/target-ppc/helper.c:                if ((env->mmu_model == POWERPC_MMU_BOOKE) ||
./tools/qemu-xen/target-ppc/helper.c:                    (env->mmu_model == POWERPC_MMU_BOOKE206)) {
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_BOOKE_ESR] = 0x00000000;
./tools/qemu-xen/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen/target-ppc/helper.c:                env->error_code = 0x10000000;
./tools/qemu-xen/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen/target-ppc/helper.c:                env->error_code = 0x10000000;
./tools/qemu-xen/target-ppc/helper.c:                if (env->mmu_model == POWERPC_MMU_620) {
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ISI;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0x40000000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ISEG;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/helper.c:                        env->exception_index = POWERPC_EXCP_DSTLB;
./tools/qemu-xen/target-ppc/helper.c:                        env->error_code = 1 << 16;
./tools/qemu-xen/target-ppc/helper.c:                        env->exception_index = POWERPC_EXCP_DLTLB;
./tools/qemu-xen/target-ppc/helper.c:                        env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DMISS] = address;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DCMP] = 0x80000000 | ctx.ptem;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code |= ctx.key << 19;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_HASH1] = env->htab_base +
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_HASH2] = env->htab_base +
./tools/qemu-xen/target-ppc/helper.c:                        env->exception_index = POWERPC_EXCP_DSTLB;
./tools/qemu-xen/target-ppc/helper.c:                        env->exception_index = POWERPC_EXCP_DLTLB;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = ctx.key << 19;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_TLBMISS] = (address & ~((target_ulong)0x3)) |
./tools/qemu-xen/target-ppc/helper.c:                        ((env->last_way + 1) & (env->nb_ways - 1));
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_PTEHI] = 0x80000000 | ctx.ptem;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DTLB;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_40x_DEAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_40x_ESR] = 0x00800000;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_40x_ESR] = 0x00000000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x42000000;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x40000000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DTLB;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_BOOKE_DEAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_BOOKE_ESR] = rw ? ESR_ST : 0;
./tools/qemu-xen/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen/target-ppc/helper.c:                env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                if (env->mmu_model == POWERPC_MMU_SOFT_4xx
./tools/qemu-xen/target-ppc/helper.c:                    || env->mmu_model == POWERPC_MMU_SOFT_4xx_Z) {
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_40x_DEAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_40x_ESR] |= 0x00800000;
./tools/qemu-xen/target-ppc/helper.c:                } else if ((env->mmu_model == POWERPC_MMU_BOOKE) ||
./tools/qemu-xen/target-ppc/helper.c:                           (env->mmu_model == POWERPC_MMU_BOOKE206)) {
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_BOOKE_DEAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_BOOKE_ESR] = rw ? ESR_ST : 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x0A000000;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x08000000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_ALIGN;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = POWERPC_EXCP_ALIGN_FP;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x06000000;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x04000000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x06100000;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x04100000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_PROGRAM;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code =
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                if (env->mmu_model == POWERPC_MMU_620) {
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSI;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x42000000;
./tools/qemu-xen/target-ppc/helper.c:                        env->spr[SPR_DSISR] = 0x40000000;
./tools/qemu-xen/target-ppc/helper.c:                    env->exception_index = POWERPC_EXCP_DSEG;
./tools/qemu-xen/target-ppc/helper.c:                    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                    env->spr[SPR_DAR] = address;
./tools/qemu-xen/target-ppc/helper.c:               env->exception, env->error_code);
./tools/qemu-xen/target-ppc/helper.c:             nr, ul == 0 ? 'u' : 'l', value, env->nip);
./tools/qemu-xen/target-ppc/helper.c:    if (env->IBAT[0][nr] != value) {
./tools/qemu-xen/target-ppc/helper.c:        do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen/target-ppc/helper.c:        env->IBAT[0][nr] = (value & 0x00001FFFUL) |
./tools/qemu-xen/target-ppc/helper.c:        env->IBAT[1][nr] = (env->IBAT[1][nr] & 0x0000007B) |
./tools/qemu-xen/target-ppc/helper.c:            (env->IBAT[1][nr] & ~0x0001FFFF & ~mask);
./tools/qemu-xen/target-ppc/helper.c:        do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen/target-ppc/helper.c:    env->IBAT[1][nr] = value;
./tools/qemu-xen/target-ppc/helper.c:    if (env->DBAT[0][nr] != value) {
./tools/qemu-xen/target-ppc/helper.c:        do_invalidate_BAT(env, env->DBAT[0][nr], mask);
./tools/qemu-xen/target-ppc/helper.c:        env->DBAT[0][nr] = (value & 0x00001FFFUL) |
./tools/qemu-xen/target-ppc/helper.c:        env->DBAT[1][nr] = (env->DBAT[1][nr] & 0x0000007B) |
./tools/qemu-xen/target-ppc/helper.c:            (env->DBAT[1][nr] & ~0x0001FFFF & ~mask);
./tools/qemu-xen/target-ppc/helper.c:        do_invalidate_BAT(env, env->DBAT[0][nr], mask);
./tools/qemu-xen/target-ppc/helper.c:    env->DBAT[1][nr] = value;
./tools/qemu-xen/target-ppc/helper.c:    if (env->IBAT[0][nr] != value) {
./tools/qemu-xen/target-ppc/helper.c:        mask = (env->IBAT[1][nr] << 17) & 0x0FFE0000UL;
./tools/qemu-xen/target-ppc/helper.c:        if (env->IBAT[1][nr] & 0x40) {
./tools/qemu-xen/target-ppc/helper.c:            do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen/target-ppc/helper.c:        env->IBAT[0][nr] = (value & 0x00001FFFUL) |
./tools/qemu-xen/target-ppc/helper.c:        env->DBAT[0][nr] = env->IBAT[0][nr];
./tools/qemu-xen/target-ppc/helper.c:        if (env->IBAT[1][nr] & 0x40) {
./tools/qemu-xen/target-ppc/helper.c:            do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen/target-ppc/helper.c:    if (env->IBAT[1][nr] != value) {
./tools/qemu-xen/target-ppc/helper.c:        if (env->IBAT[1][nr] & 0x40) {
./tools/qemu-xen/target-ppc/helper.c:            mask = (env->IBAT[1][nr] << 17) & 0x0FFE0000UL;
./tools/qemu-xen/target-ppc/helper.c:            do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen/target-ppc/helper.c:            do_invalidate_BAT(env, env->IBAT[0][nr], mask);
./tools/qemu-xen/target-ppc/helper.c:        env->IBAT[1][nr] = value;
./tools/qemu-xen/target-ppc/helper.c:        env->DBAT[1][nr] = value;
./tools/qemu-xen/target-ppc/helper.c:    switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/helper.c:    switch (env->mmu_model) {
./tools/qemu-xen/target-ppc/helper.c:        if (env->id_tlbs == 1)
./tools/qemu-xen/target-ppc/helper.c:        ppc4xx_tlb_invalidate_virt(env, addr, env->spr[SPR_40x_PID]);
./tools/qemu-xen/target-ppc/helper.c:    if (env->asr != value) {
./tools/qemu-xen/target-ppc/helper.c:        env->asr = value;
./tools/qemu-xen/target-ppc/helper.c:    if (env->spr[SPR_SDR1] != value) {
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_SDR1] = value;
./tools/qemu-xen/target-ppc/helper.c:        if (env->mmu_model & POWERPC_MMU_64) {
./tools/qemu-xen/target-ppc/helper.c:            env->htab_mask = (1ULL << (htabsize + 18)) - 1;
./tools/qemu-xen/target-ppc/helper.c:            env->htab_base = value & SDR_64_HTABORG;
./tools/qemu-xen/target-ppc/helper.c:            env->htab_mask = ((value & SDR_32_HTABMASK) << 16) | 0xFFFF;
./tools/qemu-xen/target-ppc/helper.c:            env->htab_base = value & SDR_32_HTABORG;
./tools/qemu-xen/target-ppc/helper.c:            srnum, value, env->sr[srnum]);
./tools/qemu-xen/target-ppc/helper.c:    if (env->mmu_model & POWERPC_MMU_64) {
./tools/qemu-xen/target-ppc/helper.c:    if (env->sr[srnum] != value) {
./tools/qemu-xen/target-ppc/helper.c:        env->sr[srnum] = value;
./tools/qemu-xen/target-ppc/helper.c:    env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen/target-ppc/helper.c:    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:    env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen/target-ppc/helper.c:    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:                  ppc_dump_gpr(env, 6), env->nip);
./tools/qemu-xen/target-ppc/helper.c:        lpes0 = (env->spr[SPR_LPCR] >> 1) & 1;
./tools/qemu-xen/target-ppc/helper.c:        lpes1 = (env->spr[SPR_LPCR] >> 2) & 1;
./tools/qemu-xen/target-ppc/helper.c:                  " => %08x (%02x)\n", env->nip, excp, env->error_code);
./tools/qemu-xen/target-ppc/helper.c:    msr = env->msr & ~0x783f0000ULL;
./tools/qemu-xen/target-ppc/helper.c:    new_msr = env->msr & ((target_ulong)1 << MSR_ME);
./tools/qemu-xen/target-ppc/helper.c:            env->halted = 1;
./tools/qemu-xen/target-ppc/helper.c:            env->interrupt_request |= CPU_INTERRUPT_EXITTB;
./tools/qemu-xen/target-ppc/helper.c:                 "\n", env->spr[SPR_DSISR], env->spr[SPR_DAR]);
./tools/qemu-xen/target-ppc/helper.c:                 "\n", msr, env->nip);
./tools/qemu-xen/target-ppc/helper.c:        msr |= env->error_code;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_DSISR] |= (ldl_code((env->nip - 4)) & 0x03FF0000) >> 16;
./tools/qemu-xen/target-ppc/helper.c:        switch (env->error_code & ~0xF) {
./tools/qemu-xen/target-ppc/helper.c:                env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen/target-ppc/helper.c:                env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:            LOG_EXCP("Invalid instruction at " TARGET_FMT_lx "\n", env->nip);
./tools/qemu-xen/target-ppc/helper.c:            env->spr[SPR_BOOKE_ESR] = ESR_PIL;
./tools/qemu-xen/target-ppc/helper.c:            env->spr[SPR_BOOKE_ESR] = ESR_PPR;
./tools/qemu-xen/target-ppc/helper.c:            env->spr[SPR_BOOKE_ESR] = ESR_PTR;
./tools/qemu-xen/target-ppc/helper.c:                      env->error_code);
./tools/qemu-xen/target-ppc/helper.c:        lev = env->error_code;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_BOOKE_ESR] = ESR_SPV;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_BOOKE_ESR] = ESR_SPV;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[SPR_BOOKE_ESR] = ESR_SPV;
./tools/qemu-xen/target-ppc/helper.c:        new_msr |= env->msr & ((target_ulong)1 << MSR_RI);
./tools/qemu-xen/target-ppc/helper.c:        new_msr |= env->msr & ((target_ulong)1 << MSR_RI);
./tools/qemu-xen/target-ppc/helper.c:        new_msr |= env->msr & ((target_ulong)1 << MSR_RI);
./tools/qemu-xen/target-ppc/helper.c:        new_msr |= env->msr & ((target_ulong)1 << MSR_RI);
./tools/qemu-xen/target-ppc/helper.c:        new_msr |= env->msr & ((target_ulong)1 << MSR_RI);
./tools/qemu-xen/target-ppc/helper.c:                    miss = &env->spr[SPR_IMISS];
./tools/qemu-xen/target-ppc/helper.c:                    cmp = &env->spr[SPR_ICMP];
./tools/qemu-xen/target-ppc/helper.c:                    miss = &env->spr[SPR_DMISS];
./tools/qemu-xen/target-ppc/helper.c:                    cmp = &env->spr[SPR_DCMP];
./tools/qemu-xen/target-ppc/helper.c:                         env->spr[SPR_HASH1], env->spr[SPR_HASH2],
./tools/qemu-xen/target-ppc/helper.c:                         env->error_code);
./tools/qemu-xen/target-ppc/helper.c:            msr |= env->crf[0] << 28;
./tools/qemu-xen/target-ppc/helper.c:            msr |= env->error_code; /* key, D/I, S/L bits */
./tools/qemu-xen/target-ppc/helper.c:            msr |= ((env->last_way + 1) & (env->nb_ways - 1)) << 17;
./tools/qemu-xen/target-ppc/helper.c:                    miss = &env->spr[SPR_TLBMISS];
./tools/qemu-xen/target-ppc/helper.c:                    cmp = &env->spr[SPR_PTEHI];
./tools/qemu-xen/target-ppc/helper.c:                    miss = &env->spr[SPR_TLBMISS];
./tools/qemu-xen/target-ppc/helper.c:                    cmp = &env->spr[SPR_PTEHI];
./tools/qemu-xen/target-ppc/helper.c:                         env->error_code);
./tools/qemu-xen/target-ppc/helper.c:            msr |= env->error_code; /* key bit */
./tools/qemu-xen/target-ppc/helper.c:        env->spr[srr0] = env->nip - 4;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[srr0] = env->nip;
./tools/qemu-xen/target-ppc/helper.c:    env->spr[srr1] = msr;
./tools/qemu-xen/target-ppc/helper.c:        env->spr[asrr0] = env->spr[srr0];
./tools/qemu-xen/target-ppc/helper.c:        env->spr[asrr1] = env->spr[srr1];
./tools/qemu-xen/target-ppc/helper.c:    vector = env->excp_vectors[excp];
./tools/qemu-xen/target-ppc/helper.c:    vector |= env->excp_prefix;
./tools/qemu-xen/target-ppc/helper.c:        if (!msr_isf && !(env->mmu_model & POWERPC_MMU_64)) {
./tools/qemu-xen/target-ppc/helper.c:    env->msr = new_msr & env->msr_mask;
./tools/qemu-xen/target-ppc/helper.c:    env->nip = vector;
./tools/qemu-xen/target-ppc/helper.c:    env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen/target-ppc/helper.c:    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:    if ((env->mmu_model == POWERPC_MMU_BOOKE) ||
./tools/qemu-xen/target-ppc/helper.c:        (env->mmu_model == POWERPC_MMU_BOOKE206)) {
./tools/qemu-xen/target-ppc/helper.c:    powerpc_excp(env, env->excp_model, env->exception_index);
./tools/qemu-xen/target-ppc/helper.c:                __func__, env, env->pending_interrupts,
./tools/qemu-xen/target-ppc/helper.c:                env->interrupt_request, (int)msr_me, (int)msr_ee);
./tools/qemu-xen/target-ppc/helper.c:    if (env->pending_interrupts & (1 << PPC_INTERRUPT_RESET)) {
./tools/qemu-xen/target-ppc/helper.c:        env->pending_interrupts &= ~(1 << PPC_INTERRUPT_RESET);
./tools/qemu-xen/target-ppc/helper.c:        powerpc_excp(env, env->excp_model, POWERPC_EXCP_RESET);
./tools/qemu-xen/target-ppc/helper.c:    if (env->pending_interrupts & (1 << PPC_INTERRUPT_MCK)) {
./tools/qemu-xen/target-ppc/helper.c:        env->pending_interrupts &= ~(1 << PPC_INTERRUPT_MCK);
./tools/qemu-xen/target-ppc/helper.c:        powerpc_excp(env, env->excp_model, POWERPC_EXCP_MCHECK);
./tools/qemu-xen/target-ppc/helper.c:    if (env->pending_interrupts & (1 << PPC_INTERRUPT_DEBUG)) {
./tools/qemu-xen/target-ppc/helper.c:        env->pending_interrupts &= ~(1 << PPC_INTERRUPT_DEBUG);
./tools/qemu-xen/target-ppc/helper.c:        powerpc_excp(env, env->excp_model, POWERPC_EXCP_DEBUG);
./tools/qemu-xen/target-ppc/helper.c:        hdice = env->spr[SPR_LPCR] & 1;
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_HDECR)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_HDECR);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_HDECR);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_CEXT)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_CEXT);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_CRITICAL);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_WDT)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_WDT);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_WDT);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_CDOORBELL)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_CDOORBELL);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_DOORCI);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_FIT)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_FIT);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_FIT);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_PIT)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_PIT);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_PIT);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_DECR)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_DECR);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_DECR);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_EXT)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_EXT);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_EXTERNAL);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_DOORBELL)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_DOORBELL);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_DOORI);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_PERFM)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_PERFM);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_PERFM);
./tools/qemu-xen/target-ppc/helper.c:        if (env->pending_interrupts & (1 << PPC_INTERRUPT_THERM)) {
./tools/qemu-xen/target-ppc/helper.c:            env->pending_interrupts &= ~(1 << PPC_INTERRUPT_THERM);
./tools/qemu-xen/target-ppc/helper.c:            powerpc_excp(env, env->excp_model, POWERPC_EXCP_THERM);
./tools/qemu-xen/target-ppc/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/target-ppc/helper.c:    env->excp_prefix = env->hreset_excp_prefix;
./tools/qemu-xen/target-ppc/helper.c:    env->nip = env->hreset_vector | env->excp_prefix;
./tools/qemu-xen/target-ppc/helper.c:    if (env->mmu_model != POWERPC_MMU_REAL)
./tools/qemu-xen/target-ppc/helper.c:    env->msr = msr & env->msr_mask;
./tools/qemu-xen/target-ppc/helper.c:    if (env->mmu_model & POWERPC_MMU_64)
./tools/qemu-xen/target-ppc/helper.c:        env->msr |= (1ULL << MSR_SF);
./tools/qemu-xen/target-ppc/helper.c:    env->reserve_addr = (target_ulong)-1ULL;
./tools/qemu-xen/target-ppc/helper.c:    env->pending_interrupts = 0;
./tools/qemu-xen/target-ppc/helper.c:    env->exception_index = POWERPC_EXCP_NONE;
./tools/qemu-xen/target-ppc/helper.c:    env->error_code = 0;
./tools/qemu-xen/target-ppc/helper.c:        env->cpu_index = (env->cpu_index / smp_threads)*smt
./tools/qemu-xen/target-ppc/helper.c:            + (env->cpu_index % smp_threads);
./tools/qemu-xen/target-ppc/helper.c:    env->cpu_model_str = cpu_model;
./tools/qemu-xen/tcg/ppc64/tcg-target.c:    /* r0 now contains &env->tlb_table[mem_index][index].addr_read */
./tools/qemu-xen/tcg/ppc64/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend */
./tools/qemu-xen/tcg/ppc64/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend + addr */
./tools/qemu-xen/tcg/ppc64/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend */
./tools/qemu-xen/tcg/ppc64/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend + addr */
./tools/qemu-xen/tcg/ppc/tcg-target.c:    /* r0 now contains &env->tlb_table[mem_index][index].addr_read */
./tools/qemu-xen/tcg/ppc/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend */
./tools/qemu-xen/tcg/ppc/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend + addr */
./tools/qemu-xen/tcg/ppc/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend */
./tools/qemu-xen/tcg/ppc/tcg-target.c:    /* r0 = env->tlb_table[mem_index][index].addend + addr */
./tools/qemu-xen/translate-all.c:        env->icount_decr.u16.low += tb->icount;
./tools/qemu-xen/translate-all.c:        env->can_do_io = 0;
./tools/qemu-xen/translate-all.c:    env->icount_decr.u16.low -= gen_opc_icount[j];
./tools/qemu-xen/linux-user/cpu-uname.c:     * to test by CPU id, compare cpu_env->cp15.c0_cpuid to ARM_CPUID_*
./tools/qemu-xen/linux-user/strace.c:            tv->tv_sec, tv->tv_usec, get_comma(last));
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.eax = tswap32(env->regs[R_EAX]);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.ebx = tswap32(env->regs[R_EBX]);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.ecx = tswap32(env->regs[R_ECX]);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.edx = tswap32(env->regs[R_EDX]);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.esi = tswap32(env->regs[R_ESI]);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.edi = tswap32(env->regs[R_EDI]);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.ebp = tswap32(env->regs[R_EBP]);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.esp = tswap32(env->regs[R_ESP]);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.eip = tswap32(env->eip);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.cs = tswap16(env->segs[R_CS].selector);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.ss = tswap16(env->segs[R_SS].selector);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.ds = tswap16(env->segs[R_DS].selector);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.es = tswap16(env->segs[R_ES].selector);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.fs = tswap16(env->segs[R_FS].selector);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.gs = tswap16(env->segs[R_GS].selector);
./tools/qemu-xen/linux-user/vm86.c:    set_flags(env->eflags, ts->v86flags, VIF_MASK | ts->v86mask);
./tools/qemu-xen/linux-user/vm86.c:    target_v86->regs.eflags = tswap32(env->eflags);
./tools/qemu-xen/linux-user/vm86.c:             env->eflags, env->segs[R_CS].selector, env->eip);
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EAX] = ts->vm86_saved_regs.eax;
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EBX] = ts->vm86_saved_regs.ebx;
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_ECX] = ts->vm86_saved_regs.ecx;
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EDX] = ts->vm86_saved_regs.edx;
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_ESI] = ts->vm86_saved_regs.esi;
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EDI] = ts->vm86_saved_regs.edi;
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EBP] = ts->vm86_saved_regs.ebp;
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_ESP] = ts->vm86_saved_regs.esp;
./tools/qemu-xen/linux-user/vm86.c:    env->eflags = ts->vm86_saved_regs.eflags;
./tools/qemu-xen/linux-user/vm86.c:    env->eip = ts->vm86_saved_regs.eip;
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EAX] = retval;
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    env->eflags &= ~TF_MASK;
./tools/qemu-xen/linux-user/vm86.c:    env->eflags &= ~AC_MASK;
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    set_flags(env->eflags, eflags, SAFE_MASK);
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    set_flags(env->eflags, flags, SAFE_MASK);
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    flags = env->eflags & RETURN_MASK;
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    if (env->segs[R_CS].selector == TARGET_BIOSSEG)
./tools/qemu-xen/linux-user/vm86.c:    if (intno == 0x21 && is_revectored((env->regs[R_EAX] >> 8) & 0xff,
./tools/qemu-xen/linux-user/vm86.c:    ssp = env->segs[R_SS].selector << 4;
./tools/qemu-xen/linux-user/vm86.c:    sp = env->regs[R_ESP] & 0xffff;
./tools/qemu-xen/linux-user/vm86.c:    vm_putw(ssp, sp - 4, env->segs[R_CS].selector);
./tools/qemu-xen/linux-user/vm86.c:    vm_putw(ssp, sp - 6, env->eip);
./tools/qemu-xen/linux-user/vm86.c:    ADD16(env->regs[R_ESP], -6);
./tools/qemu-xen/linux-user/vm86.c:    env->eip = segoffs & 0xffff;
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    csp = env->segs[R_CS].selector << 4;
./tools/qemu-xen/linux-user/vm86.c:    ip = env->eip & 0xffff;
./tools/qemu-xen/linux-user/vm86.c:    ssp = env->segs[R_SS].selector << 4;
./tools/qemu-xen/linux-user/vm86.c:    sp = env->regs[R_ESP] & 0xffff;
./tools/qemu-xen/linux-user/vm86.c:             env->segs[R_CS].selector, env->eip);
./tools/qemu-xen/linux-user/vm86.c:            ADD16(env->regs[R_ESP], -4);
./tools/qemu-xen/linux-user/vm86.c:            ADD16(env->regs[R_ESP], -2);
./tools/qemu-xen/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen/linux-user/vm86.c:            ADD16(env->regs[R_ESP], 4);
./tools/qemu-xen/linux-user/vm86.c:            ADD16(env->regs[R_ESP], 2);
./tools/qemu-xen/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen/linux-user/vm86.c:            ADD16(env->regs[R_ESP], 12);
./tools/qemu-xen/linux-user/vm86.c:            ADD16(env->regs[R_ESP], 6);
./tools/qemu-xen/linux-user/vm86.c:        env->eip = newip;
./tools/qemu-xen/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen/linux-user/vm86.c:        env->eip = ip;
./tools/qemu-xen/linux-user/vm86.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.ebx = env->regs[R_EBX];
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.ecx = env->regs[R_ECX];
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.edx = env->regs[R_EDX];
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.esi = env->regs[R_ESI];
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.edi = env->regs[R_EDI];
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.ebp = env->regs[R_EBP];
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.esp = env->regs[R_ESP];
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.eflags = env->eflags;
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.eip  = env->eip;
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.cs = env->segs[R_CS].selector;
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.ss = env->segs[R_SS].selector;
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.ds = env->segs[R_DS].selector;
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.es = env->segs[R_ES].selector;
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.fs = env->segs[R_FS].selector;
./tools/qemu-xen/linux-user/vm86.c:    ts->vm86_saved_regs.gs = env->segs[R_GS].selector;
./tools/qemu-xen/linux-user/vm86.c:    env->eflags = (env->eflags & ~SAFE_MASK) |
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EBX] = tswap32(target_v86->regs.ebx);
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_ECX] = tswap32(target_v86->regs.ecx);
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EDX] = tswap32(target_v86->regs.edx);
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_ESI] = tswap32(target_v86->regs.esi);
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EDI] = tswap32(target_v86->regs.edi);
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_EBP] = tswap32(target_v86->regs.ebp);
./tools/qemu-xen/linux-user/vm86.c:    env->regs[R_ESP] = tswap32(target_v86->regs.esp);
./tools/qemu-xen/linux-user/vm86.c:    env->eip = tswap32(target_v86->regs.eip);
./tools/qemu-xen/linux-user/vm86.c:             env->segs[R_CS].selector, env->eip);
./tools/qemu-xen/linux-user/linuxload.c:    TaskState *ts = (TaskState *)thread_env->opaque;
./tools/qemu-xen/linux-user/m68k-sim.c:  env->dregs[0] = code;
./tools/qemu-xen/linux-user/m68k-sim.c:      env->dregs[1] = errno;
./tools/qemu-xen/linux-user/m68k-sim.c:      env->dregs[1] = 0;
./tools/qemu-xen/linux-user/m68k-sim.c:    args = (uint32_t *)(unsigned long)(env->aregs[7] + 4);
./tools/qemu-xen/linux-user/main.c:        thread_env->next_cpu = NULL;
./tools/qemu-xen/linux-user/main.c:    env->running = 1;
./tools/qemu-xen/linux-user/main.c:    env->running = 0;
./tools/qemu-xen/linux-user/main.c:            env->regs[R_EAX] = do_syscall(env,
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_EAX],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_EBX],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_ECX],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_EDX],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_ESI],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_EDI],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_EBP],
./tools/qemu-xen/linux-user/main.c:            env->regs[R_EAX] = do_syscall(env,
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_EAX],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_EDI],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_ESI],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[R_EDX],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[10],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[8],
./tools/qemu-xen/linux-user/main.c:                                          env->regs[9],
./tools/qemu-xen/linux-user/main.c:            env->eip = env->exception_next_eip;
./tools/qemu-xen/linux-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/linux-user/main.c:            if (!(env->error_code & 1))
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->cr[2];
./tools/qemu-xen/linux-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen/linux-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/linux-user/main.c:                    info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen/linux-user/main.c:            if (env->eflags & VM_MASK) {
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->eip;
./tools/qemu-xen/linux-user/main.c:            pc = env->segs[R_CS].base + env->eip;
./tools/qemu-xen/linux-user/main.c:    addr = env->regs[2];
./tools/qemu-xen/linux-user/main.c:    if (get_user_u64(oldval, env->regs[0])) {
./tools/qemu-xen/linux-user/main.c:        env->cp15.c6_data = env->regs[0];
./tools/qemu-xen/linux-user/main.c:    if (get_user_u64(newval, env->regs[1])) {
./tools/qemu-xen/linux-user/main.c:        env->cp15.c6_data = env->regs[1];
./tools/qemu-xen/linux-user/main.c:        env->cp15.c6_data = addr;
./tools/qemu-xen/linux-user/main.c:            env->cp15.c6_data = addr;
./tools/qemu-xen/linux-user/main.c:        env->regs[0] = 0;
./tools/qemu-xen/linux-user/main.c:        env->regs[0] = -1;
./tools/qemu-xen/linux-user/main.c:    /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:    info._sifields._sigfault._addr = env->cp15.c6_data;
./tools/qemu-xen/linux-user/main.c:    switch (env->regs[15]) {
./tools/qemu-xen/linux-user/main.c:        addr = env->regs[2];
./tools/qemu-xen/linux-user/main.c:            val = ~env->regs[0];
./tools/qemu-xen/linux-user/main.c:        if (val == env->regs[0]) {
./tools/qemu-xen/linux-user/main.c:            val = env->regs[1];
./tools/qemu-xen/linux-user/main.c:            env->regs[0] = 0;
./tools/qemu-xen/linux-user/main.c:            env->regs[0] = -1;
./tools/qemu-xen/linux-user/main.c:        env->regs[0] = env->cp15.c13_tls2;
./tools/qemu-xen/linux-user/main.c:    addr = env->regs[14];
./tools/qemu-xen/linux-user/main.c:        env->thumb = 1;
./tools/qemu-xen/linux-user/main.c:    env->regs[15] = addr;
./tools/qemu-xen/linux-user/main.c:    addr = env->exclusive_addr;
./tools/qemu-xen/linux-user/main.c:    if (addr != env->exclusive_test) {
./tools/qemu-xen/linux-user/main.c:    size = env->exclusive_info & 0xf;
./tools/qemu-xen/linux-user/main.c:        env->cp15.c6_data = addr;
./tools/qemu-xen/linux-user/main.c:    if (val != env->exclusive_val) {
./tools/qemu-xen/linux-user/main.c:            env->cp15.c6_data = addr + 4;
./tools/qemu-xen/linux-user/main.c:        if (val != env->exclusive_high) {
./tools/qemu-xen/linux-user/main.c:    val = env->regs[(env->exclusive_info >> 8) & 0xf];
./tools/qemu-xen/linux-user/main.c:        env->cp15.c6_data = addr;
./tools/qemu-xen/linux-user/main.c:        val = env->regs[(env->exclusive_info >> 12) & 0xf];
./tools/qemu-xen/linux-user/main.c:            env->cp15.c6_data = addr + 4;
./tools/qemu-xen/linux-user/main.c:    env->regs[15] += 4;
./tools/qemu-xen/linux-user/main.c:    env->regs[(env->exclusive_info >> 4) & 0xf] = rc;
./tools/qemu-xen/linux-user/main.c:                TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/main.c:                get_user_u32(opcode, env->regs[15]);
./tools/qemu-xen/linux-user/main.c:                    info._sifields._sigfault._addr = env->regs[15];
./tools/qemu-xen/linux-user/main.c:                      info._sifields._sigfault._addr = env->regs[15];
./tools/qemu-xen/linux-user/main.c:                      env->regs[15] += 4;
./tools/qemu-xen/linux-user/main.c:                    env->regs[15] += 4;
./tools/qemu-xen/linux-user/main.c:                env->eabi = 1;
./tools/qemu-xen/linux-user/main.c:                    if (env->thumb) {
./tools/qemu-xen/linux-user/main.c:                        get_user_u16(insn, env->regs[15]);
./tools/qemu-xen/linux-user/main.c:                        env->regs[15] += 2;
./tools/qemu-xen/linux-user/main.c:                        get_user_u32(insn, env->regs[15]);
./tools/qemu-xen/linux-user/main.c:                        env->regs[15] += 4;
./tools/qemu-xen/linux-user/main.c:                    if (env->thumb) {
./tools/qemu-xen/linux-user/main.c:                        get_user_u16(insn, env->regs[15] - 2);
./tools/qemu-xen/linux-user/main.c:                        get_user_u32(insn, env->regs[15] - 4);
./tools/qemu-xen/linux-user/main.c:                    env->regs[0] = do_arm_semihosting (env);
./tools/qemu-xen/linux-user/main.c:                           || (env->thumb && n == ARM_THUMB_SYSCALL)) {
./tools/qemu-xen/linux-user/main.c:                    if (env->thumb || n == 0) {
./tools/qemu-xen/linux-user/main.c:                        n = env->regs[7];
./tools/qemu-xen/linux-user/main.c:                        env->eabi = 0;
./tools/qemu-xen/linux-user/main.c:                            cpu_set_tls(env, env->regs[0]);
./tools/qemu-xen/linux-user/main.c:                            env->regs[0] = 0;
./tools/qemu-xen/linux-user/main.c:                            env->regs[0] = -TARGET_ENOSYS;
./tools/qemu-xen/linux-user/main.c:                        env->regs[0] = do_syscall(env,
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[0],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[1],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[2],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[3],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[4],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[5],
./tools/qemu-xen/linux-user/main.c:            addr = env->cp15.c6_insn;
./tools/qemu-xen/linux-user/main.c:            addr = env->cp15.c6_data;
./tools/qemu-xen/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:                addr = env->cp15.c6_data;
./tools/qemu-xen/linux-user/main.c:                get_user_u32(insn, env->regs[31] - 4);
./tools/qemu-xen/linux-user/main.c:                            cpu_set_tls(env, env->regs[0]);
./tools/qemu-xen/linux-user/main.c:                            env->regs[0] = 0;
./tools/qemu-xen/linux-user/main.c:                        env->regs[0] = do_syscall(env,
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[0],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[1],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[2],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[3],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[4],
./tools/qemu-xen/linux-user/main.c:                                                  env->regs[5],
./tools/qemu-xen/linux-user/main.c:            /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->cp0.c4_faultaddr;
./tools/qemu-xen/linux-user/main.c:    index = (index + cwp * 16) % (16 * env->nwindows);
./tools/qemu-xen/linux-user/main.c:    if (index < 8 && env->cwp == env->nwindows - 1)
./tools/qemu-xen/linux-user/main.c:        index += 16 * env->nwindows;
./tools/qemu-xen/linux-user/main.c:    sp_ptr = env->regbase[get_reg_index(env, cwp1, 6)];
./tools/qemu-xen/linux-user/main.c:        put_user_ual(env->regbase[get_reg_index(env, cwp1, 8 + i)], sp_ptr);
./tools/qemu-xen/linux-user/main.c:    new_wim = ((env->wim >> 1) | (env->wim << (env->nwindows - 1))) &
./tools/qemu-xen/linux-user/main.c:        ((1LL << env->nwindows) - 1);
./tools/qemu-xen/linux-user/main.c:    save_window_offset(env, cpu_cwp_dec(env, env->cwp - 2));
./tools/qemu-xen/linux-user/main.c:    env->wim = new_wim;
./tools/qemu-xen/linux-user/main.c:    save_window_offset(env, cpu_cwp_dec(env, env->cwp - 2));
./tools/qemu-xen/linux-user/main.c:    env->cansave++;
./tools/qemu-xen/linux-user/main.c:    env->canrestore--;
./tools/qemu-xen/linux-user/main.c:    new_wim = ((env->wim << 1) | (env->wim >> (env->nwindows - 1))) &
./tools/qemu-xen/linux-user/main.c:        ((1LL << env->nwindows) - 1);
./tools/qemu-xen/linux-user/main.c:    cwp1 = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen/linux-user/main.c:    sp_ptr = env->regbase[get_reg_index(env, cwp1, 6)];
./tools/qemu-xen/linux-user/main.c:        get_user_ual(env->regbase[get_reg_index(env, cwp1, 8 + i)], sp_ptr);
./tools/qemu-xen/linux-user/main.c:    env->canrestore++;
./tools/qemu-xen/linux-user/main.c:    if (env->cleanwin < env->nwindows - 1)
./tools/qemu-xen/linux-user/main.c:        env->cleanwin++;
./tools/qemu-xen/linux-user/main.c:    env->cansave--;
./tools/qemu-xen/linux-user/main.c:    env->wim = new_wim;
./tools/qemu-xen/linux-user/main.c:        cwp1 = cpu_cwp_inc(env, env->cwp + offset);
./tools/qemu-xen/linux-user/main.c:        if (env->wim & (1 << cwp1))
./tools/qemu-xen/linux-user/main.c:        if (env->canrestore == 0)
./tools/qemu-xen/linux-user/main.c:        env->cansave++;
./tools/qemu-xen/linux-user/main.c:        env->canrestore--;
./tools/qemu-xen/linux-user/main.c:    cwp1 = cpu_cwp_inc(env, env->cwp + 1);
./tools/qemu-xen/linux-user/main.c:    env->wim = 1 << cwp1;
./tools/qemu-xen/linux-user/main.c:            ret = do_syscall (env, env->gregs[1],
./tools/qemu-xen/linux-user/main.c:                              env->regwptr[0], env->regwptr[1],
./tools/qemu-xen/linux-user/main.c:                              env->regwptr[2], env->regwptr[3],
./tools/qemu-xen/linux-user/main.c:                              env->regwptr[4], env->regwptr[5],
./tools/qemu-xen/linux-user/main.c:                env->xcc |= PSR_CARRY;
./tools/qemu-xen/linux-user/main.c:                env->psr |= PSR_CARRY;
./tools/qemu-xen/linux-user/main.c:                env->xcc &= ~PSR_CARRY;
./tools/qemu-xen/linux-user/main.c:                env->psr &= ~PSR_CARRY;
./tools/qemu-xen/linux-user/main.c:            env->regwptr[0] = ret;
./tools/qemu-xen/linux-user/main.c:            env->pc = env->npc;
./tools/qemu-xen/linux-user/main.c:            env->npc = env->npc + 4;
./tools/qemu-xen/linux-user/main.c:            env->pc = env->npc;
./tools/qemu-xen/linux-user/main.c:            env->npc = env->npc + 4;
./tools/qemu-xen/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->mmuregs[4];
./tools/qemu-xen/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:                    info._sifields._sigfault._addr = env->dmmuregs[4];
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->pc;
./tools/qemu-xen/linux-user/main.c:    addr = env->reserve_ea;
./tools/qemu-xen/linux-user/main.c:        int reg = env->reserve_info & 0x1f;
./tools/qemu-xen/linux-user/main.c:        int size = (env->reserve_info >> 5) & 0xf;
./tools/qemu-xen/linux-user/main.c:        if (addr == env->reserve_addr) {
./tools/qemu-xen/linux-user/main.c:            if (!segv && val == env->reserve_val) {
./tools/qemu-xen/linux-user/main.c:                val = env->gpr[reg];
./tools/qemu-xen/linux-user/main.c:        env->crf[0] = (stored << 1) | xer_so;
./tools/qemu-xen/linux-user/main.c:        env->reserve_addr = (target_ulong)-1;
./tools/qemu-xen/linux-user/main.c:        env->nip += 4;
./tools/qemu-xen/linux-user/main.c:                      env->spr[SPR_DAR]);
./tools/qemu-xen/linux-user/main.c:            switch (env->error_code & 0xFF000000) {
./tools/qemu-xen/linux-user/main.c:                          env->error_code);
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->nip;
./tools/qemu-xen/linux-user/main.c:                      "\n", env->spr[SPR_SRR0]);
./tools/qemu-xen/linux-user/main.c:            switch (env->error_code & 0xFF000000) {
./tools/qemu-xen/linux-user/main.c:                          env->error_code);
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen/linux-user/main.c:            switch (env->error_code & ~0xF) {
./tools/qemu-xen/linux-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen/linux-user/main.c:                              env->error_code);
./tools/qemu-xen/linux-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen/linux-user/main.c:                              env->error_code & 0xF);
./tools/qemu-xen/linux-user/main.c:                switch (env->error_code & 0xF) {
./tools/qemu-xen/linux-user/main.c:                              env->error_code & 0xF);
./tools/qemu-xen/linux-user/main.c:                          env->error_code);
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->nip - 4;
./tools/qemu-xen/linux-user/main.c:            env->crf[0] &= ~0x1;
./tools/qemu-xen/linux-user/main.c:            ret = do_syscall(env, env->gpr[0], env->gpr[3], env->gpr[4],
./tools/qemu-xen/linux-user/main.c:                             env->gpr[5], env->gpr[6], env->gpr[7],
./tools/qemu-xen/linux-user/main.c:                             env->gpr[8], 0, 0);
./tools/qemu-xen/linux-user/main.c:                env->crf[0] |= 0x1;
./tools/qemu-xen/linux-user/main.c:            env->gpr[3] = ret;
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->nip;
./tools/qemu-xen/linux-user/main.c:    addr = env->lladdr;
./tools/qemu-xen/linux-user/main.c:        reg = env->llreg & 0x1f;
./tools/qemu-xen/linux-user/main.c:        d = (env->llreg & 0x20) != 0;
./tools/qemu-xen/linux-user/main.c:            if (val != env->llval) {
./tools/qemu-xen/linux-user/main.c:                env->active_tc.gpr[reg] = 0;
./tools/qemu-xen/linux-user/main.c:                    segv = put_user_u64(env->llnewval, addr);
./tools/qemu-xen/linux-user/main.c:                    segv = put_user_u32(env->llnewval, addr);
./tools/qemu-xen/linux-user/main.c:                    env->active_tc.gpr[reg] = 1;
./tools/qemu-xen/linux-user/main.c:    env->lladdr = -1;
./tools/qemu-xen/linux-user/main.c:        env->active_tc.PC += 4;
./tools/qemu-xen/linux-user/main.c:            syscall_num = env->active_tc.gpr[2] - 4000;
./tools/qemu-xen/linux-user/main.c:            env->active_tc.PC += 4;
./tools/qemu-xen/linux-user/main.c:                sp_reg = env->active_tc.gpr[29];
./tools/qemu-xen/linux-user/main.c:                ret = do_syscall(env, env->active_tc.gpr[2],
./tools/qemu-xen/linux-user/main.c:                                 env->active_tc.gpr[4],
./tools/qemu-xen/linux-user/main.c:                                 env->active_tc.gpr[5],
./tools/qemu-xen/linux-user/main.c:                                 env->active_tc.gpr[6],
./tools/qemu-xen/linux-user/main.c:                                 env->active_tc.gpr[7],
./tools/qemu-xen/linux-user/main.c:                env->active_tc.gpr[7] = 1; /* error flag */
./tools/qemu-xen/linux-user/main.c:                env->active_tc.gpr[7] = 0; /* error flag */
./tools/qemu-xen/linux-user/main.c:            env->active_tc.gpr[2] = ret;
./tools/qemu-xen/linux-user/main.c:            /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->CP0_BadVAddr;
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->active_tc.PC;
./tools/qemu-xen/linux-user/main.c:            env->pc += 2;
./tools/qemu-xen/linux-user/main.c:                             env->gregs[3],
./tools/qemu-xen/linux-user/main.c:                             env->gregs[4],
./tools/qemu-xen/linux-user/main.c:                             env->gregs[5],
./tools/qemu-xen/linux-user/main.c:                             env->gregs[6],
./tools/qemu-xen/linux-user/main.c:                             env->gregs[7],
./tools/qemu-xen/linux-user/main.c:                             env->gregs[0],
./tools/qemu-xen/linux-user/main.c:                             env->gregs[1],
./tools/qemu-xen/linux-user/main.c:            env->gregs[0] = ret;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->tea;
./tools/qemu-xen/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->pregs[PR_EDA];
./tools/qemu-xen/linux-user/main.c:                             env->regs[9], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[10], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[11], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[12], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[13], 
./tools/qemu-xen/linux-user/main.c:                             env->pregs[7], 
./tools/qemu-xen/linux-user/main.c:                             env->pregs[11],
./tools/qemu-xen/linux-user/main.c:            env->regs[10] = ret;
./tools/qemu-xen/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:            env->regs[14] += 4;
./tools/qemu-xen/linux-user/main.c:                             env->regs[12], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[5], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[6], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[7], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[8], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[9], 
./tools/qemu-xen/linux-user/main.c:                             env->regs[10],
./tools/qemu-xen/linux-user/main.c:            env->regs[3] = ret;
./tools/qemu-xen/linux-user/main.c:            env->sregs[SR_PC] = env->regs[14];
./tools/qemu-xen/linux-user/main.c:            env->regs[17] = env->sregs[SR_PC] + 4;
./tools/qemu-xen/linux-user/main.c:            if (env->iflags & D_FLAG) {
./tools/qemu-xen/linux-user/main.c:                env->sregs[SR_ESR] |= 1 << 12;
./tools/qemu-xen/linux-user/main.c:                env->sregs[SR_PC] -= 4;
./tools/qemu-xen/linux-user/main.c:            env->iflags &= ~(IMM_FLAG | D_FLAG);
./tools/qemu-xen/linux-user/main.c:            switch (env->sregs[SR_ESR] & 31) {
./tools/qemu-xen/linux-user/main.c:                    if (env->sregs[SR_FSR] & FSR_IO) {
./tools/qemu-xen/linux-user/main.c:                    if (env->sregs[SR_FSR] & FSR_DZ) {
./tools/qemu-xen/linux-user/main.c:                            env->sregs[SR_ESR] & ESR_EC_MASK);
./tools/qemu-xen/linux-user/main.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/main.c:                    nr = lduw(env->pc + 2);
./tools/qemu-xen/linux-user/main.c:                    env->pc += 4;
./tools/qemu-xen/linux-user/main.c:            env->pc += 4;
./tools/qemu-xen/linux-user/main.c:            do_m68k_semihosting(env, env->dregs[0]);
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->pc;
./tools/qemu-xen/linux-user/main.c:                n = env->dregs[0];
./tools/qemu-xen/linux-user/main.c:                env->pc += 2;
./tools/qemu-xen/linux-user/main.c:                env->dregs[0] = do_syscall(env,
./tools/qemu-xen/linux-user/main.c:                                          env->dregs[1],
./tools/qemu-xen/linux-user/main.c:                                          env->dregs[2],
./tools/qemu-xen/linux-user/main.c:                                          env->dregs[3],
./tools/qemu-xen/linux-user/main.c:                                          env->dregs[4],
./tools/qemu-xen/linux-user/main.c:                                          env->dregs[5],
./tools/qemu-xen/linux-user/main.c:                                          env->aregs[0],
./tools/qemu-xen/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->mmu.ar;
./tools/qemu-xen/linux-user/main.c:    addr = env->lock_addr;
./tools/qemu-xen/linux-user/main.c:    tmp = env->lock_st_addr;
./tools/qemu-xen/linux-user/main.c:    env->lock_addr = -1;
./tools/qemu-xen/linux-user/main.c:    env->lock_st_addr = 0;
./tools/qemu-xen/linux-user/main.c:        if (val == env->lock_value) {
./tools/qemu-xen/linux-user/main.c:            tmp = env->ir[reg];
./tools/qemu-xen/linux-user/main.c:    env->ir[reg] = ret;
./tools/qemu-xen/linux-user/main.c:    env->pc += 4;
./tools/qemu-xen/linux-user/main.c:        env->intr_flag = 0;
./tools/qemu-xen/linux-user/main.c:            env->lock_addr = -1;
./tools/qemu-xen/linux-user/main.c:            info.si_code = (page_get_flags(env->trap_arg0) & PAGE_VALID
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->trap_arg0;
./tools/qemu-xen/linux-user/main.c:            env->lock_addr = -1;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->trap_arg0;
./tools/qemu-xen/linux-user/main.c:            env->lock_addr = -1;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->pc;
./tools/qemu-xen/linux-user/main.c:            env->lock_addr = -1;
./tools/qemu-xen/linux-user/main.c:            info._sifields._sigfault._addr = env->pc;
./tools/qemu-xen/linux-user/main.c:            env->lock_addr = -1;
./tools/qemu-xen/linux-user/main.c:            switch (env->error_code) {
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->pc;
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->pc;
./tools/qemu-xen/linux-user/main.c:                trapnr = env->ir[IR_V0];
./tools/qemu-xen/linux-user/main.c:                                    env->ir[IR_A0], env->ir[IR_A1],
./tools/qemu-xen/linux-user/main.c:                                    env->ir[IR_A2], env->ir[IR_A3],
./tools/qemu-xen/linux-user/main.c:                                    env->ir[IR_A4], env->ir[IR_A5],
./tools/qemu-xen/linux-user/main.c:                if (env->ir[IR_V0] == 0) {
./tools/qemu-xen/linux-user/main.c:                    env->ir[IR_V0] = sysret;
./tools/qemu-xen/linux-user/main.c:                    env->ir[IR_V0] = (sysret < 0 ? -sysret : sysret);
./tools/qemu-xen/linux-user/main.c:                    env->ir[IR_A3] = (sysret < 0);
./tools/qemu-xen/linux-user/main.c:                switch (env->ir[IR_A0]) {
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->pc;
./tools/qemu-xen/linux-user/main.c:                env->lock_addr = -1;
./tools/qemu-xen/linux-user/main.c:            do_store_exclusive(env, env->error_code, trapnr - EXCP_STL_C);
./tools/qemu-xen/linux-user/main.c:                int n = env->int_svc_code;
./tools/qemu-xen/linux-user/main.c:                    n = env->regs[1];
./tools/qemu-xen/linux-user/main.c:                env->psw.addr += env->int_svc_ilc;
./tools/qemu-xen/linux-user/main.c:                env->regs[2] = do_syscall(env, n,
./tools/qemu-xen/linux-user/main.c:                           env->regs[2],
./tools/qemu-xen/linux-user/main.c:                           env->regs[3],
./tools/qemu-xen/linux-user/main.c:                           env->regs[4],
./tools/qemu-xen/linux-user/main.c:                           env->regs[5],
./tools/qemu-xen/linux-user/main.c:                           env->regs[6],
./tools/qemu-xen/linux-user/main.c:                           env->regs[7],
./tools/qemu-xen/linux-user/main.c:                /* XXX: check env->error_code */
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->__excp_addr;
./tools/qemu-xen/linux-user/main.c:                fprintf(stderr,"specification exception insn 0x%08x%04x\n", ldl(env->psw.addr), lduw(env->psw.addr + 4));
./tools/qemu-xen/linux-user/main.c:                info._sifields._sigfault._addr = env->__excp_addr;
./tools/qemu-xen/linux-user/main.c:            maxenvlen+1, "Env-variable");
./tools/qemu-xen/linux-user/main.c:    env->opaque = ts;
./tools/qemu-xen/linux-user/main.c:    env->cr[0] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK;
./tools/qemu-xen/linux-user/main.c:    env->hflags |= HF_PE_MASK;
./tools/qemu-xen/linux-user/main.c:    if (env->cpuid_features & CPUID_SSE) {
./tools/qemu-xen/linux-user/main.c:        env->cr[4] |= CR4_OSFXSR_MASK;
./tools/qemu-xen/linux-user/main.c:        env->hflags |= HF_OSFXSR_MASK;
./tools/qemu-xen/linux-user/main.c:    if (!(env->cpuid_ext2_features & CPUID_EXT2_LM)) {
./tools/qemu-xen/linux-user/main.c:    env->cr[4] |= CR4_PAE_MASK;
./tools/qemu-xen/linux-user/main.c:    env->efer |= MSR_EFER_LMA | MSR_EFER_LME;
./tools/qemu-xen/linux-user/main.c:    env->hflags |= HF_LMA_MASK;
./tools/qemu-xen/linux-user/main.c:    env->eflags |= IF_MASK;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EAX] = regs->rax;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EBX] = regs->rbx;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_ECX] = regs->rcx;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EDX] = regs->rdx;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_ESI] = regs->rsi;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EDI] = regs->rdi;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EBP] = regs->rbp;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_ESP] = regs->rsp;
./tools/qemu-xen/linux-user/main.c:    env->eip = regs->rip;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EAX] = regs->eax;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EBX] = regs->ebx;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_ECX] = regs->ecx;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EDX] = regs->edx;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_ESI] = regs->esi;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EDI] = regs->edi;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_EBP] = regs->ebp;
./tools/qemu-xen/linux-user/main.c:    env->regs[R_ESP] = regs->esp;
./tools/qemu-xen/linux-user/main.c:    env->eip = regs->eip;
./tools/qemu-xen/linux-user/main.c:    env->idt.limit = 511;
./tools/qemu-xen/linux-user/main.c:    env->idt.limit = 255;
./tools/qemu-xen/linux-user/main.c:    env->idt.base = target_mmap(0, sizeof(uint64_t) * (env->idt.limit + 1),
./tools/qemu-xen/linux-user/main.c:    idt_table = g2h(env->idt.base);
./tools/qemu-xen/linux-user/main.c:        env->gdt.base = target_mmap(0, sizeof(uint64_t) * TARGET_GDT_ENTRIES,
./tools/qemu-xen/linux-user/main.c:        env->gdt.limit = sizeof(uint64_t) * TARGET_GDT_ENTRIES - 1;
./tools/qemu-xen/linux-user/main.c:        gdt_table = g2h(env->gdt.base);
./tools/qemu-xen/linux-user/main.c:    env->segs[R_FS].selector = 0;
./tools/qemu-xen/linux-user/main.c:            env->regs[i] = regs->uregs[i];
./tools/qemu-xen/linux-user/main.c:            env->regs[i] = regs->uregs[i];
./tools/qemu-xen/linux-user/main.c:	env->pc = regs->pc;
./tools/qemu-xen/linux-user/main.c:	env->npc = regs->npc;
./tools/qemu-xen/linux-user/main.c:        env->y = regs->y;
./tools/qemu-xen/linux-user/main.c:            env->gregs[i] = regs->u_regs[i];
./tools/qemu-xen/linux-user/main.c:            env->regwptr[i] = regs->u_regs[i + 8];
./tools/qemu-xen/linux-user/main.c:        env->msr &= ~((target_ulong)1 << MSR_SF);
./tools/qemu-xen/linux-user/main.c:        env->msr |= (target_ulong)1 << MSR_SF;
./tools/qemu-xen/linux-user/main.c:        env->nip = regs->nip;
./tools/qemu-xen/linux-user/main.c:            env->gpr[i] = regs->gpr[i];
./tools/qemu-xen/linux-user/main.c:        env->pc = regs->pc;
./tools/qemu-xen/linux-user/main.c:        env->dregs[0] = regs->d0;
./tools/qemu-xen/linux-user/main.c:        env->dregs[1] = regs->d1;
./tools/qemu-xen/linux-user/main.c:        env->dregs[2] = regs->d2;
./tools/qemu-xen/linux-user/main.c:        env->dregs[3] = regs->d3;
./tools/qemu-xen/linux-user/main.c:        env->dregs[4] = regs->d4;
./tools/qemu-xen/linux-user/main.c:        env->dregs[5] = regs->d5;
./tools/qemu-xen/linux-user/main.c:        env->dregs[6] = regs->d6;
./tools/qemu-xen/linux-user/main.c:        env->dregs[7] = regs->d7;
./tools/qemu-xen/linux-user/main.c:        env->aregs[0] = regs->a0;
./tools/qemu-xen/linux-user/main.c:        env->aregs[1] = regs->a1;
./tools/qemu-xen/linux-user/main.c:        env->aregs[2] = regs->a2;
./tools/qemu-xen/linux-user/main.c:        env->aregs[3] = regs->a3;
./tools/qemu-xen/linux-user/main.c:        env->aregs[4] = regs->a4;
./tools/qemu-xen/linux-user/main.c:        env->aregs[5] = regs->a5;
./tools/qemu-xen/linux-user/main.c:        env->aregs[6] = regs->a6;
./tools/qemu-xen/linux-user/main.c:        env->aregs[7] = regs->usp;
./tools/qemu-xen/linux-user/main.c:        env->sr = regs->sr;
./tools/qemu-xen/linux-user/main.c:        env->regs[0] = regs->r0;
./tools/qemu-xen/linux-user/main.c:        env->regs[1] = regs->r1;
./tools/qemu-xen/linux-user/main.c:        env->regs[2] = regs->r2;
./tools/qemu-xen/linux-user/main.c:        env->regs[3] = regs->r3;
./tools/qemu-xen/linux-user/main.c:        env->regs[4] = regs->r4;
./tools/qemu-xen/linux-user/main.c:        env->regs[5] = regs->r5;
./tools/qemu-xen/linux-user/main.c:        env->regs[6] = regs->r6;
./tools/qemu-xen/linux-user/main.c:        env->regs[7] = regs->r7;
./tools/qemu-xen/linux-user/main.c:        env->regs[8] = regs->r8;
./tools/qemu-xen/linux-user/main.c:        env->regs[9] = regs->r9;
./tools/qemu-xen/linux-user/main.c:        env->regs[10] = regs->r10;
./tools/qemu-xen/linux-user/main.c:        env->regs[11] = regs->r11;
./tools/qemu-xen/linux-user/main.c:        env->regs[12] = regs->r12;
./tools/qemu-xen/linux-user/main.c:        env->regs[13] = regs->r13;
./tools/qemu-xen/linux-user/main.c:        env->regs[14] = regs->r14;
./tools/qemu-xen/linux-user/main.c:        env->regs[15] = regs->r15;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[16] = regs->r16;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[17] = regs->r17;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[18] = regs->r18;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[19] = regs->r19;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[20] = regs->r20;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[21] = regs->r21;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[22] = regs->r22;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[23] = regs->r23;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[24] = regs->r24;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[25] = regs->r25;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[26] = regs->r26;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[27] = regs->r27;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[28] = regs->r28;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[29] = regs->r29;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[30] = regs->r30;	    
./tools/qemu-xen/linux-user/main.c:        env->regs[31] = regs->r31;	    
./tools/qemu-xen/linux-user/main.c:        env->sregs[SR_PC] = regs->pc;
./tools/qemu-xen/linux-user/main.c:            env->active_tc.gpr[i] = regs->regs[i];
./tools/qemu-xen/linux-user/main.c:        env->active_tc.PC = regs->cp0_epc & ~(target_ulong)1;
./tools/qemu-xen/linux-user/main.c:            env->hflags |= MIPS_HFLAG_M16;
./tools/qemu-xen/linux-user/main.c:            env->gregs[i] = regs->regs[i];
./tools/qemu-xen/linux-user/main.c:        env->pc = regs->pc;
./tools/qemu-xen/linux-user/main.c:            env->ir[i] = ((abi_ulong *)regs)[i];
./tools/qemu-xen/linux-user/main.c:        env->ir[IR_SP] = regs->usp;
./tools/qemu-xen/linux-user/main.c:        env->pc = regs->pc;
./tools/qemu-xen/linux-user/main.c:	    env->regs[0] = regs->r0;
./tools/qemu-xen/linux-user/main.c:	    env->regs[1] = regs->r1;
./tools/qemu-xen/linux-user/main.c:	    env->regs[2] = regs->r2;
./tools/qemu-xen/linux-user/main.c:	    env->regs[3] = regs->r3;
./tools/qemu-xen/linux-user/main.c:	    env->regs[4] = regs->r4;
./tools/qemu-xen/linux-user/main.c:	    env->regs[5] = regs->r5;
./tools/qemu-xen/linux-user/main.c:	    env->regs[6] = regs->r6;
./tools/qemu-xen/linux-user/main.c:	    env->regs[7] = regs->r7;
./tools/qemu-xen/linux-user/main.c:	    env->regs[8] = regs->r8;
./tools/qemu-xen/linux-user/main.c:	    env->regs[9] = regs->r9;
./tools/qemu-xen/linux-user/main.c:	    env->regs[10] = regs->r10;
./tools/qemu-xen/linux-user/main.c:	    env->regs[11] = regs->r11;
./tools/qemu-xen/linux-user/main.c:	    env->regs[12] = regs->r12;
./tools/qemu-xen/linux-user/main.c:	    env->regs[13] = regs->r13;
./tools/qemu-xen/linux-user/main.c:	    env->regs[14] = info->start_stack;
./tools/qemu-xen/linux-user/main.c:	    env->regs[15] = regs->acr;	    
./tools/qemu-xen/linux-user/main.c:	    env->pc = regs->erp;
./tools/qemu-xen/linux-user/main.c:                env->regs[i] = regs->gprs[i];
./tools/qemu-xen/linux-user/main.c:            env->psw.mask = regs->psw.mask;
./tools/qemu-xen/linux-user/main.c:            env->psw.addr = regs->psw.addr;
./tools/qemu-xen/linux-user/syscall.c:    __get_user(tv->tv_sec, &target_tv->tv_sec);
./tools/qemu-xen/linux-user/syscall.c:    __get_user(tv->tv_usec, &target_tv->tv_usec);
./tools/qemu-xen/linux-user/syscall.c:    __put_user(tv->tv_sec, &target_tv->tv_sec);
./tools/qemu-xen/linux-user/syscall.c:    __put_user(tv->tv_usec, &target_tv->tv_usec);
./tools/qemu-xen/linux-user/syscall.c:        env->ldt.base = target_mmap(0,
./tools/qemu-xen/linux-user/syscall.c:        if (env->ldt.base == -1)
./tools/qemu-xen/linux-user/syscall.c:        memset(g2h(env->ldt.base), 0,
./tools/qemu-xen/linux-user/syscall.c:        env->ldt.limit = 0xffff;
./tools/qemu-xen/linux-user/syscall.c:        ldt_table = g2h(env->ldt.base);
./tools/qemu-xen/linux-user/syscall.c:    uint64_t *gdt_table = g2h(env->gdt.base);
./tools/qemu-xen/linux-user/syscall.c:    uint64_t *gdt_table = g2h(env->gdt.base);
./tools/qemu-xen/linux-user/syscall.c:        env->segs[idx].base = addr;
./tools/qemu-xen/linux-user/syscall.c:        val = env->segs[idx].base;
./tools/qemu-xen/linux-user/syscall.c:    ts = (TaskState *)thread_env->opaque;
./tools/qemu-xen/linux-user/syscall.c:    env->host_tid = info->tid;
./tools/qemu-xen/linux-user/syscall.c:        TaskState *parent_ts = (TaskState *)env->opaque;
./tools/qemu-xen/linux-user/syscall.c:        new_env->opaque = ts;
./tools/qemu-xen/linux-user/syscall.c:            ts = (TaskState *)env->opaque;
./tools/qemu-xen/linux-user/elfload.c:    int family = (thread_env->cpuid_version >> 8) & 0xff;
./tools/qemu-xen/linux-user/elfload.c:    return thread_env->cpuid_features;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[0] = env->regs[15];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[1] = env->regs[14];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[2] = env->regs[13];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[3] = env->regs[12];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[4] = env->regs[R_EBP];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[5] = env->regs[R_EBX];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[6] = env->regs[11];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[7] = env->regs[10];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[8] = env->regs[9];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[9] = env->regs[8];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[10] = env->regs[R_EAX];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[11] = env->regs[R_ECX];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[12] = env->regs[R_EDX];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[13] = env->regs[R_ESI];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[14] = env->regs[R_EDI];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[15] = env->regs[R_EAX]; /* XXX */
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[16] = env->eip;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[17] = env->segs[R_CS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[18] = env->eflags;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[19] = env->regs[R_ESP];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[20] = env->segs[R_SS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[21] = env->segs[R_FS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[22] = env->segs[R_GS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[23] = env->segs[R_DS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[24] = env->segs[R_ES].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[25] = env->segs[R_FS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[26] = env->segs[R_GS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[0] = env->regs[R_EBX];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[1] = env->regs[R_ECX];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[2] = env->regs[R_EDX];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[3] = env->regs[R_ESI];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[4] = env->regs[R_EDI];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[5] = env->regs[R_EBP];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[6] = env->regs[R_EAX];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[7] = env->segs[R_DS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[8] = env->segs[R_ES].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[9] = env->segs[R_FS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[10] = env->segs[R_GS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[11] = env->regs[R_EAX]; /* XXX */
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[12] = env->eip;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[13] = env->segs[R_CS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[14] = env->eflags;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[15] = env->regs[R_ESP];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[16] = env->segs[R_SS].selector & 0xffff;
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[0] = tswapl(env->regs[0]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[1] = tswapl(env->regs[1]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[2] = tswapl(env->regs[2]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[3] = tswapl(env->regs[3]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[4] = tswapl(env->regs[4]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[5] = tswapl(env->regs[5]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[6] = tswapl(env->regs[6]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[7] = tswapl(env->regs[7]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[8] = tswapl(env->regs[8]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[9] = tswapl(env->regs[9]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[10] = tswapl(env->regs[10]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[11] = tswapl(env->regs[11]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[12] = tswapl(env->regs[12]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[13] = tswapl(env->regs[13]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[14] = tswapl(env->regs[14]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[15] = tswapl(env->regs[15]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[17] = tswapl(env->regs[0]); /* XXX */
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[0] = env->regs[0];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[1] = env->regs[1];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[2] = env->regs[2];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[3] = env->regs[3];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[4] = env->regs[4];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[5] = env->regs[5];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[6] = env->regs[6];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[7] = env->regs[7];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[8] = env->regs[8];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[9] = env->regs[9];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[10] = env->regs[10];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[11] = env->regs[11];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[12] = env->regs[12];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[13] = env->regs[13];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[14] = env->regs[14];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[15] = env->regs[15];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[16] = env->regs[16];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[17] = env->regs[17];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[18] = env->regs[18];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[19] = env->regs[19];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[20] = env->regs[20];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[21] = env->regs[21];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[22] = env->regs[22];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[23] = env->regs[23];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[24] = env->regs[24];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[25] = env->regs[25];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[26] = env->regs[26];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[27] = env->regs[27];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[28] = env->regs[28];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[29] = env->regs[29];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[30] = env->regs[30];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[31] = env->regs[31];
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[33] = env->regs[0]; /* XXX */
./tools/qemu-xen/linux-user/elfload.c:    for (i = 0; i < ARRAY_SIZE(env->gpr); i++) {
./tools/qemu-xen/linux-user/elfload.c:        (*regs)[i] = tswapl(env->gpr[i]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[32] = tswapl(env->nip);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[33] = tswapl(env->msr);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[35] = tswapl(env->ctr);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[36] = tswapl(env->lr);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[37] = tswapl(env->xer);
./tools/qemu-xen/linux-user/elfload.c:    for (i = 0; i < ARRAY_SIZE(env->crf); i++) {
./tools/qemu-xen/linux-user/elfload.c:        ccr |= env->crf[i] << (32 - ((i + 1) * 4));
./tools/qemu-xen/linux-user/elfload.c:    for (i = 1; i < ARRAY_SIZE(env->active_tc.gpr); i++) {
./tools/qemu-xen/linux-user/elfload.c:        (*regs)[TARGET_EF_R0 + i] = tswapl(env->active_tc.gpr[i]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_EF_LO] = tswapl(env->active_tc.LO[0]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_EF_HI] = tswapl(env->active_tc.HI[0]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_EF_CP0_EPC] = tswapl(env->active_tc.PC);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_EF_CP0_BADVADDR] = tswapl(env->CP0_BadVAddr);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_EF_CP0_STATUS] = tswapl(env->CP0_Status);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_EF_CP0_CAUSE] = tswapl(env->CP0_Cause);
./tools/qemu-xen/linux-user/elfload.c:        (*regs)[pos++] = tswapl(env->regs[i]);
./tools/qemu-xen/linux-user/elfload.c:        (*regs)[pos++] = tswapl(env->sregs[i]);
./tools/qemu-xen/linux-user/elfload.c:        (*regs[i]) = tswapl(env->gregs[i]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_REG_PC] = tswapl(env->pc);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_REG_PR] = tswapl(env->pr);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_REG_SR] = tswapl(env->sr);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_REG_GBR] = tswapl(env->gbr);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_REG_MACH] = tswapl(env->mach);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[TARGET_REG_MACL] = tswapl(env->macl);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[0] = tswapl(env->dregs[1]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[1] = tswapl(env->dregs[2]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[2] = tswapl(env->dregs[3]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[3] = tswapl(env->dregs[4]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[4] = tswapl(env->dregs[5]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[5] = tswapl(env->dregs[6]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[6] = tswapl(env->dregs[7]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[7] = tswapl(env->aregs[0]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[8] = tswapl(env->aregs[1]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[9] = tswapl(env->aregs[2]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[10] = tswapl(env->aregs[3]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[11] = tswapl(env->aregs[4]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[12] = tswapl(env->aregs[5]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[13] = tswapl(env->aregs[6]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[14] = tswapl(env->dregs[0]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[15] = tswapl(env->aregs[7]);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[16] = tswapl(env->dregs[0]); /* FIXME: orig_d0 */
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[17] = tswapl(env->sr);
./tools/qemu-xen/linux-user/elfload.c:    (*regs)[18] = tswapl(env->pc);
./tools/qemu-xen/linux-user/elfload.c:    TaskState *ts = (TaskState *)env->opaque;
./tools/qemu-xen/linux-user/elfload.c:    TaskState *ts = (TaskState *)env->opaque;
./tools/qemu-xen/linux-user/elfload.c:    const TaskState *ts = (const TaskState *)env->opaque;
./tools/qemu-xen/linux-user/signal.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/signal.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/signal.c:    TaskState *ts = (TaskState *)thread_env->opaque;
./tools/qemu-xen/linux-user/signal.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->segs[R_GS].selector, (unsigned int *)&sc->gs);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->segs[R_FS].selector, (unsigned int *)&sc->fs);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->segs[R_ES].selector, (unsigned int *)&sc->es);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->segs[R_DS].selector, (unsigned int *)&sc->ds);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_EDI], &sc->edi);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_ESI], &sc->esi);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_EBP], &sc->ebp);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_ESP], &sc->esp);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_EBX], &sc->ebx);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_EDX], &sc->edx);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_ECX], &sc->ecx);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_EAX], &sc->eax);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->exception_index, &sc->trapno);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->error_code, &sc->err);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->eip, &sc->eip);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->segs[R_CS].selector, (unsigned int *)&sc->cs);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->eflags, &sc->eflags);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regs[R_ESP], &sc->esp_at_signal);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->segs[R_SS].selector, (unsigned int *)&sc->ss);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->cr[2], &sc->cr2);
./tools/qemu-xen/linux-user/signal.c:	esp = env->regs[R_ESP];
./tools/qemu-xen/linux-user/signal.c:        if ((env->segs[R_SS].selector & 0xffff) != __USER_DS &&
./tools/qemu-xen/linux-user/signal.c:	env->regs[R_ESP] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:	env->eip = ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:	env->eflags &= ~TF_MASK;
./tools/qemu-xen/linux-user/signal.c:	env->regs[R_ESP] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:	env->eip = ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:	env->eflags &= ~TF_MASK;
./tools/qemu-xen/linux-user/signal.c:        env->regs[R_EDI] = tswapl(sc->edi);
./tools/qemu-xen/linux-user/signal.c:        env->regs[R_ESI] = tswapl(sc->esi);
./tools/qemu-xen/linux-user/signal.c:        env->regs[R_EBP] = tswapl(sc->ebp);
./tools/qemu-xen/linux-user/signal.c:        env->regs[R_ESP] = tswapl(sc->esp);
./tools/qemu-xen/linux-user/signal.c:        env->regs[R_EBX] = tswapl(sc->ebx);
./tools/qemu-xen/linux-user/signal.c:        env->regs[R_EDX] = tswapl(sc->edx);
./tools/qemu-xen/linux-user/signal.c:        env->regs[R_ECX] = tswapl(sc->ecx);
./tools/qemu-xen/linux-user/signal.c:        env->eip = tswapl(sc->eip);
./tools/qemu-xen/linux-user/signal.c:        env->eflags = (env->eflags & ~0x40DD5) | (tmpflags & 0x40DD5);
./tools/qemu-xen/linux-user/signal.c:    abi_ulong frame_addr = env->regs[R_ESP] - 8;
./tools/qemu-xen/linux-user/signal.c:        frame_addr = env->regs[R_ESP] - 4;
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[0], &sc->arm_r0);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[1], &sc->arm_r1);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[2], &sc->arm_r2);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[3], &sc->arm_r3);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[4], &sc->arm_r4);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[5], &sc->arm_r5);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[6], &sc->arm_r6);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[7], &sc->arm_r7);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[8], &sc->arm_r8);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[9], &sc->arm_r9);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[10], &sc->arm_r10);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[11], &sc->arm_fp);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[12], &sc->arm_ip);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[13], &sc->arm_sp);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[14], &sc->arm_lr);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[15], &sc->arm_pc);
./tools/qemu-xen/linux-user/signal.c:	env->regs[0] = usig;
./tools/qemu-xen/linux-user/signal.c:	env->regs[13] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:	env->regs[14] = retcode;
./tools/qemu-xen/linux-user/signal.c:	env->regs[15] = handler & (thumb ? ~1 : ~3);
./tools/qemu-xen/linux-user/signal.c:        __put_user(float64_val(env->vfp.regs[i]), &vfpframe->ufp.fpregs[i]);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_VFP_FPEXC], &vfpframe->ufp_exc.fpexc);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_VFP_FPINST], &vfpframe->ufp_exc.fpinst);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_VFP_FPINST2], &vfpframe->ufp_exc.fpinst2);
./tools/qemu-xen/linux-user/signal.c:        __put_user(env->iwmmxt.regs[i], &iwmmxtframe->regs[i]);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_IWMMXT_wCSSF], &iwmmxtframe->wcssf);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_IWMMXT_wCASF], &iwmmxtframe->wcssf);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_IWMMXT_wCGR0], &iwmmxtframe->wcgr0);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_IWMMXT_wCGR1], &iwmmxtframe->wcgr1);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_IWMMXT_wCGR2], &iwmmxtframe->wcgr2);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->vfp.xregs[ARM_IWMMXT_wCGR3], &iwmmxtframe->wcgr3);
./tools/qemu-xen/linux-user/signal.c:        env->regs[1] = info_addr;
./tools/qemu-xen/linux-user/signal.c:        env->regs[2] = uc_addr;
./tools/qemu-xen/linux-user/signal.c:        env->regs[1] = info_addr;
./tools/qemu-xen/linux-user/signal.c:        env->regs[2] = uc_addr;
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[0], &sc->arm_r0, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[1], &sc->arm_r1, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[2], &sc->arm_r2, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[3], &sc->arm_r3, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[4], &sc->arm_r4, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[5], &sc->arm_r5, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[6], &sc->arm_r6, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[7], &sc->arm_r7, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[8], &sc->arm_r8, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[9], &sc->arm_r9, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[10], &sc->arm_r10, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[11], &sc->arm_fp, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[12], &sc->arm_ip, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[13], &sc->arm_sp, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[14], &sc->arm_lr, err);
./tools/qemu-xen/linux-user/signal.c:	__get_user_error(env->regs[15], &sc->arm_pc, err);
./tools/qemu-xen/linux-user/signal.c:	if (env->regs[13] & 7)
./tools/qemu-xen/linux-user/signal.c:        frame_addr = env->regs[13];
./tools/qemu-xen/linux-user/signal.c:        return env->regs[0];
./tools/qemu-xen/linux-user/signal.c:        __get_user(float64_val(env->vfp.regs[i]), &vfpframe->ufp.fpregs[i]);
./tools/qemu-xen/linux-user/signal.c:    env->vfp.xregs[ARM_VFP_FPEXC] = fpexc;
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->vfp.xregs[ARM_VFP_FPINST], &vfpframe->ufp_exc.fpinst);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->vfp.xregs[ARM_VFP_FPINST2], &vfpframe->ufp_exc.fpinst2);
./tools/qemu-xen/linux-user/signal.c:        __get_user(env->iwmmxt.regs[i], &iwmmxtframe->regs[i]);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->vfp.xregs[ARM_IWMMXT_wCSSF], &iwmmxtframe->wcssf);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->vfp.xregs[ARM_IWMMXT_wCASF], &iwmmxtframe->wcssf);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->vfp.xregs[ARM_IWMMXT_wCGR0], &iwmmxtframe->wcgr0);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->vfp.xregs[ARM_IWMMXT_wCGR1], &iwmmxtframe->wcgr1);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->vfp.xregs[ARM_IWMMXT_wCGR2], &iwmmxtframe->wcgr2);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->vfp.xregs[ARM_IWMMXT_wCGR3], &iwmmxtframe->wcgr3);
./tools/qemu-xen/linux-user/signal.c:	if (env->regs[13] & 7)
./tools/qemu-xen/linux-user/signal.c:        frame_addr = env->regs[13];
./tools/qemu-xen/linux-user/signal.c:	return env->regs[0];
./tools/qemu-xen/linux-user/signal.c:	if (env->regs[13] & 7)
./tools/qemu-xen/linux-user/signal.c:        frame_addr = env->regs[13];
./tools/qemu-xen/linux-user/signal.c:	return env->regs[0];
./tools/qemu-xen/linux-user/signal.c:	if (env->regs[13] & 7)
./tools/qemu-xen/linux-user/signal.c:        frame_addr = env->regs[13];
./tools/qemu-xen/linux-user/signal.c:	return env->regs[0];
./tools/qemu-xen/linux-user/signal.c:	sp = env->regwptr[UREG_FP];
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->psr, &si->si_regs.psr);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->pc, &si->si_regs.pc);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->npc, &si->si_regs.npc);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->y, &si->si_regs.y);
./tools/qemu-xen/linux-user/signal.c:		err |= __put_user(env->gregs[i], &si->si_regs.u_regs[i]);
./tools/qemu-xen/linux-user/signal.c:		err |= __put_user(env->regwptr[UREG_I0 + i], &si->si_regs.u_regs[i+8]);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regwptr[UREG_SP], &sc->sigc_sp);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->pc, &sc->sigc_pc);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->npc, &sc->sigc_npc);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->psr, &sc->sigc_psr);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->gregs[1], &sc->sigc_g1);
./tools/qemu-xen/linux-user/signal.c:	err |= __put_user(env->regwptr[UREG_O0], &sc->sigc_o0);
./tools/qemu-xen/linux-user/signal.c:	//fprintf(stderr, "sf: %x pc %x fp %x sp %x\n", sf, env->pc, env->regwptr[UREG_FP], env->regwptr[UREG_SP]);
./tools/qemu-xen/linux-user/signal.c:	  	err |= __put_user(env->regwptr[i + UREG_L0], &sf->ss.locals[i]);
./tools/qemu-xen/linux-user/signal.c:	  	err |= __put_user(env->regwptr[i + UREG_I0], &sf->ss.ins[i]);
./tools/qemu-xen/linux-user/signal.c:	env->regwptr[UREG_FP] = sf_addr;
./tools/qemu-xen/linux-user/signal.c:	env->regwptr[UREG_I0] = sig;
./tools/qemu-xen/linux-user/signal.c:	env->regwptr[UREG_I1] = sf_addr + 
./tools/qemu-xen/linux-user/signal.c:	env->regwptr[UREG_I2] = sf_addr + 
./tools/qemu-xen/linux-user/signal.c:	env->pc = ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:	env->npc = (env->pc + 4);
./tools/qemu-xen/linux-user/signal.c:		env->regwptr[UREG_I7] = ka->sa_restorer;
./tools/qemu-xen/linux-user/signal.c:		env->regwptr[UREG_I7] = sf_addr + 
./tools/qemu-xen/linux-user/signal.c:        err = __copy_from_user(&env->fpr[0], &fpu->si_float_regs[0],
./tools/qemu-xen/linux-user/signal.c:        err |= __get_user(env->fsr, &fpu->si_fsr);
./tools/qemu-xen/linux-user/signal.c:        sf_addr = env->regwptr[UREG_FP];
./tools/qemu-xen/linux-user/signal.c:	fprintf(stderr, "sf: %x pc %x fp %x sp %x\n", sf, env->pc, env->regwptr[UREG_FP], env->regwptr[UREG_SP]);
./tools/qemu-xen/linux-user/signal.c:        env->psr = (up_psr & (PSR_ICC /* | PSR_EF */))
./tools/qemu-xen/linux-user/signal.c:                  | (env->psr & ~(PSR_ICC /* | PSR_EF */));
./tools/qemu-xen/linux-user/signal.c:	env->pc = pc;
./tools/qemu-xen/linux-user/signal.c:	env->npc = npc;
./tools/qemu-xen/linux-user/signal.c:        err |= __get_user(env->y, &sf->info.si_regs.y);
./tools/qemu-xen/linux-user/signal.c:		err |= __get_user(env->gregs[i], &sf->info.si_regs.u_regs[i]);
./tools/qemu-xen/linux-user/signal.c:		err |= __get_user(env->regwptr[i + UREG_I0], &sf->info.si_regs.u_regs[i+8]);
./tools/qemu-xen/linux-user/signal.c:        return env->regwptr[0];
./tools/qemu-xen/linux-user/signal.c:    ucp_addr = env->regwptr[UREG_I0];
./tools/qemu-xen/linux-user/signal.c:    if (env->regwptr[UREG_I1]) {
./tools/qemu-xen/linux-user/signal.c:    env->pc = pc;
./tools/qemu-xen/linux-user/signal.c:    env->npc = npc;
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->y, &((*grp)[MC_Y]));
./tools/qemu-xen/linux-user/signal.c:    env->asi = (tstate >> 24) & 0xff;
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->gregs[1], (&(*grp)[MC_G1]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->gregs[2], (&(*grp)[MC_G2]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->gregs[3], (&(*grp)[MC_G3]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->gregs[4], (&(*grp)[MC_G4]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->gregs[5], (&(*grp)[MC_G5]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->gregs[6], (&(*grp)[MC_G6]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->gregs[7], (&(*grp)[MC_G7]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I0], (&(*grp)[MC_O0]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I1], (&(*grp)[MC_O1]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I2], (&(*grp)[MC_O2]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I3], (&(*grp)[MC_O3]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I4], (&(*grp)[MC_O4]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I5], (&(*grp)[MC_O5]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I6], (&(*grp)[MC_O6]));
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->regwptr[UREG_I7], (&(*grp)[MC_O7]));
./tools/qemu-xen/linux-user/signal.c:    w_addr = TARGET_STACK_BIAS+env->regwptr[UREG_I6];
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->fprs, &(ucp->tuc_mcontext.mc_fpregs.mcfpu_fprs));
./tools/qemu-xen/linux-user/signal.c:                err |= __get_user(env->fpr[i/2].l.lower, src);
./tools/qemu-xen/linux-user/signal.c:                err |= __get_user(env->fpr[i/2].l.upper, src);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->fsr,
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->gsr,
./tools/qemu-xen/linux-user/signal.c:    ucp_addr = env->regwptr[UREG_I0];
./tools/qemu-xen/linux-user/signal.c:    env->pc = env->npc;
./tools/qemu-xen/linux-user/signal.c:    env->npc += 4;
./tools/qemu-xen/linux-user/signal.c:    //    err |= __put_user(env->tstate, &((*grp)[MC_TSTATE]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->pc, &((*grp)[MC_PC]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->npc, &((*grp)[MC_NPC]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->y, &((*grp)[MC_Y]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gregs[1], &((*grp)[MC_G1]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gregs[2], &((*grp)[MC_G2]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gregs[3], &((*grp)[MC_G3]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gregs[4], &((*grp)[MC_G4]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gregs[5], &((*grp)[MC_G5]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gregs[6], &((*grp)[MC_G6]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gregs[7], &((*grp)[MC_G7]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I0], &((*grp)[MC_O0]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I1], &((*grp)[MC_O1]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I2], &((*grp)[MC_O2]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I3], &((*grp)[MC_O3]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I4], &((*grp)[MC_O4]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I5], &((*grp)[MC_O5]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I6], &((*grp)[MC_O6]));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->regwptr[UREG_I7], &((*grp)[MC_O7]));
./tools/qemu-xen/linux-user/signal.c:    w_addr = TARGET_STACK_BIAS+env->regwptr[UREG_I6];
./tools/qemu-xen/linux-user/signal.c:                err |= __put_user(env->fpr[i/2].l.lower, dst);
./tools/qemu-xen/linux-user/signal.c:                err |= __put_user(env->fpr[i/2].l.upper, dst);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->fsr, &(mcp->mc_fpregs.mcfpu_fsr));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gsr, &(mcp->mc_fpregs.mcfpu_gsr));
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->fprs, &(mcp->mc_fpregs.mcfpu_fprs));
./tools/qemu-xen/linux-user/signal.c:    env->active_tc.gpr[ 4] = sig;
./tools/qemu-xen/linux-user/signal.c:    env->active_tc.gpr[ 5] = frame_addr
./tools/qemu-xen/linux-user/signal.c:    env->active_tc.gpr[ 6] = frame_addr
./tools/qemu-xen/linux-user/signal.c:    env->active_tc.gpr[29] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:    env->active_tc.gpr[31] = frame_addr
./tools/qemu-xen/linux-user/signal.c:    env->active_tc.PC = env->active_tc.gpr[25] = ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:    frame_addr = env->active_tc.gpr[29];
./tools/qemu-xen/linux-user/signal.c:    env->active_tc.PC = env->CP0_EPC;
./tools/qemu-xen/linux-user/signal.c:    env->CP0_EPC = 0;
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[0], &sc->regs.r0);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[1], &sc->regs.r1);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[2], &sc->regs.r2);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[3], &sc->regs.r3);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[4], &sc->regs.r4);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[5], &sc->regs.r5);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[6], &sc->regs.r6);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[7], &sc->regs.r7);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[8], &sc->regs.r8);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[9], &sc->regs.r9);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[10], &sc->regs.r10);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[11], &sc->regs.r11);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[12], &sc->regs.r12);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[13], &sc->regs.r13);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[14], &sc->regs.r14);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[15], &sc->regs.r15);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[16], &sc->regs.r16);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[17], &sc->regs.r17);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[18], &sc->regs.r18);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[19], &sc->regs.r19);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[20], &sc->regs.r20);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[21], &sc->regs.r21);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[22], &sc->regs.r22);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[23], &sc->regs.r23);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[24], &sc->regs.r24);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[25], &sc->regs.r25);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[26], &sc->regs.r26);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[27], &sc->regs.r27);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[28], &sc->regs.r28);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[29], &sc->regs.r29);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[30], &sc->regs.r30);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->regs[31], &sc->regs.r31);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->sregs[SR_PC], &sc->regs.pc);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[0], &sc->regs.r0);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[1], &sc->regs.r1);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[2], &sc->regs.r2);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[3], &sc->regs.r3);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[4], &sc->regs.r4);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[5], &sc->regs.r5);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[6], &sc->regs.r6);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[7], &sc->regs.r7);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[8], &sc->regs.r8);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[9], &sc->regs.r9);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[10], &sc->regs.r10);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[11], &sc->regs.r11);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[12], &sc->regs.r12);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[13], &sc->regs.r13);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[14], &sc->regs.r14);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[15], &sc->regs.r15);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[16], &sc->regs.r16);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[17], &sc->regs.r17);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[18], &sc->regs.r18);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[19], &sc->regs.r19);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[20], &sc->regs.r20);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[21], &sc->regs.r21);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[22], &sc->regs.r22);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[23], &sc->regs.r23);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[24], &sc->regs.r24);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[25], &sc->regs.r25);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[26], &sc->regs.r26);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[27], &sc->regs.r27);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[28], &sc->regs.r28);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[29], &sc->regs.r29);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[30], &sc->regs.r30);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->regs[31], &sc->regs.r31);
./tools/qemu-xen/linux-user/signal.c:    __get_user(env->sregs[SR_PC], &sc->regs.pc);
./tools/qemu-xen/linux-user/signal.c:    abi_ulong sp = env->regs[1];
./tools/qemu-xen/linux-user/signal.c:        env->regs[15] = ((unsigned long)ka->sa_restorer)-8;
./tools/qemu-xen/linux-user/signal.c:        env->regs[15] = ((unsigned long)frame->tramp) - 8;
./tools/qemu-xen/linux-user/signal.c:    env->regs[1] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:    env->regs[5] = sig; /* Arg 0: signum */
./tools/qemu-xen/linux-user/signal.c:    env->regs[6] = 0;
./tools/qemu-xen/linux-user/signal.c:    env->regs[7] = frame_addr += offsetof(typeof(*frame), uc);
./tools/qemu-xen/linux-user/signal.c:    env->sregs[SR_PC] = (unsigned long)ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:    frame_addr = env->regs[R_SP];
./tools/qemu-xen/linux-user/signal.c:    env->regs[14] = env->sregs[SR_PC];
./tools/qemu-xen/linux-user/signal.c:    return env->regs[10];
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[0], &sc->regs.r0);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[1], &sc->regs.r1);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[2], &sc->regs.r2);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[3], &sc->regs.r3);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[4], &sc->regs.r4);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[5], &sc->regs.r5);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[6], &sc->regs.r6);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[7], &sc->regs.r7);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[8], &sc->regs.r8);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[9], &sc->regs.r9);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[10], &sc->regs.r10);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[11], &sc->regs.r11);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[12], &sc->regs.r12);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[13], &sc->regs.r13);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[14], &sc->usp);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->regs[15], &sc->regs.acr);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->pregs[PR_MOF], &sc->regs.mof);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->pregs[PR_SRP], &sc->regs.srp);
./tools/qemu-xen/linux-user/signal.c:	__put_user(env->pc, &sc->regs.erp);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[0], &sc->regs.r0);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[1], &sc->regs.r1);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[2], &sc->regs.r2);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[3], &sc->regs.r3);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[4], &sc->regs.r4);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[5], &sc->regs.r5);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[6], &sc->regs.r6);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[7], &sc->regs.r7);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[8], &sc->regs.r8);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[9], &sc->regs.r9);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[10], &sc->regs.r10);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[11], &sc->regs.r11);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[12], &sc->regs.r12);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[13], &sc->regs.r13);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[14], &sc->usp);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->regs[15], &sc->regs.acr);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->pregs[PR_MOF], &sc->regs.mof);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->pregs[PR_SRP], &sc->regs.srp);
./tools/qemu-xen/linux-user/signal.c:	__get_user(env->pc, &sc->regs.erp);
./tools/qemu-xen/linux-user/signal.c:	sp = (env->regs[R_SP] & ~3);
./tools/qemu-xen/linux-user/signal.c:	env->regs[R_SP] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:	env->regs[10] = sig;
./tools/qemu-xen/linux-user/signal.c:	env->pc = (unsigned long) ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:	env->pregs[PR_SRP] = frame_addr + offsetof(typeof(*frame), retcode);
./tools/qemu-xen/linux-user/signal.c:	frame_addr = env->regs[R_SP];
./tools/qemu-xen/linux-user/signal.c:	return env->regs[10];
./tools/qemu-xen/linux-user/signal.c:    sp = env->regs[15];
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->psw.mask, &sregs->regs.psw.mask);
./tools/qemu-xen/linux-user/signal.c:    __put_user(env->psw.addr, &sregs->regs.psw.addr);
./tools/qemu-xen/linux-user/signal.c:        __put_user(env->regs[i], &sregs->regs.gprs[i]);
./tools/qemu-xen/linux-user/signal.c:        __put_user(env->aregs[i], &sregs->regs.acrs[i]);
./tools/qemu-xen/linux-user/signal.c:        __put_user(env->fregs[i].ll, &sregs->fpregs.fprs[i]);
./tools/qemu-xen/linux-user/signal.c:            env->regs[14] = (unsigned long)
./tools/qemu-xen/linux-user/signal.c:            env->regs[14] = (unsigned long)
./tools/qemu-xen/linux-user/signal.c:    if (__put_user(env->regs[15], (abi_ulong *) frame)) {
./tools/qemu-xen/linux-user/signal.c:    env->regs[15] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:    env->psw.addr = (target_ulong) ka->_sa_handler | PSW_ADDR_AMODE;
./tools/qemu-xen/linux-user/signal.c:    env->regs[2] = sig; //map_signal(sig);
./tools/qemu-xen/linux-user/signal.c:    env->regs[3] = frame_addr += offsetof(typeof(*frame), sc);
./tools/qemu-xen/linux-user/signal.c:    env->regs[4] = 0; // FIXME: no clue... current->thread.trap_no;
./tools/qemu-xen/linux-user/signal.c:    env->regs[5] = 0; // FIXME: no clue... current->thread.prot_addr;
./tools/qemu-xen/linux-user/signal.c:    if (__put_user(env->regs[2], (int *) &frame->signo)) {
./tools/qemu-xen/linux-user/signal.c:        env->regs[14] = (unsigned long) ka->sa_restorer | PSW_ADDR_AMODE;
./tools/qemu-xen/linux-user/signal.c:        env->regs[14] = (unsigned long) frame->retcode | PSW_ADDR_AMODE;
./tools/qemu-xen/linux-user/signal.c:    if (__put_user(env->regs[15], (abi_ulong *) frame)) {
./tools/qemu-xen/linux-user/signal.c:    env->regs[15] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:    env->psw.addr = (target_ulong) ka->_sa_handler | PSW_ADDR_AMODE;
./tools/qemu-xen/linux-user/signal.c:    env->regs[2] = sig; //map_signal(sig);
./tools/qemu-xen/linux-user/signal.c:    env->regs[3] = frame_addr + offsetof(typeof(*frame), info);
./tools/qemu-xen/linux-user/signal.c:    env->regs[4] = frame_addr + offsetof(typeof(*frame), uc);
./tools/qemu-xen/linux-user/signal.c:        err |= __get_user(env->regs[i], &sc->regs.gprs[i]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->psw.mask, &sc->regs.psw.mask);
./tools/qemu-xen/linux-user/signal.c:    qemu_log("%s: sc->regs.psw.addr 0x%llx env->psw.addr 0x%llx\n",
./tools/qemu-xen/linux-user/signal.c:             (unsigned long long)env->psw.addr);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->psw.addr, &sc->regs.psw.addr);
./tools/qemu-xen/linux-user/signal.c:        err |= __get_user(env->aregs[i], &sc->regs.acrs[i]);
./tools/qemu-xen/linux-user/signal.c:        err |= __get_user(env->fregs[i].ll, &sc->fpregs.fprs[i]);
./tools/qemu-xen/linux-user/signal.c:    abi_ulong frame_addr = env->regs[15];
./tools/qemu-xen/linux-user/signal.c:    return env->regs[2];
./tools/qemu-xen/linux-user/signal.c:    abi_ulong frame_addr = env->regs[15];
./tools/qemu-xen/linux-user/signal.c:    return env->regs[2];
./tools/qemu-xen/linux-user/signal.c:    oldsp = env->gpr[1];
./tools/qemu-xen/linux-user/signal.c:    target_ulong msr = env->msr;
./tools/qemu-xen/linux-user/signal.c:    for (i = 0; i < ARRAY_SIZE(env->gpr); i++) {
./tools/qemu-xen/linux-user/signal.c:        if (__put_user(env->gpr[i], &frame->mc_gregs[i])) {
./tools/qemu-xen/linux-user/signal.c:    if (__put_user(env->nip, &frame->mc_gregs[TARGET_PT_NIP])
./tools/qemu-xen/linux-user/signal.c:        || __put_user(env->ctr, &frame->mc_gregs[TARGET_PT_CTR])
./tools/qemu-xen/linux-user/signal.c:        || __put_user(env->lr, &frame->mc_gregs[TARGET_PT_LNK])
./tools/qemu-xen/linux-user/signal.c:        || __put_user(env->xer, &frame->mc_gregs[TARGET_PT_XER]))
./tools/qemu-xen/linux-user/signal.c:    for (i = 0; i < ARRAY_SIZE(env->crf); i++) {
./tools/qemu-xen/linux-user/signal.c:        ccr |= env->crf[i] << (32 - ((i + 1) * 4));
./tools/qemu-xen/linux-user/signal.c:    if (env->insns_flags & PPC_ALTIVEC) {
./tools/qemu-xen/linux-user/signal.c:        for (i = 0; i < ARRAY_SIZE(env->avr); i++) {
./tools/qemu-xen/linux-user/signal.c:            ppc_avr_t *avr = &env->avr[i];
./tools/qemu-xen/linux-user/signal.c:        if (__put_user((uint32_t)env->spr[SPR_VRSAVE],
./tools/qemu-xen/linux-user/signal.c:    if (env->insns_flags & PPC_FLOAT) {
./tools/qemu-xen/linux-user/signal.c:        for (i = 0; i < ARRAY_SIZE(env->fpr); i++) {
./tools/qemu-xen/linux-user/signal.c:            if (__put_user(env->fpr[i], &frame->mc_fregs[i])) {
./tools/qemu-xen/linux-user/signal.c:        if (__put_user((uint64_t) env->fpscr, &frame->mc_fregs[32]))
./tools/qemu-xen/linux-user/signal.c:    if (env->insns_flags & PPC_SPE) {
./tools/qemu-xen/linux-user/signal.c:        for (i = 0; i < ARRAY_SIZE(env->gpr); i++) {
./tools/qemu-xen/linux-user/signal.c:            if (__put_user(env->gpr[i] >> 32, &frame->mc_vregs.spe[i])) {
./tools/qemu-xen/linux-user/signal.c:        for (i = 0; i < ARRAY_SIZE(env->gprh); i++) {
./tools/qemu-xen/linux-user/signal.c:            if (__put_user(env->gprh[i], &frame->mc_vregs.spe[i])) {
./tools/qemu-xen/linux-user/signal.c:        if (__put_user(env->spe_fscr, &frame->mc_vregs.spe[32]))
./tools/qemu-xen/linux-user/signal.c:        save_r2 = env->gpr[2];
./tools/qemu-xen/linux-user/signal.c:    for (i = 0; i < ARRAY_SIZE(env->gpr); i++) {
./tools/qemu-xen/linux-user/signal.c:        if (__get_user(env->gpr[i], &frame->mc_gregs[i])) {
./tools/qemu-xen/linux-user/signal.c:    if (__get_user(env->nip, &frame->mc_gregs[TARGET_PT_NIP])
./tools/qemu-xen/linux-user/signal.c:        || __get_user(env->ctr, &frame->mc_gregs[TARGET_PT_CTR])
./tools/qemu-xen/linux-user/signal.c:        || __get_user(env->lr, &frame->mc_gregs[TARGET_PT_LNK])
./tools/qemu-xen/linux-user/signal.c:        || __get_user(env->xer, &frame->mc_gregs[TARGET_PT_XER]))
./tools/qemu-xen/linux-user/signal.c:    for (i = 0; i < ARRAY_SIZE(env->crf); i++) {
./tools/qemu-xen/linux-user/signal.c:        env->crf[i] = (ccr >> (32 - ((i + 1) * 4))) & 0xf;
./tools/qemu-xen/linux-user/signal.c:        env->gpr[2] = save_r2;
./tools/qemu-xen/linux-user/signal.c:        env->msr = (env->msr & ~MSR_LE) | (msr & MSR_LE);
./tools/qemu-xen/linux-user/signal.c:    if (env->insns_flags & PPC_ALTIVEC) {
./tools/qemu-xen/linux-user/signal.c:        for (i = 0; i < ARRAY_SIZE(env->avr); i++) {
./tools/qemu-xen/linux-user/signal.c:            ppc_avr_t *avr = &env->avr[i];
./tools/qemu-xen/linux-user/signal.c:        if (__get_user(env->spr[SPR_VRSAVE],
./tools/qemu-xen/linux-user/signal.c:    if (env->insns_flags & PPC_FLOAT) {
./tools/qemu-xen/linux-user/signal.c:        for (i = 0; i < ARRAY_SIZE(env->fpr); i++) {
./tools/qemu-xen/linux-user/signal.c:            if (__get_user(env->fpr[i], &frame->mc_fregs[i])) {
./tools/qemu-xen/linux-user/signal.c:        env->fpscr = (uint32_t) fpscr;
./tools/qemu-xen/linux-user/signal.c:    if (env->insns_flags & PPC_SPE) {
./tools/qemu-xen/linux-user/signal.c:        for (i = 0; i < ARRAY_SIZE(env->gpr); i++) {
./tools/qemu-xen/linux-user/signal.c:            env->gpr[i] = ((uint64_t)hi << 32) | ((uint32_t) env->gpr[i]);
./tools/qemu-xen/linux-user/signal.c:        for (i = 0; i < ARRAY_SIZE(env->gprh); i++) {
./tools/qemu-xen/linux-user/signal.c:            if (__get_user(env->gprh[i], &frame->mc_vregs.spe[i])) {
./tools/qemu-xen/linux-user/signal.c:        if (__get_user(env->spe_fscr, &frame->mc_vregs.spe[32]))
./tools/qemu-xen/linux-user/signal.c:    env->lr = (target_ulong) h2g(frame->mctx.tramp);
./tools/qemu-xen/linux-user/signal.c:    env->fpscr = 0;
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gpr[1], (target_ulong *)(uintptr_t) newsp);
./tools/qemu-xen/linux-user/signal.c:    env->gpr[1] = newsp;
./tools/qemu-xen/linux-user/signal.c:    env->gpr[3] = signal;
./tools/qemu-xen/linux-user/signal.c:    env->gpr[4] = (target_ulong) h2g(sc);
./tools/qemu-xen/linux-user/signal.c:    env->nip = (target_ulong) ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:    env->msr &= ~MSR_LE;
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(sas_ss_flags(env->gpr[1]),
./tools/qemu-xen/linux-user/signal.c:    env->lr = (target_ulong) h2g(frame->tramp);
./tools/qemu-xen/linux-user/signal.c:    env->fpscr = 0;
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->gpr[1], (target_ulong *)(uintptr_t) newsp);
./tools/qemu-xen/linux-user/signal.c:    env->gpr[1] = newsp;
./tools/qemu-xen/linux-user/signal.c:    env->gpr[3] = (target_ulong) signal;
./tools/qemu-xen/linux-user/signal.c:    env->gpr[4] = (target_ulong) h2g(&rt_sf->info);
./tools/qemu-xen/linux-user/signal.c:    env->gpr[5] = (target_ulong) h2g(&rt_sf->uc);
./tools/qemu-xen/linux-user/signal.c:    env->gpr[6] = (target_ulong) h2g(rt_sf);
./tools/qemu-xen/linux-user/signal.c:    env->nip = (target_ulong) ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:    env->msr &= ~MSR_LE;
./tools/qemu-xen/linux-user/signal.c:    sc_addr = env->gpr[1] + SIGNAL_FRAMESIZE;
./tools/qemu-xen/linux-user/signal.c:    rt_sf_addr = env->gpr[1] + SIGNAL_FRAMESIZE + 16;
./tools/qemu-xen/linux-user/signal.c:                   0, env->gpr[1]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[7], &sc->sc_usp);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[0], &sc->sc_d0);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[1], &sc->sc_d1);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[0], &sc->sc_a0);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[1], &sc->sc_a1);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->sr, &sc->sc_sr);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->pc, &sc->sc_pc);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[7], &sc->sc_usp);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[1], &sc->sc_d1);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[0], &sc->sc_a0);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[1], &sc->sc_a1);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->pc, &sc->sc_pc);
./tools/qemu-xen/linux-user/signal.c:    env->sr = (env->sr & 0xff00) | (temp & 0xff);
./tools/qemu-xen/linux-user/signal.c:    env->aregs[7] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:    env->pc = ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[0], &gregs[0]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[1], &gregs[1]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[2], &gregs[2]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[3], &gregs[3]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[4], &gregs[4]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[5], &gregs[5]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[6], &gregs[6]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->dregs[7], &gregs[7]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[0], &gregs[8]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[1], &gregs[9]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[2], &gregs[10]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[3], &gregs[11]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[4], &gregs[12]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[5], &gregs[13]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[6], &gregs[14]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->aregs[7], &gregs[15]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->pc, &gregs[16]);
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->sr, &gregs[17]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[0], &gregs[0]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[1], &gregs[1]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[2], &gregs[2]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[3], &gregs[3]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[4], &gregs[4]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[5], &gregs[5]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[6], &gregs[6]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->dregs[7], &gregs[7]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[0], &gregs[8]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[1], &gregs[9]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[2], &gregs[10]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[3], &gregs[11]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[4], &gregs[12]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[5], &gregs[13]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[6], &gregs[14]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->aregs[7], &gregs[15]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->pc, &gregs[16]);
./tools/qemu-xen/linux-user/signal.c:    env->sr = (env->sr & 0xff00) | (temp & 0xff);
./tools/qemu-xen/linux-user/signal.c:    *pd0 = env->dregs[0];
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(sas_ss_flags(env->aregs[7]),
./tools/qemu-xen/linux-user/signal.c:    env->aregs[7] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:    env->pc = ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:    abi_ulong frame_addr = env->aregs[7] - 4;
./tools/qemu-xen/linux-user/signal.c:    abi_ulong frame_addr = env->aregs[7] - 4;
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(env->pc, &sc->sc_pc);
./tools/qemu-xen/linux-user/signal.c:        err |= __put_user(env->ir[i], &sc->sc_regs[i]);
./tools/qemu-xen/linux-user/signal.c:        err |= __put_user(env->fir[i], &sc->sc_fpregs[i]);
./tools/qemu-xen/linux-user/signal.c:    err |= __get_user(env->pc, &sc->sc_pc);
./tools/qemu-xen/linux-user/signal.c:        err |= __get_user(env->ir[i], &sc->sc_regs[i]);
./tools/qemu-xen/linux-user/signal.c:        err |= __get_user(env->fir[i], &sc->sc_fpregs[i]);
./tools/qemu-xen/linux-user/signal.c:    abi_ulong sp = env->ir[IR_SP];
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_RA] = r26;
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_PV] = env->pc = ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_A0] = sig;
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_A1] = 0;
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_A2] = frame_addr + offsetof(struct target_sigframe, sc);
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_SP] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:    err |= __put_user(sas_ss_flags(env->ir[IR_SP]),
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_RA] = r26;
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_PV] = env->pc = ka->_sa_handler;
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_A0] = sig;
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_A1] = frame_addr + offsetof(struct target_rt_sigframe, info);
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_A2] = frame_addr + offsetof(struct target_rt_sigframe, uc);
./tools/qemu-xen/linux-user/signal.c:    env->ir[IR_SP] = frame_addr;
./tools/qemu-xen/linux-user/signal.c:    abi_ulong sc_addr = env->ir[IR_A0];
./tools/qemu-xen/linux-user/signal.c:    return env->ir[IR_V0];
./tools/qemu-xen/linux-user/signal.c:    abi_ulong frame_addr = env->ir[IR_A0];
./tools/qemu-xen/linux-user/signal.c:                       0, env->ir[IR_SP]) == -EFAULT) {
./tools/qemu-xen/linux-user/signal.c:    return env->ir[IR_V0];
./tools/qemu-xen/linux-user/signal.c:    TaskState *ts = cpu_env->opaque;
./tools/qemu-xen/linux-user/signal.c:            if (env->eflags & VM_MASK)
./tools/qemu-xen/linux-user/flatload.c: * create_flat_tables() parses the env- and arg-strings in new user
./tools/qemu-xen/blockdev.c:                          bs->drv->format_name, NULL, -1, flags);
./tools/qemu-xen/target-lm32/translate.c:    if (!(dc->env->features & LM32_FEATURE_DIVIDE)) {
./tools/qemu-xen/target-lm32/translate.c:    if (!(dc->env->features & LM32_FEATURE_DIVIDE)) {
./tools/qemu-xen/target-lm32/translate.c:    if (!(dc->env->features & LM32_FEATURE_MULTIPLY)) {
./tools/qemu-xen/target-lm32/translate.c:    if (!(dc->env->features & LM32_FEATURE_SIGN_EXTEND)) {
./tools/qemu-xen/target-lm32/translate.c:    if (!(dc->env->features & LM32_FEATURE_SIGN_EXTEND)) {
./tools/qemu-xen/target-lm32/translate.c:    if (!(dc->env->features & LM32_FEATURE_SHIFT)) {
./tools/qemu-xen/target-lm32/translate.c:    if (!(dc->env->features & LM32_FEATURE_SHIFT)) {
./tools/qemu-xen/target-lm32/translate.c:    if (!(dc->env->features & LM32_FEATURE_SHIFT)) {
./tools/qemu-xen/target-lm32/translate.c:        if (dc->env->num_bps <= no) {
./tools/qemu-xen/target-lm32/translate.c:        if (dc->env->num_wps <= no) {
./tools/qemu-xen/target-lm32/translate.c:    if (unlikely(!QTAILQ_EMPTY(&env->breakpoints))) {
./tools/qemu-xen/target-lm32/translate.c:        QTAILQ_FOREACH(bp, &env->breakpoints, entry) {
./tools/qemu-xen/target-lm32/translate.c:    dc->singlestep_enabled = env->singlestep_enabled;
./tools/qemu-xen/target-lm32/translate.c:         && !env->singlestep_enabled
./tools/qemu-xen/target-lm32/translate.c:    if (unlikely(env->singlestep_enabled)) {
./tools/qemu-xen/target-lm32/translate.c:                env->pc, lookup_symbol(env->pc));
./tools/qemu-xen/target-lm32/translate.c:             env->ie,
./tools/qemu-xen/target-lm32/translate.c:             (env->ie & IE_IE) ? 1 : 0,
./tools/qemu-xen/target-lm32/translate.c:             (env->ie & IE_EIE) ? 1 : 0,
./tools/qemu-xen/target-lm32/translate.c:             (env->ie & IE_BIE) ? 1 : 0,
./tools/qemu-xen/target-lm32/translate.c:             lm32_pic_get_im(env->pic_state),
./tools/qemu-xen/target-lm32/translate.c:             lm32_pic_get_ip(env->pic_state));
./tools/qemu-xen/target-lm32/translate.c:             env->eba,
./tools/qemu-xen/target-lm32/translate.c:             env->deba);
./tools/qemu-xen/target-lm32/translate.c:        cpu_fprintf(f, "r%2.2d=%8.8x ", i, env->regs[i]);
./tools/qemu-xen/target-lm32/translate.c:    env->pc = gen_opc_pc[pc_pos];
./tools/qemu-xen/target-lm32/op_helper.c:    env->exception_index = index;
./tools/qemu-xen/target-lm32/op_helper.c:    env->halted = 1;
./tools/qemu-xen/target-lm32/op_helper.c:    env->exception_index = EXCP_HLT;
./tools/qemu-xen/target-lm32/op_helper.c:    lm32_pic_set_im(env->pic_state, im);
./tools/qemu-xen/target-lm32/op_helper.c:    lm32_pic_set_ip(env->pic_state, im);
./tools/qemu-xen/target-lm32/op_helper.c:    lm32_juart_set_jtx(env->juart_state, jtx);
./tools/qemu-xen/target-lm32/op_helper.c:    lm32_juart_set_jrx(env->juart_state, jrx);
./tools/qemu-xen/target-lm32/op_helper.c:    return lm32_pic_get_im(env->pic_state);
./tools/qemu-xen/target-lm32/op_helper.c:    return lm32_pic_get_ip(env->pic_state);
./tools/qemu-xen/target-lm32/op_helper.c:    return lm32_juart_get_jtx(env->juart_state);
./tools/qemu-xen/target-lm32/op_helper.c:    return lm32_juart_get_jrx(env->juart_state);
./tools/qemu-xen/target-lm32/helper.c:    if (env->flags & LM32_FLAG_IGNORE_MSB) {
./tools/qemu-xen/target-lm32/helper.c:            "exception at pc=%x type=%x\n", env->pc, env->exception_index);
./tools/qemu-xen/target-lm32/helper.c:    switch (env->exception_index) {
./tools/qemu-xen/target-lm32/helper.c:        env->regs[R_EA] = env->pc;
./tools/qemu-xen/target-lm32/helper.c:        env->ie |= (env->ie & IE_IE) ? IE_EIE : 0;
./tools/qemu-xen/target-lm32/helper.c:        env->ie &= ~IE_IE;
./tools/qemu-xen/target-lm32/helper.c:        if (env->dc & DC_RE) {
./tools/qemu-xen/target-lm32/helper.c:            env->pc = env->deba + (env->exception_index * 32);
./tools/qemu-xen/target-lm32/helper.c:            env->pc = env->eba + (env->exception_index * 32);
./tools/qemu-xen/target-lm32/helper.c:        env->regs[R_BA] = env->pc;
./tools/qemu-xen/target-lm32/helper.c:        env->ie |= (env->ie & IE_IE) ? IE_BIE : 0;
./tools/qemu-xen/target-lm32/helper.c:        env->ie &= ~IE_IE;
./tools/qemu-xen/target-lm32/helper.c:        env->pc = env->deba + (env->exception_index * 32);
./tools/qemu-xen/target-lm32/helper.c:                  env->exception_index);
./tools/qemu-xen/target-lm32/helper.c:    env->features = def->features;
./tools/qemu-xen/target-lm32/helper.c:    env->num_bps = def->num_breakpoints;
./tools/qemu-xen/target-lm32/helper.c:    env->num_wps = def->num_watchpoints;
./tools/qemu-xen/target-lm32/helper.c:    env->cfg = cfg_by_def(def);
./tools/qemu-xen/target-lm32/helper.c:    env->flags = 0;
./tools/qemu-xen/target-lm32/helper.c:        env->flags |= LM32_FLAG_IGNORE_MSB;
./tools/qemu-xen/target-lm32/helper.c:        env->flags &= ~LM32_FLAG_IGNORE_MSB;
./tools/qemu-xen/target-lm32/helper.c:        qemu_log("CPU Reset (CPU %d)\n", env->cpu_index);
./tools/qemu-xen/arm-semi.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/arm-semi.c:        env->regs[0] = ret;
./tools/qemu-xen/arm-semi.c:        switch (env->regs[0]) {
./tools/qemu-xen/arm-semi.c:            env->regs[0] = arm_semi_syscall_len - ret;
./tools/qemu-xen/arm-semi.c:            env->regs[0] = 0;
./tools/qemu-xen/arm-semi.c:            env->regs[0] = ret;
./tools/qemu-xen/arm-semi.c:    cpu_memory_rw_debug(env, env->regs[13]-64+32, (uint8_t *)&size, 4, 0);
./tools/qemu-xen/arm-semi.c:    env->regs[0] = be32_to_cpu(size);
./tools/qemu-xen/arm-semi.c:    ((TaskState *)env->opaque)->swi_errno = err;
./tools/qemu-xen/arm-semi.c:    TaskState *ts = env->opaque;
./tools/qemu-xen/arm-semi.c:    nr = env->regs[0];
./tools/qemu-xen/arm-semi.c:    args = env->regs[1];
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/arm-semi.c:                return env->regs[0];
./tools/qemu-xen/arm-semi.c:            ret = env->regs[0];
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/arm-semi.c:			   ARG(0), env->regs[13]-64);
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/arm-semi.c:            ret = env->regs[0];
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/arm-semi.c:            return env->regs[0];
./tools/qemu-xen/xen-all.c:    return irq_num + ((pci_dev->devfn >> 3) << 2);
./tools/qemu-xen/xen-all.c:    env->halted = 1;
./extras/mini-os/blkfront.c:    int fd = dev->fd;
./extras/mini-os/blkfront.c:    mask_evtchn(dev->evtchn);
./extras/mini-os/blkfront.c:    free(dev->backend);
./extras/mini-os/blkfront.c:    gnttab_end_access(dev->ring_ref);
./extras/mini-os/blkfront.c:    free_page(dev->ring.sring);
./extras/mini-os/blkfront.c:    unbind_evtchn(dev->evtchn);
./extras/mini-os/blkfront.c:    free(dev->nodename);
./extras/mini-os/blkfront.c:    dev->nodename = strdup(nodename);
./extras/mini-os/blkfront.c:    dev->fd = -1;
./extras/mini-os/blkfront.c:    dev->dom = xenbus_read_integer(path); 
./extras/mini-os/blkfront.c:    evtchn_alloc_unbound(dev->dom, blkfront_handler, dev, &dev->evtchn);
./extras/mini-os/blkfront.c:    FRONT_RING_INIT(&dev->ring, s, PAGE_SIZE);
./extras/mini-os/blkfront.c:    dev->ring_ref = gnttab_grant_access(dev->dom,virt_to_mfn(s),0);
./extras/mini-os/blkfront.c:    dev->events = NULL;
./extras/mini-os/blkfront.c:                dev->ring_ref);
./extras/mini-os/blkfront.c:                "event-channel", "%u", dev->evtchn);
./extras/mini-os/blkfront.c:    msg = xenbus_read(XBT_NIL, path, &dev->backend);
./extras/mini-os/blkfront.c:    printk("backend at %s\n", dev->backend);
./extras/mini-os/blkfront.c:    dev->handle = strtoul(strrchr(nodename, '/')+1, NULL, 0);
./extras/mini-os/blkfront.c:        char path[strlen(dev->backend) + 1 + 19 + 1];
./extras/mini-os/blkfront.c:        snprintf(path, sizeof(path), "%s/mode", dev->backend);
./extras/mini-os/blkfront.c:            dev->info.mode = O_RDWR;
./extras/mini-os/blkfront.c:            dev->info.mode = O_RDONLY;
./extras/mini-os/blkfront.c:        snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/blkfront.c:        xenbus_watch_path_token(XBT_NIL, path, path, &dev->events);
./extras/mini-os/blkfront.c:            msg = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/blkfront.c:        snprintf(path, sizeof(path), "%s/info", dev->backend);
./extras/mini-os/blkfront.c:        dev->info.info = xenbus_read_integer(path);
./extras/mini-os/blkfront.c:        snprintf(path, sizeof(path), "%s/sectors", dev->backend);
./extras/mini-os/blkfront.c:        dev->info.sectors = xenbus_read_integer(path);
./extras/mini-os/blkfront.c:        snprintf(path, sizeof(path), "%s/sector-size", dev->backend);
./extras/mini-os/blkfront.c:        dev->info.sector_size = xenbus_read_integer(path);
./extras/mini-os/blkfront.c:        snprintf(path, sizeof(path), "%s/feature-barrier", dev->backend);
./extras/mini-os/blkfront.c:        dev->info.barrier = xenbus_read_integer(path);
./extras/mini-os/blkfront.c:        snprintf(path, sizeof(path), "%s/feature-flush-cache", dev->backend);
./extras/mini-os/blkfront.c:        dev->info.flush = xenbus_read_integer(path);
./extras/mini-os/blkfront.c:        *info = dev->info;
./extras/mini-os/blkfront.c:    unmask_evtchn(dev->evtchn);
./extras/mini-os/blkfront.c:    printk("%u sectors of %u bytes\n", dev->info.sectors, dev->info.sector_size);
./extras/mini-os/blkfront.c:    char path[strlen(dev->backend) + 1 + 5 + 1];
./extras/mini-os/blkfront.c:    char nodename[strlen(dev->nodename) + 1 + 5 + 1];
./extras/mini-os/blkfront.c:    printk("close blk: backend=%s node=%s\n", dev->backend, dev->nodename);
./extras/mini-os/blkfront.c:    snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/blkfront.c:    snprintf(nodename, sizeof(nodename), "%s/state", dev->nodename);
./extras/mini-os/blkfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/blkfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/blkfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/blkfront.c:    if (RING_FULL(&dev->ring)) {
./extras/mini-os/blkfront.c:	    if (!RING_FULL(&dev->ring))
./extras/mini-os/blkfront.c:    ASSERT(!(aiocbp->aio_offset & (dev->info.sector_size-1)));
./extras/mini-os/blkfront.c:    ASSERT(!(aiocbp->aio_nbytes & (dev->info.sector_size-1)));
./extras/mini-os/blkfront.c:    ASSERT(!((uintptr_t) aiocbp->aio_buf & (dev->info.sector_size-1)));
./extras/mini-os/blkfront.c:    i = dev->ring.req_prod_pvt;
./extras/mini-os/blkfront.c:    req = RING_GET_REQUEST(&dev->ring, i);
./extras/mini-os/blkfront.c:    req->handle = dev->handle;
./extras/mini-os/blkfront.c:            gnttab_grant_access(dev->dom, virtual_to_mfn(data), write);
./extras/mini-os/blkfront.c:    dev->ring.req_prod_pvt = i + 1;
./extras/mini-os/blkfront.c:    RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(&dev->ring, notify);
./extras/mini-os/blkfront.c:    if(notify) notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/blkfront.c:    i = dev->ring.req_prod_pvt;
./extras/mini-os/blkfront.c:    req = RING_GET_REQUEST(&dev->ring, i);
./extras/mini-os/blkfront.c:    req->handle = dev->handle;
./extras/mini-os/blkfront.c:    dev->ring.req_prod_pvt = i + 1;
./extras/mini-os/blkfront.c:    RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(&dev->ring, notify);
./extras/mini-os/blkfront.c:    if (notify) notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/blkfront.c:    if (dev->info.mode == O_RDWR) {
./extras/mini-os/blkfront.c:        if (dev->info.barrier == 1)
./extras/mini-os/blkfront.c:        if (dev->info.flush == 1)
./extras/mini-os/blkfront.c:	if (RING_FREE_REQUESTS(&dev->ring) == RING_SIZE(&dev->ring))
./extras/mini-os/blkfront.c:    if (dev->fd != -1) {
./extras/mini-os/blkfront.c:        files[dev->fd].read = 0;
./extras/mini-os/blkfront.c:    rp = dev->ring.sring->rsp_prod;
./extras/mini-os/blkfront.c:    cons = dev->ring.rsp_cons;
./extras/mini-os/blkfront.c:	rsp = RING_GET_RESPONSE(&dev->ring, cons);
./extras/mini-os/blkfront.c:        dev->ring.rsp_cons = ++cons;
./extras/mini-os/blkfront.c:        if (dev->ring.rsp_cons != cons)
./extras/mini-os/blkfront.c:    RING_FINAL_CHECK_FOR_RESPONSES(&dev->ring, more);
./extras/mini-os/blkfront.c:    dev->fd = alloc_fd(FTYPE_BLK);
./extras/mini-os/blkfront.c:    printk("blk_open(%s) -> %d\n", dev->nodename, dev->fd);
./extras/mini-os/blkfront.c:    files[dev->fd].blk.dev = dev;
./extras/mini-os/blkfront.c:    return dev->fd;
./extras/mini-os/arch/x86/time.c:    tv->tv_sec = shadow_ts.tv_sec;
./extras/mini-os/arch/x86/time.c:    tv->tv_sec += NSEC_TO_SEC(nsec);
./extras/mini-os/arch/x86/time.c:    tv->tv_usec = NSEC_TO_USEC(nsec % 1000000000UL);
./extras/mini-os/arch/ia64/time.c:	tv->tv_sec = os_time.tv_sec;			/* seconds */
./extras/mini-os/arch/ia64/time.c:	tv->tv_usec = NSEC_TO_USEC(os_time.tv_nsec);	/* microseconds */
./extras/mini-os/lib/sys.c:    dev->fd = alloc_fd(FTYPE_CONSOLE);
./extras/mini-os/lib/sys.c:    files[dev->fd].cons.dev = dev;
./extras/mini-os/lib/sys.c:    printk("fd(%d) = posix_openpt\n", dev->fd);
./extras/mini-os/lib/sys.c:    return(dev->fd);
./extras/mini-os/lib/sys.c:    dev->fd = alloc_fd(FTYPE_SAVEFILE);
./extras/mini-os/lib/sys.c:    files[dev->fd].cons.dev = dev;
./extras/mini-os/lib/sys.c:    printk("fd(%d) = open_savefile\n", dev->fd);
./extras/mini-os/lib/sys.c:    return(dev->fd);
./extras/mini-os/fbfront.c:    int fd = dev->fd;
./extras/mini-os/fbfront.c:    mask_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    free(dev->backend);
./extras/mini-os/fbfront.c:    free_page(dev->page);
./extras/mini-os/fbfront.c:    unbind_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    free(dev->nodename);
./extras/mini-os/fbfront.c:    dev->nodename = strdup(nodename);
./extras/mini-os/fbfront.c:    dev->fd = -1;
./extras/mini-os/fbfront.c:    dev->dom = xenbus_read_integer(path); 
./extras/mini-os/fbfront.c:    evtchn_alloc_unbound(dev->dom, kbdfront_handler, dev, &dev->evtchn);
./extras/mini-os/fbfront.c:    dev->page = s = (struct xenkbd_page*) alloc_page();
./extras/mini-os/fbfront.c:    dev->events = NULL;
./extras/mini-os/fbfront.c:    err = xenbus_printf(xbt, nodename, "event-channel", "%u", dev->evtchn);
./extras/mini-os/fbfront.c:    msg = xenbus_read(XBT_NIL, path, &dev->backend);
./extras/mini-os/fbfront.c:    printk("backend at %s\n", dev->backend);
./extras/mini-os/fbfront.c:        char path[strlen(dev->backend) + 1 + 6 + 1];
./extras/mini-os/fbfront.c:        snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/fbfront.c:        xenbus_watch_path_token(XBT_NIL, path, path, &dev->events);
./extras/mini-os/fbfront.c:            err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/fbfront.c:        printk("%s connected\n", dev->backend);
./extras/mini-os/fbfront.c:    unmask_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    struct xenkbd_page *page = dev->page;
./extras/mini-os/fbfront.c:    if (dev->fd != -1) {
./extras/mini-os/fbfront.c:        files[dev->fd].read = 0;
./extras/mini-os/fbfront.c:    notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    if (cons != prod && dev->fd != -1)
./extras/mini-os/fbfront.c:        files[dev->fd].read = 1;
./extras/mini-os/fbfront.c:    char path[strlen(dev->backend) + 1 + 5 + 1];
./extras/mini-os/fbfront.c:    char nodename[strlen(dev->nodename) + 1 + 5 + 1];
./extras/mini-os/fbfront.c:    printk("close kbd: backend at %s\n",dev->backend);
./extras/mini-os/fbfront.c:    snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/fbfront.c:    snprintf(nodename, sizeof(nodename), "%s/state", dev->nodename);
./extras/mini-os/fbfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/fbfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/fbfront.c:    err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/fbfront.c:    dev->fd = alloc_fd(FTYPE_KBD);
./extras/mini-os/fbfront.c:    printk("kbd_open(%s) -> %d\n", dev->nodename, dev->fd);
./extras/mini-os/fbfront.c:    files[dev->fd].kbd.dev = dev;
./extras/mini-os/fbfront.c:    return dev->fd;
./extras/mini-os/fbfront.c:    int fd = dev->fd;
./extras/mini-os/fbfront.c:    mask_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    free(dev->backend);
./extras/mini-os/fbfront.c:    free_page(dev->page);
./extras/mini-os/fbfront.c:    unbind_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    free(dev->nodename);
./extras/mini-os/fbfront.c:    struct xenfb_page *page = dev->page;
./extras/mini-os/fbfront.c:    if (dev->fd != -1) {
./extras/mini-os/fbfront.c:        files[dev->fd].read = 0;
./extras/mini-os/fbfront.c:    notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    if (cons != prod && dev->fd != -1)
./extras/mini-os/fbfront.c:        files[dev->fd].read = 1;
./extras/mini-os/fbfront.c:    dev->nodename = strdup(nodename);
./extras/mini-os/fbfront.c:    dev->fd = -1;
./extras/mini-os/fbfront.c:    dev->dom = xenbus_read_integer(path); 
./extras/mini-os/fbfront.c:    evtchn_alloc_unbound(dev->dom, fbfront_handler, dev, &dev->evtchn);
./extras/mini-os/fbfront.c:    dev->page = s = (struct xenfb_page*) alloc_page();
./extras/mini-os/fbfront.c:    dev->width = s->width = width;
./extras/mini-os/fbfront.c:    dev->height = s->height = height;
./extras/mini-os/fbfront.c:    dev->depth = s->depth = depth;
./extras/mini-os/fbfront.c:    dev->stride = s->line_length = stride;
./extras/mini-os/fbfront.c:    dev->mem_length = s->mem_length = n * PAGE_SIZE;
./extras/mini-os/fbfront.c:    dev->offset = 0;
./extras/mini-os/fbfront.c:    dev->events = NULL;
./extras/mini-os/fbfront.c:    err = xenbus_printf(xbt, nodename, "event-channel", "%u", dev->evtchn);
./extras/mini-os/fbfront.c:    msg = xenbus_read(XBT_NIL, path, &dev->backend);
./extras/mini-os/fbfront.c:    printk("backend at %s\n", dev->backend);
./extras/mini-os/fbfront.c:        char path[strlen(dev->backend) + 1 + 14 + 1];
./extras/mini-os/fbfront.c:        snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/fbfront.c:        xenbus_watch_path_token(XBT_NIL, path, path, &dev->events);
./extras/mini-os/fbfront.c:            err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/fbfront.c:        printk("%s connected\n", dev->backend);
./extras/mini-os/fbfront.c:        snprintf(path, sizeof(path), "%s/request-update", dev->backend);
./extras/mini-os/fbfront.c:        dev->request_update = xenbus_read_integer(path);
./extras/mini-os/fbfront.c:    unmask_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    struct xenfb_page *page = dev->page;
./extras/mini-os/fbfront.c:    notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/fbfront.c:    if (dev->request_update <= 0)
./extras/mini-os/fbfront.c:    if (x + width > dev->width)
./extras/mini-os/fbfront.c:        width = dev->width - x;
./extras/mini-os/fbfront.c:    if (y + height > dev->height)
./extras/mini-os/fbfront.c:        height = dev->height - y;
./extras/mini-os/fbfront.c:    dev->width  = resize.width = width;
./extras/mini-os/fbfront.c:    dev->height = resize.height = height;
./extras/mini-os/fbfront.c:    dev->stride = resize.stride = stride;
./extras/mini-os/fbfront.c:    dev->depth  = resize.depth = depth;
./extras/mini-os/fbfront.c:    dev->offset = resize.offset = offset;
./extras/mini-os/fbfront.c:    char path[strlen(dev->backend) + 1 + 5 + 1];
./extras/mini-os/fbfront.c:    char nodename[strlen(dev->nodename) + 1 + 5 + 1];
./extras/mini-os/fbfront.c:    printk("close fb: backend at %s\n",dev->backend);
./extras/mini-os/fbfront.c:    snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/fbfront.c:    snprintf(nodename, sizeof(nodename), "%s/state", dev->nodename);
./extras/mini-os/fbfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/fbfront.c:        xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/fbfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/fbfront.c:    dev->fd = alloc_fd(FTYPE_FB);
./extras/mini-os/fbfront.c:    printk("fb_open(%s) -> %d\n", dev->nodename, dev->fd);
./extras/mini-os/fbfront.c:    files[dev->fd].fb.dev = dev;
./extras/mini-os/fbfront.c:    return dev->fd;
./extras/mini-os/pcifront.c:    mask_evtchn(dev->evtchn);
./extras/mini-os/pcifront.c:    gnttab_end_access(dev->info_ref);
./extras/mini-os/pcifront.c:    free_page(dev->info);
./extras/mini-os/pcifront.c:    unbind_evtchn(dev->evtchn);
./extras/mini-os/pcifront.c:    free(dev->backend);
./extras/mini-os/pcifront.c:    free(dev->nodename);
./extras/mini-os/pcifront.c:               (err = xenbus_read(XBT_NIL, pcidev->backend, &msg)) == NULL) {
./extras/mini-os/pcifront.c:    dev->nodename = strdup(nodename);
./extras/mini-os/pcifront.c:    dev->dom = dom;
./extras/mini-os/pcifront.c:    evtchn_alloc_unbound(dev->dom, pcifront_handler, dev, &dev->evtchn);
./extras/mini-os/pcifront.c:    dev->info = (struct xen_pci_sharedinfo*) alloc_page();
./extras/mini-os/pcifront.c:    memset(dev->info,0,PAGE_SIZE);
./extras/mini-os/pcifront.c:    dev->info_ref = gnttab_grant_access(dev->dom,virt_to_mfn(dev->info),0);
./extras/mini-os/pcifront.c:    dev->events = NULL;
./extras/mini-os/pcifront.c:                dev->info_ref);
./extras/mini-os/pcifront.c:                "event-channel", "%u", dev->evtchn);
./extras/mini-os/pcifront.c:    msg = xenbus_read(XBT_NIL, path, &dev->backend);
./extras/mini-os/pcifront.c:    printk("backend at %s\n", dev->backend);
./extras/mini-os/pcifront.c:        char path[strlen(dev->backend) + 1 + 5 + 1];
./extras/mini-os/pcifront.c:        snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/pcifront.c:        xenbus_watch_path_token(XBT_NIL, path, path, &dev->events);
./extras/mini-os/pcifront.c:            err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/pcifront.c:    unmask_evtchn(dev->evtchn);
./extras/mini-os/pcifront.c:    len = strlen(dev->backend) + 1 + 5 + 10 + 1;
./extras/mini-os/pcifront.c:    snprintf(path, len, "%s/num_devs", dev->backend);
./extras/mini-os/pcifront.c:        snprintf(path, len, "%s/dev-%d", dev->backend, i);
./extras/mini-os/pcifront.c:    char path[strlen(dev->backend) + 1 + 5 + 1];
./extras/mini-os/pcifront.c:    char nodename[strlen(dev->nodename) + 1 + 5 + 1];
./extras/mini-os/pcifront.c:    printk("close pci: backend at %s\n",dev->backend);
./extras/mini-os/pcifront.c:    snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/pcifront.c:    snprintf(nodename, sizeof(nodename), "%s/state", dev->nodename);
./extras/mini-os/pcifront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/pcifront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/pcifront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/pcifront.c:    char path[strlen(dev->backend) + 1 + 5 + 10 + 1];
./extras/mini-os/pcifront.c:    snprintf(path, sizeof(path), "%s/num_devs", dev->backend);
./extras/mini-os/pcifront.c:        snprintf(path, sizeof(path), "%s/dev-%d", dev->backend, i);
./extras/mini-os/pcifront.c:            snprintf(path, sizeof(path), "%s/vdev-%d", dev->backend, i);
./extras/mini-os/pcifront.c:    dev->info->op = *op;
./extras/mini-os/pcifront.c:    set_bit(_XEN_PCIF_active, (void*) &dev->info->flags);
./extras/mini-os/pcifront.c:    notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/pcifront.c:    wait_event(pcifront_queue, !test_bit(_XEN_PCIF_active, (void*) &dev->info->flags));
./extras/mini-os/pcifront.c:    *op = dev->info->op;
./extras/mini-os/netfront.c:    rp = dev->rx.sring->rsp_prod;
./extras/mini-os/netfront.c:    cons = dev->rx.rsp_cons;
./extras/mini-os/netfront.c:        rx = RING_GET_RESPONSE(&dev->rx, cons);
./extras/mini-os/netfront.c:        buf = &dev->rx_buffers[id];
./extras/mini-os/netfront.c:	    if (dev->netif_rx == NETIF_SELECT_RX) {
./extras/mini-os/netfront.c:		if (len > dev->len)
./extras/mini-os/netfront.c:		    len = dev->len;
./extras/mini-os/netfront.c:		memcpy(dev->data, page+rx->offset, len);
./extras/mini-os/netfront.c:		dev->rlen = len;
./extras/mini-os/netfront.c:		dev->netif_rx(page+rx->offset,rx->status);
./extras/mini-os/netfront.c:    dev->rx.rsp_cons=cons;
./extras/mini-os/netfront.c:    RING_FINAL_CHECK_FOR_RESPONSES(&dev->rx,more);
./extras/mini-os/netfront.c:    req_prod = dev->rx.req_prod_pvt;
./extras/mini-os/netfront.c:        netif_rx_request_t *req = RING_GET_REQUEST(&dev->rx, req_prod + i);
./extras/mini-os/netfront.c:        struct net_buffer* buf = &dev->rx_buffers[id];
./extras/mini-os/netfront.c:            gnttab_grant_access(dev->dom,virt_to_mfn(page),0);
./extras/mini-os/netfront.c:    dev->rx.req_prod_pvt = req_prod + i;
./extras/mini-os/netfront.c:    RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(&dev->rx, notify);
./extras/mini-os/netfront.c:        notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/netfront.c:        prod = dev->tx.sring->rsp_prod;
./extras/mini-os/netfront.c:        for (cons = dev->tx.rsp_cons; cons != prod; cons++) 
./extras/mini-os/netfront.c:            txrsp = RING_GET_RESPONSE(&dev->tx, cons);
./extras/mini-os/netfront.c:            buf = &dev->tx_buffers[id];
./extras/mini-os/netfront.c:	    add_id_to_freelist(id,dev->tx_freelist);
./extras/mini-os/netfront.c:	    up(&dev->tx_sem);
./extras/mini-os/netfront.c:        dev->tx.rsp_cons = prod;
./extras/mini-os/netfront.c:        dev->tx.sring->rsp_event =
./extras/mini-os/netfront.c:            prod + ((dev->tx.sring->req_prod - prod) >> 1) + 1;
./extras/mini-os/netfront.c:    } while ((cons == prod) && (prod != dev->tx.sring->rsp_prod));
./extras/mini-os/netfront.c:    int fd = dev->fd;
./extras/mini-os/netfront.c:	down(&dev->tx_sem);
./extras/mini-os/netfront.c:    mask_evtchn(dev->evtchn);
./extras/mini-os/netfront.c:    free(dev->mac);
./extras/mini-os/netfront.c:    free(dev->backend);
./extras/mini-os/netfront.c:    gnttab_end_access(dev->rx_ring_ref);
./extras/mini-os/netfront.c:    gnttab_end_access(dev->tx_ring_ref);
./extras/mini-os/netfront.c:    free_page(dev->rx.sring);
./extras/mini-os/netfront.c:    free_page(dev->tx.sring);
./extras/mini-os/netfront.c:    unbind_evtchn(dev->evtchn);
./extras/mini-os/netfront.c:	gnttab_end_access(dev->rx_buffers[i].gref);
./extras/mini-os/netfront.c:	free_page(dev->rx_buffers[i].page);
./extras/mini-os/netfront.c:	if (dev->tx_buffers[i].page)
./extras/mini-os/netfront.c:	    free_page(dev->tx_buffers[i].page);
./extras/mini-os/netfront.c:    free(dev->nodename);
./extras/mini-os/netfront.c:    dev->nodename = strdup(nodename);
./extras/mini-os/netfront.c:    dev->fd = -1;
./extras/mini-os/netfront.c:    init_SEMAPHORE(&dev->tx_sem, NET_TX_RING_SIZE);
./extras/mini-os/netfront.c:	add_id_to_freelist(i,dev->tx_freelist);
./extras/mini-os/netfront.c:        dev->tx_buffers[i].page = NULL;
./extras/mini-os/netfront.c:        dev->rx_buffers[i].page = (char*)alloc_page();
./extras/mini-os/netfront.c:    dev->dom = xenbus_read_integer(path);
./extras/mini-os/netfront.c:        evtchn_alloc_unbound(dev->dom, netfront_select_handler, dev, &dev->evtchn);
./extras/mini-os/netfront.c:        evtchn_alloc_unbound(dev->dom, netfront_handler, dev, &dev->evtchn);
./extras/mini-os/netfront.c:    FRONT_RING_INIT(&dev->tx, txs, PAGE_SIZE);
./extras/mini-os/netfront.c:    FRONT_RING_INIT(&dev->rx, rxs, PAGE_SIZE);
./extras/mini-os/netfront.c:    dev->tx_ring_ref = gnttab_grant_access(dev->dom,virt_to_mfn(txs),0);
./extras/mini-os/netfront.c:    dev->rx_ring_ref = gnttab_grant_access(dev->dom,virt_to_mfn(rxs),0);
./extras/mini-os/netfront.c:    dev->netif_rx = thenetif_rx;
./extras/mini-os/netfront.c:    dev->events = NULL;
./extras/mini-os/netfront.c:                dev->tx_ring_ref);
./extras/mini-os/netfront.c:                dev->rx_ring_ref);
./extras/mini-os/netfront.c:                "event-channel", "%u", dev->evtchn);
./extras/mini-os/netfront.c:    msg = xenbus_read(XBT_NIL, path, &dev->backend);
./extras/mini-os/netfront.c:    msg = xenbus_read(XBT_NIL, path, &dev->mac);
./extras/mini-os/netfront.c:    if ((dev->backend == NULL) || (dev->mac == NULL)) {
./extras/mini-os/netfront.c:    printk("backend at %s\n",dev->backend);
./extras/mini-os/netfront.c:    printk("mac is %s\n",dev->mac);
./extras/mini-os/netfront.c:        char path[strlen(dev->backend) + 1 + 5 + 1];
./extras/mini-os/netfront.c:        snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/netfront.c:        xenbus_watch_path_token(XBT_NIL, path, path, &dev->events);
./extras/mini-os/netfront.c:            err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/netfront.c:            snprintf(path, sizeof(path), "%s/ip", dev->backend);
./extras/mini-os/netfront.c:    unmask_evtchn(dev->evtchn);
./extras/mini-os/netfront.c:	sscanf(dev->mac,"%hhx:%hhx:%hhx:%hhx:%hhx:%hhx",
./extras/mini-os/netfront.c:    dev->fd = alloc_fd(FTYPE_TAP);
./extras/mini-os/netfront.c:    printk("tap_open(%s) -> %d\n", nodename, dev->fd);
./extras/mini-os/netfront.c:    files[dev->fd].tap.dev = dev;
./extras/mini-os/netfront.c:    return dev->fd;
./extras/mini-os/netfront.c:    char path[strlen(dev->backend) + 1 + 5 + 1];
./extras/mini-os/netfront.c:    char nodename[strlen(dev->nodename) + 1 + 5 + 1];
./extras/mini-os/netfront.c:    printk("close network: backend at %s\n",dev->backend);
./extras/mini-os/netfront.c:    snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/netfront.c:    snprintf(nodename, sizeof(nodename), "%s/state", dev->nodename);
./extras/mini-os/netfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/netfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/netfront.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/netfront.c:        struct net_buffer* buf = &dev->rx_buffers[requeue_idx];
./extras/mini-os/netfront.c:        req = RING_GET_REQUEST(&dev->rx, requeue_idx);
./extras/mini-os/netfront.c:            gnttab_grant_access(dev->dom,virt_to_mfn(buf->page),0);
./extras/mini-os/netfront.c:    dev->rx.req_prod_pvt = requeue_idx;
./extras/mini-os/netfront.c:    RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(&dev->rx, notify);
./extras/mini-os/netfront.c:        notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/netfront.c:    dev->rx.sring->rsp_event = dev->rx.rsp_cons + 1;
./extras/mini-os/netfront.c:    down(&dev->tx_sem);
./extras/mini-os/netfront.c:    id = get_id_from_freelist(dev->tx_freelist);
./extras/mini-os/netfront.c:    buf = &dev->tx_buffers[id];
./extras/mini-os/netfront.c:    i = dev->tx.req_prod_pvt;
./extras/mini-os/netfront.c:    tx = RING_GET_REQUEST(&dev->tx, i);
./extras/mini-os/netfront.c:        tx->gref = gnttab_grant_access(dev->dom,virt_to_mfn(page),1);
./extras/mini-os/netfront.c:    dev->tx.req_prod_pvt = i + 1;
./extras/mini-os/netfront.c:    RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(&dev->tx, notify);
./extras/mini-os/netfront.c:    if(notify) notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/netfront.c:    int fd = dev->fd;
./extras/mini-os/netfront.c:    dev->rlen = 0;
./extras/mini-os/netfront.c:    dev->data = data;
./extras/mini-os/netfront.c:    dev->len = len;
./extras/mini-os/netfront.c:    if (!dev->rlen && fd != -1)
./extras/mini-os/netfront.c:    dev->data = NULL;
./extras/mini-os/netfront.c:    dev->len = 0;
./extras/mini-os/netfront.c:    return dev->rlen;
./extras/mini-os/console/xenbus.c:    char path[strlen(dev->backend) + 1 + 5 + 1];
./extras/mini-os/console/xenbus.c:    char nodename[strlen(dev->nodename) + 1 + 5 + 1];
./extras/mini-os/console/xenbus.c:    snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/console/xenbus.c:    snprintf(nodename, sizeof(nodename), "%s/state", dev->nodename);
./extras/mini-os/console/xenbus.c:        err = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/console/xenbus.c:    mask_evtchn(dev->evtchn);
./extras/mini-os/console/xenbus.c:    unbind_evtchn(dev->evtchn);
./extras/mini-os/console/xenbus.c:    free(dev->backend);
./extras/mini-os/console/xenbus.c:    free(dev->nodename);
./extras/mini-os/console/xenbus.c:    gnttab_end_access(dev->ring_ref);
./extras/mini-os/console/xenbus.c:    free_page(dev->ring);
./extras/mini-os/console/xenbus.c:    dev->nodename = strdup(nodename);
./extras/mini-os/console/xenbus.c:    dev->fd = -1;
./extras/mini-os/console/xenbus.c:        dev->dom = res;
./extras/mini-os/console/xenbus.c:    evtchn_alloc_unbound(dev->dom, console_handle_input, dev, &dev->evtchn);
./extras/mini-os/console/xenbus.c:    dev->ring = (struct xencons_interface *) alloc_page();
./extras/mini-os/console/xenbus.c:    memset(dev->ring, 0, PAGE_SIZE);
./extras/mini-os/console/xenbus.c:    dev->ring_ref = gnttab_grant_access(dev->dom, virt_to_mfn(dev->ring), 0);
./extras/mini-os/console/xenbus.c:    dev->events = NULL;
./extras/mini-os/console/xenbus.c:                dev->ring_ref);
./extras/mini-os/console/xenbus.c:                "port", "%u", dev->evtchn);
./extras/mini-os/console/xenbus.c:    msg = xenbus_read(XBT_NIL, path, &dev->backend);
./extras/mini-os/console/xenbus.c:    printk("backend at %s\n", dev->backend);
./extras/mini-os/console/xenbus.c:        char path[strlen(dev->backend) + 1 + 19 + 1];
./extras/mini-os/console/xenbus.c:        snprintf(path, sizeof(path), "%s/state", dev->backend);
./extras/mini-os/console/xenbus.c:	xenbus_watch_path_token(XBT_NIL, path, path, &dev->events);
./extras/mini-os/console/xenbus.c:            msg = xenbus_wait_for_state_change(path, &state, &dev->events);
./extras/mini-os/console/xenbus.c:    unmask_evtchn(dev->evtchn);
./extras/mini-os/console/xencons_ring.c:        notify_remote_via_evtchn(dev->evtchn);
./extras/mini-os/console/xencons_ring.c:            intf = dev->ring;
./extras/mini-os/console/xencons_ring.c:        int fd = dev ? dev->fd : -1;
./extras/mini-os/console/xencons_ring.c:            intf = dev->ring;
./extras/mini-os/console/xencons_ring.c:            intf = dev->ring;
./extras/mini-os/console/xencons_ring.c:	dev->nodename = "device/console";
./extras/mini-os/console/xencons_ring.c:	dev->dom = 0;
./extras/mini-os/console/xencons_ring.c:	dev->backend = 0;
./extras/mini-os/console/xencons_ring.c:	dev->ring_ref = 0;
./extras/mini-os/console/xencons_ring.c:	dev->fd = -1;
./extras/mini-os/console/xencons_ring.c:	dev->evtchn = start_info.console.domU.evtchn;
./extras/mini-os/console/xencons_ring.c:	dev->ring = (struct xencons_interface *) mfn_to_virt(start_info.console.domU.mfn);
./extras/mini-os/console/xencons_ring.c:	err = bind_evtchn(dev->evtchn, console_handle_input, dev);
./extras/mini-os/console/xencons_ring.c:        unmask_evtchn(dev->evtchn);
./xen/arch/x86/mm.c: * necessary, and sets v->arch.cr3 to the value to load in CR3. */
./xen/arch/x86/mm.c:    struct pae_l3_cache *cache = &v->arch.pae_l3_cache;
./xen/arch/x86/mm.c:        v->arch.cr3 = mfn << PAGE_SHIFT;
./xen/arch/x86/mm.c:    v->arch.cr3 = __pa(lowmem_l3tab);
./xen/arch/x86/mm.c:    v->arch.cr3 = mfn << PAGE_SHIFT;
./xen/arch/x86/mm.c:    write_cr3(v->arch.cr3);
./xen/arch/x86/mm.c:    if ( paging_mode_enabled(v->domain) )
./xen/arch/x86/mm.c:    if ( !(v->arch.flags & TF_kernel_mode) )
./xen/arch/x86/mm.c:        cr3_mfn = pagetable_get_pfn(v->arch.guest_table_user);
./xen/arch/x86/mm.c:        cr3_mfn = pagetable_get_pfn(v->arch.guest_table);
./xen/arch/x86/mm.c:    spin_lock(&v->arch.pv_vcpu.shadow_ldt_lock);
./xen/arch/x86/mm.c:    if ( v->arch.pv_vcpu.shadow_ldt_mapcnt == 0 )
./xen/arch/x86/mm.c:    v->arch.pv_vcpu.shadow_ldt_mapcnt = 0;
./xen/arch/x86/mm.c:        pfn = l1e_get_pfn(v->arch.perdomain_ptes[i]);
./xen/arch/x86/mm.c:        l1e_write(&v->arch.perdomain_ptes[i], l1e_empty());
./xen/arch/x86/mm.c:        ASSERT_PAGE_IS_DOMAIN(page, v->domain);
./xen/arch/x86/mm.c:        flush_tlb_mask(v->vcpu_dirty_cpumask);
./xen/arch/x86/mm.c:    spin_unlock(&v->arch.pv_vcpu.shadow_ldt_lock);
./xen/arch/x86/mm.c:    struct domain *d = v->domain;
./xen/arch/x86/mm.c:    unsigned long gva = v->arch.pv_vcpu.ldt_base + (off << PAGE_SHIFT);
./xen/arch/x86/mm.c:    spin_lock(&v->arch.pv_vcpu.shadow_ldt_lock);
./xen/arch/x86/mm.c:    l1e_write(&v->arch.perdomain_ptes[off + 16], nl1e);
./xen/arch/x86/mm.c:    v->arch.pv_vcpu.shadow_ldt_mapcnt++;
./xen/arch/x86/mm.c:    spin_unlock(&v->arch.pv_vcpu.shadow_ldt_lock);
./xen/arch/x86/mm.c:            if ( pagetable_get_pfn(v->arch.guest_table) == mfn )
./xen/arch/x86/mm.c:                cpumask_or(&m, &m, v->vcpu_dirty_cpumask);
./xen/arch/x86/mm.c:        cache = &v->arch.pae_l3_cache;
./xen/arch/x86/mm.c:                cpumask_or(pmask, pmask, v->vcpu_dirty_cpumask);
./xen/arch/x86/mm.c:    struct domain *d = v->domain, *pt_owner = d, *pg_owner;
./xen/arch/x86/mm.c:    struct domain *d = v->domain;
./xen/arch/x86/mm.c:    struct domain *d = v->domain;
./xen/arch/x86/mm.c:    struct domain *d   = v->domain;
./xen/arch/x86/mm.c:    v->arch.pv_vcpu.gdt_ents = 0;
./xen/arch/x86/mm.c:        if ( (pfn = l1e_get_pfn(v->arch.perdomain_ptes[i])) != 0 )
./xen/arch/x86/mm.c:        l1e_write(&v->arch.perdomain_ptes[i], l1e_empty());
./xen/arch/x86/mm.c:        v->arch.pv_vcpu.gdt_frames[i] = 0;
./xen/arch/x86/mm.c:    struct domain *d = v->domain;
./xen/arch/x86/mm.c:    v->arch.pv_vcpu.gdt_ents = entries;
./xen/arch/x86/mm.c:        v->arch.pv_vcpu.gdt_frames[i] = frames[i];
./xen/arch/x86/mm.c:        l1e_write(&v->arch.perdomain_ptes[i],
./xen/arch/x86/mm.c:    struct domain *d = v->domain;
./xen/arch/x86/mm.c:    struct domain *d = v->domain;
./xen/arch/x86/mm.c:    unsigned int      addr_size = is_pv_32on64_domain(v->domain) ?
./xen/arch/x86/i387.c:    set_xcr0(v->arch.xcr0_accum);
./xen/arch/x86/i387.c:    set_xcr0(v->arch.xcr0);
./xen/arch/x86/i387.c:    const char *fpu_ctxt = v->arch.fpu_ctxt;
./xen/arch/x86/i387.c:          "i" (sizeof(v->arch.xsave_area->fpu_sse)/4)
./xen/arch/x86/i387.c:    const char *fpu_ctxt = v->arch.fpu_ctxt;
./xen/arch/x86/i387.c:    set_xcr0(v->arch.xcr0_accum);
./xen/arch/x86/i387.c:    xsave(v, v->arch.nonlazy_xstate_used ? XSTATE_ALL : XSTATE_LAZY);
./xen/arch/x86/i387.c:    set_xcr0(v->arch.xcr0);    
./xen/arch/x86/i387.c:    char *fpu_ctxt = v->arch.fpu_ctxt;
./xen/arch/x86/i387.c:    char *fpu_ctxt = v->arch.fpu_ctxt;
./xen/arch/x86/i387.c:    if ( v->arch.nonlazy_xstate_used )
./xen/arch/x86/i387.c:    if ( v->fpu_dirtied )
./xen/arch/x86/i387.c:    else if ( v->fpu_initialised )
./xen/arch/x86/i387.c:    v->fpu_initialised = 1;
./xen/arch/x86/i387.c:    v->fpu_dirtied = 1;
./xen/arch/x86/i387.c:    if ( !v->fpu_dirtied )
./xen/arch/x86/i387.c:    v->fpu_dirtied = 0;
./xen/arch/x86/i387.c:    if ( v->arch.xsave_area )
./xen/arch/x86/i387.c:        v->arch.fpu_ctxt = &v->arch.xsave_area->fpu_sse;
./xen/arch/x86/i387.c:        v->arch.fpu_ctxt = _xzalloc(sizeof(v->arch.xsave_area->fpu_sse), 16);
./xen/arch/x86/i387.c:        if ( !v->arch.fpu_ctxt )
./xen/arch/x86/i387.c:    if ( v->arch.xsave_area )
./xen/arch/x86/i387.c:        xfree(v->arch.fpu_ctxt);
./xen/arch/x86/apic.c:    /* see sw-dev-man vol 3, chapter 7.4.13.5 */
./xen/arch/x86/irq.c:     * Sanity-check: shared interrupts must pass in a real dev-ID,
./xen/arch/x86/irq.c:    WARN_ON(!spin_is_locked(&v->domain->event_lock));
./xen/arch/x86/irq.c:                   pirq->pirq, v->domain->domain_id, desc->action->name);
./xen/arch/x86/irq.c:                   pirq->pirq, v->domain->domain_id);
./xen/arch/x86/irq.c:        action->ack_type    = pirq_acktype(v->domain, pirq->pirq);
./xen/arch/x86/irq.c:            desc->handler->set_affinity(desc, cpumask_of(v->processor));
./xen/arch/x86/irq.c:               pirq->pirq, v->domain->domain_id,
./xen/arch/x86/irq.c:               pirq->pirq, v->domain->domain_id);
./xen/arch/x86/irq.c:    action->guest[action->nr_guests++] = v->domain;
./xen/arch/x86/irq.c:        set_pirq_eoi(v->domain, pirq->pirq);
./xen/arch/x86/irq.c:        clear_pirq_eoi(v->domain, pirq->pirq);
./xen/arch/x86/irq.c:            desc->arch.used_vectors = &pdev->arch.used_vectors;
./xen/arch/x86/x86_32/domain_page.c:    if ( unlikely(!pagetable_get_pfn(v->arch.guest_table)) && !is_hvm_vcpu(v) )
./xen/arch/x86/x86_32/domain_page.c:    dcache = &v->domain->arch.mapcache;
./xen/arch/x86/x86_32/domain_page.c:    vcache = &v->arch.mapcache;
./xen/arch/x86/x86_32/domain_page.c:    dcache = &v->domain->arch.mapcache;
./xen/arch/x86/x86_32/domain_page.c:    hashent = &v->arch.mapcache.hash[MAPHASH_HASHFN(mfn)];
./xen/arch/x86/x86_32/domain_page.c:        hashent = &v->arch.mapcache.hash[i];
./xen/arch/x86/x86_32/traps.c:    if ( (context == CTXT_pv_guest) && v && v->vcpu_info )
./xen/arch/x86/x86_32/traps.c:        printk("EM: %d   ", !!v->vcpu_info->evtchn_upcall_mask);
./xen/arch/x86/x86_32/traps.c:        fault_crs[0] = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/x86_32/traps.c:        fault_crs[2] = v->arch.hvm_vcpu.guest_cr[2];
./xen/arch/x86/x86_32/traps.c:        fault_crs[3] = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/x86_32/traps.c:        fault_crs[4] = v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/x86_32/traps.c:            fault_crs[2] = v->vcpu_info->arch.cr2;
./xen/arch/x86/x86_32/traps.c:    crs[0] = v->arch.pv_vcpu.ctrlreg[0];
./xen/arch/x86/x86_32/traps.c:    crs[2] = v->vcpu_info->arch.cr2;
./xen/arch/x86/x86_32/traps.c:    crs[3] = pagetable_get_paddr(v->arch.guest_table);
./xen/arch/x86/x86_32/traps.c:    crs[4] = v->arch.pv_vcpu.ctrlreg[4];
./xen/arch/x86/x86_32/traps.c:    _show_registers(&v->arch.user_regs, crs, CTXT_pv_guest, v);
./xen/arch/x86/x86_32/traps.c:    domain_crash(v->domain);
./xen/arch/x86/x86_32/traps.c:    struct trap_info *ti = &v->arch.pv_vcpu.trap_ctxt[0x80];
./xen/arch/x86/x86_32/traps.c:    if ( TI_GET_IF(ti) || !guest_gate_selector_okay(v->domain, ti->cs) ||
./xen/arch/x86/x86_32/traps.c:        v->arch.pv_vcpu.int80_desc.a = v->arch.pv_vcpu.int80_desc.b = 0;
./xen/arch/x86/x86_32/traps.c:    v->arch.pv_vcpu.int80_desc.a = (ti->cs << 16) | (ti->address & 0xffff);
./xen/arch/x86/x86_32/traps.c:    v->arch.pv_vcpu.int80_desc.b =
./xen/arch/x86/x86_32/traps.c:    fixup_guest_code_selector(v->domain, reg->address.cs);
./xen/arch/x86/x86_32/traps.c:        v->arch.pv_vcpu.event_callback_cs     = reg->address.cs;
./xen/arch/x86/x86_32/traps.c:        v->arch.pv_vcpu.event_callback_eip    = reg->address.eip;
./xen/arch/x86/x86_32/traps.c:        v->arch.pv_vcpu.failsafe_callback_cs  = reg->address.cs;
./xen/arch/x86/x86_32/traps.c:        v->arch.pv_vcpu.failsafe_callback_eip = reg->address.eip;
./xen/arch/x86/x86_32/traps.c:                    &v->arch.vgc_flags);
./xen/arch/x86/x86_32/traps.c:                      &v->arch.vgc_flags);
./xen/arch/x86/nmi.c:    i = v->async_exception_mask & (1 << VCPU_TRAP_NMI);
./xen/arch/x86/nmi.c:    if ( v->nmi_pending || i )
./xen/arch/x86/nmi.c:               v->nmi_pending ? "pending " : "",
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_vmentry_pending = 0;
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_vmexit_pending = 0;
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_vmswitch_in_progress = 0;
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_ioport80 = 0;
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_ioportED = 0;
./xen/arch/x86/hvm/nestedhvm.c:    if (nv->nv_vvmcx)
./xen/arch/x86/hvm/nestedhvm.c:        hvm_unmap_guest_frame(nv->nv_vvmcx);
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_vvmcx = NULL;
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_vvmcxaddr = VMCX_EADDR;
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_flushp2m = 0;
./xen/arch/x86/hvm/nestedhvm.c:    nv->nv_p2m = NULL;
./xen/arch/x86/hvm/nestedhvm.c:    hvm_asid_flush_vcpu_asid(&nv->nv_n2asid);
./xen/arch/x86/hvm/nestedhvm.c:    if ( nestedhvm_enabled(v->domain) && hvm_funcs.nhvm_vcpu_destroy )
./xen/arch/x86/hvm/nestedhvm.c:    if (v->domain != d) {
./xen/arch/x86/hvm/nestedhvm.c:    if (!nestedhvm_enabled(v->domain)
./xen/arch/x86/hvm/mtrr.c:    struct mtrr_state *m = &v->arch.hvm_vcpu.mtrr;
./xen/arch/x86/hvm/mtrr.c:    v->arch.hvm_vcpu.pat_cr =
./xen/arch/x86/hvm/mtrr.c:    xfree(v->arch.hvm_vcpu.mtrr.var_ranges);
./xen/arch/x86/hvm/mtrr.c:    uint64_t pat = v->arch.hvm_vcpu.pat_cr;
./xen/arch/x86/hvm/mtrr.c:    struct mtrr_state *g = &v->arch.hvm_vcpu.mtrr;
./xen/arch/x86/hvm/mtrr.c:        struct domain *d = v->domain;
./xen/arch/x86/hvm/mtrr.c:        mtrr_state = &v->arch.hvm_vcpu.mtrr;
./xen/arch/x86/hvm/mtrr.c:        if ( hvm_save_entry(MTRR, v->vcpu_id, h, &hw_mtrr) != 0 )
./xen/arch/x86/hvm/mtrr.c:    mtrr_state = &v->arch.hvm_vcpu.mtrr;
./xen/arch/x86/hvm/mtrr.c:    if ( !v->domain->arch.hvm_domain.params[HVM_PARAM_IDENT_PT] )
./xen/arch/x86/hvm/mtrr.c:    if ( (v == current) && v->domain->arch.hvm_domain.is_in_uc_mode )
./xen/arch/x86/hvm/mtrr.c:    gmtrr_mtype = get_mtrr_type(&v->arch.hvm_vcpu.mtrr, (gfn << PAGE_SHIFT));
./xen/arch/x86/hvm/io.c:    struct hvm_ioreq_page *iorp = &v->domain->arch.hvm_domain.buf_ioreq;
./xen/arch/x86/hvm/io.c:    notify_via_xen_event_channel(v->domain,
./xen/arch/x86/hvm/io.c:            v->domain->arch.hvm_domain.params[HVM_PARAM_BUFIOREQ_EVTCHN]);
./xen/arch/x86/hvm/io.c:        domain_crash(v->domain);
./xen/arch/x86/hvm/vioapic.c:    struct hvm_hw_vioapic *vioapic = domain_vioapic(v->domain);
./xen/arch/x86/hvm/vioapic.c:    struct hvm_hw_vioapic *vioapic = domain_vioapic(v->domain);
./xen/arch/x86/hvm/vioapic.c:        vioapic_update_EOI(v->domain, val);
./xen/arch/x86/hvm/vioapic.c:    struct hvm_hw_vioapic *vioapic = domain_vioapic(v->domain);
./xen/arch/x86/hvm/vioapic.c:                 !test_and_set_bool(v->nmi_pending) )
./xen/arch/x86/hvm/irq.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/irq.c:    ASSERT(v->vcpu_id == 0);
./xen/arch/x86/hvm/irq.c:        tasklet_schedule(&v->arch.hvm_vcpu.assert_evtchn_irq_tasklet);
./xen/arch/x86/hvm/irq.c:    else if ( v->vcpu_id == 0 )
./xen/arch/x86/hvm/irq.c:    struct hvm_domain *plat = &v->domain->arch.hvm_domain;
./xen/arch/x86/hvm/irq.c:    if ( unlikely(v->nmi_pending) )
./xen/arch/x86/hvm/irq.c:    if ( unlikely(v->mce_pending) )
./xen/arch/x86/hvm/irq.c:        if ( !test_and_clear_bool(v->nmi_pending) )
./xen/arch/x86/hvm/irq.c:        if ( !test_and_clear_bool(v->mce_pending) )
./xen/arch/x86/hvm/vpic.c:    struct hvm_hw_vpic *vpic = &v->domain->arch.hvm_domain.vpic[0];
./xen/arch/x86/hvm/i8254.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/asid.c:    hvm_asid_flush_vcpu_asid(&v->arch.hvm_vcpu.n1asid);
./xen/arch/x86/hvm/rtc.c:    if ( v->vcpu_id == 0 )
./xen/arch/x86/hvm/rtc.c:        migrate_timer(&s->update_timer, v->processor);;
./xen/arch/x86/hvm/rtc.c:        migrate_timer(&s->update_timer2, v->processor);;
./xen/arch/x86/hvm/rtc.c:        migrate_timer(&s->alarm_timer, v->processor);;
./xen/arch/x86/hvm/vmx/vpmu_core2.c:        core2_vpmu_unset_msr_bitmap(v->arch.hvm_vmx.msr_bitmap);
./xen/arch/x86/hvm/vmx/vpmu_core2.c:             v->vcpu_id, v->domain->domain_id);
./xen/arch/x86/hvm/vmx/vpmu_core2.c:        v->nmi_pending = 1;
./xen/arch/x86/hvm/vmx/vpmu_core2.c:                   v->domain->domain_id, v->vcpu_id);
./xen/arch/x86/hvm/vmx/vpmu_core2.c:                   v->domain->domain_id, v->vcpu_id);
./xen/arch/x86/hvm/vmx/vpmu_core2.c:        core2_vpmu_unset_msr_bitmap(v->arch.hvm_vmx.msr_bitmap);
./xen/arch/x86/hvm/vmx/vmx.c:    spin_lock_init(&v->arch.hvm_vmx.vmcs_lock);
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.schedule_tail    = vmx_do_resume;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.ctxt_switch_from = vmx_ctxt_switch_from;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.ctxt_switch_to   = vmx_ctxt_switch_to;
./xen/arch/x86/hvm/vmx/vmx.c:                v->vcpu_id, rc);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( v->vcpu_id == 0 )
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.user_regs.eax = 1;
./xen/arch/x86/hvm/vmx/vmx.c:    struct vmx_msr_state *guest_msr_state = &v->arch.hvm_vmx.msr_state;
./xen/arch/x86/hvm/vmx/vmx.c:        *msr_content = v->arch.hvm_vmx.cstar;
./xen/arch/x86/hvm/vmx/vmx.c:    struct vmx_msr_state *guest_msr_state = &v->arch.hvm_vmx.msr_state;
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.cstar = msr_content;
./xen/arch/x86/hvm/vmx/vmx.c:    rdmsrl(MSR_SHADOW_GS_BASE, v->arch.hvm_vmx.shadow_gs);
./xen/arch/x86/hvm/vmx/vmx.c:    guest_msr_state = &v->arch.hvm_vmx.msr_state;
./xen/arch/x86/hvm/vmx/vmx.c:    wrmsrl(MSR_SHADOW_GS_BASE, v->arch.hvm_vmx.shadow_gs);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( (v->arch.hvm_vcpu.guest_efer ^ read_efer()) & EFER_SCE )
./xen/arch/x86/hvm/vmx/vmx.c:                    v->arch.hvm_vcpu.guest_efer);
./xen/arch/x86/hvm/vmx/vmx.c:                   (v->arch.hvm_vcpu.guest_efer & EFER_SCE));
./xen/arch/x86/hvm/vmx/vmx.c:        nvmx_update_exec_control(v, v->arch.hvm_vmx.exec_control);
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(CPU_BASED_VM_EXEC_CONTROL, v->arch.hvm_vmx.exec_control);
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vmx.secondary_exec_control);
./xen/arch/x86/hvm/vmx/vmx.c:                  v->arch.hvm_vmx.secondary_exec_control);
./xen/arch/x86/hvm/vmx/vmx.c:        nvmx_update_exception_bitmap(v, v->arch.hvm_vmx.exception_bitmap);
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(EXCEPTION_BITMAP, v->arch.hvm_vmx.exception_bitmap);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( unlikely(!(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_PE)) )
./xen/arch/x86/hvm/vmx/vmx.c:    if ( !v->arch.hvm_vcpu.flag_dr_dirty )
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vcpu.flag_dr_dirty = 0;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.exec_control |= CPU_BASED_MOV_DR_EXITING;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.debugreg[0] = read_debugreg(0);
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.debugreg[1] = read_debugreg(1);
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.debugreg[2] = read_debugreg(2);
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.debugreg[3] = read_debugreg(3);
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.debugreg[6] = read_debugreg(6);
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.debugreg[7] = __vmread(GUEST_DR7);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( v->arch.hvm_vcpu.flag_dr_dirty )
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vcpu.flag_dr_dirty = 1;
./xen/arch/x86/hvm/vmx/vmx.c:    write_debugreg(0, v->arch.debugreg[0]);
./xen/arch/x86/hvm/vmx/vmx.c:    write_debugreg(1, v->arch.debugreg[1]);
./xen/arch/x86/hvm/vmx/vmx.c:    write_debugreg(2, v->arch.debugreg[2]);
./xen/arch/x86/hvm/vmx/vmx.c:    write_debugreg(3, v->arch.debugreg[3]);
./xen/arch/x86/hvm/vmx/vmx.c:    write_debugreg(6, v->arch.debugreg[6]);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( unlikely(v->arch.debugreg[7] & DR7_ACTIVE_MASK) )
./xen/arch/x86/hvm/vmx/vmx.c:    c->cr0 = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/hvm/vmx/vmx.c:    c->cr2 = v->arch.hvm_vcpu.guest_cr[2];
./xen/arch/x86/hvm/vmx/vmx.c:    c->cr3 = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/hvm/vmx/vmx.c:    c->cr4 = v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/hvm/vmx/vmx.c:    c->msr_efer = v->arch.hvm_vcpu.guest_efer;
./xen/arch/x86/hvm/vmx/vmx.c:    if ( paging_mode_shadow(v->domain) )
./xen/arch/x86/hvm/vmx/vmx.c:            page = get_page_from_gfn(v->domain, cr3 >> PAGE_SHIFT,
./xen/arch/x86/hvm/vmx/vmx.c:            put_page(pagetable_get_page(v->arch.guest_table));
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.guest_table =
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vcpu.guest_cr[0] = cr0 | X86_CR0_ET;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vcpu.guest_cr[3] = cr3;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vcpu.guest_cr[2] = c->cr2;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vcpu.guest_cr[4] = c->cr4;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vcpu.guest_efer = c->msr_efer;
./xen/arch/x86/hvm/vmx/vmx.c:    struct vmx_msr_state *guest_state = &v->arch.hvm_vmx.msr_state;
./xen/arch/x86/hvm/vmx/vmx.c:    data->shadow_gs = v->arch.hvm_vmx.shadow_gs;
./xen/arch/x86/hvm/vmx/vmx.c:    data->msr_cstar = v->arch.hvm_vmx.cstar;
./xen/arch/x86/hvm/vmx/vmx.c:    struct vmx_msr_state *guest_state = &v->arch.hvm_vmx.msr_state;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.cstar     = data->msr_cstar;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.shadow_gs = data->shadow_gs;
./xen/arch/x86/hvm/vmx/vmx.c:        domain_crash(v->domain);
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.exception_bitmap &= ~(1u << TRAP_no_device);
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.host_cr0 &= ~X86_CR0_TS;
./xen/arch/x86/hvm/vmx/vmx.c:    __vmwrite(HOST_CR0, v->arch.hvm_vmx.host_cr0);
./xen/arch/x86/hvm/vmx/vmx.c:    ASSERT(!v->fpu_dirtied);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( !(v->arch.hvm_vmx.host_cr0 & X86_CR0_TS) )
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.host_cr0 |= X86_CR0_TS;
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(HOST_CR0, v->arch.hvm_vmx.host_cr0);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( !(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_TS) )
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vcpu.hw_cr[0] |= X86_CR0_TS;
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(GUEST_CR0, v->arch.hvm_vcpu.hw_cr[0]);
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.exception_bitmap |= (1u << TRAP_no_device);
./xen/arch/x86/hvm/vmx/vmx.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/vmx/vmx.c:    if ( v->arch.hvm_vmx.vmx_realmode && seg <= x86_seg_tr 
./xen/arch/x86/hvm/vmx/vmx.c:         && !(v->arch.hvm_vmx.vm86_segment_mask & (1u << seg)) )
./xen/arch/x86/hvm/vmx/vmx.c:        struct segment_register *sreg = &v->arch.hvm_vmx.vm86_saved_seg[seg];
./xen/arch/x86/hvm/vmx/vmx.c:    if ( v->arch.hvm_vmx.vmx_realmode && seg <= x86_seg_tr )
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.vm86_saved_seg[seg] = *reg;
./xen/arch/x86/hvm/vmx/vmx.c:            if ( v->domain->arch.hvm_domain.params[HVM_PARAM_VM86_TSS] )
./xen/arch/x86/hvm/vmx/vmx.c:                base = v->domain->arch.hvm_domain.params[HVM_PARAM_VM86_TSS];
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.vm86_segment_mask &= ~(1u << seg);
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.vm86_segment_mask |= (1u << seg);
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.vm86_segment_mask &= ~(1u << seg);
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.vm86_segment_mask |= (1u << seg);
./xen/arch/x86/hvm/vmx/vmx.c:    return v->arch.hvm_vmx.shadow_gs;
./xen/arch/x86/hvm/vmx/vmx.c:    if ( !cpu_has_vmx_pat || !paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/vmx/vmx.c:    if ( !cpu_has_vmx_pat || !paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.exec_control &= ~CPU_BASED_RDTSC_EXITING;
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.exec_control |= CPU_BASED_RDTSC_EXITING;
./xen/arch/x86/hvm/vmx/vmx.c:    unsigned long cr3 = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/hvm/vmx/vmx.c:    if ( !hvm_pae_enabled(v) || (v->arch.hvm_vcpu.guest_efer & EFER_LMA) )
./xen/arch/x86/hvm/vmx/vmx.c:    page = get_page_from_gfn(v->domain, cr3 >> PAGE_SHIFT, &p2mt, P2M_UNSHARE);
./xen/arch/x86/hvm/vmx/vmx.c:    domain_crash(v->domain);
./xen/arch/x86/hvm/vmx/vmx.c:    __vmwrite(HOST_CR3, v->arch.cr3);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( v->arch.hvm_vcpu.debug_state_latch )
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.exception_bitmap |= mask;
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.exception_bitmap &= ~mask;
./xen/arch/x86/hvm/vmx/vmx.c:        if ( paging_mode_shadow(v->domain) )
./xen/arch/x86/hvm/vmx/vmx.c:        if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vmx.exec_control &= ~cr3_ctls;
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.exec_control |= cr3_ctls;
./xen/arch/x86/hvm/vmx/vmx.c:            if ( v->domain->arch.hvm_domain.params[HVM_PARAM_MEMORY_EVENT_CR3] )
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.exec_control |= CPU_BASED_CR3_LOAD_EXITING;
./xen/arch/x86/hvm/vmx/vmx.c:        if ( !(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_TS) )
./xen/arch/x86/hvm/vmx/vmx.c:            else if ( v->arch.hvm_vcpu.hw_cr[0] & X86_CR0_TS )
./xen/arch/x86/hvm/vmx/vmx.c:        realmode = !(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_PE); 
./xen/arch/x86/hvm/vmx/vmx.c:             (realmode != v->arch.hvm_vmx.vmx_realmode) )
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vmx.vmx_realmode = realmode;
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vcpu.hw_cr[4] |= X86_CR4_VME;
./xen/arch/x86/hvm/vmx/vmx.c:                __vmwrite(GUEST_CR4, v->arch.hvm_vcpu.hw_cr[4]);
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.exception_bitmap = 0xffffffff;
./xen/arch/x86/hvm/vmx/vmx.c:                    if ( !(v->arch.hvm_vmx.vm86_segment_mask & (1<<s)) )
./xen/arch/x86/hvm/vmx/vmx.c:                            v, s, &v->arch.hvm_vmx.vm86_saved_seg[s]);
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vcpu.hw_cr[4] =
./xen/arch/x86/hvm/vmx/vmx.c:                    ((v->arch.hvm_vcpu.hw_cr[4] & ~X86_CR4_VME)
./xen/arch/x86/hvm/vmx/vmx.c:                     |(v->arch.hvm_vcpu.guest_cr[4] & X86_CR4_VME));
./xen/arch/x86/hvm/vmx/vmx.c:                __vmwrite(GUEST_CR4, v->arch.hvm_vcpu.hw_cr[4]);
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.exception_bitmap = HVM_TRAP_MASK
./xen/arch/x86/hvm/vmx/vmx.c:                          | (paging_mode_hap(v->domain) ?
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vcpu.hw_cr[0] =
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vcpu.guest_cr[0] | hw_cr0_mask;
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(GUEST_CR0, v->arch.hvm_vcpu.hw_cr[0]);
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(CR0_READ_SHADOW, v->arch.hvm_vcpu.guest_cr[0]);
./xen/arch/x86/hvm/vmx/vmx.c:        if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vcpu.hw_cr[3] =
./xen/arch/x86/hvm/vmx/vmx.c:                    v->domain->arch.hvm_domain.params[HVM_PARAM_IDENT_PT];
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(GUEST_CR3, v->arch.hvm_vcpu.hw_cr[3]);
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vcpu.hw_cr[4] = HVM_CR4_HOST_MASK;
./xen/arch/x86/hvm/vmx/vmx.c:        if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vcpu.hw_cr[4] &= ~X86_CR4_PAE;
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vcpu.hw_cr[4] |= v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/hvm/vmx/vmx.c:        if ( v->arch.hvm_vmx.vmx_realmode ) 
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vcpu.hw_cr[4] |= X86_CR4_VME;
./xen/arch/x86/hvm/vmx/vmx.c:        if ( paging_mode_hap(v->domain) && !hvm_paging_enabled(v) )
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vcpu.hw_cr[4] |= X86_CR4_PSE;
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vcpu.hw_cr[4] &= ~X86_CR4_PAE;
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(GUEST_CR4, v->arch.hvm_vcpu.hw_cr[4]);
./xen/arch/x86/hvm/vmx/vmx.c:        __vmwrite(CR4_READ_SHADOW, v->arch.hvm_vcpu.guest_cr[4]);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( v->arch.hvm_vcpu.guest_efer & EFER_LMA )
./xen/arch/x86/hvm/vmx/vmx.c:                   (v->arch.hvm_vcpu.guest_efer & EFER_SCE));
./xen/arch/x86/hvm/vmx/vmx.c:    if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/vmx/vmx.c:            v->domain, 0, p2m_get_hostp2m(v->domain)->max_mapped_pfn);
./xen/arch/x86/hvm/vmx/vmx.c:    __vmwrite(GUEST_DR7, v->arch.debugreg[7]);
./xen/arch/x86/hvm/vmx/vmx.c:    if ( v->domain->debugger_attached &&
./xen/arch/x86/hvm/vmx/vmx.c:         (v->arch.user_regs.eflags & X86_EFLAGS_TF) &&
./xen/arch/x86/hvm/vmx/vmx.c:    if ( !v->arch.hvm_vcpu.flag_dr_dirty )
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.exec_control &= ~CPU_BASED_MOV_DR_EXITING;
./xen/arch/x86/hvm/vmx/vmx.c:    apic_page_ma = v->domain->arch.hvm_domain.vmx.apic_access_mfn;
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.secondary_exec_control &=
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.secondary_exec_control |=
./xen/arch/x86/hvm/vmx/vmx.c:    v->arch.hvm_vmx.vm86_saved_eflags = regs->eflags;
./xen/arch/x86/hvm/vmx/vmx.c:    if ( paging_mode_hap(v->domain) && hvm_paging_enabled(v) )
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vcpu.guest_cr[3] = v->arch.hvm_vcpu.hw_cr[3] =
./xen/arch/x86/hvm/vmx/vmx.c:    if ( v->arch.hvm_vmx.vmx_realmode )
./xen/arch/x86/hvm/vmx/vmx.c:        regs->eflags |= (v->arch.hvm_vmx.vm86_saved_eflags & X86_EFLAGS_IOPL);
./xen/arch/x86/hvm/vmx/vmx.c:                v->arch.hvm_vmx.vmx_emulate = 1;
./xen/arch/x86/hvm/vmx/vmx.c:            v->arch.hvm_vmx.vmx_emulate = 1;
./xen/arch/x86/hvm/vmx/vmx.c:            if ( !v->domain->debugger_attached || cpu_has_monitor_trap_flag )
./xen/arch/x86/hvm/vmx/vmx.c:            if ( v->domain->debugger_attached )
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.exec_control &= ~CPU_BASED_VIRTUAL_INTR_PENDING;
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.exec_control &= ~CPU_BASED_VIRTUAL_NMI_PENDING;
./xen/arch/x86/hvm/vmx/vmx.c:        v->arch.hvm_vmx.exec_control &= ~CPU_BASED_MONITOR_TRAP_FLAG;
./xen/arch/x86/hvm/vmx/vmx.c:        if ( v->arch.hvm_vcpu.single_step ) {
./xen/arch/x86/hvm/vmx/vmx.c:          if ( v->domain->debugger_attached )
./xen/arch/x86/hvm/vmx/vmx.c:        domain_crash(v->domain);
./xen/arch/x86/hvm/vmx/vvmx.c:        v->arch.hvm_vmx.vmcs = nvcpu->nv_n1vmcx;
./xen/arch/x86/hvm/vmx/vvmx.c:        if ( !(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_PE) ||
./xen/arch/x86/hvm/vmx/vvmx.c:             !(v->arch.hvm_vcpu.guest_cr[4] & X86_CR4_VMXE) )
./xen/arch/x86/hvm/vmx/vvmx.c:    hvm_funcs.set_tsc_offset(v, v->arch.hvm_vcpu.cache_tsc_offset);
./xen/arch/x86/hvm/vmx/vvmx.c:    vmx_vmcs_switch(v->arch.hvm_vmx.vmcs, nvcpu->nv_n2vmcx);
./xen/arch/x86/hvm/vmx/vvmx.c:     * there is 32/64 switch. v->arch.hvm_vcpu.guest_efer doesn't
./xen/arch/x86/hvm/vmx/vvmx.c:        v->arch.hvm_vcpu.guest_efer |= EFER_LMA | EFER_LME;
./xen/arch/x86/hvm/vmx/vvmx.c:        v->arch.hvm_vcpu.guest_efer &= ~(EFER_LMA | EFER_LME);
./xen/arch/x86/hvm/vmx/vvmx.c:    __vmwrite(HOST_CR0, v->arch.hvm_vmx.host_cr0);
./xen/arch/x86/hvm/vmx/vvmx.c:    hvm_funcs.set_tsc_offset(v, v->arch.hvm_vcpu.cache_tsc_offset);
./xen/arch/x86/hvm/vmx/vvmx.c:    vmx_vmcs_switch(v->arch.hvm_vmx.vmcs, nvcpu->nv_n1vmcx);
./xen/arch/x86/hvm/vmx/vvmx.c:        v->arch.hvm_vcpu.guest_efer |= EFER_LMA | EFER_LME;
./xen/arch/x86/hvm/vmx/vvmx.c:        v->arch.hvm_vcpu.guest_efer &= ~(EFER_LMA | EFER_LME);
./xen/arch/x86/hvm/vmx/vvmx.c:    __vmwrite(HOST_CR0, v->arch.hvm_vmx.host_cr0);
./xen/arch/x86/hvm/vmx/vvmx.c:    nvcpu->nv_n1vmcx = v->arch.hvm_vmx.vmcs;
./xen/arch/x86/hvm/vmx/vvmx.c:    __vmpclear(virt_to_maddr(v->arch.hvm_vmx.vmcs));
./xen/arch/x86/hvm/vmx/vvmx.c:    memcpy(nvcpu->nv_n2vmcx, v->arch.hvm_vmx.vmcs, PAGE_SIZE);
./xen/arch/x86/hvm/vmx/vvmx.c:    __vmptrld(virt_to_maddr(v->arch.hvm_vmx.vmcs));
./xen/arch/x86/hvm/vmx/vvmx.c:    v->arch.hvm_vmx.launched = 0;
./xen/arch/x86/hvm/vmx/vvmx.c:            if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/vmx/vvmx.c:            if ( v->fpu_dirtied )
./xen/arch/x86/hvm/vmx/intr.c:    if ( !(v->arch.hvm_vmx.exec_control & ctl) )
./xen/arch/x86/hvm/vmx/intr.c:        v->arch.hvm_vmx.exec_control |= ctl;
./xen/arch/x86/hvm/vmx/intr.c: *   v->arch.hvm_vmx.exec_control.VIRTUAL_INTR_PENDING now denotes
./xen/arch/x86/hvm/vmx/intr.c:    if ( unlikely(v->arch.hvm_vcpu.single_step) )
./xen/arch/x86/hvm/vmx/intr.c:        v->arch.hvm_vmx.exec_control |= CPU_BASED_MONITOR_TRAP_FLAG;
./xen/arch/x86/hvm/vmx/vmcs.c:    struct arch_vmx_struct *arch_vmx = &v->arch.hvm_vmx;
./xen/arch/x86/hvm/vmx/vmcs.c:    int cpu = v->arch.hvm_vmx.active_cpu;
./xen/arch/x86/hvm/vmx/vmcs.c:    if ( v->arch.hvm_vmx.active_cpu == -1 )
./xen/arch/x86/hvm/vmx/vmcs.c:        list_add(&v->arch.hvm_vmx.active_list, &this_cpu(active_vmcs_list));
./xen/arch/x86/hvm/vmx/vmcs.c:        v->arch.hvm_vmx.active_cpu = smp_processor_id();
./xen/arch/x86/hvm/vmx/vmcs.c:    ASSERT(v->arch.hvm_vmx.active_cpu == smp_processor_id());
./xen/arch/x86/hvm/vmx/vmcs.c:    __vmptrld(virt_to_maddr(v->arch.hvm_vmx.vmcs));
./xen/arch/x86/hvm/vmx/vmcs.c:    this_cpu(current_vmcs) = v->arch.hvm_vmx.vmcs;
./xen/arch/x86/hvm/vmx/vmcs.c:    if ( fv->v == v )
./xen/arch/x86/hvm/vmx/vmcs.c:        BUG_ON(fv->count == 0);
./xen/arch/x86/hvm/vmx/vmcs.c:        BUG_ON(fv->v != NULL);
./xen/arch/x86/hvm/vmx/vmcs.c:        BUG_ON(fv->count != 0);
./xen/arch/x86/hvm/vmx/vmcs.c:        spin_lock(&v->arch.hvm_vmx.vmcs_lock);
./xen/arch/x86/hvm/vmx/vmcs.c:        fv->v = v;
./xen/arch/x86/hvm/vmx/vmcs.c:    fv->count++;
./xen/arch/x86/hvm/vmx/vmcs.c:    BUG_ON(fv->v != v);
./xen/arch/x86/hvm/vmx/vmcs.c:    BUG_ON(fv->count == 0);
./xen/arch/x86/hvm/vmx/vmcs.c:    if ( --fv->count == 0 )
./xen/arch/x86/hvm/vmx/vmcs.c:        spin_unlock(&v->arch.hvm_vmx.vmcs_lock);
./xen/arch/x86/hvm/vmx/vmcs.c:        fv->v = NULL;
./xen/arch/x86/hvm/vmx/vmcs.c:    unsigned long *msr_bitmap = v->arch.hvm_vmx.msr_bitmap;
./xen/arch/x86/hvm/vmx/vmcs.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/vmx/vmcs.c:    v->arch.hvm_vmx.exec_control = vmx_cpu_based_exec_control;
./xen/arch/x86/hvm/vmx/vmcs.c:        v->arch.hvm_vmx.exec_control |= CPU_BASED_RDTSC_EXITING;
./xen/arch/x86/hvm/vmx/vmcs.c:    v->arch.hvm_vmx.secondary_exec_control = vmx_secondary_exec_control;
./xen/arch/x86/hvm/vmx/vmcs.c:    v->arch.hvm_vmx.secondary_exec_control &= ~SECONDARY_EXEC_ENABLE_VPID;
./xen/arch/x86/hvm/vmx/vmcs.c:        v->arch.hvm_vmx.exec_control &= ~(CPU_BASED_INVLPG_EXITING |
./xen/arch/x86/hvm/vmx/vmcs.c:        v->arch.hvm_vmx.secondary_exec_control &= 
./xen/arch/x86/hvm/vmx/vmcs.c:    v->arch.hvm_vmx.exec_control &= ~CPU_BASED_MONITOR_TRAP_FLAG;
./xen/arch/x86/hvm/vmx/vmcs.c:                  v->arch.hvm_vmx.secondary_exec_control);
./xen/arch/x86/hvm/vmx/vmcs.c:        v->arch.hvm_vmx.msr_bitmap = msr_bitmap;
./xen/arch/x86/hvm/vmx/vmcs.c:    v->arch.hvm_vmx.host_cr0 = read_cr0() | X86_CR0_TS;
./xen/arch/x86/hvm/vmx/vmcs.c:    __vmwrite(HOST_CR0, v->arch.hvm_vmx.host_cr0);
./xen/arch/x86/hvm/vmx/vmcs.c:    v->arch.hvm_vmx.exception_bitmap = HVM_TRAP_MASK
./xen/arch/x86/hvm/vmx/vmcs.c:    v->arch.hvm_vcpu.guest_cr[0] = X86_CR0_PE | X86_CR0_ET;
./xen/arch/x86/hvm/vmx/vmcs.c:    v->arch.hvm_vcpu.guest_cr[4] = 0;
./xen/arch/x86/hvm/vmx/vmcs.c:    struct arch_vmx_struct *arch_vmx = &v->arch.hvm_vmx;
./xen/arch/x86/hvm/vmx/vmcs.c:    struct arch_vmx_struct *arch_vmx = &v->arch.hvm_vmx;
./xen/arch/x86/hvm/vmx/vmcs.c:    free_xenheap_page(v->arch.hvm_vmx.host_msr_area);
./xen/arch/x86/hvm/vmx/vmcs.c:    free_xenheap_page(v->arch.hvm_vmx.msr_area);
./xen/arch/x86/hvm/vmx/vmcs.c:    free_xenheap_page(v->arch.hvm_vmx.msr_bitmap);
./xen/arch/x86/hvm/vmx/vmcs.c:    if ( v->arch.hvm_vmx.active_cpu == smp_processor_id() )
./xen/arch/x86/hvm/vmx/vmcs.c:        if ( v->arch.hvm_vmx.vmcs != this_cpu(current_vmcs) )
./xen/arch/x86/hvm/vmx/vmcs.c:        if ( has_arch_pdevs(v->domain) && !iommu_snoop
./xen/arch/x86/hvm/vmx/vmcs.c:            int cpu = v->arch.hvm_vmx.active_cpu;
./xen/arch/x86/hvm/vmx/vmcs.c:        v->arch.hvm_vmx.hostenv_migrated = 1;
./xen/arch/x86/hvm/vmx/vmcs.c:    debug_state = v->domain->debugger_attached
./xen/arch/x86/hvm/vmx/vmcs.c:                  || v->domain->arch.hvm_domain.params[HVM_PARAM_MEMORY_EVENT_INT3]
./xen/arch/x86/hvm/vmx/vmcs.c:                  || v->domain->arch.hvm_domain.params[HVM_PARAM_MEMORY_EVENT_SINGLE_STEP];
./xen/arch/x86/hvm/vmx/vmcs.c:    if ( unlikely(v->arch.hvm_vcpu.debug_state_latch != debug_state) )
./xen/arch/x86/hvm/vmx/vmcs.c:        v->arch.hvm_vcpu.debug_state_latch = debug_state;
./xen/arch/x86/hvm/vmx/vmcs.c:    struct cpu_user_regs *regs = &v->arch.user_regs;
./xen/arch/x86/hvm/vmx/vmcs.c:            printk("\tVCPU %d\n", v->vcpu_id);
./xen/arch/x86/hvm/viridian.c:    gdprintk(XENLOG_INFO, "APIC_ASSIST[%d]:\n", v->vcpu_id);
./xen/arch/x86/hvm/viridian.c:            v->arch.hvm_vcpu.viridian.apic_assist.fields.enabled);
./xen/arch/x86/hvm/viridian.c:            (unsigned long)v->arch.hvm_vcpu.viridian.apic_assist.fields.pfn);
./xen/arch/x86/hvm/viridian.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/viridian.c:    unsigned long gmfn = v->arch.hvm_vcpu.viridian.apic_assist.fields.pfn;
./xen/arch/x86/hvm/viridian.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/viridian.c:        v->arch.hvm_vcpu.viridian.apic_assist.raw = val;
./xen/arch/x86/hvm/viridian.c:        if (v->arch.hvm_vcpu.viridian.apic_assist.fields.enabled)
./xen/arch/x86/hvm/viridian.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/viridian.c:        *val = v->vcpu_id;
./xen/arch/x86/hvm/viridian.c:        *val = v->arch.hvm_vcpu.viridian.apic_assist.raw;
./xen/arch/x86/hvm/viridian.c:        ctxt.apic_assist = v->arch.hvm_vcpu.viridian.apic_assist.raw;
./xen/arch/x86/hvm/viridian.c:        if ( hvm_save_entry(VIRIDIAN_VCPU, v->vcpu_id, h, &ctxt) != 0 )
./xen/arch/x86/hvm/viridian.c:    v->arch.hvm_vcpu.viridian.apic_assist.raw = ctxt.apic_assist;
./xen/arch/x86/hvm/intercept.c:    struct hvm_io_handler *handler = v->domain->arch.hvm_domain.io_handler;
./xen/arch/x86/hvm/vmsi.c:            dest_vcpu_id = v->vcpu_id;
./xen/arch/x86/hvm/vmsi.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/vmsi.c:    idx = entry->pdev->msix_table_idx[nr_page];
./xen/arch/x86/hvm/pmtimer.c:    PMTState *s = &v->domain->arch.hvm_domain.pl_time.vpmt;
./xen/arch/x86/hvm/pmtimer.c:        ((v->domain->arch.hvm_domain.params[
./xen/arch/x86/hvm/pmtimer.c:    PMTState *s = &v->domain->arch.hvm_domain.pl_time.vpmt;
./xen/arch/x86/hvm/pmtimer.c:    PMTState *s = &v->domain->arch.hvm_domain.pl_time.vpmt;
./xen/arch/x86/hvm/pmtimer.c:    register_portio_handler(v->domain, TMR_VAL_ADDR_V0, 4, handle_pmt_io);
./xen/arch/x86/hvm/pmtimer.c:    register_portio_handler(v->domain, PM1a_STS_ADDR_V0, 4, handle_evt_io);
./xen/arch/x86/hvm/pmtimer.c:    init_timer(&s->timer, pmt_timer_callback, s, v->processor);
./xen/arch/x86/hvm/hpet.c:    return (v->domain->arch.hvm_domain.params[HVM_PARAM_HPET_ENABLED] &&
./xen/arch/x86/hvm/vpt.c:    struct pl_time *pl = &v->domain->arch.hvm_domain.pl_time;
./xen/arch/x86/hvm/vpt.c:    return now + v->arch.hvm_vcpu.stime_offset;
./xen/arch/x86/hvm/vpt.c:    v->arch.hvm_vcpu.stime_offset += guest_time - hvm_get_guest_time(v);
./xen/arch/x86/hvm/vpt.c:        return (v->domain->arch.hvm_domain.vpic[isa_irq >> 3].irq_base
./xen/arch/x86/hvm/vpt.c:    return domain_vioapic(v->domain)->redirtbl[gsi].fields.vector;
./xen/arch/x86/hvm/vpt.c:    pic_imr = v->domain->arch.hvm_domain.vpic[isa_irq >> 3].imr;
./xen/arch/x86/hvm/vpt.c:            domain_vioapic(v->domain)->redirtbl[gsi].fields.mask);
./xen/arch/x86/hvm/vpt.c:        spin_lock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:        spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    if ( !mode_is(v->domain, delay_for_missed_ticks) )
./xen/arch/x86/hvm/vpt.c:    v->arch.hvm_vcpu.guest_time = hvm_get_guest_time(v);
./xen/arch/x86/hvm/vpt.c:    if ( !mode_is(v->domain, delay_for_missed_ticks) )
./xen/arch/x86/hvm/vpt.c:    if ( v->arch.hvm_vcpu.guest_time == 0 )
./xen/arch/x86/hvm/vpt.c:    hvm_set_guest_time(v, v->arch.hvm_vcpu.guest_time);
./xen/arch/x86/hvm/vpt.c:    v->arch.hvm_vcpu.guest_time = 0;
./xen/arch/x86/hvm/vpt.c:    struct list_head *head = &v->arch.hvm_vcpu.tm_list;
./xen/arch/x86/hvm/vpt.c:    if ( test_bit(_VPF_blocked, &v->pause_flags) )
./xen/arch/x86/hvm/vpt.c:    spin_lock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    struct list_head *head = &v->arch.hvm_vcpu.tm_list;
./xen/arch/x86/hvm/vpt.c:    spin_lock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    struct list_head *head = &v->arch.hvm_vcpu.tm_list;
./xen/arch/x86/hvm/vpt.c:    spin_lock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:        spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:        hvm_isa_irq_deassert(v->domain, irq);
./xen/arch/x86/hvm/vpt.c:        hvm_isa_irq_assert(v->domain, irq);
./xen/arch/x86/hvm/vpt.c:    struct list_head *head = &v->arch.hvm_vcpu.tm_list;
./xen/arch/x86/hvm/vpt.c:    spin_lock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:        spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    else if ( mode_is(v->domain, one_missed_tick_pending) ||
./xen/arch/x86/hvm/vpt.c:              mode_is(v->domain, no_missed_ticks_pending) )
./xen/arch/x86/hvm/vpt.c:    if ( mode_is(v->domain, delay_for_missed_ticks) &&
./xen/arch/x86/hvm/vpt.c:    spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    struct list_head *head = &v->arch.hvm_vcpu.tm_list;
./xen/arch/x86/hvm/vpt.c:    spin_lock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:        migrate_timer(&pt->timer, v->processor);
./xen/arch/x86/hvm/vpt.c:    spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    spin_lock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:        if ( v->domain->arch.hvm_domain.params[HVM_PARAM_VPT_ALIGN] )
./xen/arch/x86/hvm/vpt.c:    list_add(&pt->list, &v->arch.hvm_vcpu.tm_list);
./xen/arch/x86/hvm/vpt.c:    init_timer(&pt->timer, pt_timer_fn, pt, v->processor);
./xen/arch/x86/hvm/vpt.c:    spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    spin_lock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:        list_add(&pt->list, &v->arch.hvm_vcpu.tm_list);
./xen/arch/x86/hvm/vpt.c:        migrate_timer(&pt->timer, v->processor);
./xen/arch/x86/hvm/vpt.c:    spin_unlock(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/vpt.c:    vpit = &v->domain->arch.vpit;
./xen/arch/x86/hvm/vpt.c:    pl_time = &v->domain->arch.hvm_domain.pl_time;
./xen/arch/x86/hvm/vlapic.c:        if ( !test_and_set_bool(v->nmi_pending) )
./xen/arch/x86/hvm/vlapic.c:            domain_lock(v->domain);
./xen/arch/x86/hvm/vlapic.c:            if ( v->is_initialised )
./xen/arch/x86/hvm/vlapic.c:                wake = test_and_clear_bit(_VPF_down, &v->pause_flags);
./xen/arch/x86/hvm/vlapic.c:            domain_unlock(v->domain);
./xen/arch/x86/hvm/vlapic.c:        if ( !v->is_initialised )
./xen/arch/x86/hvm/vlapic.c:        if ( v->is_initialised )
./xen/arch/x86/hvm/vlapic.c:        domain_crash(v->domain);
./xen/arch/x86/hvm/vlapic.c:        v = v->next_in_list ? : d->vcpu[0];
./xen/arch/x86/hvm/vlapic.c:    } while ( v->vcpu_id != old );
./xen/arch/x86/hvm/vlapic.c:    domain_crash(v->domain);
./xen/arch/x86/hvm/vlapic.c:            vlapic_adjust_i8259_target(v->domain);
./xen/arch/x86/hvm/vlapic.c:            pt_may_unmask_irq(v->domain, NULL);
./xen/arch/x86/hvm/vlapic.c:    domain_crash(v->domain);
./xen/arch/x86/hvm/vlapic.c:        uint64_t delta = gtsc_to_gtime(v->domain, value - guest_tsc);
./xen/arch/x86/hvm/vlapic.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/vlapic.c:    return ((v == v->domain->arch.hvm_domain.i8259_target) &&
./xen/arch/x86/hvm/vlapic.c:    vlapic_set_reg(vlapic, APIC_ID,  (v->vcpu_id * 2) << 24);
./xen/arch/x86/hvm/vlapic.c:        if ( (rc = hvm_save_entry(LAPIC, v->vcpu_id, h, &s->hw)) != 0 )
./xen/arch/x86/hvm/vlapic.c:        if ( (rc = hvm_save_entry(LAPIC_REGS, v->vcpu_id, h, s->regs)) != 0 )
./xen/arch/x86/hvm/vlapic.c:    HVM_DBG_LOG(DBG_LEVEL_VLAPIC, "%d", v->vcpu_id);
./xen/arch/x86/hvm/vlapic.c:                    v->domain->domain_id, v->vcpu_id);
./xen/arch/x86/hvm/vlapic.c:                    v->domain->domain_id, v->vcpu_id);
./xen/arch/x86/hvm/vlapic.c:    if ( v->vcpu_id == 0 )
./xen/arch/x86/hvm/hvm.c:        *guest_pat = v->arch.hvm_vcpu.pat_cr;
./xen/arch/x86/hvm/hvm.c:        v->arch.hvm_vcpu.pat_cr = guest_pat;
./xen/arch/x86/hvm/hvm.c:    if ( v->domain->arch.vtsc )
./xen/arch/x86/hvm/hvm.c:        tsc = gtime_to_gtsc(v->domain, tsc);
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.cache_tsc_offset = guest_tsc - tsc;
./xen/arch/x86/hvm/hvm.c:    hvm_funcs.set_tsc_offset(v, v->arch.hvm_vcpu.cache_tsc_offset);
./xen/arch/x86/hvm/hvm.c:    /* pmu_set_guest_tsc_offset(v, v->arch.hvm_vcpu.cache_tsc_offset); */
./xen/arch/x86/hvm/hvm.c:    if ( v->domain->arch.vtsc )
./xen/arch/x86/hvm/hvm.c:        tsc = gtime_to_gtsc(v->domain, tsc);
./xen/arch/x86/hvm/hvm.c:        v->domain->arch.vtsc_kerncount++;
./xen/arch/x86/hvm/hvm.c:    return tsc + v->arch.hvm_vcpu.cache_tsc_offset;
./xen/arch/x86/hvm/hvm.c:         (pirq_dpci->gmsi.dest_vcpu_id == v->vcpu_id) )
./xen/arch/x86/hvm/hvm.c:        irq_set_affinity(desc, cpumask_of(v->processor));
./xen/arch/x86/hvm/hvm.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/hvm.c:    hvm_funcs.set_tsc_offset(v, v->arch.hvm_vcpu.cache_tsc_offset);
./xen/arch/x86/hvm/hvm.c:            wait_on_xen_event_channel(v->arch.hvm_vcpu.xen_port,
./xen/arch/x86/hvm/hvm.c:            domain_crash(v->domain);
./xen/arch/x86/hvm/hvm.c:    if ( v->arch.hvm_vcpu.inject_trap.vector != -1 ) 
./xen/arch/x86/hvm/hvm.c:        hvm_inject_trap(&v->arch.hvm_vcpu.inject_trap);
./xen/arch/x86/hvm/hvm.c:        v->arch.hvm_vcpu.inject_trap.vector = -1;
./xen/arch/x86/hvm/hvm.c:        if ( test_bit(_VPF_down, &v->pause_flags) ) 
./xen/arch/x86/hvm/hvm.c:        if ( v->fpu_initialised )
./xen/arch/x86/hvm/hvm.c:            memcpy(ctxt.fpu_regs, v->arch.fpu_ctxt, sizeof(ctxt.fpu_regs));
./xen/arch/x86/hvm/hvm.c:        ctxt.rax = v->arch.user_regs.eax;
./xen/arch/x86/hvm/hvm.c:        ctxt.rbx = v->arch.user_regs.ebx;
./xen/arch/x86/hvm/hvm.c:        ctxt.rcx = v->arch.user_regs.ecx;
./xen/arch/x86/hvm/hvm.c:        ctxt.rdx = v->arch.user_regs.edx;
./xen/arch/x86/hvm/hvm.c:        ctxt.rbp = v->arch.user_regs.ebp;
./xen/arch/x86/hvm/hvm.c:        ctxt.rsi = v->arch.user_regs.esi;
./xen/arch/x86/hvm/hvm.c:        ctxt.rdi = v->arch.user_regs.edi;
./xen/arch/x86/hvm/hvm.c:        ctxt.rsp = v->arch.user_regs.esp;
./xen/arch/x86/hvm/hvm.c:        ctxt.rip = v->arch.user_regs.eip;
./xen/arch/x86/hvm/hvm.c:        ctxt.rflags = v->arch.user_regs.eflags;
./xen/arch/x86/hvm/hvm.c:        ctxt.r8  = v->arch.user_regs.r8;
./xen/arch/x86/hvm/hvm.c:        ctxt.r9  = v->arch.user_regs.r9;
./xen/arch/x86/hvm/hvm.c:        ctxt.r10 = v->arch.user_regs.r10;
./xen/arch/x86/hvm/hvm.c:        ctxt.r11 = v->arch.user_regs.r11;
./xen/arch/x86/hvm/hvm.c:        ctxt.r12 = v->arch.user_regs.r12;
./xen/arch/x86/hvm/hvm.c:        ctxt.r13 = v->arch.user_regs.r13;
./xen/arch/x86/hvm/hvm.c:        ctxt.r14 = v->arch.user_regs.r14;
./xen/arch/x86/hvm/hvm.c:        ctxt.r15 = v->arch.user_regs.r15;
./xen/arch/x86/hvm/hvm.c:        ctxt.dr0 = v->arch.debugreg[0];
./xen/arch/x86/hvm/hvm.c:        ctxt.dr1 = v->arch.debugreg[1];
./xen/arch/x86/hvm/hvm.c:        ctxt.dr2 = v->arch.debugreg[2];
./xen/arch/x86/hvm/hvm.c:        ctxt.dr3 = v->arch.debugreg[3];
./xen/arch/x86/hvm/hvm.c:        ctxt.dr6 = v->arch.debugreg[6];
./xen/arch/x86/hvm/hvm.c:        ctxt.dr7 = v->arch.debugreg[7];
./xen/arch/x86/hvm/hvm.c:        if ( hvm_save_entry(CPU, v->vcpu_id, h, &ctxt) != 0 )
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.msr_tsc_aux = ctxt.msr_tsc_aux;
./xen/arch/x86/hvm/hvm.c:        struct xsave_struct *xsave_area = v->arch.xsave_area;
./xen/arch/x86/hvm/hvm.c:        memcpy(v->arch.xsave_area, ctxt.fpu_regs, sizeof(ctxt.fpu_regs));
./xen/arch/x86/hvm/hvm.c:        v->arch.xcr0_accum = XSTATE_FP_SSE;
./xen/arch/x86/hvm/hvm.c:        v->arch.xcr0 = XSTATE_FP_SSE;
./xen/arch/x86/hvm/hvm.c:        memcpy(v->arch.fpu_ctxt, ctxt.fpu_regs, sizeof(ctxt.fpu_regs));
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.eax = ctxt.rax;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.ebx = ctxt.rbx;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.ecx = ctxt.rcx;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.edx = ctxt.rdx;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.ebp = ctxt.rbp;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.esi = ctxt.rsi;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.edi = ctxt.rdi;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.esp = ctxt.rsp;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.eip = ctxt.rip;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.eflags = ctxt.rflags | 2;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.r8  = ctxt.r8;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.r9  = ctxt.r9;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.r10 = ctxt.r10;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.r11 = ctxt.r11;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.r12 = ctxt.r12;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.r13 = ctxt.r13;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.r14 = ctxt.r14;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.r15 = ctxt.r15;
./xen/arch/x86/hvm/hvm.c:    v->arch.debugreg[0] = ctxt.dr0;
./xen/arch/x86/hvm/hvm.c:    v->arch.debugreg[1] = ctxt.dr1;
./xen/arch/x86/hvm/hvm.c:    v->arch.debugreg[2] = ctxt.dr2;
./xen/arch/x86/hvm/hvm.c:    v->arch.debugreg[3] = ctxt.dr3;
./xen/arch/x86/hvm/hvm.c:    v->arch.debugreg[6] = ctxt.dr6;
./xen/arch/x86/hvm/hvm.c:    v->arch.debugreg[7] = ctxt.dr7;
./xen/arch/x86/hvm/hvm.c:    v->arch.vgc_flags = VGCF_online;
./xen/arch/x86/hvm/hvm.c:    v->fpu_initialised = 1;
./xen/arch/x86/hvm/hvm.c:    v->is_initialised = 1;
./xen/arch/x86/hvm/hvm.c:    clear_bit(_VPF_down, &v->pause_flags);
./xen/arch/x86/hvm/hvm.c:        if ( _hvm_init_entry(h, CPU_XSAVE_CODE, v->vcpu_id, HVM_CPU_XSAVE_SIZE) )
./xen/arch/x86/hvm/hvm.c:        ctxt->xcr0 = v->arch.xcr0;
./xen/arch/x86/hvm/hvm.c:        ctxt->xcr0_accum = v->arch.xcr0_accum;
./xen/arch/x86/hvm/hvm.c:        if ( v->fpu_initialised )
./xen/arch/x86/hvm/hvm.c:                v->arch.xsave_area, xsave_cntxt_size);
./xen/arch/x86/hvm/hvm.c:    v->arch.xcr0 = ctxt->xcr0;
./xen/arch/x86/hvm/hvm.c:    v->arch.xcr0_accum = ctxt->xcr0_accum;
./xen/arch/x86/hvm/hvm.c:    memcpy(v->arch.xsave_area, &ctxt->save_area, xsave_cntxt_size);
./xen/arch/x86/hvm/hvm.c:    if ( nestedhvm_enabled(v->domain) 
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.xen_port = rc;
./xen/arch/x86/hvm/hvm.c:    if ( v->vcpu_id == 0 )
./xen/arch/x86/hvm/hvm.c:        v->domain->arch.hvm_domain.params[HVM_PARAM_BUFIOREQ_EVTCHN] = rc;
./xen/arch/x86/hvm/hvm.c:    spin_lock(&v->domain->arch.hvm_domain.ioreq.lock);
./xen/arch/x86/hvm/hvm.c:    if ( v->domain->arch.hvm_domain.ioreq.va != NULL )
./xen/arch/x86/hvm/hvm.c:        get_ioreq(v)->vp_eport = v->arch.hvm_vcpu.xen_port;
./xen/arch/x86/hvm/hvm.c:    spin_unlock(&v->domain->arch.hvm_domain.ioreq.lock);
./xen/arch/x86/hvm/hvm.c:    spin_lock_init(&v->arch.hvm_vcpu.tm_lock);
./xen/arch/x86/hvm/hvm.c:    INIT_LIST_HEAD(&v->arch.hvm_vcpu.tm_list);
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.inject_trap.vector = -1;
./xen/arch/x86/hvm/hvm.c:        &v->arch.hvm_vcpu.assert_evtchn_irq_tasklet,
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.eflags = 2;
./xen/arch/x86/hvm/hvm.c:    if ( v->vcpu_id == 0 )
./xen/arch/x86/hvm/hvm.c:        v->is_initialised = 1;
./xen/arch/x86/hvm/hvm.c:        clear_bit(_VPF_down, &v->pause_flags);
./xen/arch/x86/hvm/hvm.c:    tasklet_kill(&v->arch.hvm_vcpu.assert_evtchn_irq_tasklet);
./xen/arch/x86/hvm/hvm.c:    /*free_xen_event_channel(v, v->arch.hvm_vcpu.xen_port);*/
./xen/arch/x86/hvm/hvm.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/hvm.c:    set_bit(_VPF_down, &v->pause_flags);
./xen/arch/x86/hvm/hvm.c:        if ( !test_bit(_VPF_down, &v->pause_flags) )
./xen/arch/x86/hvm/hvm.c:        domain_crash(v->domain);
./xen/arch/x86/hvm/hvm.c:    prepare_wait_on_xen_event_channel(v->arch.hvm_vcpu.xen_port);
./xen/arch/x86/hvm/hvm.c:    notify_via_xen_event_channel(v->domain, v->arch.hvm_vcpu.xen_port);
./xen/arch/x86/hvm/hvm.c:             "invoking HVM system reset.\n", v->vcpu_id);
./xen/arch/x86/hvm/hvm.c:    domain_shutdown(v->domain, SHUTDOWN_reboot);
./xen/arch/x86/hvm/hvm.c:    if ( nestedhvm_enabled(v->domain)
./xen/arch/x86/hvm/hvm.c:    p2m = p2m_get_hostp2m(v->domain);
./xen/arch/x86/hvm/hvm.c:            paging_mark_dirty(v->domain, mfn_x(mfn));
./xen/arch/x86/hvm/hvm.c:            p2m_change_type(v->domain, gfn, p2m_ram_logdirty, p2m_ram_rw);
./xen/arch/x86/hvm/hvm.c:        p2m_mem_paging_populate(v->domain, gfn);
./xen/arch/x86/hvm/hvm.c:        if ( (rv = mem_sharing_notify_enomem(v->domain, gfn, 1)) < 0 )
./xen/arch/x86/hvm/hvm.c:                        v->domain->domain_id, gfn, rv);
./xen/arch/x86/hvm/hvm.c:        mem_access_send_req(v->domain, req_ptr);
./xen/arch/x86/hvm/hvm.c:    v->arch.xcr0 = new_bv;
./xen/arch/x86/hvm/hvm.c:    v->arch.xcr0_accum |= new_bv;
./xen/arch/x86/hvm/hvm.c:    if ( !hvm_efer_valid(v->domain, value, efer_validbits) )
./xen/arch/x86/hvm/hvm.c:    if ( ((value ^ v->arch.hvm_vcpu.guest_efer) & EFER_LME) &&
./xen/arch/x86/hvm/hvm.c:    if ( nestedhvm_enabled(v->domain) && cpu_has_svm &&
./xen/arch/x86/hvm/hvm.c:       ((value ^ v->arch.hvm_vcpu.guest_efer) & EFER_SVME) )
./xen/arch/x86/hvm/hvm.c:        p2m_flush_nestedp2m(v->domain);
./xen/arch/x86/hvm/hvm.c:    value |= v->arch.hvm_vcpu.guest_efer & EFER_LMA;
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_efer = value;
./xen/arch/x86/hvm/hvm.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/hvm.c:    v->domain->arch.hvm_domain.is_in_uc_mode = is_in_uc_mode;
./xen/arch/x86/hvm/hvm.c:    shadow_blow_tables_per_domain(v->domain);
./xen/arch/x86/hvm/hvm.c:    unsigned long gfn, old_value = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/hvm/hvm.c:        if ( v->arch.hvm_vcpu.guest_efer & EFER_LME )
./xen/arch/x86/hvm/hvm.c:            if ( !(v->arch.hvm_vcpu.guest_cr[4] & X86_CR4_PAE) )
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.guest_efer |= EFER_LMA;
./xen/arch/x86/hvm/hvm.c:        if ( !paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/hvm.c:            gfn = v->arch.hvm_vcpu.guest_cr[3]>>PAGE_SHIFT;
./xen/arch/x86/hvm/hvm.c:            page = get_page_from_gfn(v->domain, gfn, NULL, P2M_ALLOC);
./xen/arch/x86/hvm/hvm.c:                         v->arch.hvm_vcpu.guest_cr[3]);
./xen/arch/x86/hvm/hvm.c:                domain_crash(v->domain);
./xen/arch/x86/hvm/hvm.c:            v->arch.guest_table = pagetable_from_page(page);
./xen/arch/x86/hvm/hvm.c:                        v->arch.hvm_vcpu.guest_cr[3], page_to_mfn(page));
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.guest_efer &= ~EFER_LMA;
./xen/arch/x86/hvm/hvm.c:        if ( !paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/hvm.c:            put_page(pagetable_get_page(v->arch.guest_table));
./xen/arch/x86/hvm/hvm.c:            v->arch.guest_table = pagetable_null();
./xen/arch/x86/hvm/hvm.c:    if ( has_arch_mmios(v->domain) )
./xen/arch/x86/hvm/hvm.c:            spin_lock(&v->domain->arch.hvm_domain.uc_lock);
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.cache_mode = NO_FILL_CACHE_MODE;
./xen/arch/x86/hvm/hvm.c:            if ( !v->domain->arch.hvm_domain.is_in_uc_mode )
./xen/arch/x86/hvm/hvm.c:            spin_unlock(&v->domain->arch.hvm_domain.uc_lock);
./xen/arch/x86/hvm/hvm.c:                  (v->arch.hvm_vcpu.cache_mode == NO_FILL_CACHE_MODE) )
./xen/arch/x86/hvm/hvm.c:            spin_lock(&v->domain->arch.hvm_domain.uc_lock);
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.cache_mode = NORMAL_CACHE_MODE;
./xen/arch/x86/hvm/hvm.c:            spin_unlock(&v->domain->arch.hvm_domain.uc_lock);
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_cr[0] = value;
./xen/arch/x86/hvm/hvm.c:    if ( hvm_paging_enabled(v) && !paging_mode_hap(v->domain) &&
./xen/arch/x86/hvm/hvm.c:         (value != v->arch.hvm_vcpu.guest_cr[3]) )
./xen/arch/x86/hvm/hvm.c:        page = get_page_from_gfn(v->domain, value >> PAGE_SHIFT,
./xen/arch/x86/hvm/hvm.c:        put_page(pagetable_get_page(v->arch.guest_table));
./xen/arch/x86/hvm/hvm.c:        v->arch.guest_table = pagetable_from_page(page);
./xen/arch/x86/hvm/hvm.c:    old=v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_cr[3] = value;
./xen/arch/x86/hvm/hvm.c:    domain_crash(v->domain);
./xen/arch/x86/hvm/hvm.c:    old_cr = v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/hvm/hvm.c:          (v->arch.hvm_vcpu.guest_cr[3] & 0xfff)) )
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_cr[4] = value;
./xen/arch/x86/hvm/hvm.c:    tss.cr3    = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_cr[0] |= X86_CR0_TS;
./xen/arch/x86/hvm/hvm.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/hvm.c:        *ebx |= (v->vcpu_id * 2) << 24;
./xen/arch/x86/hvm/hvm.c:            *ecx |= (v->arch.hvm_vcpu.guest_cr[4] & X86_CR4_OSXSAVE) ?
./xen/arch/x86/hvm/hvm.c:        *edx = v->vcpu_id * 2;
./xen/arch/x86/hvm/hvm.c:        if ( count == 0 && v->arch.xcr0 ) 
./xen/arch/x86/hvm/hvm.c:                if ( !(v->arch.xcr0 & (1ULL << sub_leaf)) )
./xen/arch/x86/hvm/hvm.c:    var_range_base = (uint64_t *)v->arch.hvm_vcpu.mtrr.var_ranges;
./xen/arch/x86/hvm/hvm.c:    fixed_range_base = (uint64_t *)v->arch.hvm_vcpu.mtrr.fixed_ranges;
./xen/arch/x86/hvm/hvm.c:        *msr_content = v->arch.hvm_vcpu.guest_efer;
./xen/arch/x86/hvm/hvm.c:        *msr_content = v->arch.hvm_vcpu.mtrr.mtrr_cap;
./xen/arch/x86/hvm/hvm.c:        *msr_content = v->arch.hvm_vcpu.mtrr.def_type
./xen/arch/x86/hvm/hvm.c:                        | (v->arch.hvm_vcpu.mtrr.enabled << 10);
./xen/arch/x86/hvm/hvm.c:        v->arch.hvm_vcpu.msr_tsc_aux = (uint32_t)msr_content;
./xen/arch/x86/hvm/hvm.c:             && (v->domain->arch.tsc_mode != TSC_MODE_PVRDTSCP) )
./xen/arch/x86/hvm/hvm.c:        if ( !mtrr_def_type_msr_set(&v->arch.hvm_vcpu.mtrr, msr_content) )
./xen/arch/x86/hvm/hvm.c:        if ( !mtrr_fix_range_msr_set(&v->arch.hvm_vcpu.mtrr, 0, msr_content) )
./xen/arch/x86/hvm/hvm.c:        if ( !mtrr_fix_range_msr_set(&v->arch.hvm_vcpu.mtrr,
./xen/arch/x86/hvm/hvm.c:        if ( !mtrr_fix_range_msr_set(&v->arch.hvm_vcpu.mtrr,
./xen/arch/x86/hvm/hvm.c:        if ( !mtrr_var_range_msr_set(v->domain, &v->arch.hvm_vcpu.mtrr,
./xen/arch/x86/hvm/hvm.c:    if ( nestedhvm_enabled(v->domain) ) {
./xen/arch/x86/hvm/hvm.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/hvm.c:    if ( v->is_initialised )
./xen/arch/x86/hvm/hvm.c:        if ( v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_PG )
./xen/arch/x86/hvm/hvm.c:            put_page(pagetable_get_page(v->arch.guest_table));
./xen/arch/x86/hvm/hvm.c:        v->arch.guest_table = pagetable_null();
./xen/arch/x86/hvm/hvm.c:    memset(v->arch.fpu_ctxt, 0, sizeof(v->arch.xsave_area->fpu_sse));
./xen/arch/x86/hvm/hvm.c:    v->arch.vgc_flags = VGCF_online;
./xen/arch/x86/hvm/hvm.c:    memset(&v->arch.user_regs, 0, sizeof(v->arch.user_regs));
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.eflags = 2;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.edx = 0x00000f00;
./xen/arch/x86/hvm/hvm.c:    v->arch.user_regs.eip = ip;
./xen/arch/x86/hvm/hvm.c:    memset(&v->arch.debugreg, 0, sizeof(v->arch.debugreg));
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_cr[0] = X86_CR0_ET;
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_cr[2] = 0;
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_cr[3] = 0;
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_cr[4] = 0;
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.guest_efer = 0;
./xen/arch/x86/hvm/hvm.c:    v->arch.hvm_vcpu.cache_tsc_offset =
./xen/arch/x86/hvm/hvm.c:        v->domain->vcpu[0]->arch.hvm_vcpu.cache_tsc_offset;
./xen/arch/x86/hvm/hvm.c:    hvm_funcs.set_tsc_offset(v, v->arch.hvm_vcpu.cache_tsc_offset);
./xen/arch/x86/hvm/hvm.c:    /* pmu_set_guest_tsc_offset(v, v->arch.hvm_vcpu.cache_tsc_offset); */
./xen/arch/x86/hvm/hvm.c:    v->arch.flags |= TF_kernel_mode;
./xen/arch/x86/hvm/hvm.c:    v->is_initialised = 1;
./xen/arch/x86/hvm/hvm.c:    clear_bit(_VPF_down, &v->pause_flags);
./xen/arch/x86/hvm/hvm.c:            while ( !vcpu_runnable(v) && v->is_running )
./xen/arch/x86/hvm/hvm.c:                        get_ioreq(v)->vp_eport = v->arch.hvm_vcpu.xen_port;
./xen/arch/x86/hvm/hvm.c:                                                   &v->arch.hvm_vcpu.xen_port);
./xen/arch/x86/hvm/hvm.c:                        get_ioreq(v)->vp_eport = v->arch.hvm_vcpu.xen_port;
./xen/arch/x86/hvm/hvm.c:        if ( v->arch.hvm_vcpu.inject_trap.vector != -1 )
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.inject_trap.vector = tr.vector;
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.inject_trap.type = tr.type;
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.inject_trap.error_code = tr.error_code;
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.inject_trap.insn_len = tr.insn_len;
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.inject_trap.cr2 = tr.cr2;
./xen/arch/x86/hvm/hvm.c:            v->arch.hvm_vcpu.single_step =
./xen/arch/x86/hvm/hvm.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/hvm.c:    req.vcpu_id = v->vcpu_id;
./xen/arch/x86/hvm/svm/emulate.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/emulate.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/emulate.c:    pfec = (vmcb_get_cpl(v->arch.hvm_svm.vmcb) == 3) ? PFEC_user_mode : 0;
./xen/arch/x86/hvm/svm/emulate.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/vmcb.c:    struct arch_svm_struct *arch_svm = &v->arch.hvm_svm;
./xen/arch/x86/hvm/svm/vmcb.c:    if ( v->domain->arch.vtsc && !cpu_has_tsc_ratio )
./xen/arch/x86/hvm/svm/vmcb.c:    v->arch.hvm_vcpu.guest_efer = 0;
./xen/arch/x86/hvm/svm/vmcb.c:    v->arch.hvm_vcpu.guest_cr[0] = X86_CR0_PE | X86_CR0_ET;
./xen/arch/x86/hvm/svm/vmcb.c:    v->arch.hvm_vcpu.guest_cr[4] = 0;
./xen/arch/x86/hvm/svm/vmcb.c:    if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/svm/vmcb.c:            p2m_get_pagetable(p2m_get_hostp2m(v->domain)));
./xen/arch/x86/hvm/svm/vmcb.c:    struct arch_svm_struct *arch_svm = &v->arch.hvm_svm;
./xen/arch/x86/hvm/svm/vmcb.c:    if ( (nv->nv_n1vmcx == NULL) &&
./xen/arch/x86/hvm/svm/vmcb.c:         (nv->nv_n1vmcx = alloc_vmcb()) == NULL )
./xen/arch/x86/hvm/svm/vmcb.c:    arch_svm->vmcb = nv->nv_n1vmcx;
./xen/arch/x86/hvm/svm/vmcb.c:        free_vmcb(nv->nv_n1vmcx);
./xen/arch/x86/hvm/svm/vmcb.c:        nv->nv_n1vmcx = NULL;
./xen/arch/x86/hvm/svm/vmcb.c:    arch_svm->vmcb_pa = nv->nv_n1vmcx_pa = virt_to_maddr(arch_svm->vmcb);
./xen/arch/x86/hvm/svm/vmcb.c:    struct arch_svm_struct *arch_svm = &v->arch.hvm_svm;
./xen/arch/x86/hvm/svm/vmcb.c:    if ( nv->nv_n1vmcx != NULL )
./xen/arch/x86/hvm/svm/vmcb.c:        free_vmcb(nv->nv_n1vmcx);
./xen/arch/x86/hvm/svm/vmcb.c:    nv->nv_n1vmcx = NULL;
./xen/arch/x86/hvm/svm/vmcb.c:    nv->nv_n1vmcx_pa = VMCX_EADDR;
./xen/arch/x86/hvm/svm/vmcb.c:            printk("\tVCPU %d\n", v->vcpu_id);
./xen/arch/x86/hvm/svm/vmcb.c:            svm_vmcb_dump("key_handler", v->arch.hvm_svm.vmcb);
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (nv->nv_vvmcx != NULL && nv->nv_vvmcxaddr != vmcbaddr) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        ASSERT(nv->nv_vvmcx != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:        ASSERT(nv->nv_vvmcxaddr != VMCX_EADDR);
./xen/arch/x86/hvm/svm/nestedsvm.c:        hvm_unmap_guest_frame(nv->nv_vvmcx);
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_vvmcx = NULL;
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_vvmcxaddr = VMCX_EADDR;
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (nv->nv_vvmcx == NULL) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_vvmcx = hvm_map_guest_frame_rw(vmcbaddr >> PAGE_SHIFT);
./xen/arch/x86/hvm/svm/nestedsvm.c:        if (nv->nv_vvmcx == NULL)
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_vvmcxaddr = vmcbaddr;
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_n2vmcx = alloc_vmcb();
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (nv->nv_n2vmcx == NULL)
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_n2vmcx_pa = virt_to_maddr(nv->nv_n2vmcx);
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (nv->nv_n1vmcx)
./xen/arch/x86/hvm/svm/nestedsvm.c:        v->arch.hvm_svm.vmcb = nv->nv_n1vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (nv->nv_n2vmcx) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        free_vmcb(nv->nv_n2vmcx);
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_n2vmcx = NULL;
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_n2vmcx_pa = VMCX_EADDR;
./xen/arch/x86/hvm/svm/nestedsvm.c:    n1vmcb = nv->nv_n1vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    n1vmcb->_efer = v->arch.hvm_vcpu.guest_efer;
./xen/arch/x86/hvm/svm/nestedsvm.c:    n1vmcb->_cr0 = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/hvm/svm/nestedsvm.c:    n1vmcb->_cr2 = v->arch.hvm_vcpu.guest_cr[2];
./xen/arch/x86/hvm/svm/nestedsvm.c:    n1vmcb->_cr4 = v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/hvm/svm/nestedsvm.c:    n1vmcb = nv->nv_n1vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    n2vmcb = nv->nv_n2vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_svm.vmcb = n1vmcb;
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_svm.vmcb_pa = nv->nv_n1vmcx_pa;
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_vcpu.guest_efer = n1vmcb->_efer;
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_vcpu.guest_cr[4] = n1vmcb->_cr4;
./xen/arch/x86/hvm/svm/nestedsvm.c:        svm->ns_cr0, v->arch.hvm_vcpu.guest_cr[0]);
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_vcpu.guest_cr[0] = n1vmcb->_cr0 | X86_CR0_PE;
./xen/arch/x86/hvm/svm/nestedsvm.c:    svm->ns_cr0 = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_vcpu.guest_cr[2] = n1vmcb->_cr2;
./xen/arch/x86/hvm/svm/nestedsvm.c:        /* hvm_set_cr3() below sets v->arch.hvm_vcpu.guest_cr[3] for us. */
./xen/arch/x86/hvm/svm/nestedsvm.c:    } else if (paging_mode_hap(v->domain)) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        /* hvm_set_cr3() below sets v->arch.hvm_vcpu.guest_cr[3] for us. */
./xen/arch/x86/hvm/svm/nestedsvm.c:        if (!pagetable_is_null(v->arch.guest_table))
./xen/arch/x86/hvm/svm/nestedsvm.c:            put_page(pagetable_get_page(v->arch.guest_table));
./xen/arch/x86/hvm/svm/nestedsvm.c:        v->arch.guest_table = pagetable_null();
./xen/arch/x86/hvm/svm/nestedsvm.c:        /* hvm_set_cr3() below sets v->arch.hvm_vcpu.guest_cr[3] for us. */
./xen/arch/x86/hvm/svm/nestedsvm.c:    struct arch_svm_struct *arch_svm = &v->arch.hvm_svm;
./xen/arch/x86/hvm/svm/nestedsvm.c:    struct vmcb_struct *ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_ioport80 = ioport_80;
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_ioportED = ioport_ed;
./xen/arch/x86/hvm/svm/nestedsvm.c:    /* v->arch.hvm_svm.msrpm has type unsigned long, thus
./xen/arch/x86/hvm/svm/nestedsvm.c:    ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    n1vmcb = nv->nv_n1vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    n2vmcb = nv->nv_n2vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (svm->ns_ovvmcb_pa != nv->nv_vvmcxaddr)
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_vcpu.guest_efer = ns_vmcb->_efer;
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_vcpu.guest_cr[4] = ns_vmcb->_cr4;
./xen/arch/x86/hvm/svm/nestedsvm.c:    svm->ns_cr0 = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_vcpu.guest_cr[0] = ns_vmcb->_cr0;
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_vcpu.guest_cr[2] = ns_vmcb->_cr2;
./xen/arch/x86/hvm/svm/nestedsvm.c:        /* hvm_set_cr3() below sets v->arch.hvm_vcpu.guest_cr[3] for us. */
./xen/arch/x86/hvm/svm/nestedsvm.c:    } else if (paging_mode_hap(v->domain)) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        /* hvm_set_cr3() below sets v->arch.hvm_vcpu.guest_cr[3] for us. */
./xen/arch/x86/hvm/svm/nestedsvm.c:    ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nv->nv_n2vmcx != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nv->nv_n2vmcx_pa != VMCX_EADDR);
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_flushp2m = !!ns_vmcb->tlb_control;
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_flushp2m = 1;
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_svm.vmcb = nv->nv_n2vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    v->arch.hvm_svm.vmcb_pa = nv->nv_n2vmcx_pa;
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_vmswitch_in_progress = 1;
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nv->nv_vvmcx != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_vmswitch_in_progress = 0;
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_vmswitch_in_progress = 0;
./xen/arch/x86/hvm/svm/nestedsvm.c:    ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (nv->nv_vmexit_pending) {
./xen/arch/x86/hvm/svm/nestedsvm.c:                && nv->nv_vmentry_pending
./xen/arch/x86/hvm/svm/nestedsvm.c:    struct vmcb_struct *ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:        nestedsvm_vmcb_map(v, nv->nv_vvmcxaddr);
./xen/arch/x86/hvm/svm/nestedsvm.c:        ASSERT(nv->nv_vvmcx != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:        ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:        nestedsvm_vmcb_map(v, nv->nv_vvmcxaddr);
./xen/arch/x86/hvm/svm/nestedsvm.c:        ASSERT(nv->nv_vvmcx != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:        ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    struct vmcb_struct *ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    struct vmcb_struct *n2vmcb = nv->nv_n2vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:    svm_vmsave(nv->nv_n1vmcx);
./xen/arch/x86/hvm/svm/nestedsvm.c:    svm->ns_ovvmcb_pa = nv->nv_vvmcxaddr;
./xen/arch/x86/hvm/svm/nestedsvm.c:    } else if (paging_mode_hap(v->domain)) {
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nestedhvm_enabled(v->domain));
./xen/arch/x86/hvm/svm/nestedsvm.c:        struct vmcb_struct *n2vmcb = nv->nv_n2vmcx;
./xen/arch/x86/hvm/svm/nestedsvm.c:        if ( v->arch.hvm_vcpu.hvm_io.io_state != HVMIO_none )
./xen/arch/x86/hvm/svm/nestedsvm.c:        if ( !nv->nv_vmexit_pending && n2vmcb->exitintinfo.bytes != 0 ) {
./xen/arch/x86/hvm/svm/nestedsvm.c:    if ( nv->nv_vmexit_pending ) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        if (paging_mode_hap(v->domain)) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        if (!paging_mode_hap(v->domain)) {
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_vmswitch_in_progress = 1;
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nv->nv_vvmcx != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:    nv->nv_vmswitch_in_progress = 0;
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (!nestedhvm_enabled(v->domain))
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(v->arch.hvm_svm.vmcb != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nv->nv_n1vmcx != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nv->nv_n2vmcx != NULL);
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nv->nv_n1vmcx_pa != VMCX_EADDR);
./xen/arch/x86/hvm/svm/nestedsvm.c:    ASSERT(nv->nv_n2vmcx_pa != VMCX_EADDR);
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (nv->nv_vmexit_pending) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_vmexit_pending = 0;
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_vmentry_pending = 0;
./xen/arch/x86/hvm/svm/nestedsvm.c:    if (nv->nv_vmentry_pending) {
./xen/arch/x86/hvm/svm/nestedsvm.c:        ASSERT(!nv->nv_vmexit_pending);
./xen/arch/x86/hvm/svm/nestedsvm.c:        nv->nv_vmentry_pending = 0;
./xen/arch/x86/hvm/svm/nestedsvm.c:        if (nv->nv_p2m == NULL)
./xen/arch/x86/hvm/svm/nestedsvm.c:            nestedsvm_vmcb_set_nestedp2m(v, nv->nv_vvmcx, nv->nv_n2vmcx);
./xen/arch/x86/hvm/svm/nestedsvm.c:    if ( !nestedhvm_enabled(v->domain) ) {
./xen/arch/x86/hvm/svm/nestedsvm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/nestedsvm.c:    if ( !nestedhvm_enabled(v->domain) ) {
./xen/arch/x86/hvm/svm/vpmu.c:        v->nmi_pending = 1;
./xen/arch/x86/hvm/svm/vpmu.c:            v->vcpu_id, v->domain->domain_id);
./xen/arch/x86/hvm/svm/svm.c:    msr_bit = svm_msrbit(v->arch.hvm_svm.msrpm, msr);
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    if ( !v->arch.hvm_vcpu.flag_dr_dirty )
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_vcpu.flag_dr_dirty = 0;
./xen/arch/x86/hvm/svm/svm.c:    v->arch.debugreg[0] = read_debugreg(0);
./xen/arch/x86/hvm/svm/svm.c:    v->arch.debugreg[1] = read_debugreg(1);
./xen/arch/x86/hvm/svm/svm.c:    v->arch.debugreg[2] = read_debugreg(2);
./xen/arch/x86/hvm/svm/svm.c:    v->arch.debugreg[3] = read_debugreg(3);
./xen/arch/x86/hvm/svm/svm.c:    v->arch.debugreg[6] = vmcb_get_dr6(vmcb);
./xen/arch/x86/hvm/svm/svm.c:    v->arch.debugreg[7] = vmcb_get_dr7(vmcb);
./xen/arch/x86/hvm/svm/svm.c:    if ( v->arch.hvm_vcpu.flag_dr_dirty )
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_vcpu.flag_dr_dirty = 1;
./xen/arch/x86/hvm/svm/svm.c:    write_debugreg(0, v->arch.debugreg[0]);
./xen/arch/x86/hvm/svm/svm.c:    write_debugreg(1, v->arch.debugreg[1]);
./xen/arch/x86/hvm/svm/svm.c:    write_debugreg(2, v->arch.debugreg[2]);
./xen/arch/x86/hvm/svm/svm.c:    write_debugreg(3, v->arch.debugreg[3]);
./xen/arch/x86/hvm/svm/svm.c:    vmcb_set_dr6(vmcb, v->arch.debugreg[6]);
./xen/arch/x86/hvm/svm/svm.c:    vmcb_set_dr7(vmcb, v->arch.debugreg[7]);
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    if ( unlikely(v->arch.debugreg[7] & DR7_ACTIVE_MASK) )
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    c->cr0 = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/hvm/svm/svm.c:    c->cr2 = v->arch.hvm_vcpu.guest_cr[2];
./xen/arch/x86/hvm/svm/svm.c:    c->cr3 = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/hvm/svm/svm.c:    c->cr4 = v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/hvm/svm/svm.c:    c->sysenter_cs = v->arch.hvm_svm.guest_sysenter_cs;
./xen/arch/x86/hvm/svm/svm.c:    c->sysenter_esp = v->arch.hvm_svm.guest_sysenter_esp;
./xen/arch/x86/hvm/svm/svm.c:    c->sysenter_eip = v->arch.hvm_svm.guest_sysenter_eip;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    struct p2m_domain *p2m = p2m_get_hostp2m(v->domain);
./xen/arch/x86/hvm/svm/svm.c:    if ( !paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/svm/svm.c:            page = get_page_from_gfn(v->domain, c->cr3 >> PAGE_SHIFT,
./xen/arch/x86/hvm/svm/svm.c:        if ( v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_PG )
./xen/arch/x86/hvm/svm/svm.c:            put_page(pagetable_get_page(v->arch.guest_table));
./xen/arch/x86/hvm/svm/svm.c:        v->arch.guest_table =
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_vcpu.guest_cr[0] = c->cr0 | X86_CR0_ET;
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_vcpu.guest_cr[2] = c->cr2;
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_vcpu.guest_cr[3] = c->cr3;
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_vcpu.guest_cr[4] = c->cr4;
./xen/arch/x86/hvm/svm/svm.c:    vmcb->sysenter_cs = v->arch.hvm_svm.guest_sysenter_cs = c->sysenter_cs;
./xen/arch/x86/hvm/svm/svm.c:    vmcb->sysenter_esp = v->arch.hvm_svm.guest_sysenter_esp = c->sysenter_esp;
./xen/arch/x86/hvm/svm/svm.c:    vmcb->sysenter_eip = v->arch.hvm_svm.guest_sysenter_eip = c->sysenter_eip;
./xen/arch/x86/hvm/svm/svm.c:    if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    data->msr_efer         = v->arch.hvm_vcpu.guest_efer;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_vcpu.guest_efer = data->msr_efer;
./xen/arch/x86/hvm/svm/svm.c:        domain_crash(v->domain);
./xen/arch/x86/hvm/svm/svm.c:    ASSERT(!v->fpu_dirtied);
./xen/arch/x86/hvm/svm/svm.c:    if ( !(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_TS) )
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    if ( unlikely(!(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_PE)) )
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:        if ( !(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_TS) )
./xen/arch/x86/hvm/svm/svm.c:        value = v->arch.hvm_vcpu.guest_cr[0] | hw_cr0_mask;
./xen/arch/x86/hvm/svm/svm.c:        if ( !paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/svm/svm.c:        vmcb_set_cr2(vmcb, v->arch.hvm_vcpu.guest_cr[2]);
./xen/arch/x86/hvm/svm/svm.c:        vmcb_set_cr3(vmcb, v->arch.hvm_vcpu.hw_cr[3]);
./xen/arch/x86/hvm/svm/svm.c:        if ( !nestedhvm_enabled(v->domain) )
./xen/arch/x86/hvm/svm/svm.c:                ? &vcpu_nestedhvm(v).nv_n2asid : &v->arch.hvm_vcpu.n1asid);
./xen/arch/x86/hvm/svm/svm.c:        if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/svm/svm.c:        value |= v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    bool_t lma = !!(v->arch.hvm_vcpu.guest_efer & EFER_LMA);
./xen/arch/x86/hvm/svm/svm.c:    new_efer = (v->arch.hvm_vcpu.guest_efer | EFER_SVME) & ~EFER_LME;
./xen/arch/x86/hvm/svm/svm.c:    struct arch_svm_struct *arch_svm = &v->arch.hvm_svm;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    return v->arch.hvm_svm.vmcb->kerngsbase;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    if ( !paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    if ( !paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    struct domain *d = v->domain;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    unsigned int len = v->arch.hvm_svm.cached_insn_len;
./xen/arch/x86/hvm/svm/svm.c:        v->arch.hvm_svm.cached_insn_len = 0;
./xen/arch/x86/hvm/svm/svm.c:    if ( v->arch.hvm_svm.guest_lwp_cfg )
./xen/arch/x86/hvm/svm/svm.c:   if ( v->arch.hvm_svm.guest_lwp_cfg ) 
./xen/arch/x86/hvm/svm/svm.c:       wrmsrl(MSR_AMD64_LWP_CFG, v->arch.hvm_svm.cpu_lwp_cfg);
./xen/arch/x86/hvm/svm/svm.c:        v->arch.hvm_svm.guest_lwp_cfg = msr_content;
./xen/arch/x86/hvm/svm/svm.c:            v->arch.hvm_svm.cpu_lwp_cfg = (msr_content & 0xffff00ffffffffffULL)
./xen/arch/x86/hvm/svm/svm.c:            v->arch.hvm_svm.cpu_lwp_cfg = msr_content & 0xffff00ff7fffffffULL;
./xen/arch/x86/hvm/svm/svm.c:        wrmsrl(MSR_AMD64_LWP_CFG, v->arch.hvm_svm.cpu_lwp_cfg);
./xen/arch/x86/hvm/svm/svm.c:        v->arch.nonlazy_xstate_used = !!(msr_content);
./xen/arch/x86/hvm/svm/svm.c:    if ( cpu_has_tsc_ratio && v->domain->arch.vtsc )
./xen/arch/x86/hvm/svm/svm.c:    if ( cpu_has_tsc_ratio && v->domain->arch.vtsc ) 
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    bool_t debug_state = v->domain->debugger_attached;
./xen/arch/x86/hvm/svm/svm.c:    if ( nestedhvm_enabled(v->domain) && nestedhvm_vcpu_in_guestmode(v) )
./xen/arch/x86/hvm/svm/svm.c:        unlikely(v->arch.hvm_vcpu.debug_state_latch != debug_state) )
./xen/arch/x86/hvm/svm/svm.c:        v->arch.hvm_vcpu.debug_state_latch = debug_state;
./xen/arch/x86/hvm/svm/svm.c:    if ( v->arch.hvm_svm.launch_core != smp_processor_id() )
./xen/arch/x86/hvm/svm/svm.c:        v->arch.hvm_svm.launch_core = smp_processor_id();
./xen/arch/x86/hvm/svm/svm.c:    v->arch.schedule_tail    = svm_do_resume;
./xen/arch/x86/hvm/svm/svm.c:    v->arch.ctxt_switch_from = svm_ctxt_switch_from;
./xen/arch/x86/hvm/svm/svm.c:    v->arch.ctxt_switch_to   = svm_ctxt_switch_to;
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_svm.launch_core = -1;
./xen/arch/x86/hvm/svm/svm.c:                v->vcpu_id, rc);
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:            *val = v->arch.hvm_svm.osvw.length;
./xen/arch/x86/hvm/svm/svm.c:            *val = v->arch.hvm_svm.osvw.status;
./xen/arch/x86/hvm/svm/svm.c:        ASSERT(nestedhvm_enabled(v->domain) && nestedhvm_vcpu_in_guestmode(v));
./xen/arch/x86/hvm/svm/svm.c:    domain_crash(v->domain);
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:       if ( v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_TS )
./xen/arch/x86/hvm/svm/svm.c:    if ( !(v->arch.hvm_vcpu.guest_cr[0] & X86_CR0_TS) )
./xen/arch/x86/hvm/svm/svm.c:        uint64_t lwp_cfg = v->arch.hvm_svm.guest_lwp_cfg;
./xen/arch/x86/hvm/svm/svm.c:            if ( !(v->arch.xcr0 & XSTATE_LWP) )
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:        *msr_content = v->arch.hvm_svm.guest_sysenter_cs;
./xen/arch/x86/hvm/svm/svm.c:        *msr_content = v->arch.hvm_svm.guest_sysenter_esp;
./xen/arch/x86/hvm/svm/svm.c:        *msr_content = v->arch.hvm_svm.guest_sysenter_eip;
./xen/arch/x86/hvm/svm/svm.c:        *msr_content = v->arch.hvm_svm.guest_lwp_cfg;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:        vmcb->sysenter_cs = v->arch.hvm_svm.guest_sysenter_cs = msr_content;
./xen/arch/x86/hvm/svm/svm.c:        vmcb->sysenter_esp = v->arch.hvm_svm.guest_sysenter_esp = msr_content;
./xen/arch/x86/hvm/svm/svm.c:        vmcb->sysenter_eip = v->arch.hvm_svm.guest_sysenter_eip = msr_content;
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    if (!nestedhvm_enabled(v->domain)) {
./xen/arch/x86/hvm/svm/svm.c:    if (!nestedhvm_enabled(v->domain)) {
./xen/arch/x86/hvm/svm/svm.c:    svm_vmload(nv->nv_vvmcx);
./xen/arch/x86/hvm/svm/svm.c:    v->arch.hvm_svm.vmcb_in_sync = 0;
./xen/arch/x86/hvm/svm/svm.c:    if (!nestedhvm_enabled(v->domain)) {
./xen/arch/x86/hvm/svm/svm.c:    svm_vmsave(nv->nv_vvmcx);
./xen/arch/x86/hvm/svm/svm.c:    flush_tlb_mask(v->domain->domain_dirty_cpumask);
./xen/arch/x86/hvm/svm/svm.c:        domain_crash(v->domain);
./xen/arch/x86/hvm/svm/svm.c:                ? v->arch.hvm_vcpu.n1asid.asid
./xen/arch/x86/hvm/svm/svm.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/svm.c:    if ( paging_mode_hap(v->domain) )
./xen/arch/x86/hvm/svm/svm.c:        v->arch.hvm_vcpu.guest_cr[3] = v->arch.hvm_vcpu.hw_cr[3] =
./xen/arch/x86/hvm/svm/svm.c:    if ( nestedhvm_enabled(v->domain) && nestedhvm_vcpu_in_guestmode(v) )
./xen/arch/x86/hvm/svm/svm.c:        struct vmcb_struct *ns_vmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/svm.c:            nv->nv_vmswitch_in_progress = 1;
./xen/arch/x86/hvm/svm/svm.c:            nv->nv_vmswitch_in_progress = 0;
./xen/arch/x86/hvm/svm/svm.c:        if ( !v->domain->debugger_attached )
./xen/arch/x86/hvm/svm/svm.c:        if ( !v->domain->debugger_attached )
./xen/arch/x86/hvm/svm/svm.c:            v->arch.hvm_svm.cached_insn_len = vmcb->guest_ins_len & 0xf;
./xen/arch/x86/hvm/svm/svm.c:        v->arch.hvm_svm.cached_insn_len = 0;
./xen/arch/x86/hvm/svm/svm.c:            v->arch.hvm_svm.cached_insn_len = vmcb->guest_ins_len & 0xf;
./xen/arch/x86/hvm/svm/svm.c:        v->arch.hvm_svm.cached_insn_len = 0;
./xen/arch/x86/hvm/svm/svm.c:        domain_crash(v->domain);
./xen/arch/x86/hvm/svm/intr.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/intr.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/intr.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/intr.c:    if ( nestedhvm_enabled(v->domain) ) {
./xen/arch/x86/hvm/svm/intr.c:        if ( nv->nv_vmentry_pending ) {
./xen/arch/x86/hvm/svm/intr.c:            struct vmcb_struct *gvmcb = nv->nv_vvmcx;
./xen/arch/x86/hvm/svm/intr.c:    struct vmcb_struct *vmcb = v->arch.hvm_svm.vmcb;
./xen/arch/x86/hvm/svm/intr.c:            ASSERT(nestedhvm_enabled(v->domain));
./xen/arch/x86/hvm/svm/intr.c:        if ( nestedhvm_enabled(v->domain) && nestedhvm_vcpu_in_guestmode(v) )
./xen/arch/x86/mm/hap/hap.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/hap/hap.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/hap/hap.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/hap/hap.c:    ASSERT(pagetable_get_pfn(v->arch.monitor_table) == 0);
./xen/arch/x86/mm/hap/hap.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/hap/hap.c:                mfn = pagetable_get_mfn(v->arch.monitor_table);
./xen/arch/x86/mm/hap/hap.c:                v->arch.monitor_table = pagetable_null();
./xen/arch/x86/mm/hap/hap.c:    v->arch.paging.mode = &hap_paging_real_mode;
./xen/arch/x86/mm/hap/hap.c:    v->arch.paging.nestedmode = &hap_paging_real_mode;
./xen/arch/x86/mm/hap/hap.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/hap/hap.c:              d->domain_id, v->vcpu_id);
./xen/arch/x86/mm/hap/hap.c:    if (nestedhvm_enabled(v->domain)) {
./xen/arch/x86/mm/hap/hap.c:              v->domain->domain_id, v->vcpu_id);
./xen/arch/x86/mm/hap/hap.c:    domain_crash(v->domain);
./xen/arch/x86/mm/hap/hap.c:    v->arch.hvm_vcpu.hw_cr[3] = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/mm/hap/hap.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/hap/hap.c:    unsigned long cr3_gfn = v->arch.hvm_vcpu.guest_cr[3] >> PAGE_SHIFT;
./xen/arch/x86/mm/hap/hap.c:    v->arch.paging.mode = hap_paging_get_mode(v);
./xen/arch/x86/mm/hap/hap.c:    if ( pagetable_is_null(v->arch.monitor_table) )
./xen/arch/x86/mm/hap/hap.c:        v->arch.monitor_table = pagetable_from_mfn(mmfn);
./xen/arch/x86/mm/hap/hap.c:        if ( pagetable_get_pfn(v->arch.monitor_table) == 0 )
./xen/arch/x86/mm/hap/hap.c:        ASSERT(paging_mode_external(v->domain));
./xen/arch/x86/mm/hap/hap.c:                pagetable_get_mfn(v->arch.monitor_table));
./xen/arch/x86/mm/hap/hap.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/hap/guest_walk.c:    unsigned long cr3 = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/mm/hap/nested_hap.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/guest_walk.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/mem_sharing.c:    if ( v->domain == d )
./xen/arch/x86/mm/mem_sharing.c:    req.vcpu_id = v->vcpu_id;
./xen/arch/x86/mm/p2m.c:        if ( v->domain == d )
./xen/arch/x86/mm/p2m.c:    if ( p2m_is_paging(p2mt) && v->domain == d )
./xen/arch/x86/mm/p2m.c:    req.vcpu_id = v->vcpu_id;
./xen/arch/x86/mm/p2m.c:    struct domain *d = v->domain;    
./xen/arch/x86/mm/p2m.c:                                  v->vcpu_id, d->domain_id);
./xen/arch/x86/mm/p2m.c:            domain_crash(v->domain);
./xen/arch/x86/mm/p2m.c:        req->vcpu_id = v->vcpu_id;
./xen/arch/x86/mm/p2m.c:    ASSERT(v->domain == p2m->domain);
./xen/arch/x86/mm/p2m.c:    /* Use volatile to prevent gcc to cache nv->nv_p2m in a cpu register as
./xen/arch/x86/mm/p2m.c:    if (nv->nv_flushp2m && nv->nv_p2m) {
./xen/arch/x86/mm/p2m.c:        nv->nv_p2m = NULL;
./xen/arch/x86/mm/p2m.c:    d = v->domain;
./xen/arch/x86/mm/p2m.c:    p2m = nv->nv_p2m;
./xen/arch/x86/mm/p2m.c:            nv->nv_flushp2m = 0;
./xen/arch/x86/mm/p2m.c:            nv->nv_p2m = p2m;
./xen/arch/x86/mm/p2m.c:            cpumask_set_cpu(v->processor, p2m->dirty_cpumask);
./xen/arch/x86/mm/p2m.c:    nv->nv_p2m = p2m;
./xen/arch/x86/mm/p2m.c:    nv->nv_flushp2m = 0;
./xen/arch/x86/mm/p2m.c:    cpumask_set_cpu(v->processor, p2m->dirty_cpumask);
./xen/arch/x86/mm/p2m.c:        return p2m_get_hostp2m(v->domain);
./xen/arch/x86/mm/p2m.c:    struct p2m_domain *hostp2m = p2m_get_hostp2m(v->domain);
./xen/arch/x86/mm/p2m.c:    if ( is_hvm_domain(v->domain)
./xen/arch/x86/mm/p2m.c:        && paging_mode_hap(v->domain) 
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:                   d->domain_id, v->vcpu_id, mfn_x(gmfn),
./xen/arch/x86/mm/shadow/multi.c:                   v->domain->domain_id, v->vcpu_id,
./xen/arch/x86/mm/shadow/multi.c:    return guest_walk_tables(v, p2m_get_hostp2m(v->domain), va, gw, pfec, 
./xen/arch/x86/mm/shadow/multi.c:                             v->arch.paging.shadow.gl3e
./xen/arch/x86/mm/shadow/multi.c:                             pagetable_get_mfn(v->arch.guest_table),
./xen/arch/x86/mm/shadow/multi.c:                             v->arch.paging.shadow.guest_vtable
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    l4p = (guest_l4e_t *)v->arch.paging.shadow.guest_vtable;
./xen/arch/x86/mm/shadow/multi.c:                 v->arch.paging.shadow.gl3e[guest_l3_table_offset(va)].l3);
./xen/arch/x86/mm/shadow/multi.c:    l2p = (guest_l2e_t *)v->arch.paging.shadow.guest_vtable;
./xen/arch/x86/mm/shadow/multi.c:    ASSERT(shadow_mode_translate(v->domain));
./xen/arch/x86/mm/shadow/multi.c:    ASSERT(shadow_mode_translate(v->domain));
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:            domain_crash(v->domain);
./xen/arch/x86/mm/shadow/multi.c:            domain_crash(v->domain);
./xen/arch/x86/mm/shadow/multi.c:            domain_crash(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    if ( shadow_mode_translate(v->domain) && !shadow_mode_external(v->domain) )
./xen/arch/x86/mm/shadow/multi.c:    if ( shadow_mode_translate(v->domain) )
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    mfn_t smfn = shadow_alloc(v->domain, shadow_type, mfn_x(gmfn));
./xen/arch/x86/mm/shadow/multi.c:         unlikely(v->domain->arch.paging.shadow.opt_flags & SHOPT_LINUX_L3_TOPLEVEL) )
./xen/arch/x86/mm/shadow/multi.c:        page_list_for_each(sp, &v->domain->arch.paging.shadow.pinned_shadows)
./xen/arch/x86/mm/shadow/multi.c:        for_each_vcpu ( v->domain, v2 ) 
./xen/arch/x86/mm/shadow/multi.c:            page_list_for_each_safe(sp, t, &v->domain->arch.paging.shadow.pinned_shadows)
./xen/arch/x86/mm/shadow/multi.c:            v->domain->arch.paging.shadow.opt_flags &= ~SHOPT_LINUX_L3_TOPLEVEL;
./xen/arch/x86/mm/shadow/multi.c:    if ( !shadow_mode_external(v->domain) )
./xen/arch/x86/mm/shadow/multi.c:    mfn_t smfn = shadow_alloc(v->domain, SH_type_fl1_shadow,
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    ASSERT(pagetable_get_pfn(v->arch.monitor_table) == 0);
./xen/arch/x86/mm/shadow/multi.c:    *sl4mfn = pagetable_get_mfn(v->arch.shadow_table[0]);
./xen/arch/x86/mm/shadow/multi.c:        if ( is_pv_32on64_domain(v->domain) &&
./xen/arch/x86/mm/shadow/multi.c:    shadow_l3e_t *sl3e = ((shadow_l3e_t *)&v->arch.paging.shadow.l3table) 
./xen/arch/x86/mm/shadow/multi.c:    *sl2mfn = pagetable_get_mfn(v->arch.shadow_table[0]);
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L4E(sl4mfn, sl4e, 0, 0, v->domain, {
./xen/arch/x86/mm/shadow/multi.c:    shadow_free(v->domain, smfn);
./xen/arch/x86/mm/shadow/multi.c:    shadow_free(v->domain, smfn);
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L2E(sl2mfn, sl2e, 0, 0, v->domain, {
./xen/arch/x86/mm/shadow/multi.c:    shadow_free(v->domain, smfn);
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    shadow_free(v->domain, smfn);
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L2E(sl2mfn, sl2e, 0, 0, v->domain, {
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L2E(sl2mfn, sl2e, 0, 0, v->domain, {
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L4E(sl4mfn, sl4e, 0, 0, v->domain, {
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:        mfn_t gl2mfn = get_gfn_query_unlocked(v->domain, gfn_x(gl2gfn), &p2mt);
./xen/arch/x86/mm/shadow/multi.c:            mfn_t gl1mfn = get_gfn_query_unlocked(v->domain, gfn_x(gl1gfn),
./xen/arch/x86/mm/shadow/multi.c:    if ( !shadow_mode_external(v->domain) )
./xen/arch/x86/mm/shadow/multi.c:    gmfn = get_gfn_query_unlocked(v->domain, gfn_x(gfn), &p2mt);
./xen/arch/x86/mm/shadow/multi.c:            gmfn = get_gfn_query_unlocked(v->domain, gfn_x(gfn), &p2mt);
./xen/arch/x86/mm/shadow/multi.c:    if ( pagetable_get_pfn(v->arch.shadow_table[0]) == mfn_x(smfn)
./xen/arch/x86/mm/shadow/multi.c:         || pagetable_get_pfn(v->arch.shadow_table[1]) == mfn_x(smfn)
./xen/arch/x86/mm/shadow/multi.c:         || pagetable_get_pfn(v->arch.shadow_table[2]) == mfn_x(smfn)
./xen/arch/x86/mm/shadow/multi.c:         || pagetable_get_pfn(v->arch.shadow_table[3]) == mfn_x(smfn) 
./xen/arch/x86/mm/shadow/multi.c:    if ( ( v->arch.paging.shadow.pagetable_dying
./xen/arch/x86/mm/shadow/multi.c:           || ( !v->domain->arch.paging.shadow.pagetable_dying_op
./xen/arch/x86/mm/shadow/multi.c:                && v->arch.paging.shadow.last_emulated_mfn_for_unshadow == mfn_x(gmfn) ) )
./xen/arch/x86/mm/shadow/multi.c:         && (!v->domain->arch.paging.shadow.pagetable_dying_op ||
./xen/arch/x86/mm/shadow/multi.c:    v->arch.paging.shadow.last_emulated_mfn_for_unshadow = mfn_x(gmfn);
./xen/arch/x86/mm/shadow/multi.c:    v->arch.paging.shadow.last_emulated_mfn_for_unshadow = INVALID_MFN;
./xen/arch/x86/mm/shadow/multi.c:        gmfn = get_gfn_query_unlocked(v->domain, gfn_x(gfn), &p2mt);
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:                  v->domain->domain_id, v->vcpu_id, va, regs->error_code,
./xen/arch/x86/mm/shadow/multi.c:    if ( v->arch.paging.last_write_emul_ok
./xen/arch/x86/mm/shadow/multi.c:         && v->arch.paging.shadow.last_emulated_frame == (va >> PAGE_SHIFT) ) 
./xen/arch/x86/mm/shadow/multi.c:            gmfn = _mfn(v->arch.paging.shadow.last_emulated_mfn);
./xen/arch/x86/mm/shadow/multi.c:                v->arch.paging.last_write_emul_ok = 0;
./xen/arch/x86/mm/shadow/multi.c:            v->arch.paging.last_write_emul_ok = 0;
./xen/arch/x86/mm/shadow/multi.c:        v->arch.paging.mode->update_cr3(v, 0);
./xen/arch/x86/mm/shadow/multi.c:                mfn_t smfn = _mfn(pagetable_get_pfn(v->arch.shadow_table[i]));
./xen/arch/x86/mm/shadow/multi.c:                v->arch.paging.last_write_emul_ok = 0;
./xen/arch/x86/mm/shadow/multi.c:            v->arch.paging.last_write_emul_ok = 0;
./xen/arch/x86/mm/shadow/multi.c:            v->arch.paging.shadow.last_emulated_frame = va >> PAGE_SHIFT;
./xen/arch/x86/mm/shadow/multi.c:            v->arch.paging.shadow.last_emulated_mfn = mfn_x(gmfn);
./xen/arch/x86/mm/shadow/multi.c:            v->arch.paging.last_write_emul_ok = 1;
./xen/arch/x86/mm/shadow/multi.c:        v->arch.paging.last_write_emul_ok = 0;
./xen/arch/x86/mm/shadow/multi.c:            v->arch.paging.last_write_was_pt = 0;
./xen/arch/x86/mm/shadow/multi.c:                if ( v->arch.paging.last_write_was_pt )
./xen/arch/x86/mm/shadow/multi.c:    v->arch.paging.last_write_emul_ok = 0;
./xen/arch/x86/mm/shadow/multi.c:    if ( !(l3e_get_flags(v->arch.paging.shadow.l3table[shadow_l3_linear_offset(va)])
./xen/arch/x86/mm/shadow/multi.c:            paging_lock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:                paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:                paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:            paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:     * be updated every time v->arch.shadow_table changes. 
./xen/arch/x86/mm/shadow/multi.c:         && pagetable_get_pfn(v->arch.monitor_table) == 0 ) 
./xen/arch/x86/mm/shadow/multi.c:                l4e_from_pfn(pagetable_get_pfn(v->arch.shadow_table[0]),
./xen/arch/x86/mm/shadow/multi.c:            ml4e = sh_map_domain_page(pagetable_get_mfn(v->arch.monitor_table));
./xen/arch/x86/mm/shadow/multi.c:                l4e_from_pfn(pagetable_get_pfn(v->arch.shadow_table[0]),
./xen/arch/x86/mm/shadow/multi.c:            ml4e = sh_map_domain_page(pagetable_get_mfn(v->arch.monitor_table));
./xen/arch/x86/mm/shadow/multi.c:        sl3e = v->arch.paging.shadow.l3table;
./xen/arch/x86/mm/shadow/multi.c:        shadow_l3e = (shadow_l3e_t *)&v->arch.paging.shadow.l3table;
./xen/arch/x86/mm/shadow/multi.c:        shadow_l3e = (shadow_l3e_t *)&v->arch.paging.shadow.l3table;
./xen/arch/x86/mm/shadow/multi.c:        guest_l3e = (guest_l3e_t *)&v->arch.paging.shadow.gl3e;
./xen/arch/x86/mm/shadow/multi.c:                    pagetable_get_mfn(v->arch.monitor_table));
./xen/arch/x86/mm/shadow/multi.c:    ASSERT(v->arch.paging.shadow.guest_vtable == NULL);
./xen/arch/x86/mm/shadow/multi.c:    if ( v->arch.paging.shadow.guest_vtable )
./xen/arch/x86/mm/shadow/multi.c:        struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:            sh_unmap_domain_page_global(v->arch.paging.shadow.guest_vtable);
./xen/arch/x86/mm/shadow/multi.c:        v->arch.paging.shadow.guest_vtable = NULL;
./xen/arch/x86/mm/shadow/multi.c:        smfn = pagetable_get_mfn(v->arch.shadow_table[i]);
./xen/arch/x86/mm/shadow/multi.c:        v->arch.shadow_table[i] = pagetable_null();
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    old_entry = v->arch.shadow_table[slot];
./xen/arch/x86/mm/shadow/multi.c:        domain_crash(v->domain);
./xen/arch/x86/mm/shadow/multi.c:        domain_crash(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    v->arch.shadow_table[slot] = new_entry;
./xen/arch/x86/mm/shadow/multi.c:            domain_crash(v->domain);
./xen/arch/x86/mm/shadow/multi.c: * Paravirtual guests should set v->arch.guest_table (and guest_table_user,
./xen/arch/x86/mm/shadow/multi.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/multi.c:    if ( !is_hvm_domain(d) && !v->is_initialised )
./xen/arch/x86/mm/shadow/multi.c:        ASSERT(v->arch.cr3 == 0);
./xen/arch/x86/mm/shadow/multi.c:    if ( do_locking ) paging_lock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    ASSERT(paging_locked_by_me(v->domain));
./xen/arch/x86/mm/shadow/multi.c:    ASSERT(v->arch.paging.mode);
./xen/arch/x86/mm/shadow/multi.c:            ASSERT(pagetable_get_pfn(v->arch.guest_table));
./xen/arch/x86/mm/shadow/multi.c:            ASSERT(v->arch.guest_table.pfn
./xen/arch/x86/mm/shadow/multi.c:                   d->domain_id, v->vcpu_id, 
./xen/arch/x86/mm/shadow/multi.c:                   (unsigned long)pagetable_get_pfn(v->arch.guest_table));
./xen/arch/x86/mm/shadow/multi.c:    if ( !(v->arch.flags & TF_kernel_mode) && !is_pv_32on64_vcpu(v) )
./xen/arch/x86/mm/shadow/multi.c:        gmfn = pagetable_get_mfn(v->arch.guest_table_user);
./xen/arch/x86/mm/shadow/multi.c:        gmfn = pagetable_get_mfn(v->arch.guest_table);
./xen/arch/x86/mm/shadow/multi.c:        if ( v->arch.paging.shadow.guest_vtable )
./xen/arch/x86/mm/shadow/multi.c:            sh_unmap_domain_page_global(v->arch.paging.shadow.guest_vtable);
./xen/arch/x86/mm/shadow/multi.c:        v->arch.paging.shadow.guest_vtable = sh_map_domain_page_global(gmfn);
./xen/arch/x86/mm/shadow/multi.c:        BUG_ON(v->arch.paging.shadow.guest_vtable == NULL);
./xen/arch/x86/mm/shadow/multi.c:        v->arch.paging.shadow.guest_vtable = __linear_l4_table;
./xen/arch/x86/mm/shadow/multi.c:     ASSERT(v->arch.paging.shadow.guest_vtable == NULL);
./xen/arch/x86/mm/shadow/multi.c:         guest_idx = guest_index((void *)v->arch.hvm_vcpu.guest_cr[3]);
./xen/arch/x86/mm/shadow/multi.c:         v->arch.paging.shadow.gl3e[i] = gl3e[i];
./xen/arch/x86/mm/shadow/multi.c:        if ( v->arch.paging.shadow.guest_vtable )
./xen/arch/x86/mm/shadow/multi.c:            sh_unmap_domain_page_global(v->arch.paging.shadow.guest_vtable);
./xen/arch/x86/mm/shadow/multi.c:        v->arch.paging.shadow.guest_vtable = sh_map_domain_page_global(gmfn);
./xen/arch/x86/mm/shadow/multi.c:        BUG_ON(v->arch.paging.shadow.guest_vtable == NULL); /* XXX */
./xen/arch/x86/mm/shadow/multi.c:        v->arch.paging.shadow.guest_vtable = __linear_l2_table;
./xen/arch/x86/mm/shadow/multi.c:        guest_l3e_t *gl3e = (guest_l3e_t*)&v->arch.paging.shadow.gl3e;
./xen/arch/x86/mm/shadow/multi.c:    /// v->arch.paging.shadow.l3table
./xen/arch/x86/mm/shadow/multi.c:            mfn_t smfn = pagetable_get_mfn(v->arch.shadow_table[0]);
./xen/arch/x86/mm/shadow/multi.c:                smfn = pagetable_get_mfn(v->arch.shadow_table[i]);
./xen/arch/x86/mm/shadow/multi.c:                v->arch.paging.shadow.l3table[i] = 
./xen/arch/x86/mm/shadow/multi.c:    /// v->arch.cr3
./xen/arch/x86/mm/shadow/multi.c:        make_cr3(v, pagetable_get_pfn(v->arch.monitor_table));
./xen/arch/x86/mm/shadow/multi.c:        ASSERT(virt_to_maddr(&v->arch.paging.shadow.l3table) <= 0xffffffe0ULL);
./xen/arch/x86/mm/shadow/multi.c:        v->arch.cr3 = virt_to_maddr(&v->arch.paging.shadow.l3table);
./xen/arch/x86/mm/shadow/multi.c:        make_cr3(v, pagetable_get_pfn(v->arch.shadow_table[0]));
./xen/arch/x86/mm/shadow/multi.c:    /// v->arch.hvm_vcpu.hw_cr[3]
./xen/arch/x86/mm/shadow/multi.c:        v->arch.hvm_vcpu.hw_cr[3] =
./xen/arch/x86/mm/shadow/multi.c:            virt_to_maddr(&v->arch.paging.shadow.l3table);
./xen/arch/x86/mm/shadow/multi.c:        v->arch.hvm_vcpu.hw_cr[3] =
./xen/arch/x86/mm/shadow/multi.c:            pagetable_get_paddr(v->arch.shadow_table[0]);
./xen/arch/x86/mm/shadow/multi.c:    v->arch.paging.last_write_emul_ok = 0;
./xen/arch/x86/mm/shadow/multi.c:    if ( do_locking ) paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    v->arch.paging.shadow.pagetable_dying
./xen/arch/x86/mm/shadow/multi.c:    sl3p = ((shadow_l3e_t *) v->arch.paging.shadow.l3table) 
./xen/arch/x86/mm/shadow/multi.c:            v->arch.paging.shadow.last_writeable_pte_smfn = mfn_x(base_sl1mfn);
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L2E(sl2mfn, sl2e, 0, done, v->domain, 
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L4E(sl4mfn, sl4e, 0, done, v->domain,
./xen/arch/x86/mm/shadow/multi.c:    gcr3 = (v->arch.hvm_vcpu.guest_cr[3]);
./xen/arch/x86/mm/shadow/multi.c:    l3mfn = get_gfn_query(v->domain, _gfn(l3gfn), &p2mt);
./xen/arch/x86/mm/shadow/multi.c:    paging_lock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:            if ( pagetable_is_null(v->arch.shadow_table[i]) )
./xen/arch/x86/mm/shadow/multi.c:                smfn = _mfn(pagetable_get_pfn(v->arch.shadow_table[i]));
./xen/arch/x86/mm/shadow/multi.c:            gmfn = get_gfn_query_unlocked(v->domain, gfn, &p2mt);
./xen/arch/x86/mm/shadow/multi.c:        flush_tlb_mask(v->domain->domain_dirty_cpumask);
./xen/arch/x86/mm/shadow/multi.c:    v->domain->arch.paging.shadow.pagetable_dying_op = 1;
./xen/arch/x86/mm/shadow/multi.c:    v->arch.paging.shadow.pagetable_dying = 1;
./xen/arch/x86/mm/shadow/multi.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    put_gfn(v->domain, l3gfn);
./xen/arch/x86/mm/shadow/multi.c:    gmfn = get_gfn_query(v->domain, _gfn(gpa >> PAGE_SHIFT), &p2mt);
./xen/arch/x86/mm/shadow/multi.c:    paging_lock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:        flush_tlb_mask(v->domain->domain_dirty_cpumask);
./xen/arch/x86/mm/shadow/multi.c:    v->domain->arch.paging.shadow.pagetable_dying_op = 1;
./xen/arch/x86/mm/shadow/multi.c:    v->arch.paging.shadow.pagetable_dying = 1;
./xen/arch/x86/mm/shadow/multi.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    put_gfn(v->domain, gpa >> PAGE_SHIFT);
./xen/arch/x86/mm/shadow/multi.c:    ASSERT(!paging_locked_by_me(v->domain));
./xen/arch/x86/mm/shadow/multi.c:    mfn = get_gfn(v->domain, _gfn(gfn), &p2mt);
./xen/arch/x86/mm/shadow/multi.c:        put_gfn(v->domain, gfn);
./xen/arch/x86/mm/shadow/multi.c:        put_gfn(v->domain, gfn);
./xen/arch/x86/mm/shadow/multi.c:    v->arch.paging.last_write_was_pt = !!sh_mfn_is_a_page_table(mfn);
./xen/arch/x86/mm/shadow/multi.c:    put_gfn(v->domain, gfn);
./xen/arch/x86/mm/shadow/multi.c:    paging_mark_dirty(v->domain, mfn_x(sh_ctxt->mfn1));
./xen/arch/x86/mm/shadow/multi.c:        paging_mark_dirty(v->domain, mfn_x(sh_ctxt->mfn2));
./xen/arch/x86/mm/shadow/multi.c:    atomic_inc(&v->domain->arch.paging.shadow.gtable_dirty_version);
./xen/arch/x86/mm/shadow/multi.c:    paging_lock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    paging_lock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    paging_lock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/multi.c:        oos_audit_hash_is_present(v->domain, gl1mfn);
./xen/arch/x86/mm/shadow/multi.c:                gmfn = get_gfn_query_unlocked(v->domain, gfn_x(gfn), &p2mt);
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L2E(sl2mfn, sl2e, &gl2e, done, v->domain, {
./xen/arch/x86/mm/shadow/multi.c:                    get_gfn_query_unlocked(v->domain, gfn_x(gfn), 
./xen/arch/x86/mm/shadow/multi.c:                           : mfn_x(get_gfn_query_unlocked(v->domain,
./xen/arch/x86/mm/shadow/multi.c:                                        v->domain, gfn_x(gfn), &p2mt),
./xen/arch/x86/mm/shadow/multi.c:                                      && !shadow_mode_external(v->domain)
./xen/arch/x86/mm/shadow/multi.c:    SHADOW_FOREACH_L4E(sl4mfn, sl4e, &gl4e, done, v->domain,
./xen/arch/x86/mm/shadow/multi.c:                                     v->domain, gfn_x(gfn), &p2mt), 
./xen/arch/x86/mm/shadow/common.c: * matter to have v->arch.paging.mode pointing to any mode, as long as it can
./xen/arch/x86/mm/shadow/common.c:        v->arch.paging.shadow.oos[i] = _mfn(INVALID_MFN);
./xen/arch/x86/mm/shadow/common.c:        v->arch.paging.shadow.oos_snapshot[i] = _mfn(INVALID_MFN);
./xen/arch/x86/mm/shadow/common.c:            v->arch.paging.shadow.oos_fixup[i].smfn[j] = _mfn(INVALID_MFN);
./xen/arch/x86/mm/shadow/common.c:    v->arch.paging.mode = &SHADOW_INTERNAL_NAME(sh_paging_mode, 3);
./xen/arch/x86/mm/shadow/common.c:    return v->arch.paging.mode->shadow.x86_emulate_write(
./xen/arch/x86/mm/shadow/common.c:        return v->arch.paging.mode->shadow.x86_emulate_cmpxchg(
./xen/arch/x86/mm/shadow/common.c:        return v->arch.paging.mode->shadow.x86_emulate_cmpxchg8b(
./xen/arch/x86/mm/shadow/common.c:    return v->arch.paging.mode->shadow.x86_emulate_write(
./xen/arch/x86/mm/shadow/common.c:        return v->arch.paging.mode->shadow.x86_emulate_cmpxchg(
./xen/arch/x86/mm/shadow/common.c:        return v->arch.paging.mode->shadow.x86_emulate_cmpxchg8b(
./xen/arch/x86/mm/shadow/common.c:            mfn_t *oos = v->arch.paging.shadow.oos;
./xen/arch/x86/mm/shadow/common.c:        oos = v->arch.paging.shadow.oos;
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:        oos = v->arch.paging.shadow.oos;
./xen/arch/x86/mm/shadow/common.c:        oos_fixup = v->arch.paging.shadow.oos_fixup;
./xen/arch/x86/mm/shadow/common.c:        flush_tlb_mask(v->domain->domain_dirty_cpumask);
./xen/arch/x86/mm/shadow/common.c:    ASSERT(paging_locked_by_me(v->domain));
./xen/arch/x86/mm/shadow/common.c:                  v->domain->domain_id, v->vcpu_id, mfn_x(gmfn));
./xen/arch/x86/mm/shadow/common.c:    mfn_t *oos = v->arch.paging.shadow.oos;
./xen/arch/x86/mm/shadow/common.c:    mfn_t *oos_snapshot = v->arch.paging.shadow.oos_snapshot;
./xen/arch/x86/mm/shadow/common.c:    struct oos_fixup *oos_fixup = v->arch.paging.shadow.oos_fixup;
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:                  v->domain->domain_id, v->vcpu_id, mfn_x(gmfn)); 
./xen/arch/x86/mm/shadow/common.c:        oos = v->arch.paging.shadow.oos;
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:        oos = v->arch.paging.shadow.oos;
./xen/arch/x86/mm/shadow/common.c:        oos_snapshot = v->arch.paging.shadow.oos_snapshot;
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:        oos = v->arch.paging.shadow.oos;
./xen/arch/x86/mm/shadow/common.c:        oos_fixup = v->arch.paging.shadow.oos_fixup;
./xen/arch/x86/mm/shadow/common.c:        oos_snapshot = v->arch.paging.shadow.oos_snapshot;
./xen/arch/x86/mm/shadow/common.c:    mfn_t *oos = v->arch.paging.shadow.oos;
./xen/arch/x86/mm/shadow/common.c:    mfn_t *oos_snapshot = v->arch.paging.shadow.oos_snapshot;
./xen/arch/x86/mm/shadow/common.c:    struct oos_fixup *oos_fixup = v->arch.paging.shadow.oos_fixup;
./xen/arch/x86/mm/shadow/common.c:    SHADOW_PRINTK("d=%d, v=%d\n", v->domain->domain_id, v->vcpu_id);
./xen/arch/x86/mm/shadow/common.c:    ASSERT(paging_locked_by_me(v->domain));
./xen/arch/x86/mm/shadow/common.c:    for_each_vcpu(v->domain, other)
./xen/arch/x86/mm/shadow/common.c:    ASSERT(paging_locked_by_me(v->domain));
./xen/arch/x86/mm/shadow/common.c:                  v->domain->domain_id, v->vcpu_id, mfn_x(gmfn));
./xen/arch/x86/mm/shadow/common.c:         || !is_hvm_domain(v->domain)
./xen/arch/x86/mm/shadow/common.c:         || !v->domain->arch.paging.shadow.oos_active )
./xen/arch/x86/mm/shadow/common.c:           || v->domain->is_shutting_down);
./xen/arch/x86/mm/shadow/common.c:    paging_mark_dirty(v->domain, mfn_x(gmfn));
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:    ASSERT(paging_locked_by_me(v->domain));
./xen/arch/x86/mm/shadow/common.c:    paging_lock(v->domain);
./xen/arch/x86/mm/shadow/common.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/common.c:    paging_lock(v->domain);
./xen/arch/x86/mm/shadow/common.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/common.c:    if ( v->domain != d )
./xen/arch/x86/mm/shadow/common.c:            if ( !pagetable_is_null(v->arch.shadow_table[i]) )
./xen/arch/x86/mm/shadow/common.c:                               pagetable_get_mfn(v->arch.shadow_table[i]), 0);
./xen/arch/x86/mm/shadow/common.c:            if ( v->arch.paging.shadow.last_writeable_pte_smfn 
./xen/arch/x86/mm/shadow/common.c:                v->arch.paging.shadow.last_writeable_pte_smfn = 0;
./xen/arch/x86/mm/shadow/common.c:            v->arch.paging.last_write_emul_ok = 0;
./xen/arch/x86/mm/shadow/common.c:        if ( pagetable_get_pfn(v->arch.monitor_table) == 0 ) 
./xen/arch/x86/mm/shadow/common.c:        ASSERT(shadow_mode_external(v->domain));
./xen/arch/x86/mm/shadow/common.c:                      d->domain_id, v->vcpu_id, index, l3e_get_pfn(*l3e));
./xen/arch/x86/mm/shadow/common.c:            ml3e = sh_map_domain_page(pagetable_get_mfn(v->arch.monitor_table));
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:                    prev->next_shadow = sp->next_shadow;                    
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:            == v->domain)); 
./xen/arch/x86/mm/shadow/common.c:    ASSERT(paging_locked_by_me(v->domain));
./xen/arch/x86/mm/shadow/common.c:    if ( !shadow_mode_refcounts(v->domain) )
./xen/arch/x86/mm/shadow/common.c:        domain_crash(v->domain);
./xen/arch/x86/mm/shadow/common.c:            if ( v->arch.paging.mode->shadow.guess_wrmap(v, (_a), gmfn) ) \
./xen/arch/x86/mm/shadow/common.c:        if ( v->arch.paging.mode->guest_levels == 2 )
./xen/arch/x86/mm/shadow/common.c:            if ((gfn = mfn_to_gfn(v->domain, gmfn)) < 0x38000 ) 
./xen/arch/x86/mm/shadow/common.c:        else if ( v->arch.paging.mode->guest_levels == 3 )
./xen/arch/x86/mm/shadow/common.c:            if ((gfn = mfn_to_gfn(v->domain, gmfn)) < 0x38000 ) 
./xen/arch/x86/mm/shadow/common.c:        else if ( v->arch.paging.mode->guest_levels == 4 )
./xen/arch/x86/mm/shadow/common.c:            gfn = mfn_to_gfn(v->domain, gmfn); 
./xen/arch/x86/mm/shadow/common.c:    if ( v->arch.paging.shadow.last_writeable_pte_smfn != 0 )
./xen/arch/x86/mm/shadow/common.c:        mfn_t last_smfn = _mfn(v->arch.paging.shadow.last_writeable_pte_smfn);
./xen/arch/x86/mm/shadow/common.c:        domain_crash(v->domain);
./xen/arch/x86/mm/shadow/common.c:    paging_lock_recursive(v->domain);
./xen/arch/x86/mm/shadow/common.c:        if ( !(shadow_mode_external(v->domain)
./xen/arch/x86/mm/shadow/common.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/common.c:    paging_lock_recursive(v->domain);
./xen/arch/x86/mm/shadow/common.c:                   v->domain->domain_id, v->vcpu_id, mfn_x(gmfn));
./xen/arch/x86/mm/shadow/common.c:        paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/common.c:        domain_crash(v->domain);
./xen/arch/x86/mm/shadow/common.c:    flush_tlb_mask(v->domain->domain_dirty_cpumask);
./xen/arch/x86/mm/shadow/common.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:    const struct paging_mode *old_mode = v->arch.paging.mode;
./xen/arch/x86/mm/shadow/common.c:    if ( unlikely(!v->arch.paging.vtlb) )
./xen/arch/x86/mm/shadow/common.c:        v->arch.paging.vtlb = xzalloc_array(struct shadow_vtlb, VTLB_ENTRIES);
./xen/arch/x86/mm/shadow/common.c:        if ( unlikely(!v->arch.paging.vtlb) )
./xen/arch/x86/mm/shadow/common.c:                         d->domain_id, v->vcpu_id);
./xen/arch/x86/mm/shadow/common.c:            domain_crash(v->domain);
./xen/arch/x86/mm/shadow/common.c:        spin_lock_init(&v->arch.paging.vtlb_lock);
./xen/arch/x86/mm/shadow/common.c:    if ( mfn_x(v->arch.paging.shadow.oos_snapshot[0]) == INVALID_MFN )
./xen/arch/x86/mm/shadow/common.c:            v->arch.paging.shadow.oos_snapshot[i] =
./xen/arch/x86/mm/shadow/common.c:    if ( v->arch.paging.mode )
./xen/arch/x86/mm/shadow/common.c:        v->arch.paging.mode->shadow.detach_old_tables(v);
./xen/arch/x86/mm/shadow/common.c:        v->arch.paging.mode = &SHADOW_INTERNAL_NAME(sh_paging_mode, 4);
./xen/arch/x86/mm/shadow/common.c:        v->arch.paging.mode = &SHADOW_INTERNAL_NAME(sh_paging_mode, 3);
./xen/arch/x86/mm/shadow/common.c:            v->arch.guest_table = d->arch.paging.shadow.unpaged_pagetable;
./xen/arch/x86/mm/shadow/common.c:            v->arch.paging.mode = &SHADOW_INTERNAL_NAME(sh_paging_mode, 2);
./xen/arch/x86/mm/shadow/common.c:                v->arch.paging.mode =
./xen/arch/x86/mm/shadow/common.c:                    v->arch.paging.mode =
./xen/arch/x86/mm/shadow/common.c:                    v->arch.paging.mode =
./xen/arch/x86/mm/shadow/common.c:        if ( pagetable_is_null(v->arch.monitor_table) )
./xen/arch/x86/mm/shadow/common.c:            mfn_t mmfn = v->arch.paging.mode->shadow.make_monitor_table(v);
./xen/arch/x86/mm/shadow/common.c:            v->arch.monitor_table = pagetable_from_mfn(mmfn);
./xen/arch/x86/mm/shadow/common.c:        if ( v->arch.paging.mode != old_mode )
./xen/arch/x86/mm/shadow/common.c:                          d->domain_id, v->vcpu_id,
./xen/arch/x86/mm/shadow/common.c:                          v->arch.paging.mode->guest_levels,
./xen/arch/x86/mm/shadow/common.c:                          v->arch.paging.mode->shadow.shadow_levels,
./xen/arch/x86/mm/shadow/common.c:                 (v->arch.paging.mode->shadow.shadow_levels !=
./xen/arch/x86/mm/shadow/common.c:                                 v->domain->domain_id, v->vcpu_id);
./xen/arch/x86/mm/shadow/common.c:                    domain_crash(v->domain);
./xen/arch/x86/mm/shadow/common.c:                old_mfn = pagetable_get_mfn(v->arch.monitor_table);
./xen/arch/x86/mm/shadow/common.c:                v->arch.monitor_table = pagetable_null();
./xen/arch/x86/mm/shadow/common.c:                new_mfn = v->arch.paging.mode->shadow.make_monitor_table(v);
./xen/arch/x86/mm/shadow/common.c:                v->arch.monitor_table = pagetable_from_mfn(new_mfn);
./xen/arch/x86/mm/shadow/common.c:    v->arch.paging.mode->update_cr3(v, 0);
./xen/arch/x86/mm/shadow/common.c:    paging_lock(v->domain);
./xen/arch/x86/mm/shadow/common.c:    paging_unlock(v->domain);
./xen/arch/x86/mm/shadow/common.c:            if ( v->arch.paging.mode )
./xen/arch/x86/mm/shadow/common.c:                v->arch.paging.mode->shadow.detach_old_tables(v);
./xen/arch/x86/mm/shadow/common.c:                    mfn = pagetable_get_mfn(v->arch.monitor_table);
./xen/arch/x86/mm/shadow/common.c:                        v->arch.paging.mode->shadow.destroy_monitor_table(v, mfn);
./xen/arch/x86/mm/shadow/common.c:                    v->arch.monitor_table = pagetable_null();
./xen/arch/x86/mm/shadow/common.c:        if ( v->arch.paging.vtlb )
./xen/arch/x86/mm/shadow/common.c:            xfree(v->arch.paging.vtlb);
./xen/arch/x86/mm/shadow/common.c:            v->arch.paging.vtlb = NULL;
./xen/arch/x86/mm/shadow/common.c:            mfn_t *oos_snapshot = v->arch.paging.shadow.oos_snapshot;
./xen/arch/x86/mm/shadow/common.c:                v->arch.guest_table = pagetable_null();
./xen/arch/x86/mm/shadow/common.c:            if ( v->arch.paging.mode )
./xen/arch/x86/mm/shadow/common.c:                v->arch.paging.mode->shadow.detach_old_tables(v);
./xen/arch/x86/mm/shadow/common.c:            if ( !(v->arch.flags & TF_kernel_mode) )
./xen/arch/x86/mm/shadow/common.c:                make_cr3(v, pagetable_get_pfn(v->arch.guest_table_user));
./xen/arch/x86/mm/shadow/common.c:                make_cr3(v, pagetable_get_pfn(v->arch.guest_table));
./xen/arch/x86/mm/shadow/common.c:                mfn_t *oos_snapshot = v->arch.paging.shadow.oos_snapshot;
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:    struct domain *d = v->domain;
./xen/arch/x86/mm/shadow/common.c:    sh_oos_audit(v->domain);
./xen/arch/x86/mm/shadow/common.c:        switch ( v->arch.paging.mode->guest_levels )
./xen/arch/x86/mm/paging.c:    if ( hap_enabled(v->domain) )
./xen/arch/x86/mm/paging.c:    v->arch.paging.mode->shadow.pagetable_dying(v, gpa);
./xen/arch/x86/mm/paging.c:    if ( paging_mode_enabled(v->domain) )
./xen/arch/x86/mm/paging.c:        if ( paging_mode_shadow(v->domain) )
./xen/arch/x86/mm/paging.c:        else if ( paging_mode_hap(v->domain) && paging_get_hostmode(v) )
./xen/arch/x86/mm/paging.c:    ASSERT(nestedhvm_enabled(v->domain));
./xen/arch/x86/mm/paging.c:        v->arch.paging.nestedmode = hap_paging_get_mode(v);
./xen/arch/x86/mm/paging.c:        v->arch.paging.nestedmode = NULL;
./xen/arch/x86/mm/paging.c:    if ( v->domain != d )
./xen/arch/x86/mm/mem_event.c:        if ( test_bit(med->pause_flag, &v->pause_flags) )
./xen/arch/x86/mm/mem_event.c:            if ( test_and_clear_bit(med->pause_flag, &v->pause_flags) )
./xen/arch/x86/mm/mem_event.c:            if ( test_and_clear_bit(med->pause_flag, &v->pause_flags) )
./xen/arch/x86/mm/mem_event.c:    if ( !test_and_set_bit(med->pause_flag, &v->pause_flags) )
./xen/arch/x86/mm/mem_event.c:    if ( likely(v->domain->mem_event->paging.ring_page != NULL) )
./xen/arch/x86/mm/mem_event.c:        p2m_mem_paging_resume(v->domain);
./xen/arch/x86/mm/mem_event.c:    if ( likely(v->domain->mem_event->access.ring_page != NULL) )
./xen/arch/x86/mm/mem_event.c:        p2m_mem_access_resume(v->domain);
./xen/arch/x86/mm/mem_event.c:    if ( likely(v->domain->mem_event->share.ring_page != NULL) )
./xen/arch/x86/mm/mem_event.c:        mem_sharing_sharing_resume(v->domain);
./xen/arch/x86/oprofile/op_model_ppro.c:	       v->vcpu_id, v->domain->domain_id);
./xen/arch/x86/oprofile/op_model_p4.c:#define ESCR_READ(escr,ev,i) do {rdmsrl(ev->bindings[(i)].escr_address, (escr));} while (0)
./xen/arch/x86/oprofile/op_model_p4.c:#define ESCR_WRITE(escr,ev,i) do {wrmsrl(ev->bindings[(i)].escr_address, (escr));} while (0)
./xen/arch/x86/oprofile/op_model_p4.c:		if (ev->bindings[i].virt_counter & counter_bit) {
./xen/arch/x86/oprofile/op_model_p4.c:			ESCR_SET_EVENT_SELECT(escr, ev->event_select);
./xen/arch/x86/oprofile/op_model_p4.c:			CCCR_SET_ESCR_SELECT(cccr, ev->escr_select);
./xen/arch/x86/time.c:    struct domain *d = v->domain;
./xen/arch/x86/time.c:    if ( v->vcpu_info == NULL )
./xen/arch/x86/time.c:            struct pl_time *pl = &v->domain->arch.hvm_domain.pl_time;
./xen/arch/x86/time.c:            stime += pl->stime_offset + v->arch.hvm_vcpu.stime_offset;
./xen/arch/x86/time.c:        _u.tsc_timestamp += v->arch.hvm_vcpu.cache_tsc_offset;
./xen/arch/x86/time.c:    user_u = v->arch.time_info_guest;
./xen/arch/x86/time.c:    struct domain *d = v->domain;
./xen/arch/x86/physdev.c:        if ( eoi.irq >= v->domain->nr_pirqs )
./xen/arch/x86/physdev.c:        spin_lock(&v->domain->event_lock);
./xen/arch/x86/physdev.c:        pirq = pirq_info(v->domain, eoi.irq);
./xen/arch/x86/physdev.c:            spin_unlock(&v->domain->event_lock);
./xen/arch/x86/physdev.c:        if ( !is_hvm_domain(v->domain) &&
./xen/arch/x86/physdev.c:             v->domain->arch.pv_domain.auto_unmask )
./xen/arch/x86/physdev.c:        if ( !is_hvm_domain(v->domain) ||
./xen/arch/x86/physdev.c:             domain_pirq_to_irq(v->domain, eoi.irq) > 0 )
./xen/arch/x86/physdev.c:        if ( is_hvm_domain(v->domain) &&
./xen/arch/x86/physdev.c:                domain_pirq_to_emuirq(v->domain, eoi.irq) > 0 )
./xen/arch/x86/physdev.c:            struct hvm_irq *hvm_irq = &v->domain->arch.hvm_domain.irq;
./xen/arch/x86/physdev.c:            int gsi = domain_pirq_to_emuirq(v->domain, eoi.irq);
./xen/arch/x86/physdev.c:                send_guest_pirq(v->domain, pirq);
./xen/arch/x86/physdev.c:        spin_unlock(&v->domain->event_lock);
./xen/arch/x86/physdev.c:        if ( cmpxchg(&v->domain->arch.pv_domain.pirq_eoi_map_mfn,
./xen/arch/x86/physdev.c:        v->domain->arch.pv_domain.pirq_eoi_map = map_domain_page_global(mfn);
./xen/arch/x86/physdev.c:        if ( v->domain->arch.pv_domain.pirq_eoi_map == NULL )
./xen/arch/x86/physdev.c:            v->domain->arch.pv_domain.pirq_eoi_map_mfn = 0;
./xen/arch/x86/physdev.c:            v->domain->arch.pv_domain.auto_unmask = 1;
./xen/arch/x86/physdev.c:        ret = pirq_guest_unmask(v->domain);
./xen/arch/x86/physdev.c:        if ( (irq < 0) || (irq >= v->domain->nr_pirqs) )
./xen/arch/x86/physdev.c:        if ( is_hvm_domain(v->domain) &&
./xen/arch/x86/physdev.c:             domain_pirq_to_irq(v->domain, irq) <= 0 &&
./xen/arch/x86/physdev.c:             domain_pirq_to_emuirq(v->domain, irq) == IRQ_UNBOUND )
./xen/arch/x86/physdev.c:        if ( pirq_shared(v->domain, irq) )
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        ret = xsm_apic(v->domain, cmd);
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        ret = xsm_apic(v->domain, cmd);
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        v->arch.pv_vcpu.iopl = set_iopl.iopl;
./xen/arch/x86/physdev.c:        v->arch.pv_vcpu.iobmp = set_iobitmap.bitmap;
./xen/arch/x86/physdev.c:        guest_from_compat_handle(v->arch.pv_vcpu.iobmp, set_iobitmap.bitmap);
./xen/arch/x86/physdev.c:        v->arch.pv_vcpu.iobmp_limit = set_iobitmap.nr_ports;
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        if ( !IS_PRIV(v->domain) )
./xen/arch/x86/physdev.c:        struct domain *d = v->domain;
./xen/arch/x86/domain_build.c:    BUG_ON(v->is_initialised);
./xen/arch/x86/domain_build.c:        v->vcpu_info = (void *)&d->shared_info->compat.vcpu_info[0];
./xen/arch/x86/domain_build.c:    v->arch.guest_table = pagetable_from_pfn(mpt.mod_start);
./xen/arch/x86/domain_build.c:        v->arch.pv_vcpu.failsafe_callback_cs = FLAT_COMPAT_KERNEL_CS;
./xen/arch/x86/domain_build.c:        v->arch.pv_vcpu.event_callback_cs    = FLAT_COMPAT_KERNEL_CS;
./xen/arch/x86/domain_build.c:    v->arch.guest_table = pagetable_from_paddr(__pa(l4start));
./xen/arch/x86/domain_build.c:        v->arch.guest_table_user = v->arch.guest_table;
./xen/arch/x86/domain_build.c:    v->is_initialised = 1;
./xen/arch/x86/domain_build.c:    clear_bit(_VPF_down, &v->pause_flags);
./xen/arch/x86/domain_build.c:    regs = &v->arch.user_regs;
./xen/arch/x86/domain_build.c:        v->arch.pv_vcpu.kernel_ss &= ~3;
./xen/arch/x86/domain_build.c:        v->arch.user_regs.ss &= ~3;
./xen/arch/x86/domain_build.c:        v->arch.user_regs.es &= ~3;
./xen/arch/x86/domain_build.c:        v->arch.user_regs.ds &= ~3;
./xen/arch/x86/domain_build.c:        v->arch.user_regs.fs &= ~3;
./xen/arch/x86/domain_build.c:        v->arch.user_regs.gs &= ~3;
./xen/arch/x86/cpu/mcheck/vmce.c:    v->arch.mcg_cap = GUEST_MCG_CAP;
./xen/arch/x86/cpu/mcheck/vmce.c:                is_hvm_vcpu(v) ? "HVM" : "PV", caps, v->domain->domain_id,
./xen/arch/x86/cpu/mcheck/vmce.c:                v->vcpu_id, GUEST_MCG_CAP & ~MCG_CAP_COUNT);
./xen/arch/x86/cpu/mcheck/vmce.c:    v->arch.mcg_cap = caps;
./xen/arch/x86/cpu/mcheck/vmce.c:    struct domain_mca_msrs *vmce = dom_vmce(v->domain);
./xen/arch/x86/cpu/mcheck/vmce.c:    struct domain_mca_msrs *vmce = dom_vmce(v->domain);
./xen/arch/x86/cpu/mcheck/vmce.c:            .caps = v->arch.mcg_cap
./xen/arch/x86/cpu/mcheck/vmce.c:        err = hvm_save_entry(VMCE_VCPU, v->vcpu_id, h, &ctxt);
./xen/arch/x86/cpu/mcheck/vmce.c:        if (!(v->arch.hvm_vcpu.guest_cr[4] & X86_CR4_MCE))
./xen/arch/x86/cpu/mcheck/mce_intel.c:         msr < MSR_IA32_MCx_CTL2(v->arch.mcg_cap & MCG_CAP_COUNT) )
./xen/arch/x86/cpu/mcheck/mce_intel.c:         msr < MSR_IA32_MCx_CTL2(v->arch.mcg_cap & MCG_CAP_COUNT) )
./xen/arch/x86/cpu/mcheck/mctelem.c:			prev->mcte_next = NULL;
./xen/arch/x86/cpu/mcheck/mce.c:    if (v != NULL && ((d = v->domain) != NULL)) {
./xen/arch/x86/cpu/mcheck/mce.c:        mig->mc_vcpuid = v->vcpu_id;
./xen/arch/x86/cpu/mcheck/mce.c:    struct domain *curdom = v->domain;
./xen/arch/x86/cpu/mcheck/mce.c:        if (guest_has_trap_callback(v->domain, v->vcpu_id,
./xen/arch/x86/cpu/mcheck/mce.c:            send_guest_trap(curdom, v->vcpu_id,
./xen/arch/x86/cpu/mcheck/mce.c:    if (!IS_PRIV(v->domain) )
./xen/arch/x86/msi.c:    spin_lock(&dev->msix_table_lock);
./xen/arch/x86/msi.c:    if ( dev->msix_table_refcnt[nr_page]++ == 0 )
./xen/arch/x86/msi.c:            dev->msix_table_refcnt[nr_page]--;
./xen/arch/x86/msi.c:        dev->msix_table_idx[nr_page] = idx;
./xen/arch/x86/msi.c:        idx = dev->msix_table_idx[nr_page];
./xen/arch/x86/msi.c:    spin_unlock(&dev->msix_table_lock);
./xen/arch/x86/msi.c:    spin_lock(&dev->msix_table_lock);
./xen/arch/x86/msi.c:        if ( dev->msix_table_idx[i] == idx )
./xen/arch/x86/msi.c:    if ( --dev->msix_table_refcnt[i] == 0 )
./xen/arch/x86/msi.c:        dev->msix_table_idx[i] = 0;
./xen/arch/x86/msi.c:    spin_unlock(&dev->msix_table_lock);
./xen/arch/x86/msi.c:        u16 data, seg = dev->seg;
./xen/arch/x86/msi.c:        u8 bus = dev->bus;
./xen/arch/x86/msi.c:        u8 slot = PCI_SLOT(dev->devfn);
./xen/arch/x86/msi.c:        u8 func = PCI_FUNC(dev->devfn);
./xen/arch/x86/msi.c:        u16 seg = dev->seg;
./xen/arch/x86/msi.c:        u8 bus = dev->bus;
./xen/arch/x86/msi.c:        u8 slot = PCI_SLOT(dev->devfn);
./xen/arch/x86/msi.c:        u8 func = PCI_FUNC(dev->devfn);
./xen/arch/x86/msi.c:    u16 control, seg = dev->seg;
./xen/arch/x86/msi.c:    u8 bus = dev->bus;
./xen/arch/x86/msi.c:    u8 slot = PCI_SLOT(dev->devfn);
./xen/arch/x86/msi.c:    u8 func = PCI_FUNC(dev->devfn);
./xen/arch/x86/msi.c:    u16 control, seg = dev->seg;
./xen/arch/x86/msi.c:    u8 bus = dev->bus;
./xen/arch/x86/msi.c:    u8 slot = PCI_SLOT(dev->devfn);
./xen/arch/x86/msi.c:    u8 func = PCI_FUNC(dev->devfn);
./xen/arch/x86/msi.c:            u16 seg = entry->dev->seg;
./xen/arch/x86/msi.c:            u8 bus = entry->dev->bus;
./xen/arch/x86/msi.c:            u8 slot = PCI_SLOT(entry->dev->devfn);
./xen/arch/x86/msi.c:            u8 func = PCI_FUNC(entry->dev->devfn);
./xen/arch/x86/msi.c:        return pci_conf_read32(entry->dev->seg, entry->dev->bus,
./xen/arch/x86/msi.c:                               PCI_SLOT(entry->dev->devfn),
./xen/arch/x86/msi.c:                               PCI_FUNC(entry->dev->devfn),
./xen/arch/x86/msi.c:    list_for_each_entry( entry, &dev->msi_list, list )
./xen/arch/x86/msi.c:    u16 control, seg = dev->seg;
./xen/arch/x86/msi.c:    u8 bus = dev->bus;
./xen/arch/x86/msi.c:    u8 slot = PCI_SLOT(dev->devfn);
./xen/arch/x86/msi.c:    u8 func = PCI_FUNC(dev->devfn);
./xen/arch/x86/msi.c:    list_add_tail(&entry->list, &dev->msi_list);
./xen/arch/x86/msi.c:             !pdev->vf_rlen[bir] )
./xen/arch/x86/msi.c:        BUILD_BUG_ON(ARRAY_SIZE(pdev->vf_rlen) != PCI_SRIOV_NUM_BARS);
./xen/arch/x86/msi.c:        disp = vf * pdev->vf_rlen[bir];
./xen/arch/x86/msi.c:    u16 seg = dev->seg;
./xen/arch/x86/msi.c:    u8 bus = dev->bus;
./xen/arch/x86/msi.c:    u8 slot = PCI_SLOT(dev->devfn);
./xen/arch/x86/msi.c:    u8 func = PCI_FUNC(dev->devfn);
./xen/arch/x86/msi.c:    list_add_tail(&entry->list, &dev->msi_list);
./xen/arch/x86/msi.c:    if ( !dev->msix_nr_entries )
./xen/arch/x86/msi.c:        if ( !dev->info.is_virtfn )
./xen/arch/x86/msi.c:            pbus = dev->info.physfn.bus;
./xen/arch/x86/msi.c:            pslot = PCI_SLOT(dev->info.physfn.devfn);
./xen/arch/x86/msi.c:            pfunc = PCI_FUNC(dev->info.physfn.devfn);
./xen/arch/x86/msi.c:            vf = PCI_BDF2(dev->bus, dev->devfn);
./xen/arch/x86/msi.c:        ASSERT(!dev->msix_used_entries);
./xen/arch/x86/msi.c:        dev->msix_nr_entries = nr_entries;
./xen/arch/x86/msi.c:        dev->msix_table.first = PFN_DOWN(table_paddr);
./xen/arch/x86/msi.c:        dev->msix_table.last = PFN_DOWN(table_paddr +
./xen/arch/x86/msi.c:        WARN_ON(rangeset_overlaps_range(mmio_ro_ranges, dev->msix_table.first,
./xen/arch/x86/msi.c:                                        dev->msix_table.last));
./xen/arch/x86/msi.c:        dev->msix_pba.first = PFN_DOWN(pba_paddr);
./xen/arch/x86/msi.c:        dev->msix_pba.last = PFN_DOWN(pba_paddr +
./xen/arch/x86/msi.c:        WARN_ON(rangeset_overlaps_range(mmio_ro_ranges, dev->msix_pba.first,
./xen/arch/x86/msi.c:                                        dev->msix_pba.last));
./xen/arch/x86/msi.c:        if ( rangeset_add_range(mmio_ro_ranges, dev->msix_table.first,
./xen/arch/x86/msi.c:                                dev->msix_table.last) )
./xen/arch/x86/msi.c:        if ( rangeset_add_range(mmio_ro_ranges, dev->msix_pba.first,
./xen/arch/x86/msi.c:                                dev->msix_pba.last) )
./xen/arch/x86/msi.c:        if ( dev->domain )
./xen/arch/x86/msi.c:            p2m_change_entry_type_global(dev->domain,
./xen/arch/x86/msi.c:        if ( !dev->domain || !paging_mode_translate(dev->domain) )
./xen/arch/x86/msi.c:            struct domain *d = dev->domain;
./xen/arch/x86/msi.c:                         (iomem_access_permitted(d, dev->msix_table.first,
./xen/arch/x86/msi.c:                                                 dev->msix_table.last) ||
./xen/arch/x86/msi.c:                          iomem_access_permitted(d, dev->msix_pba.first,
./xen/arch/x86/msi.c:                                                 dev->msix_pba.last)) )
./xen/arch/x86/msi.c:    WARN_ON(dev->msix_nr_entries != nr_entries);
./xen/arch/x86/msi.c:    WARN_ON(dev->msix_table.first != (table_paddr >> PAGE_SHIFT));
./xen/arch/x86/msi.c:    ++dev->msix_used_entries;
./xen/arch/x86/msi.c:    BUG_ON(list_empty(&dev->msi_list));
./xen/arch/x86/msi.c:    seg = dev->seg;
./xen/arch/x86/msi.c:    bus = dev->bus;
./xen/arch/x86/msi.c:    slot = PCI_SLOT(dev->devfn);
./xen/arch/x86/msi.c:    func = PCI_FUNC(dev->devfn);
./xen/arch/x86/msi.c:    BUG_ON(list_empty(&dev->msi_list));
./xen/arch/x86/msi.c:    if ( !--dev->msix_used_entries )
./xen/arch/x86/msi.c:        if ( rangeset_remove_range(mmio_ro_ranges, dev->msix_table.first,
./xen/arch/x86/msi.c:                                  dev->msix_table.last) )
./xen/arch/x86/msi.c:        if ( rangeset_remove_range(mmio_ro_ranges, dev->msix_pba.first,
./xen/arch/x86/msi.c:                                   dev->msix_pba.last) )
./xen/arch/x86/msi.c:    list_for_each_entry_safe( entry, tmp, &dev->msi_list, list )
./xen/arch/x86/msi.c:    ret = xsm_resource_setup_pci((pdev->seg << 16) | (pdev->bus << 8) | pdev->devfn);
./xen/arch/x86/msi.c:    list_for_each_entry_safe( entry, tmp, &pdev->msi_list, list )
./xen/arch/x86/msi.c:                    pdev->seg, pdev->bus, PCI_SLOT(pdev->devfn),
./xen/arch/x86/msi.c:                    PCI_FUNC(pdev->devfn));
./xen/arch/x86/msi.c:    u16 control, seg = pdev->seg;
./xen/arch/x86/msi.c:    bus = pdev->bus;
./xen/arch/x86/msi.c:    slot = PCI_SLOT(pdev->devfn);
./xen/arch/x86/msi.c:    func = PCI_FUNC(pdev->devfn);
./xen/arch/x86/domctl.c:            if ( !test_and_set_bool(v->nmi_pending) )
./xen/arch/x86/domctl.c:                    v->arch.pv_vcpu.sysenter_callback_cs;
./xen/arch/x86/domctl.c:                    v->arch.pv_vcpu.sysenter_callback_eip;
./xen/arch/x86/domctl.c:                    v->arch.pv_vcpu.sysenter_disables_events;
./xen/arch/x86/domctl.c:                    v->arch.pv_vcpu.syscall32_callback_cs;
./xen/arch/x86/domctl.c:                    v->arch.pv_vcpu.syscall32_callback_eip;
./xen/arch/x86/domctl.c:                    v->arch.pv_vcpu.syscall32_disables_events;
./xen/arch/x86/domctl.c:            evc->mcg_cap = v->arch.mcg_cap;
./xen/arch/x86/domctl.c:                v->arch.pv_vcpu.sysenter_callback_cs      =
./xen/arch/x86/domctl.c:                v->arch.pv_vcpu.sysenter_callback_eip     =
./xen/arch/x86/domctl.c:                v->arch.pv_vcpu.sysenter_disables_events  =
./xen/arch/x86/domctl.c:                v->arch.pv_vcpu.syscall32_callback_cs     =
./xen/arch/x86/domctl.c:                v->arch.pv_vcpu.syscall32_callback_eip    =
./xen/arch/x86/domctl.c:                v->arch.pv_vcpu.syscall32_disables_events =
./xen/arch/x86/domctl.c:        if ( !atomic_read(&v->pause_count) )
./xen/arch/x86/domctl.c:            printk("WARN: Unpausing vcpu:%d which is not paused\n", v->vcpu_id);
./xen/arch/x86/domctl.c:                if ( v->arch.gdbsx_vcpu_event )
./xen/arch/x86/domctl.c:                    domctl->u.gdbsx_domstatus.vcpu_id = v->vcpu_id;
./xen/arch/x86/domctl.c:                        v->arch.gdbsx_vcpu_event;
./xen/arch/x86/domctl.c:                    v->arch.gdbsx_vcpu_event = 0;
./xen/arch/x86/domctl.c:                                      offset, (void *)&v->arch.xcr0,
./xen/arch/x86/domctl.c:                                      sizeof(v->arch.xcr0)) )
./xen/arch/x86/domctl.c:            offset += sizeof(v->arch.xcr0);
./xen/arch/x86/domctl.c:                                      offset, (void *)&v->arch.xcr0_accum,
./xen/arch/x86/domctl.c:                                      sizeof(v->arch.xcr0_accum)) )
./xen/arch/x86/domctl.c:            offset += sizeof(v->arch.xcr0_accum);
./xen/arch/x86/domctl.c:                                      offset, (void *)v->arch.xsave_area,
./xen/arch/x86/domctl.c:            v->arch.xcr0 = _xcr0;
./xen/arch/x86/domctl.c:            v->arch.xcr0_accum = _xcr0_accum;
./xen/arch/x86/domctl.c:            memcpy(v->arch.xsave_area, _xsave_area, evc->size - 2 * sizeof(uint64_t) );
./xen/arch/x86/domctl.c:    bool_t compat = is_pv_32on64_domain(v->domain);
./xen/arch/x86/domctl.c:    memcpy(&c.nat->fpu_ctxt, v->arch.fpu_ctxt, sizeof(c.nat->fpu_ctxt));
./xen/arch/x86/domctl.c:    c(flags = v->arch.vgc_flags & ~(VGCF_i387_valid|VGCF_in_kernel));
./xen/arch/x86/domctl.c:    if ( v->fpu_initialised )
./xen/arch/x86/domctl.c:    if ( !test_bit(_VPF_down, &v->pause_flags) )
./xen/arch/x86/domctl.c:        memcpy(&c.nat->user_regs, &v->arch.user_regs, sizeof(c.nat->user_regs));
./xen/arch/x86/domctl.c:            memcpy(c.nat->trap_ctxt, v->arch.pv_vcpu.trap_ctxt,
./xen/arch/x86/domctl.c:        XLAT_cpu_user_regs(&c.cmp->user_regs, &v->arch.user_regs);
./xen/arch/x86/domctl.c:                           v->arch.pv_vcpu.trap_ctxt + i);
./xen/arch/x86/domctl.c:    for ( i = 0; i < ARRAY_SIZE(v->arch.debugreg); ++i )
./xen/arch/x86/domctl.c:        c(debugreg[i] = v->arch.debugreg[i]);
./xen/arch/x86/domctl.c:        c.nat->ctrlreg[0] = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/domctl.c:        c.nat->ctrlreg[2] = v->arch.hvm_vcpu.guest_cr[2];
./xen/arch/x86/domctl.c:        c.nat->ctrlreg[3] = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/domctl.c:        c.nat->ctrlreg[4] = v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/domctl.c:        c(ldt_base = v->arch.pv_vcpu.ldt_base);
./xen/arch/x86/domctl.c:        c(ldt_ents = v->arch.pv_vcpu.ldt_ents);
./xen/arch/x86/domctl.c:        for ( i = 0; i < ARRAY_SIZE(v->arch.pv_vcpu.gdt_frames); ++i )
./xen/arch/x86/domctl.c:            c(gdt_frames[i] = v->arch.pv_vcpu.gdt_frames[i]);
./xen/arch/x86/domctl.c:        c(gdt_ents = v->arch.pv_vcpu.gdt_ents);
./xen/arch/x86/domctl.c:        c(kernel_ss = v->arch.pv_vcpu.kernel_ss);
./xen/arch/x86/domctl.c:        c(kernel_sp = v->arch.pv_vcpu.kernel_sp);
./xen/arch/x86/domctl.c:        for ( i = 0; i < ARRAY_SIZE(v->arch.pv_vcpu.ctrlreg); ++i )
./xen/arch/x86/domctl.c:            c(ctrlreg[i] = v->arch.pv_vcpu.ctrlreg[i]);
./xen/arch/x86/domctl.c:        c(event_callback_eip = v->arch.pv_vcpu.event_callback_eip);
./xen/arch/x86/domctl.c:        c(failsafe_callback_eip = v->arch.pv_vcpu.failsafe_callback_eip);
./xen/arch/x86/domctl.c:            c.nat->syscall_callback_eip = v->arch.pv_vcpu.syscall_callback_eip;
./xen/arch/x86/domctl.c:            c.nat->fs_base = v->arch.pv_vcpu.fs_base;
./xen/arch/x86/domctl.c:            c.nat->gs_base_kernel = v->arch.pv_vcpu.gs_base_kernel;
./xen/arch/x86/domctl.c:            c.nat->gs_base_user = v->arch.pv_vcpu.gs_base_user;
./xen/arch/x86/domctl.c:            c(event_callback_cs = v->arch.pv_vcpu.event_callback_cs);
./xen/arch/x86/domctl.c:            c(failsafe_callback_cs = v->arch.pv_vcpu.failsafe_callback_cs);
./xen/arch/x86/domctl.c:        c(vm_assist = v->arch.pv_vcpu.vm_assist);
./xen/arch/x86/domctl.c:        c(user_regs.eflags |= v->arch.pv_vcpu.iopl << 12);
./xen/arch/x86/domctl.c:        if ( !is_pv_32on64_domain(v->domain) )
./xen/arch/x86/domctl.c:                pagetable_get_pfn(v->arch.guest_table));
./xen/arch/x86/domctl.c:                pagetable_is_null(v->arch.guest_table_user) ? 0
./xen/arch/x86/domctl.c:                : xen_pfn_to_cr3(pagetable_get_pfn(v->arch.guest_table_user));
./xen/arch/x86/domctl.c:            l4_pgentry_t *l4e = __va(pagetable_get_paddr(v->arch.guest_table));
./xen/arch/x86/domctl.c:        if ( guest_kernel_mode(v, &v->arch.user_regs) )
./xen/arch/x86/domctl.c:    c(vm_assist = v->domain->vm_assist);
./xen/arch/x86/xstate.c:    struct xsave_struct *ptr = v->arch.xsave_area;
./xen/arch/x86/xstate.c:    struct xsave_struct *ptr = v->arch.xsave_area;
./xen/arch/x86/xstate.c:        ASSERT(v->arch.xsave_area);
./xen/arch/x86/xstate.c:    v->arch.xsave_area = save_area;
./xen/arch/x86/xstate.c:    v->arch.xcr0 = XSTATE_FP_SSE;
./xen/arch/x86/xstate.c:    v->arch.xcr0_accum = XSTATE_FP_SSE;
./xen/arch/x86/xstate.c:    xfree(v->arch.xsave_area);
./xen/arch/x86/xstate.c:    v->arch.xsave_area = NULL;
./xen/arch/x86/domain.c:    cpumask_set_cpu(v->processor, v->domain->domain_dirty_cpumask);
./xen/arch/x86/domain.c:    cpumask_set_cpu(v->processor, v->vcpu_dirty_cpumask);
./xen/arch/x86/domain.c:        l4e_from_paddr(__pa(v->domain->arch.mm_perdomain_l3),
./xen/arch/x86/domain.c:    v->arch.guest_table = pagetable_from_page(pg);
./xen/arch/x86/domain.c:    v->arch.guest_table_user = v->arch.guest_table;
./xen/arch/x86/domain.c:    free_domheap_page(pagetable_get_page(v->arch.guest_table));
./xen/arch/x86/domain.c:    v->arch.guest_table = pagetable_null();
./xen/arch/x86/domain.c:    v->arch.guest_table_user = pagetable_null();
./xen/arch/x86/domain.c:    BUILD_BUG_ON(256 * sizeof(*v->arch.pv_vcpu.trap_ctxt) > PAGE_SIZE);
./xen/arch/x86/domain.c:    return 256 * sizeof(*v->arch.pv_vcpu.trap_ctxt) + sizeof(*v) > PAGE_SIZE;
./xen/arch/x86/domain.c:    struct domain *d = v->domain;
./xen/arch/x86/domain.c:    v->arch.flags = TF_kernel_mode;
./xen/arch/x86/domain.c:    pae_l3_cache_init(&v->arch.pae_l3_cache);
./xen/arch/x86/domain.c:    spin_lock_init(&v->arch.perfctr_lock);
./xen/arch/x86/domain.c:    v->arch.perdomain_ptes = perdomain_ptes(d, v);
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.vcpu_info_mfn = INVALID_MFN;
./xen/arch/x86/domain.c:    spin_lock_init(&v->arch.pv_vcpu.shadow_ldt_lock);
./xen/arch/x86/domain.c:            v->arch.pv_vcpu.trap_ctxt = alloc_xenheap_page();
./xen/arch/x86/domain.c:            if ( !v->arch.pv_vcpu.trap_ctxt )
./xen/arch/x86/domain.c:            clear_page(v->arch.pv_vcpu.trap_ctxt);
./xen/arch/x86/domain.c:            v->arch.pv_vcpu.trap_ctxt = (void *)v + PAGE_SIZE -
./xen/arch/x86/domain.c:                256 * sizeof(*v->arch.pv_vcpu.trap_ctxt);
./xen/arch/x86/domain.c:        v->periodic_period = MILLISECS(10);
./xen/arch/x86/domain.c:        if ( v->vcpu_id == 0 )
./xen/arch/x86/domain.c:    v->arch.schedule_tail = continue_nonidle_domain;
./xen/arch/x86/domain.c:    v->arch.ctxt_switch_from = paravirt_ctxt_switch_from;
./xen/arch/x86/domain.c:    v->arch.ctxt_switch_to   = paravirt_ctxt_switch_to;
./xen/arch/x86/domain.c:        v->arch.schedule_tail = continue_idle_domain;
./xen/arch/x86/domain.c:        v->arch.cr3           = __pa(idle_pg_table);
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.ctrlreg[4] = real_cr4_to_pv_guest_cr4(mmu_cr4_features);
./xen/arch/x86/domain.c:            free_xenheap_page(v->arch.pv_vcpu.trap_ctxt);
./xen/arch/x86/domain.c:        free_xenheap_page(v->arch.pv_vcpu.trap_ctxt);
./xen/arch/x86/domain.c:    if ( cpu_has_fsgsbase && !is_pv_32bit_domain(v->domain) )
./xen/arch/x86/domain.c:    struct domain *d = v->domain;
./xen/arch/x86/domain.c:    v->fpu_initialised = !!(flags & VGCF_I387_VALID);
./xen/arch/x86/domain.c:    v->arch.flags &= ~TF_kernel_mode;
./xen/arch/x86/domain.c:        v->arch.flags |= TF_kernel_mode;
./xen/arch/x86/domain.c:    v->arch.vgc_flags = flags;
./xen/arch/x86/domain.c:    memcpy(v->arch.fpu_ctxt, &c.nat->fpu_ctxt, sizeof(c.nat->fpu_ctxt));
./xen/arch/x86/domain.c:        memcpy(&v->arch.user_regs, &c.nat->user_regs, sizeof(c.nat->user_regs));
./xen/arch/x86/domain.c:            memcpy(v->arch.pv_vcpu.trap_ctxt, c.nat->trap_ctxt,
./xen/arch/x86/domain.c:        XLAT_cpu_user_regs(&v->arch.user_regs, &c.cmp->user_regs);
./xen/arch/x86/domain.c:            XLAT_trap_info(v->arch.pv_vcpu.trap_ctxt + i,
./xen/arch/x86/domain.c:    for ( i = 0; i < ARRAY_SIZE(v->arch.debugreg); ++i )
./xen/arch/x86/domain.c:        v->arch.debugreg[i] = c(debugreg[i]);
./xen/arch/x86/domain.c:    v->arch.user_regs.eflags |= 2;
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.iopl = (v->arch.user_regs.eflags >> 12) & 3;
./xen/arch/x86/domain.c:    v->arch.user_regs.eflags &= ~X86_EFLAGS_IOPL;
./xen/arch/x86/domain.c:    v->arch.user_regs.eflags |= X86_EFLAGS_IF;
./xen/arch/x86/domain.c:    if ( !v->is_initialised )
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.ldt_base = c(ldt_base);
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.ldt_ents = c(ldt_ents);
./xen/arch/x86/domain.c:        unsigned long pfn = pagetable_get_pfn(v->arch.guest_table);
./xen/arch/x86/domain.c:            if ( pagetable_is_null(v->arch.guest_table_user) )
./xen/arch/x86/domain.c:                pfn = pagetable_get_pfn(v->arch.guest_table_user);
./xen/arch/x86/domain.c:        for ( i = 0; i < ARRAY_SIZE(v->arch.pv_vcpu.gdt_frames); ++i )
./xen/arch/x86/domain.c:            fail |= v->arch.pv_vcpu.gdt_frames[i] != c(gdt_frames[i]);
./xen/arch/x86/domain.c:        fail |= v->arch.pv_vcpu.gdt_ents != c(gdt_ents);
./xen/arch/x86/domain.c:        fail |= v->arch.pv_vcpu.ldt_base != c(ldt_base);
./xen/arch/x86/domain.c:        fail |= v->arch.pv_vcpu.ldt_ents != c(ldt_ents);
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.kernel_ss = c(kernel_ss);
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.kernel_sp = c(kernel_sp);
./xen/arch/x86/domain.c:    for ( i = 0; i < ARRAY_SIZE(v->arch.pv_vcpu.ctrlreg); ++i )
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.ctrlreg[i] = c(ctrlreg[i]);
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.event_callback_eip = c(event_callback_eip);
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.failsafe_callback_eip = c(failsafe_callback_eip);
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.syscall_callback_eip = c.nat->syscall_callback_eip;
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.fs_base = c.nat->fs_base;
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.gs_base_kernel = c.nat->gs_base_kernel;
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.gs_base_user = c.nat->gs_base_user;
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.event_callback_cs = c(event_callback_cs);
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.failsafe_callback_cs = c(failsafe_callback_cs);
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.vm_assist = c(vm_assist);
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.ctrlreg[0] &= X86_CR0_TS;
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.ctrlreg[0] |= read_cr0() & ~X86_CR0_TS;
./xen/arch/x86/domain.c:    cr4 = v->arch.pv_vcpu.ctrlreg[4];
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.ctrlreg[4] = cr4 ? pv_guest_cr4_fixup(v, cr4) :
./xen/arch/x86/domain.c:    memset(v->arch.debugreg, 0, sizeof(v->arch.debugreg));
./xen/arch/x86/domain.c:    if ( v->is_initialised )
./xen/arch/x86/domain.c:    if ( v->vcpu_id == 0 )
./xen/arch/x86/domain.c:        unsigned long gdt_frames[ARRAY_SIZE(v->arch.pv_vcpu.gdt_frames)];
./xen/arch/x86/domain.c:        if ( n > ARRAY_SIZE(v->arch.pv_vcpu.gdt_frames) )
./xen/arch/x86/domain.c:        v->arch.guest_table = pagetable_from_page(cr3_page);
./xen/arch/x86/domain.c:                cr3_page = pagetable_get_page(v->arch.guest_table);
./xen/arch/x86/domain.c:                v->arch.guest_table = pagetable_null();
./xen/arch/x86/domain.c:            v->arch.guest_table_user = pagetable_from_page(cr3_page);
./xen/arch/x86/domain.c:        l4tab = __va(pagetable_get_paddr(v->arch.guest_table));
./xen/arch/x86/domain.c:    if ( v->vcpu_id == 0 )
./xen/arch/x86/domain.c:    v->is_initialised = 1;
./xen/arch/x86/domain.c:        clear_bit(_VPF_down, &v->pause_flags);
./xen/arch/x86/domain.c:        set_bit(_VPF_down, &v->pause_flags);
./xen/arch/x86/domain.c:    if ( v->arch.pv_vcpu.vcpu_info_mfn == INVALID_MFN )
./xen/arch/x86/domain.c:    mfn = v->arch.pv_vcpu.vcpu_info_mfn;
./xen/arch/x86/domain.c:    unmap_domain_page_global(v->vcpu_info);
./xen/arch/x86/domain.c:    v->vcpu_info = &dummy_vcpu_info;
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.vcpu_info_mfn = INVALID_MFN;
./xen/arch/x86/domain.c:    struct domain *d = v->domain;
./xen/arch/x86/domain.c:    if ( v->arch.pv_vcpu.vcpu_info_mfn != INVALID_MFN )
./xen/arch/x86/domain.c:    if ( (v != current) && !test_bit(_VPF_down, &v->pause_flags) )
./xen/arch/x86/domain.c:    if ( v->vcpu_info == &dummy_vcpu_info )
./xen/arch/x86/domain.c:        memcpy(new_info, v->vcpu_info, sizeof(*new_info));
./xen/arch/x86/domain.c:    v->vcpu_info = new_info;
./xen/arch/x86/domain.c:    v->arch.pv_vcpu.vcpu_info_mfn = page_to_mfn(page);
./xen/arch/x86/domain.c:            __copy_to_guest(runstate_guest(v), &v->runstate, 1);
./xen/arch/x86/domain.c:        struct domain *d = v->domain;
./xen/arch/x86/domain.c:        v->arch.time_info_guest = area.addr.h;
./xen/arch/x86/domain.c:            (uint64_t)x86_cpu_to_apicid[v->vcpu_id] |
./xen/arch/x86/domain.c:            ((uint64_t)acpi_get_processor_id(v->vcpu_id) << 32);
./xen/arch/x86/domain.c:            (unsigned long *)pv->kernel_sp;
./xen/arch/x86/domain.c:                                (unsigned int *)pv->kernel_sp;
./xen/arch/x86/domain.c:            regs->_eip          = pv->failsafe_callback_eip;
./xen/arch/x86/domain.c:        regs->rip           = pv->failsafe_callback_eip;
./xen/arch/x86/domain.c:    struct cpu_user_regs *regs = &v->arch.user_regs;
./xen/arch/x86/domain.c:    if ( regs->fs || is_pv_32on64_domain(v->domain) )
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.fs_base = 0; /* != 0 selector kills fs_base */
./xen/arch/x86/domain.c:    else if ( v->arch.pv_vcpu.fs_base )
./xen/arch/x86/domain.c:    if ( regs->gs || is_pv_32on64_domain(v->domain) )
./xen/arch/x86/domain.c:        v->arch.pv_vcpu.gs_base_user = 0; /* != 0 selector kills gs_base_user */
./xen/arch/x86/domain.c:    else if ( v->arch.pv_vcpu.gs_base_user )
./xen/arch/x86/domain.c:    tss->esp1 = v->arch.pv_vcpu.kernel_sp;
./xen/arch/x86/domain.c:    tss->ss1  = v->arch.pv_vcpu.kernel_ss;
./xen/arch/x86/domain.c:    if ( unlikely(v->arch.debugreg[7] & DR7_ACTIVE_MASK) )
./xen/arch/x86/domain.c:    if ( unlikely(v->arch.debugreg[7] & DR7_ACTIVE_MASK) )
./xen/arch/x86/domain.c:        write_debugreg(0, v->arch.debugreg[0]);
./xen/arch/x86/domain.c:        write_debugreg(1, v->arch.debugreg[1]);
./xen/arch/x86/domain.c:        write_debugreg(2, v->arch.debugreg[2]);
./xen/arch/x86/domain.c:        write_debugreg(3, v->arch.debugreg[3]);
./xen/arch/x86/domain.c:        write_debugreg(6, v->arch.debugreg[6]);
./xen/arch/x86/domain.c:        write_debugreg(7, v->arch.debugreg[7]);
./xen/arch/x86/domain.c:    if ( (v->domain->arch.tsc_mode ==  TSC_MODE_PVRDTSCP) &&
./xen/arch/x86/domain.c:        write_rdtscp_aux(v->domain->arch.incarnation);
./xen/arch/x86/domain.c:    if ( has_32bit_shinfo(v->domain) )
./xen/arch/x86/domain.c:        XLAT_vcpu_runstate_info(&info, &v->runstate);
./xen/arch/x86/domain.c:        __copy_to_guest(v->runstate_guest.compat, &info, 1);
./xen/arch/x86/domain.c:    __copy_to_guest(runstate_guest(v), &v->runstate, 1);
./xen/arch/x86/domain.c:    if ( is_hvm_vcpu(prev) && !list_empty(&prev->arch.hvm_vcpu.tm_list) )
./xen/arch/x86/domain.c:    if ( cpumask_test_cpu(smp_processor_id(), v->vcpu_dirty_cpumask) )
./xen/arch/x86/domain.c:    flush_tlb_mask(v->vcpu_dirty_cpumask);
./xen/arch/x86/domain.c:    struct domain *d = v->domain;
./xen/arch/x86/domain.c:                          __va(pagetable_get_paddr(v->arch.guest_table)));
./xen/arch/x86/domain.c:            (l4_pgentry_t *)__va(pagetable_get_paddr(v->arch.guest_table)),
./xen/arch/x86/domain.c:        v->arch.cr3 = 0;
./xen/arch/x86/domain.c:    pfn = pagetable_get_pfn(v->arch.guest_table);
./xen/arch/x86/domain.c:        v->arch.guest_table = pagetable_null();
./xen/arch/x86/domain.c:    pfn = pagetable_get_pfn(v->arch.guest_table_user);
./xen/arch/x86/domain.c:        v->arch.guest_table_user = pagetable_null();
./xen/arch/x86/domain.c:    v->arch.cr3 = 0;
./xen/arch/x86/domain.c:    bool_t running = v->is_running;
./xen/arch/x86/domain.c:        cpu_raise_softirq(v->processor, VCPU_KICK_SOFTIRQ);
./xen/arch/x86/x86_64/mm.c:    unsigned long mfn = pagetable_get_pfn(v->arch.guest_table);
./xen/arch/x86/x86_64/mm.c:    v->arch.compat_arg_xlat = page_to_virt(pg);
./xen/arch/x86/x86_64/mm.c:    if ( v->arch.compat_arg_xlat != NULL )
./xen/arch/x86/x86_64/mm.c:        free_domheap_pages(virt_to_page(v->arch.compat_arg_xlat), order);
./xen/arch/x86/x86_64/mm.c:    v->arch.compat_arg_xlat = NULL;
./xen/arch/x86/x86_64/mm.c:            v->arch.pv_vcpu.fs_base = base;
./xen/arch/x86/x86_64/mm.c:            v->arch.pv_vcpu.gs_base_user = base;
./xen/arch/x86/x86_64/mm.c:            v->arch.pv_vcpu.gs_base_kernel = base;
./xen/arch/x86/x86_64/compat/traps.c:    if ( !__compat_access_ok(v->domain, stack, sizeof(*stack)) )
./xen/arch/x86/x86_64/compat/traps.c:        for_each_vcpu( v->domain, vcpu )
./xen/arch/x86/x86_64/compat/traps.c:        u32 x, ksp = v->arch.pv_vcpu.kernel_sp - 40;
./xen/arch/x86/x86_64/compat/traps.c:        regs->ss = v->arch.pv_vcpu.kernel_ss;
./xen/arch/x86/x86_64/compat/traps.c:        ti = &v->arch.pv_vcpu.trap_ctxt[TRAP_gp_fault];
./xen/arch/x86/x86_64/compat/traps.c:    domain_crash(v->domain);
./xen/arch/x86/x86_64/compat/traps.c:    fixup_guest_code_selector(v->domain, reg->address.cs);
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.event_callback_cs     = reg->address.cs;
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.event_callback_eip    = reg->address.eip;
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.failsafe_callback_cs  = reg->address.cs;
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.failsafe_callback_eip = reg->address.eip;
./xen/arch/x86/x86_64/compat/traps.c:                    &v->arch.vgc_flags);
./xen/arch/x86/x86_64/compat/traps.c:                      &v->arch.vgc_flags);
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.syscall32_callback_cs     = reg->address.cs;
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.syscall32_callback_eip    = reg->address.eip;
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.syscall32_disables_events =
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.sysenter_callback_cs     = reg->address.cs;
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.sysenter_callback_eip    = reg->address.eip;
./xen/arch/x86/x86_64/compat/traps.c:        v->arch.pv_vcpu.sysenter_disables_events =
./xen/arch/x86/x86_64/domain.c:        guest_from_compat_handle(v->runstate_guest.compat, area.addr.h);
./xen/arch/x86/x86_64/domain.c:            XLAT_vcpu_runstate_info(&info, &v->runstate);
./xen/arch/x86/x86_64/domain.c:        __copy_to_guest(v->runstate_guest.compat, &info, 1);
./xen/arch/x86/x86_64/traps.c:    if ( (context == CTXT_pv_guest) && v && v->vcpu_info )
./xen/arch/x86/x86_64/traps.c:        fault_crs[0] = v->arch.hvm_vcpu.guest_cr[0];
./xen/arch/x86/x86_64/traps.c:        fault_crs[2] = v->arch.hvm_vcpu.guest_cr[2];
./xen/arch/x86/x86_64/traps.c:        fault_crs[3] = v->arch.hvm_vcpu.guest_cr[3];
./xen/arch/x86/x86_64/traps.c:        fault_crs[4] = v->arch.hvm_vcpu.guest_cr[4];
./xen/arch/x86/x86_64/traps.c:    const struct cpu_user_regs *regs = &v->arch.user_regs;
./xen/arch/x86/x86_64/traps.c:    crs[0] = v->arch.pv_vcpu.ctrlreg[0];
./xen/arch/x86/x86_64/traps.c:                                 v->arch.guest_table :
./xen/arch/x86/x86_64/traps.c:                                 v->arch.guest_table_user);
./xen/arch/x86/x86_64/traps.c:    crs[4] = v->arch.pv_vcpu.ctrlreg[4];
./xen/arch/x86/x86_64/traps.c:    v->arch.flags ^= TF_kernel_mode;
./xen/arch/x86/x86_64/traps.c:    asm volatile ( "mov %0, %%cr3" : : "r" (v->arch.cr3) : "memory" );
./xen/arch/x86/x86_64/traps.c:        if ( unlikely(pagetable_is_null(v->arch.guest_table_user)) )
./xen/arch/x86/x86_64/traps.c:    domain_crash(v->domain);
./xen/arch/x86/x86_64/traps.c:    struct trap_info *ti = &v->arch.pv_vcpu.trap_ctxt[0x80];
./xen/arch/x86/x86_64/traps.c:    struct trap_bounce *tb = &v->arch.pv_vcpu.int80_bounce;
./xen/arch/x86/x86_64/traps.c:        v->arch.pv_vcpu.event_callback_eip    = reg->address;
./xen/arch/x86/x86_64/traps.c:        v->arch.pv_vcpu.failsafe_callback_eip = reg->address;
./xen/arch/x86/x86_64/traps.c:                    &v->arch.vgc_flags);
./xen/arch/x86/x86_64/traps.c:                      &v->arch.vgc_flags);
./xen/arch/x86/x86_64/traps.c:        v->arch.pv_vcpu.syscall_callback_eip  = reg->address;
./xen/arch/x86/x86_64/traps.c:                    &v->arch.vgc_flags);
./xen/arch/x86/x86_64/traps.c:                      &v->arch.vgc_flags);
./xen/arch/x86/x86_64/traps.c:        v->arch.pv_vcpu.syscall32_callback_eip = reg->address;
./xen/arch/x86/x86_64/traps.c:        v->arch.pv_vcpu.syscall32_disables_events =
./xen/arch/x86/x86_64/traps.c:        v->arch.pv_vcpu.sysenter_callback_eip = reg->address;
./xen/arch/x86/x86_64/traps.c:        v->arch.pv_vcpu.sysenter_disables_events =
./xen/arch/x86/traps.c:        for_each_vcpu( v->domain, vcpu )
./xen/arch/x86/traps.c:        vcpu = maddr_get_owner(read_cr3()) == v->domain ? v : NULL;
./xen/arch/x86/traps.c:           v->domain->domain_id, v->vcpu_id);
./xen/arch/x86/traps.c:    if ( guest_kernel_mode(v, &v->arch.user_regs) )
./xen/arch/x86/traps.c:        show_guest_stack(v, &v->arch.user_regs);
./xen/arch/x86/traps.c:    tb = &v->arch.pv_vcpu.trap_bounce;
./xen/arch/x86/traps.c:    ti = &v->arch.pv_vcpu.trap_ctxt[trapnr];
./xen/arch/x86/traps.c:                 trapstr(trapnr), trapnr, v->vcpu_id, regs->error_code);
./xen/arch/x86/traps.c:    if ( !(v->arch.debugreg[5]) ||
./xen/arch/x86/traps.c:         !(v->arch.pv_vcpu.ctrlreg[4] & X86_CR4_DE) )
./xen/arch/x86/traps.c:        if ( !(v->arch.debugreg[5] &
./xen/arch/x86/traps.c:        start = v->arch.debugreg[i];
./xen/arch/x86/traps.c:        switch ( (v->arch.debugreg[7] >>
./xen/arch/x86/traps.c:    struct trap_bounce *tb = &v->arch.pv_vcpu.trap_bounce;
./xen/arch/x86/traps.c:    struct trap_bounce *tb = &v->arch.pv_vcpu.trap_bounce;
./xen/arch/x86/traps.c:    struct trap_bounce *tb = &v->arch.pv_vcpu.trap_bounce;
./xen/arch/x86/traps.c:    v->arch.pv_vcpu.ctrlreg[2] = addr;
./xen/arch/x86/traps.c:    ti = &v->arch.pv_vcpu.trap_ctxt[TRAP_page_fault];
./xen/arch/x86/traps.c:               v->domain->domain_id, v->vcpu_id, error_code);
./xen/arch/x86/traps.c:    struct domain *d = v->domain;
./xen/arch/x86/traps.c:        v->arch.pv_vcpu.ctrlreg[0] |= X86_CR0_TS;
./xen/arch/x86/traps.c:        v->arch.pv_vcpu.ctrlreg[0] &= ~X86_CR0_TS;
./xen/arch/x86/traps.c:        if ( v->fpu_dirtied )
./xen/arch/x86/traps.c:    int user_mode = !(v->arch.flags & TF_kernel_mode);
./xen/arch/x86/traps.c:         (v->arch.pv_vcpu.iopl >= (guest_kernel_mode(v, regs) ? 1 : 3)) )
./xen/arch/x86/traps.c:    if ( v->arch.pv_vcpu.iobmp_limit > (port + bytes) )
./xen/arch/x86/traps.c:        switch ( __copy_from_guest_offset(x.bytes, v->arch.pv_vcpu.iobmp,
./xen/arch/x86/traps.c:    return ioports_access_permitted(v->domain, port, port + bytes - 1);
./xen/arch/x86/traps.c:            sub_data = v->domain->arch.cmos_idx;
./xen/arch/x86/traps.c:                  ioports_access_permitted(v->domain, RTC_PORT(0),
./xen/arch/x86/traps.c:            outb(v->domain->arch.cmos_idx & 0x7f, RTC_PORT(0));
./xen/arch/x86/traps.c:            sub_data = v->domain->arch.pci_cf8;
./xen/arch/x86/traps.c:            if ( pci_cfg_ok(v->domain, 0, size) )
./xen/arch/x86/traps.c:                sub_data = pci_conf_read(v->domain->arch.pci_cf8, port & 3, size);
./xen/arch/x86/traps.c:            v->domain->arch.cmos_idx = data;
./xen/arch/x86/traps.c:                  ioports_access_permitted(v->domain, RTC_PORT(0),
./xen/arch/x86/traps.c:                pv_rtc_handler(v->domain->arch.cmos_idx & 0x7f, data);
./xen/arch/x86/traps.c:            outb(v->domain->arch.cmos_idx & 0x7f, RTC_PORT(0));
./xen/arch/x86/traps.c:            v->domain->arch.pci_cf8 = data;
./xen/arch/x86/traps.c:            if ( pci_cfg_ok(v->domain, 1, size) )
./xen/arch/x86/traps.c:                pci_conf_write(v->domain->arch.pci_cf8, port & 3, size, data);
./xen/arch/x86/traps.c:                    data_base = v->arch.pv_vcpu.fs_base;
./xen/arch/x86/traps.c:                        data_base = v->arch.pv_vcpu.gs_base_kernel;
./xen/arch/x86/traps.c:                        data_base = v->arch.pv_vcpu.gs_base_user;
./xen/arch/x86/traps.c:        if ( v->arch.pv_vcpu.iopl < (guest_kernel_mode(v, regs) ? 1 : 3) )
./xen/arch/x86/traps.c:        /*v->vcpu_info->evtchn_upcall_mask = (opcode == 0xfa);*/
./xen/arch/x86/traps.c:            if ( (v->arch.pv_vcpu.ctrlreg[4] & X86_CR4_TSD) &&
./xen/arch/x86/traps.c:                 || !(v->arch.pv_vcpu.ctrlreg[4] & X86_CR4_OSXSAVE) )
./xen/arch/x86/traps.c:                    v->arch.xcr0 = new_xfeature;
./xen/arch/x86/traps.c:                    v->arch.xcr0_accum |= new_xfeature;
./xen/arch/x86/traps.c:        if ( !cache_flush_permitted(v->domain) )
./xen/arch/x86/traps.c:                v->arch.pv_vcpu.ctrlreg[0];
./xen/arch/x86/traps.c:            *reg = v->arch.pv_vcpu.ctrlreg[2];
./xen/arch/x86/traps.c:                mfn = pagetable_get_pfn(v->arch.guest_table);
./xen/arch/x86/traps.c:                    v->domain, mfn));
./xen/arch/x86/traps.c:                mfn = l4e_get_pfn(*(l4_pgentry_t *)__va(pagetable_get_paddr(v->arch.guest_table)));
./xen/arch/x86/traps.c:                    v->domain, mfn));
./xen/arch/x86/traps.c:            *reg = v->arch.pv_vcpu.ctrlreg[4];
./xen/arch/x86/traps.c:            v->arch.pv_vcpu.ctrlreg[2] = *reg;
./xen/arch/x86/traps.c:            domain_lock(v->domain);
./xen/arch/x86/traps.c:            page = get_page_from_gfn(v->domain, gfn, NULL, P2M_ALLOC);
./xen/arch/x86/traps.c:            domain_unlock(v->domain);
./xen/arch/x86/traps.c:            v->arch.pv_vcpu.ctrlreg[4] = pv_guest_cr4_fixup(v, *reg);
./xen/arch/x86/traps.c:            v->arch.pv_vcpu.fs_base = msr_content;
./xen/arch/x86/traps.c:            v->arch.pv_vcpu.gs_base_kernel = msr_content;
./xen/arch/x86/traps.c:            v->arch.pv_vcpu.gs_base_user = msr_content;
./xen/arch/x86/traps.c:            if ( !is_cpufreq_controller(v->domain) )
./xen/arch/x86/traps.c:            if ( !IS_PRIV(v->domain) || !is_pinned_vcpu(v) )
./xen/arch/x86/traps.c:            if ( !IS_PRIV(v->domain) || !is_pinned_vcpu(v) )
./xen/arch/x86/traps.c:            if ( !IS_PRIV(v->domain) || !is_pinned_vcpu(v) )
./xen/arch/x86/traps.c:            if ( !is_cpufreq_controller(v->domain) )
./xen/arch/x86/traps.c:            if ( !is_cpufreq_controller(v->domain) )
./xen/arch/x86/traps.c:            if ( !IS_PRIV(v->domain) || !is_pinned_vcpu(v) )
./xen/arch/x86/traps.c:        if ( (v->arch.pv_vcpu.ctrlreg[4] & X86_CR4_TSD) &&
./xen/arch/x86/traps.c:        if ( v->domain->arch.vtsc )
./xen/arch/x86/traps.c:            regs->eax = v->arch.pv_vcpu.fs_base & 0xFFFFFFFFUL;
./xen/arch/x86/traps.c:            regs->edx = v->arch.pv_vcpu.fs_base >> 32;
./xen/arch/x86/traps.c:            regs->eax = v->arch.pv_vcpu.gs_base_kernel & 0xFFFFFFFFUL;
./xen/arch/x86/traps.c:            regs->edx = v->arch.pv_vcpu.gs_base_kernel >> 32;
./xen/arch/x86/traps.c:            regs->eax = v->arch.pv_vcpu.gs_base_user & 0xFFFFFFFFUL;
./xen/arch/x86/traps.c:            regs->edx = v->arch.pv_vcpu.gs_base_user >> 32;
./xen/arch/x86/traps.c:            if ( !is_cpufreq_controller(v->domain) )
./xen/arch/x86/traps.c:            if ( (sel & 3) != GUEST_KERNEL_RPL(v->domain) )
./xen/arch/x86/traps.c:            esp = v->arch.pv_vcpu.kernel_sp;
./xen/arch/x86/traps.c:            ss = v->arch.pv_vcpu.kernel_ss;
./xen/arch/x86/traps.c:        ti = &v->arch.pv_vcpu.trap_ctxt[vector];
./xen/arch/x86/traps.c:    if ( VM_ASSIST(v->domain, VMASST_TYPE_4gb_segments) && 
./xen/arch/x86/traps.c:    v->arch.debugreg[6] = read_debugreg(6);
./xen/arch/x86/traps.c:    struct domain *d = v->domain;
./xen/arch/x86/traps.c:    struct trap_info *t = &v->arch.pv_vcpu.trap_ctxt[TRAP_nmi];
./xen/arch/x86/traps.c:    if ( (v->vcpu_id == 0) && (arch_get_nmi_reason(d) != 0) )
./xen/arch/x86/traps.c:        v->nmi_pending = 1;
./xen/arch/x86/traps.c:    struct trap_info *t = &v->arch.pv_vcpu.trap_ctxt[TRAP_nmi];
./xen/arch/x86/traps.c:    t = &v->arch.pv_vcpu.trap_ctxt[trap_nr];
./xen/arch/x86/traps.c:        if ( !test_and_set_bool(v->nmi_pending) ) {
./xen/arch/x86/traps.c:               st->processor = v->processor;
./xen/arch/x86/traps.c:        if ( !test_and_set_bool(v->mce_pending) ) {
./xen/arch/x86/traps.c:                st->processor = v->processor;
./xen/arch/x86/traps.c:                    if ( !(v->arch.pv_vcpu.ctrlreg[4] & X86_CR4_DE) )
./xen/arch/x86/traps.c:            v->arch.debugreg[5] = io_enable;
./xen/arch/x86/traps.c:                 !(v->arch.debugreg[7] & DR7_ACTIVE_MASK) )
./xen/arch/x86/traps.c:                write_debugreg(0, v->arch.debugreg[0]);
./xen/arch/x86/traps.c:                write_debugreg(1, v->arch.debugreg[1]);
./xen/arch/x86/traps.c:                write_debugreg(2, v->arch.debugreg[2]);
./xen/arch/x86/traps.c:                write_debugreg(3, v->arch.debugreg[3]);
./xen/arch/x86/traps.c:                write_debugreg(6, v->arch.debugreg[6]);
./xen/arch/x86/traps.c:    v->arch.debugreg[reg] = value;
./xen/arch/x86/pmustate.c:    struct domain *d = v->domain;
./xen/arch/x86/pmustate.c:            rdtscll(v->arch.hvm_vcpu.tsc_last);
./xen/arch/x86/pmustate.c:        state = (struct perfctr_cpu_state *)((char *)d->shared_info + PAGE_SIZE) + v->vcpu_id;
./xen/arch/x86/pmustate.c:        spin_lock_irqsave(&v->arch.perfctr_lock, flags);
./xen/arch/x86/pmustate.c:        spin_unlock_irqrestore(&v->arch.perfctr_lock, flags);
./xen/arch/x86/pmustate.c:    struct domain *d = v->domain;
./xen/arch/x86/pmustate.c:            v->arch.hvm_vcpu.cache_tsc_offset += v->arch.hvm_vcpu.tsc_last - tsc_now;
./xen/arch/x86/pmustate.c:        state = (struct perfctr_cpu_state *)((char *)d->shared_info + PAGE_SIZE) + v->vcpu_id;
./xen/arch/x86/pmustate.c:        spin_lock_irqsave(&v->arch.perfctr_lock, flags);
./xen/arch/x86/pmustate.c:        spin_unlock_irqrestore(&v->arch.perfctr_lock, flags);
./xen/arch/x86/pmustate.c:    struct domain *d = v->domain;
./xen/arch/x86/pmustate.c:        state = (struct perfctr_cpu_state *)((char *)d->shared_info + PAGE_SIZE) + v->vcpu_id;
./xen/arch/x86/pmustate.c:    state = (struct perfctr_cpu_state *)((char *)v->domain->shared_info + PAGE_SIZE) + v->vcpu_id;
./xen/arch/x86/pmustate.c:    spin_lock_irqsave(&v->arch.perfctr_lock, flags);
./xen/arch/x86/pmustate.c:    spin_unlock_irqrestore(&v->arch.perfctr_lock, flags);
./xen/arch/x86/pmustate.c:    state = (struct perfctr_cpu_state *)((char *)v->domain->shared_info + PAGE_SIZE) + v->vcpu_id;
./xen/arch/x86/pmustate.c:    spin_lock_irqsave(&v->arch.perfctr_lock, flags);
./xen/arch/x86/pmustate.c:    spin_unlock_irqrestore(&v->arch.perfctr_lock, flags);
./xen/arch/arm/gic.c:        v->arch.gic_lr[i] = GICH[GICH_LR + i];
./xen/arch/arm/gic.c:    v->arch.lr_mask = gic.lr_mask;
./xen/arch/arm/gic.c:    gic.lr_mask = v->arch.lr_mask;
./xen/arch/arm/gic.c:        GICH[GICH_LR + i] = v->arch.gic_lr[i];
./xen/arch/arm/gic.c:    if ( v->is_running && list_empty(&v->arch.vgic.lr_pending) )
./xen/arch/arm/gic.c:    list_for_each_entry ( iter, &v->arch.vgic.lr_pending, lr_queue )
./xen/arch/arm/gic.c:    list_add_tail(&n->lr_queue, &v->arch.vgic.lr_pending);
./xen/arch/arm/gic.c:    list_for_each_entry_safe ( p, t, &v->arch.vgic.lr_pending, lr_queue )
./xen/arch/arm/gic.c:        if ( !list_empty(&v->arch.vgic.lr_pending) ) {
./xen/arch/arm/gic.c:            p = list_entry(v->arch.vgic.lr_pending.next, typeof(*p), lr_queue);
./xen/arch/arm/gic.c:        spin_lock_irq(&v->arch.vgic.lock);
./xen/arch/arm/gic.c:        spin_unlock_irq(&v->arch.vgic.lock);
./xen/arch/arm/irq.c:     * Sanity-check: shared interrupts must pass in a real dev-ID,
./xen/arch/arm/domain_build.c:    struct cpu_user_regs *regs = &v->arch.cpu_info->guest_cpu_user_regs;
./xen/arch/arm/domain_build.c:    BUG_ON(v->is_initialised);
./xen/arch/arm/domain_build.c:    clear_bit(_VPF_down, &v->pause_flags);
./xen/arch/arm/vtimer.c:    v->arch.vtimer.ctl |= CNTx_CTL_PENDING;
./xen/arch/arm/vtimer.c:    v->arch.vtimer.ctl &= ~CNTx_CTL_MASK;
./xen/arch/arm/vtimer.c:    init_timer(&v->arch.vtimer.timer,
./xen/arch/arm/vtimer.c:    v->arch.vtimer.ctl = 0;
./xen/arch/arm/vtimer.c:    v->arch.vtimer.offset = NOW();
./xen/arch/arm/vtimer.c:    v->arch.vtimer.cval = NOW();
./xen/arch/arm/vtimer.c:            *r = v->arch.vtimer.ctl;
./xen/arch/arm/vtimer.c:            v->arch.vtimer.ctl = *r;
./xen/arch/arm/vtimer.c:            if ( v->arch.vtimer.ctl & CNTx_CTL_ENABLE )
./xen/arch/arm/vtimer.c:                set_timer(&v->arch.vtimer.timer,
./xen/arch/arm/vtimer.c:                          v->arch.vtimer.cval + v->arch.vtimer.offset);
./xen/arch/arm/vtimer.c:                stop_timer(&v->arch.vtimer.timer);
./xen/arch/arm/vtimer.c:        now = NOW() - v->arch.vtimer.offset;
./xen/arch/arm/vtimer.c:            *r = (uint32_t)(ns_to_ticks(v->arch.vtimer.cval - now) & 0xffffffffull);
./xen/arch/arm/vtimer.c:            v->arch.vtimer.cval = now + ticks_to_ns(*r);
./xen/arch/arm/vtimer.c:            if ( v->arch.vtimer.ctl & CNTx_CTL_ENABLE )
./xen/arch/arm/vtimer.c:                set_timer(&v->arch.vtimer.timer,
./xen/arch/arm/vtimer.c:                          v->arch.vtimer.cval + v->arch.vtimer.offset);
./xen/arch/arm/vtimer.c:            now = NOW() - v->arch.vtimer.offset;
./xen/arch/arm/domain.c:       cpumask_set_cpu(v->processor, v->domain->domain_dirty_cpumask);
./xen/arch/arm/domain.c:       cpumask_set_cpu(v->processor, v->vcpu_dirty_cpumask);
./xen/arch/arm/domain.c:    v->arch.stack = alloc_xenheap_pages(STACK_ORDER, MEMF_node(vcpu_to_node(v)));
./xen/arch/arm/domain.c:    if ( v->arch.stack == NULL )
./xen/arch/arm/domain.c:    v->arch.cpu_info = (struct cpu_info *)(v->arch.stack
./xen/arch/arm/domain.c:    memset(&v->arch.saved_context, 0, sizeof(v->arch.saved_context));
./xen/arch/arm/domain.c:    v->arch.saved_context.sp = (uint32_t)v->arch.cpu_info;
./xen/arch/arm/domain.c:    v->arch.saved_context.pc = (uint32_t)continue_new_vcpu;
./xen/arch/arm/domain.c:    free_xenheap_pages(v->arch.stack, STACK_ORDER);
./xen/arch/arm/domain.c:    v->arch.cpu_info->guest_cpu_user_regs = *regs;
./xen/arch/arm/domain.c:    v->arch.sctlr = ctxt->sctlr;
./xen/arch/arm/domain.c:    v->arch.ttbr0 = ctxt->ttbr0;
./xen/arch/arm/domain.c:    v->arch.ttbr1 = ctxt->ttbr1;
./xen/arch/arm/domain.c:    v->arch.ttbcr = ctxt->ttbcr;
./xen/arch/arm/domain.c:    clear_bit(_VPF_down, &v->pause_flags);
./xen/arch/arm/vgic.c:        return &v->arch.vgic.private_irqs;
./xen/arch/arm/vgic.c:    else if ( rank <= DOMAIN_NR_RANKS(v->domain) )
./xen/arch/arm/vgic.c:        return &v->domain->arch.vgic.shared_irqs[rank - 1];
./xen/arch/arm/vgic.c:    memset(&v->arch.vgic.private_irqs, 0, sizeof(v->arch.vgic.private_irqs));
./xen/arch/arm/vgic.c:    spin_lock_init(&v->arch.vgic.private_irqs.lock);
./xen/arch/arm/vgic.c:    memset(&v->arch.vgic.pending_irqs, 0, sizeof(v->arch.vgic.pending_irqs));
./xen/arch/arm/vgic.c:        INIT_LIST_HEAD(&v->arch.vgic.pending_irqs[i].inflight);
./xen/arch/arm/vgic.c:        INIT_LIST_HEAD(&v->arch.vgic.pending_irqs[i].lr_queue);
./xen/arch/arm/vgic.c:        v->arch.vgic.private_irqs.itargets[i] =
./xen/arch/arm/vgic.c:              (1<<(v->vcpu_id+0))
./xen/arch/arm/vgic.c:            | (1<<(v->vcpu_id+8))
./xen/arch/arm/vgic.c:            | (1<<(v->vcpu_id+16))
./xen/arch/arm/vgic.c:            | (1<<(v->vcpu_id+24));
./xen/arch/arm/vgic.c:    INIT_LIST_HEAD(&v->arch.vgic.inflight_irqs);
./xen/arch/arm/vgic.c:    INIT_LIST_HEAD(&v->arch.vgic.lr_pending);
./xen/arch/arm/vgic.c:    spin_lock_init(&v->arch.vgic.lock);
./xen/arch/arm/vgic.c:        *r = v->domain->arch.vgic.ctlr;
./xen/arch/arm/vgic.c:        *r = ( (v->domain->max_vcpus<<5) & GICD_TYPE_CPUS )
./xen/arch/arm/vgic.c:            |( ((v->domain->arch.vgic.nr_lines/32)) & GICD_TYPE_LINES );
./xen/arch/arm/vgic.c:        v->domain->arch.vgic.ctlr = (*r) & GICD_CTL_ENABLE;
./xen/arch/arm/vgic.c:        n = &v->arch.vgic.pending_irqs[irq];
./xen/arch/arm/vgic.c:        n = &v->domain->arch.vgic.pending_irqs[irq - 32];
./xen/arch/arm/vgic.c:    spin_lock_irqsave(&v->arch.vgic.lock, flags);
./xen/arch/arm/vgic.c:    list_for_each_entry ( iter, &v->arch.vgic.inflight_irqs, inflight )
./xen/arch/arm/vgic.c:            spin_unlock_irqrestore(&v->arch.vgic.lock, flags);
./xen/arch/arm/vgic.c:    list_add_tail(&n->inflight, &v->arch.vgic.inflight_irqs);
./xen/arch/arm/vgic.c:    spin_unlock_irqrestore(&v->arch.vgic.lock, flags);
./xen/arch/arm/traps.c:    ctxt.sctlr = v->arch.sctlr;
./xen/arch/arm/traps.c:    ctxt.ttbcr = v->arch.ttbcr;
./xen/arch/arm/traps.c:    ctxt.ttbr0 = v->arch.ttbr0;
./xen/arch/arm/traps.c:    ctxt.ttbr1 = v->arch.ttbr1;
./xen/arch/arm/traps.c:    _show_registers(&v->arch.cpu_info->guest_cpu_user_regs, &ctxt, 1);
./xen/arch/arm/traps.c:           v->domain->domain_id, v->vcpu_id);
./xen/arch/arm/traps.c:    if ( !usr_mode(&v->arch.cpu_info->guest_cpu_user_regs) )
./xen/arch/arm/traps.c:        show_guest_stack(&v->arch.cpu_info->guest_cpu_user_regs);
./xen/drivers/passthrough/vtd/dmar.c:    if ( pdev->info.is_extfn )
./xen/drivers/passthrough/vtd/dmar.c:        bus = pdev->bus;
./xen/drivers/passthrough/vtd/dmar.c:    else if ( pdev->info.is_virtfn )
./xen/drivers/passthrough/vtd/dmar.c:        bus = pdev->info.physfn.bus;
./xen/drivers/passthrough/vtd/dmar.c:        devfn = PCI_SLOT(pdev->info.physfn.devfn) ? 0 : pdev->info.physfn.devfn;
./xen/drivers/passthrough/vtd/dmar.c:        bus = pdev->bus;
./xen/drivers/passthrough/vtd/dmar.c:        devfn = pdev->devfn;
./xen/drivers/passthrough/vtd/dmar.c:        if ( drhd->segment != pdev->seg )
./xen/drivers/passthrough/vtd/dmar.c:        if ( atsr->segment != pdev->seg )
./xen/drivers/passthrough/vtd/dmar.c:        if ( test_bit(pdev->bus, atsr->scope.buses) )
./xen/drivers/passthrough/vtd/x86/ats.c:    pos = pci_find_ext_capability(pdev->seg, pdev->bus, pdev->devfn,
./xen/drivers/passthrough/vtd/x86/ats.c:    if ( !root_entry || !root_present(root_entry[pdev->bus]) )
./xen/drivers/passthrough/vtd/x86/ats.c:                 map_vtd_domain_page(root_entry[pdev->bus].val);
./xen/drivers/passthrough/vtd/x86/ats.c:    if ( context_domain_id(ctxt_entry[pdev->devfn]) != did )
./xen/drivers/passthrough/vtd/x86/ats.c:    tt = context_translation_type(ctxt_entry[pdev->devfn]);
./xen/drivers/passthrough/vtd/x86/ats.c:        sid = (pdev->bus << 8) | pdev->devfn;
./xen/drivers/passthrough/vtd/x86/ats.c:            ret |= qinval_device_iotlb(iommu, pdev->ats_queue_depth,
./xen/drivers/passthrough/vtd/x86/ats.c:            ret |= qinval_device_iotlb(iommu, pdev->ats_queue_depth,
./xen/drivers/passthrough/vtd/intremap.c:    seg = pdev->seg;
./xen/drivers/passthrough/vtd/intremap.c:    bus = pdev->bus;
./xen/drivers/passthrough/vtd/intremap.c:    devfn = pdev->devfn;
./xen/drivers/passthrough/vtd/intremap.c:                            (bus << 8) | pdev->bus);
./xen/drivers/passthrough/vtd/intremap.c:                pdev->domain->domain_id, type,
./xen/drivers/passthrough/vtd/quirks.c:    int seg = pdev->seg;
./xen/drivers/passthrough/vtd/quirks.c:    int bus = pdev->bus;
./xen/drivers/passthrough/vtd/quirks.c:    int dev = PCI_SLOT(pdev->devfn);
./xen/drivers/passthrough/vtd/quirks.c:    int func = PCI_FUNC(pdev->devfn);
./xen/drivers/passthrough/vtd/iommu.c:            if ( pdev->domain != domain )
./xen/drivers/passthrough/vtd/iommu.c:                        (pdev->domain)
./xen/drivers/passthrough/vtd/iommu.c:                        ? pdev->domain->domain_id : -1);
./xen/drivers/passthrough/vtd/iommu.c:             (secbus != pdev->bus || pdev->devfn != 0) )
./xen/drivers/passthrough/vtd/iommu.c:        if ( pdev->seg == seg && pdev->bus == bus && pdev->devfn == devfn )
./xen/drivers/passthrough/vtd/iommu.c:    list_move(&pdev->domain_list, &target->arch.pdev_list);
./xen/drivers/passthrough/vtd/iommu.c:    pdev->domain = target;
./xen/drivers/passthrough/vtd/iommu.c:    if ( !pdev->domain )
./xen/drivers/passthrough/vtd/iommu.c:    ret = domain_context_mapping(pdev->domain, pdev->seg, pdev->bus,
./xen/drivers/passthrough/vtd/iommu.c:                                 pdev->devfn);
./xen/drivers/passthrough/vtd/iommu.c:                pdev->domain->domain_id);
./xen/drivers/passthrough/vtd/iommu.c:        if ( rmrr->segment == pdev->seg &&
./xen/drivers/passthrough/vtd/iommu.c:             PCI_BUS(bdf) == pdev->bus &&
./xen/drivers/passthrough/vtd/iommu.c:             PCI_DEVFN2(bdf) == pdev->devfn )
./xen/drivers/passthrough/vtd/iommu.c:            ret = rmrr_identity_mapping(pdev->domain, rmrr);
./xen/drivers/passthrough/vtd/iommu.c:                        pdev->domain->domain_id);
./xen/drivers/passthrough/vtd/iommu.c:    ret = enable_ats_device(pdev->seg, pdev->bus, pdev->devfn);
./xen/drivers/passthrough/vtd/iommu.c:    if ( !pdev->domain )
./xen/drivers/passthrough/vtd/iommu.c:    if ( pdev->domain->domain_id == 0 )
./xen/drivers/passthrough/vtd/iommu.c:            if ( rmrr->segment == pdev->seg &&
./xen/drivers/passthrough/vtd/iommu.c:                 PCI_BUS(bdf) == pdev->bus &&
./xen/drivers/passthrough/vtd/iommu.c:                 PCI_DEVFN2(bdf) == pdev->devfn )
./xen/drivers/passthrough/vtd/iommu.c:    return domain_context_unmap(pdev->domain, pdev->seg, pdev->bus,
./xen/drivers/passthrough/vtd/iommu.c:                                pdev->devfn);
./xen/drivers/passthrough/vtd/iommu.c:    domain_context_mapping(pdev->domain, pdev->seg, pdev->bus, pdev->devfn);
./xen/drivers/passthrough/vtd/iommu.c:    if (pdev->domain != dom0)
./xen/drivers/passthrough/x86/ats.c:            if ( pdev->seg == seg && pdev->bus == bus && pdev->devfn == devfn )
./xen/drivers/passthrough/x86/ats.c:        pdev->seg = seg;
./xen/drivers/passthrough/x86/ats.c:        pdev->bus = bus;
./xen/drivers/passthrough/x86/ats.c:        pdev->devfn = devfn;
./xen/drivers/passthrough/x86/ats.c:        pdev->ats_queue_depth = value & ATS_QUEUE_DEPTH_MASK;
./xen/drivers/passthrough/x86/ats.c:        list_add(&pdev->list, &ats_devices);
./xen/drivers/passthrough/x86/ats.c:        if ( pdev->seg == seg && pdev->bus == bus && pdev->devfn == devfn )
./xen/drivers/passthrough/x86/ats.c:            list_del(&pdev->list);
./xen/drivers/passthrough/x86/ats.c:        if ( pdev->seg == seg && pdev->bus == bus && pdev->devfn == devfn )
./xen/drivers/passthrough/pci.c:        if ( pdev->bus == bus && pdev->devfn == devfn )
./xen/drivers/passthrough/pci.c:    *(u16*) &pdev->seg = pseg->nr;
./xen/drivers/passthrough/pci.c:    *((u8*) &pdev->bus) = bus;
./xen/drivers/passthrough/pci.c:    *((u8*) &pdev->devfn) = devfn;
./xen/drivers/passthrough/pci.c:    pdev->domain = NULL;
./xen/drivers/passthrough/pci.c:    INIT_LIST_HEAD(&pdev->msi_list);
./xen/drivers/passthrough/pci.c:    list_add(&pdev->alldevs_list, &pseg->alldevs_list);
./xen/drivers/passthrough/pci.c:    spin_lock_init(&pdev->msix_table_lock);
./xen/drivers/passthrough/pci.c:    switch ( pdev_type(pseg->nr, pdev->bus, pdev->devfn) )
./xen/drivers/passthrough/pci.c:            dev = PCI_SLOT(pdev->devfn);
./xen/drivers/passthrough/pci.c:            func = PCI_FUNC(pdev->devfn);
./xen/drivers/passthrough/pci.c:            sec_bus = pci_conf_read8(pseg->nr, pdev->bus, dev, func,
./xen/drivers/passthrough/pci.c:            sub_bus = pci_conf_read8(pseg->nr, pdev->bus, dev, func,
./xen/drivers/passthrough/pci.c:                pseg->bus2bridge[sec_bus] = pseg->bus2bridge[pdev->bus];
./xen/drivers/passthrough/pci.c:    list_del(&pdev->alldevs_list);
./xen/drivers/passthrough/pci.c:            if ( (pdev->bus == bus || bus == -1) &&
./xen/drivers/passthrough/pci.c:                 (pdev->devfn == devfn || devfn == -1) )
./xen/drivers/passthrough/pci.c:            if ( (pdev->bus == bus || bus == -1) &&
./xen/drivers/passthrough/pci.c:                 (pdev->devfn == devfn || devfn == -1) &&
./xen/drivers/passthrough/pci.c:                 (pdev->domain == d) )
./xen/drivers/passthrough/pci.c:    u16 cap, ctrl, seg = pdev->seg;
./xen/drivers/passthrough/pci.c:    u8 bus = pdev->bus;
./xen/drivers/passthrough/pci.c:    u8 dev = PCI_SLOT(pdev->devfn);
./xen/drivers/passthrough/pci.c:    u8 func = PCI_FUNC(pdev->devfn);
./xen/drivers/passthrough/pci.c:    pos = pci_find_ext_capability(seg, bus, pdev->devfn, PCI_EXT_CAP_ID_ACS);
./xen/drivers/passthrough/pci.c:        pdev->info = *info;
./xen/drivers/passthrough/pci.c:    else if ( !pdev->vf_rlen[0] )
./xen/drivers/passthrough/pci.c:            BUILD_BUG_ON(ARRAY_SIZE(pdev->vf_rlen) != PCI_SRIOV_NUM_BARS);
./xen/drivers/passthrough/pci.c:                pdev->vf_rlen[i] = pci_conf_read32(seg, bus, slot, func, idx) &
./xen/drivers/passthrough/pci.c:                    pdev->vf_rlen[i] |= (u64)pci_conf_read32(seg, bus,
./xen/drivers/passthrough/pci.c:                else if ( pdev->vf_rlen[i] )
./xen/drivers/passthrough/pci.c:                    pdev->vf_rlen[i] |= (u64)~0 << 32;
./xen/drivers/passthrough/pci.c:                pdev->vf_rlen[i] = -pdev->vf_rlen[i];
./xen/drivers/passthrough/pci.c:    if ( !pdev->domain )
./xen/drivers/passthrough/pci.c:        pdev->domain = dom0;
./xen/drivers/passthrough/pci.c:            pdev->domain = NULL;
./xen/drivers/passthrough/pci.c:        list_add(&pdev->domain_list, &dom0->arch.pdev_list);
./xen/drivers/passthrough/pci.c:        if ( pdev->bus == bus && pdev->devfn == devfn )
./xen/drivers/passthrough/pci.c:            if ( pdev->domain )
./xen/drivers/passthrough/pci.c:                list_del(&pdev->domain_list);
./xen/drivers/passthrough/pci.c:        bus = pdev->bus;
./xen/drivers/passthrough/pci.c:        devfn = pdev->devfn;
./xen/drivers/passthrough/pci.c:        if ( deassign_device(d, pdev->seg, bus, devfn) )
./xen/drivers/passthrough/pci.c:                   d->domain_id, pdev->seg, bus,
./xen/drivers/passthrough/pci.c:            pdev->domain = ctxt->d;
./xen/drivers/passthrough/pci.c:            list_add(&pdev->domain_list, &ctxt->d->arch.pdev_list);
./xen/drivers/passthrough/pci.c:               pseg->nr, pdev->bus,
./xen/drivers/passthrough/pci.c:               PCI_SLOT(pdev->devfn), PCI_FUNC(pdev->devfn),
./xen/drivers/passthrough/pci.c:               pdev->domain ? pdev->domain->domain_id : -1);
./xen/drivers/passthrough/pci.c:        list_for_each_entry ( msi, &pdev->msi_list, list )
./xen/drivers/passthrough/amd/iommu_init.c:        guest_iommu_add_ppr_log(pdev->domain, entry);
./xen/drivers/passthrough/amd/iommu_intr.c:    bdf = (pdev->bus << 8) | pdev->devfn;
./xen/drivers/passthrough/amd/iommu_intr.c:    req_id = get_dma_requestor_id(pdev->seg, bdf);
./xen/drivers/passthrough/amd/iommu_intr.c:    alias_id = get_intremap_requestor_id(pdev->seg, bdf);
./xen/drivers/passthrough/amd/iommu_intr.c:             get_ivrs_mappings(pdev->seg)[alias_id].intremap_table != NULL )
./xen/drivers/passthrough/amd/iommu_intr.c:         get_ivrs_mappings(pdev->seg)[alias_id].intremap_table != NULL )
./xen/drivers/passthrough/amd/iommu_intr.c:    iommu = find_iommu_for_device(pdev->seg, (pdev->bus << 8) | pdev->devfn);
./xen/drivers/passthrough/amd/iommu_intr.c:                       (pdev->bus << 8) | pdev->devfn);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    int bdf = PCI_BDF2(pdev->bus, pdev->devfn);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    struct amd_iommu *iommu = find_iommu_for_device(pdev->seg, bdf);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:        amd_iommu_setup_domain_device(pdev->domain, iommu, bdf);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:                        pdev->seg, pdev->bus,
./xen/drivers/passthrough/amd/pci_amd_iommu.c:                        PCI_SLOT(pdev->devfn), PCI_FUNC(pdev->devfn));
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    list_move(&pdev->domain_list, &target->arch.pdev_list);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    pdev->domain = target;
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    if ( !pdev->domain )
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    bdf = PCI_BDF2(pdev->bus, pdev->devfn);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    iommu = find_iommu_for_device(pdev->seg, bdf);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:                        pdev->seg, pdev->bus, PCI_SLOT(pdev->devfn),
./xen/drivers/passthrough/amd/pci_amd_iommu.c:                        PCI_FUNC(pdev->devfn), pdev->domain->domain_id);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    amd_iommu_setup_domain_device(pdev->domain, iommu, bdf);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    if ( !pdev->domain )
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    bdf = PCI_BDF2(pdev->bus, pdev->devfn);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    iommu = find_iommu_for_device(pdev->seg, bdf);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:                        pdev->seg, pdev->bus, PCI_SLOT(pdev->devfn),
./xen/drivers/passthrough/amd/pci_amd_iommu.c:                        PCI_FUNC(pdev->devfn), pdev->domain->domain_id);
./xen/drivers/passthrough/amd/pci_amd_iommu.c:    amd_iommu_disable_domain_device(pdev->domain, iommu, bdf);
./xen/drivers/passthrough/amd/iommu_guest.c:    return domain_hvm_iommu(v->domain)->g_iommu;
./xen/drivers/passthrough/amd/iommu_cmd.c:    ats_pdev = get_ats_device(pdev->seg, pdev->bus, pdev->devfn);
./xen/drivers/passthrough/amd/iommu_cmd.c:    if ( !pci_ats_enabled(ats_pdev->seg, ats_pdev->bus, ats_pdev->devfn) )
./xen/drivers/passthrough/amd/iommu_cmd.c:    bdf = PCI_BDF2(ats_pdev->bus, ats_pdev->devfn);
./xen/drivers/passthrough/amd/iommu_cmd.c:    iommu = find_iommu_for_device(ats_pdev->seg, bdf);
./xen/drivers/passthrough/amd/iommu_cmd.c:                        __func__, ats_pdev->seg, ats_pdev->bus,
./xen/drivers/passthrough/amd/iommu_cmd.c:                        PCI_SLOT(ats_pdev->devfn), PCI_FUNC(ats_pdev->devfn));
./xen/drivers/passthrough/amd/iommu_cmd.c:    maxpend = (ats_pdev->ats_queue_depth + 32) & 0xff;
./xen/drivers/passthrough/amd/iommu_map.c:    flags = ivrs_dev->device_flags;
./xen/drivers/passthrough/amd/iommu_map.c:    dev_ex = ivrs_dev->dte_allow_exclusion;
./xen/drivers/passthrough/amd/iommu_map.c:            bdf = (pdev->bus << 8) | pdev->devfn;
./xen/drivers/passthrough/amd/iommu_map.c:            req_id = get_dma_requestor_id(pdev->seg, bdf);
./xen/drivers/passthrough/amd/iommu_map.c:            iommu = find_iommu_for_device(pdev->seg, bdf);
./xen/drivers/passthrough/iommu.c:        else if ( !strcmp(s, "amd-iommu-perdev-intremap") )
./xen/drivers/passthrough/iommu.c:    if ( !pdev->domain )
./xen/drivers/passthrough/iommu.c:    hd = domain_hvm_iommu(pdev->domain);
./xen/drivers/passthrough/iommu.c:    if ( !pdev->domain )
./xen/drivers/passthrough/iommu.c:    hd = domain_hvm_iommu(pdev->domain);
./xen/drivers/passthrough/iommu.c:    if ( !pdev->domain )
./xen/drivers/passthrough/iommu.c:    hd = domain_hvm_iommu(pdev->domain);
./xen/drivers/passthrough/iommu.c:    if ( pdev->domain != d )
./xen/drivers/passthrough/iommu.c:        if ( (pdev->seg != seg) ||
./xen/drivers/passthrough/iommu.c:             ((pdev->bus == bus) && (pdev->devfn == devfn)) )
./xen/drivers/passthrough/iommu.c:        if ( xsm_get_device_group((seg << 16) | (pdev->bus << 8) | pdev->devfn) )
./xen/drivers/passthrough/iommu.c:        sdev_id = ops->get_device_group_id(seg, pdev->bus, pdev->devfn);
./xen/drivers/passthrough/iommu.c:            bdf |= (pdev->bus & 0xff) << 16;
./xen/drivers/passthrough/iommu.c:            bdf |= (pdev->devfn & 0xff) << 8;
./xen/common/keyhandler.c:        if ( (v = v->next_in_list) == NULL )
./xen/common/keyhandler.c:            tasklet_schedule_on_cpu(&dump_dom0_tasklet, v->processor);
./xen/common/keyhandler.c:            tasklet_schedule_on_cpu(&dump_dom0_tasklet, v->processor);
./xen/common/keyhandler.c:                   v->vcpu_id, v->processor,
./xen/common/keyhandler.c:                   v->is_running ? 'T':'F', v->poll_evtchn,
./xen/common/keyhandler.c:            cpuset_print(tmpstr, sizeof(tmpstr), v->vcpu_dirty_cpumask);
./xen/common/keyhandler.c:            cpuset_print(tmpstr, sizeof(tmpstr), v->cpu_affinity);
./xen/common/keyhandler.c:                   atomic_read(&v->pause_count), v->pause_flags);
./xen/common/keyhandler.c:            periodic_timer_print(tmpstr, sizeof(tmpstr), v->periodic_period);
./xen/common/keyhandler.c:                   d->domain_id, v->vcpu_id,
./xen/common/keyhandler.c:                   VIRQ_DEBUG, v->virq_to_evtchn[VIRQ_DEBUG],
./xen/common/keyhandler.c:                   test_bit(v->virq_to_evtchn[VIRQ_DEBUG], 
./xen/common/keyhandler.c:                   test_bit(v->virq_to_evtchn[VIRQ_DEBUG], 
./xen/common/keyhandler.c:                   test_bit(v->virq_to_evtchn[VIRQ_DEBUG] /
./xen/common/sched_credit.c:        if ( cpumask_empty(prv->idlers) )
./xen/common/sched_credit.c:            cpumask_and(&idle_mask, prv->idlers, new->vcpu->cpu_affinity);
./xen/common/sched_credit.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_credit.c:    prv->credit -= prv->credits_per_tslice;
./xen/common/sched_credit.c:    prv->ncpus--;
./xen/common/sched_credit.c:    cpumask_clear_cpu(cpu, prv->idlers);
./xen/common/sched_credit.c:    cpumask_clear_cpu(cpu, prv->cpus);
./xen/common/sched_credit.c:    if ( (prv->master == cpu) && (prv->ncpus > 0) )
./xen/common/sched_credit.c:        prv->master = cpumask_first(prv->cpus);
./xen/common/sched_credit.c:        migrate_timer(&prv->master_ticker, prv->master);
./xen/common/sched_credit.c:    if ( prv->ncpus == 0 )
./xen/common/sched_credit.c:        kill_timer(&prv->master_ticker);
./xen/common/sched_credit.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_credit.c:    prv->credit += prv->credits_per_tslice;
./xen/common/sched_credit.c:    prv->ncpus++;
./xen/common/sched_credit.c:    cpumask_set_cpu(cpu, prv->cpus);
./xen/common/sched_credit.c:    if ( prv->ncpus == 1 )
./xen/common/sched_credit.c:        prv->master = cpu;
./xen/common/sched_credit.c:        init_timer(&prv->master_ticker, csched_acct, prv, cpu);
./xen/common/sched_credit.c:        set_timer(&prv->master_ticker,
./xen/common/sched_credit.c:                  NOW() + MICROSECS(prv->tslice_us));
./xen/common/sched_credit.c:    set_timer(&spc->ticker, NOW() + MICROSECS(prv->tick_period_us) );
./xen/common/sched_credit.c:    spc->runq_sort_last = prv->runq_sort;
./xen/common/sched_credit.c:    cpumask_set_cpu(cpu, prv->idlers);
./xen/common/sched_credit.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit.c:    int hot = ((NOW() - v->last_run_time) <
./xen/common/sched_credit.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_credit.c:        prv->weight += sdom->weight;
./xen/common/sched_credit.c:            list_add(&sdom->active_sdom_elem, &prv->active_sdom);
./xen/common/sched_credit.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit.c:    BUG_ON( prv->weight < sdom->weight );
./xen/common/sched_credit.c:    prv->weight -= sdom->weight;
./xen/common/sched_credit.c:    spin_lock_irqsave(&(prv->lock), flags);
./xen/common/sched_credit.c:    spin_unlock_irqrestore(&(prv->lock), flags);
./xen/common/sched_credit.c:        sv->flags |= CSCHED_FLAG_VCPU_YIELD;
./xen/common/sched_credit.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_credit.c:                prv->weight -= sdom->weight * sdom->active_vcpu_count;
./xen/common/sched_credit.c:                prv->weight += op->u.credit.weight * sdom->active_vcpu_count;
./xen/common/sched_credit.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit.c:        prv->tslice_us = params->tslice_us;
./xen/common/sched_credit.c:        prv->ratelimit_us = params->ratelimit_us;
./xen/common/sched_credit.c:        params->tslice_us = prv->tslice_us;
./xen/common/sched_credit.c:        params->ratelimit_us = prv->ratelimit_us;
./xen/common/sched_credit.c:    sort_epoch = prv->runq_sort;
./xen/common/sched_credit.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_credit.c:    weight_total = prv->weight;
./xen/common/sched_credit.c:    credit_total = prv->credit;
./xen/common/sched_credit.c:    if ( prv->credit_balance < 0 )
./xen/common/sched_credit.c:        credit_total -= prv->credit_balance;
./xen/common/sched_credit.c:        prv->credit_balance = 0;
./xen/common/sched_credit.c:        spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit.c:    list_for_each_safe( iter_sdom, next_sdom, &prv->active_sdom )
./xen/common/sched_credit.c:        credit_peak = sdom->active_vcpu_count * prv->credits_per_tslice;
./xen/common/sched_credit.c:        if ( prv->credit_balance < 0 )
./xen/common/sched_credit.c:            credit_peak += ( ( -prv->credit_balance
./xen/common/sched_credit.c:            credit_cap = ((sdom->cap * prv->credits_per_tslice) + 99) / 100;
./xen/common/sched_credit.c:                list_add(&sdom->active_sdom_elem, &prv->active_sdom);
./xen/common/sched_credit.c:                if ( credit < -prv->credits_per_tslice )
./xen/common/sched_credit.c:                    credit = -prv->credits_per_tslice;
./xen/common/sched_credit.c:                if ( credit > prv->credits_per_tslice )
./xen/common/sched_credit.c:    prv->credit_balance = credit_balance;
./xen/common/sched_credit.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit.c:    prv->runq_sort++;
./xen/common/sched_credit.c:    set_timer( &prv->master_ticker,
./xen/common/sched_credit.c:               NOW() + MICROSECS(prv->tslice_us));
./xen/common/sched_credit.c:    set_timer(&spc->ticker, NOW() + MICROSECS(prv->tick_period_us) );
./xen/common/sched_credit.c:    cpumask_andnot(&workers, online, prv->idlers);
./xen/common/sched_credit.c:         && prv->ratelimit_us
./xen/common/sched_credit.c:         && runtime < MICROSECS(prv->ratelimit_us) )
./xen/common/sched_credit.c:        tslice = MICROSECS(prv->ratelimit_us);
./xen/common/sched_credit.c:    tslice = MICROSECS(prv->tslice_us);
./xen/common/sched_credit.c:        if ( !cpumask_test_cpu(cpu, prv->idlers) )
./xen/common/sched_credit.c:            cpumask_set_cpu(cpu, prv->idlers);
./xen/common/sched_credit.c:    else if ( cpumask_test_cpu(cpu, prv->idlers) )
./xen/common/sched_credit.c:        cpumask_clear_cpu(cpu, prv->idlers);
./xen/common/sched_credit.c:    spin_lock_irqsave(&(prv->lock), flags);
./xen/common/sched_credit.c:           prv->ncpus,
./xen/common/sched_credit.c:           prv->master,
./xen/common/sched_credit.c:           prv->credit,
./xen/common/sched_credit.c:           prv->credit_balance,
./xen/common/sched_credit.c:           prv->weight,
./xen/common/sched_credit.c:           prv->runq_sort,
./xen/common/sched_credit.c:           prv->tslice_us,
./xen/common/sched_credit.c:           prv->ratelimit_us,
./xen/common/sched_credit.c:           prv->ticks_per_tslice,
./xen/common/sched_credit.c:    cpumask_scnprintf(idlers_buf, sizeof(idlers_buf), prv->idlers);
./xen/common/sched_credit.c:    list_for_each( iter_sdom, &prv->active_sdom )
./xen/common/sched_credit.c:    spin_unlock_irqrestore(&(prv->lock), flags);
./xen/common/sched_credit.c:    if ( !zalloc_cpumask_var(&prv->cpus) ||
./xen/common/sched_credit.c:         !zalloc_cpumask_var(&prv->idlers) )
./xen/common/sched_credit.c:        free_cpumask_var(prv->cpus);
./xen/common/sched_credit.c:    spin_lock_init(&prv->lock);
./xen/common/sched_credit.c:    INIT_LIST_HEAD(&prv->active_sdom);
./xen/common/sched_credit.c:    prv->master = UINT_MAX;
./xen/common/sched_credit.c:    prv->tslice_us = sched_credit_tslice_us;
./xen/common/sched_credit.c:    prv->ticks_per_tslice = CSCHED_TICKS_PER_TSLICE;
./xen/common/sched_credit.c:    if ( prv->tslice_us < prv->ticks_per_tslice )
./xen/common/sched_credit.c:        prv->ticks_per_tslice = 1;
./xen/common/sched_credit.c:    prv->tick_period_us = prv->tslice_us / prv->ticks_per_tslice;
./xen/common/sched_credit.c:    prv->credits_per_tslice = CSCHED_CREDIT_PER_US * prv->tslice_us;
./xen/common/sched_credit.c:        prv->ratelimit_us = prv->tslice_us;
./xen/common/sched_credit.c:        prv->ratelimit_us = sched_ratelimit_us;
./xen/common/sched_credit.c:        free_cpumask_var(prv->cpus);
./xen/common/sched_credit.c:        free_cpumask_var(prv->idlers);
./xen/common/sched_credit.c:    set_timer(&spc->ticker, now + MICROSECS(prv->tick_period_us)
./xen/common/sched_credit.c:            - now % MICROSECS(prv->tick_period_us) );
./xen/common/xenoprof.c:        d->xenoprof->vcpu[v->vcpu_id].event_size = max_samples;
./xen/common/xenoprof.c:        d->xenoprof->vcpu[v->vcpu_id].buffer = buf;
./xen/common/xenoprof.c:        xenoprof_buf(d, buf, vcpu_id) = v->vcpu_id;
./xen/common/xenoprof.c:    if ( v->buffer == NULL )
./xen/common/xenoprof.c:    buf = v->buffer;
./xen/common/xenoprof.c:        if ( (xenoprof_buf_space(d, buf, v->event_size) < 2) ||
./xen/common/schedule.c:    d.vcpu = v->vcpu_id;
./xen/common/schedule.c:    d.domain = v->domain->domain_id;
./xen/common/schedule.c:    event |= ( v->runstate.state & 0x3 ) << 8;
./xen/common/schedule.c:    d.vcpu = v->vcpu_id;
./xen/common/schedule.c:    d.domain = v->domain->domain_id;
./xen/common/schedule.c:    if ( unlikely(v->is_urgent) )
./xen/common/schedule.c:        if ( !test_bit(_VPF_blocked, &v->pause_flags) ||
./xen/common/schedule.c:             !test_bit(v->vcpu_id, v->domain->poll_mask) )
./xen/common/schedule.c:            v->is_urgent = 0;
./xen/common/schedule.c:            atomic_dec(&per_cpu(schedule_data,v->processor).urgent_count);
./xen/common/schedule.c:        if ( unlikely(test_bit(_VPF_blocked, &v->pause_flags) &&
./xen/common/schedule.c:                      test_bit(v->vcpu_id, v->domain->poll_mask)) )
./xen/common/schedule.c:            v->is_urgent = 1;
./xen/common/schedule.c:            atomic_inc(&per_cpu(schedule_data,v->processor).urgent_count);
./xen/common/schedule.c:    ASSERT(v->runstate.state != new_state);
./xen/common/schedule.c:    ASSERT(spin_is_locked(per_cpu(schedule_data,v->processor).schedule_lock));
./xen/common/schedule.c:    delta = new_entry_time - v->runstate.state_entry_time;
./xen/common/schedule.c:        v->runstate.time[v->runstate.state] += delta;
./xen/common/schedule.c:        v->runstate.state_entry_time = new_entry_time;
./xen/common/schedule.c:    v->runstate.state = new_state;
./xen/common/schedule.c:    memcpy(runstate, &v->runstate, sizeof(*runstate));
./xen/common/schedule.c:    struct domain *d = v->domain;
./xen/common/schedule.c:    v->processor = processor;
./xen/common/schedule.c:        cpumask_copy(v->cpu_affinity, cpumask_of(processor));
./xen/common/schedule.c:        cpumask_setall(v->cpu_affinity);
./xen/common/schedule.c:    init_timer(&v->periodic_timer, vcpu_periodic_timer_fn,
./xen/common/schedule.c:               v, v->processor);
./xen/common/schedule.c:    init_timer(&v->singleshot_timer, vcpu_singleshot_timer_fn,
./xen/common/schedule.c:               v, v->processor);
./xen/common/schedule.c:    init_timer(&v->poll_timer, poll_timer_fn,
./xen/common/schedule.c:               v, v->processor);
./xen/common/schedule.c:        per_cpu(schedule_data, v->processor).curr = v;
./xen/common/schedule.c:        v->is_running = 1;
./xen/common/schedule.c:    TRACE_2D(TRC_SCHED_DOM_ADD, v->domain->domain_id, v->vcpu_id);
./xen/common/schedule.c:    v->sched_priv = SCHED_OP(DOM2OP(d), alloc_vdata, v, d->sched_priv);
./xen/common/schedule.c:    if ( v->sched_priv == NULL )
./xen/common/schedule.c:        vcpu_priv[v->vcpu_id] = SCHED_OP(c->sched, alloc_vdata, v, domdata);
./xen/common/schedule.c:        if ( vcpu_priv[v->vcpu_id] == NULL )
./xen/common/schedule.c:                if ( vcpu_priv[v->vcpu_id] != NULL )
./xen/common/schedule.c:                    xfree(vcpu_priv[v->vcpu_id]);
./xen/common/schedule.c:        SCHED_OP(VCPU2OP(v), free_vdata, v->sched_priv);
./xen/common/schedule.c:        v->sched_priv = NULL;
./xen/common/schedule.c:        migrate_timer(&v->periodic_timer, new_p);
./xen/common/schedule.c:        migrate_timer(&v->singleshot_timer, new_p);
./xen/common/schedule.c:        migrate_timer(&v->poll_timer, new_p);
./xen/common/schedule.c:        cpumask_setall(v->cpu_affinity);
./xen/common/schedule.c:        v->processor = new_p;
./xen/common/schedule.c:        v->sched_priv = vcpu_priv[v->vcpu_id];
./xen/common/schedule.c:    kill_timer(&v->periodic_timer);
./xen/common/schedule.c:    kill_timer(&v->singleshot_timer);
./xen/common/schedule.c:    kill_timer(&v->poll_timer);
./xen/common/schedule.c:    if ( test_and_clear_bool(v->is_urgent) )
./xen/common/schedule.c:        atomic_dec(&per_cpu(schedule_data, v->processor).urgent_count);
./xen/common/schedule.c:    SCHED_OP(VCPU2OP(v), free_vdata, v->sched_priv);
./xen/common/schedule.c:        if ( v->runstate.state == RUNSTATE_runnable )
./xen/common/schedule.c:    TRACE_2D(TRC_SCHED_SLEEP, v->domain->domain_id, v->vcpu_id);
./xen/common/schedule.c:    while ( !vcpu_runnable(v) && v->is_running )
./xen/common/schedule.c:        if ( v->runstate.state >= RUNSTATE_blocked )
./xen/common/schedule.c:    else if ( !test_bit(_VPF_blocked, &v->pause_flags) )
./xen/common/schedule.c:        if ( v->runstate.state == RUNSTATE_blocked )
./xen/common/schedule.c:    TRACE_2D(TRC_SCHED_WAKE, v->domain->domain_id, v->vcpu_id);
./xen/common/schedule.c:    if ( !test_and_clear_bit(_VPF_blocked, &v->pause_flags) )
./xen/common/schedule.c:    if ( unlikely(v->poll_evtchn != 0) )
./xen/common/schedule.c:        v->poll_evtchn = 0;
./xen/common/schedule.c:        if ( test_and_clear_bit(v->vcpu_id, v->domain->poll_mask) )
./xen/common/schedule.c:            clear_bit(_VPF_blocked, &v->pause_flags);
./xen/common/schedule.c:    old_cpu = new_cpu = v->processor;
./xen/common/schedule.c:        old_cpu = v->processor;
./xen/common/schedule.c:                 cpumask_test_cpu(new_cpu, v->cpu_affinity) &&
./xen/common/schedule.c:                 cpumask_test_cpu(new_cpu, v->domain->cpupool->cpu_valid) )
./xen/common/schedule.c:                 cpumask_test_cpu(new_cpu, v->domain->cpupool->cpu_valid) )
./xen/common/schedule.c:     * NB. Check of v->running happens /after/ setting migration flag
./xen/common/schedule.c:    if ( v->is_running ||
./xen/common/schedule.c:         !test_and_clear_bit(_VPF_migrating, &v->pause_flags) )
./xen/common/schedule.c:     * the switch occurs, v->is_urgent is no longer protected by the per-CPU
./xen/common/schedule.c:    if ( unlikely(v->is_urgent) && (old_cpu != new_cpu) )
./xen/common/schedule.c:        v->processor = new_cpu;
./xen/common/schedule.c:    if ( v->is_running )
./xen/common/schedule.c:        set_bit(_VPF_migrating, &v->pause_flags);
./xen/common/schedule.c:    if ( test_bit(_VPF_migrating, &v->pause_flags) )
./xen/common/schedule.c:            cpumask_and(&online_affinity, v->cpu_affinity, c->cpu_valid);
./xen/common/schedule.c:                 cpumask_test_cpu(cpu, v->cpu_affinity) )
./xen/common/schedule.c:                        v->domain->domain_id, v->vcpu_id);
./xen/common/schedule.c:                cpumask_setall(v->cpu_affinity);
./xen/common/schedule.c:            if ( v->processor == cpu )
./xen/common/schedule.c:                set_bit(_VPF_migrating, &v->pause_flags);
./xen/common/schedule.c:            if ( v->processor == cpu )
./xen/common/schedule.c:    if ( v->domain->is_pinned )
./xen/common/schedule.c:    cpumask_copy(v->cpu_affinity, affinity);
./xen/common/schedule.c:    if ( !cpumask_test_cpu(v->processor, v->cpu_affinity) )
./xen/common/schedule.c:        set_bit(_VPF_migrating, &v->pause_flags);
./xen/common/schedule.c:    domain_update_node_affinity(v->domain);
./xen/common/schedule.c:    if ( test_bit(_VPF_migrating, &v->pause_flags) )
./xen/common/schedule.c:    set_bit(_VPF_blocked, &v->pause_flags);
./xen/common/schedule.c:        clear_bit(_VPF_blocked, &v->pause_flags);
./xen/common/schedule.c:        TRACE_2D(TRC_SCHED_BLOCK, v->domain->domain_id, v->vcpu_id);
./xen/common/schedule.c:    struct domain *d = v->domain;
./xen/common/schedule.c:    set_bit(_VPF_blocked, &v->pause_flags);
./xen/common/schedule.c:    v->poll_evtchn = -1;
./xen/common/schedule.c:    set_bit(v->vcpu_id, d->poll_mask);
./xen/common/schedule.c:    if ( (v->poll_evtchn == 0) ||
./xen/common/schedule.c:         !test_bit(_VPF_blocked, &v->pause_flags) ||
./xen/common/schedule.c:         !test_bit(v->vcpu_id, d->poll_mask) )
./xen/common/schedule.c:        v->poll_evtchn = port;
./xen/common/schedule.c:        set_timer(&v->poll_timer, sched_poll->timeout);
./xen/common/schedule.c:    TRACE_2D(TRC_SCHED_BLOCK, d->domain_id, v->vcpu_id);
./xen/common/schedule.c:    v->poll_evtchn = 0;
./xen/common/schedule.c:    clear_bit(v->vcpu_id, d->poll_mask);
./xen/common/schedule.c:    clear_bit(_VPF_blocked, &v->pause_flags);
./xen/common/schedule.c:        stop_timer(&v->singleshot_timer);
./xen/common/schedule.c:                 v->vcpu_id, (uint64_t)timeout);
./xen/common/schedule.c:        set_timer(&v->singleshot_timer, NOW() + MILLISECS(100));
./xen/common/schedule.c:        migrate_timer(&v->singleshot_timer, smp_processor_id());
./xen/common/schedule.c:        set_timer(&v->singleshot_timer, timeout);
./xen/common/schedule.c:    if ( v->periodic_period == 0 )
./xen/common/schedule.c:    periodic_next_event = v->periodic_last_event + v->periodic_period;
./xen/common/schedule.c:        v->periodic_last_event = now;
./xen/common/schedule.c:        periodic_next_event = now + v->periodic_period;
./xen/common/schedule.c:    migrate_timer(&v->periodic_timer, smp_processor_id());
./xen/common/schedule.c:    set_timer(&v->periodic_timer, periodic_next_event);
./xen/common/schedule.c:             prev->domain->domain_id,
./xen/common/schedule.c:             now - prev->runstate.state_entry_time);
./xen/common/schedule.c:    ASSERT(prev->runstate.state == RUNSTATE_running);
./xen/common/schedule.c:             prev->domain->domain_id, prev->vcpu_id,
./xen/common/schedule.c:        (test_bit(_VPF_blocked, &prev->pause_flags) ? RUNSTATE_blocked :
./xen/common/schedule.c:    prev->last_run_time = now;
./xen/common/schedule.c:    stop_timer(&prev->periodic_timer);
./xen/common/schedule.c:    prev->is_running = 0;
./xen/common/schedule.c:    if ( unlikely(test_bit(_VPF_migrating, &prev->pause_flags)) )
./xen/common/schedule.c:    if ( test_and_clear_bit(v->vcpu_id, v->domain->poll_mask) )
./xen/common/hvm/save.c:        if ( test_and_set_bit(_VPF_down, &v->pause_flags) )
./xen/common/wait.c:    wqv->stack = alloc_xenheap_page();
./xen/common/wait.c:    if ( wqv->stack == NULL )
./xen/common/wait.c:    INIT_LIST_HEAD(&wqv->list);
./xen/common/wait.c:    wqv->vcpu = v;
./xen/common/wait.c:    v->waitqueue_vcpu = wqv;
./xen/common/wait.c:    wqv = v->waitqueue_vcpu;
./xen/common/wait.c:    BUG_ON(!list_empty(&wqv->list));
./xen/common/wait.c:    free_xenheap_page(wqv->stack);
./xen/common/wait.c:    v->waitqueue_vcpu = NULL;
./xen/common/wait.c:        list_del_init(&wqv->list);
./xen/common/wait.c:        vcpu_unpause(wqv->vcpu);
./xen/common/wait.c:        put_domain(wqv->vcpu->domain);
./xen/common/wait.c:    ASSERT(wqv->esp == 0);
./xen/common/wait.c:    wqv->wakeup_cpu = smp_processor_id();
./xen/common/wait.c:    cpumask_copy(&wqv->saved_affinity, curr->cpu_affinity);
./xen/common/wait.c:    if ( vcpu_set_affinity(curr, cpumask_of(wqv->wakeup_cpu)) )
./xen/common/wait.c:        : "=&S" (wqv->esp), "=&c" (dummy), "=&D" (dummy)
./xen/common/wait.c:        : "i" (PAGE_SIZE), "1" (cpu_info), "2" (wqv->stack)
./xen/common/wait.c:    if ( unlikely(wqv->esp == 0) )
./xen/common/wait.c:    wqv->esp = NULL;
./xen/common/wait.c:    (void)vcpu_set_affinity(current, &wqv->saved_affinity);
./xen/common/wait.c:    ASSERT(list_empty(&wqv->list));
./xen/common/wait.c:    if ( likely(wqv->esp == NULL) )
./xen/common/wait.c:    if ( unlikely(smp_processor_id() != wqv->wakeup_cpu) )
./xen/common/wait.c:        cpumask_copy(&wqv->saved_affinity, curr->cpu_affinity);
./xen/common/wait.c:        if ( vcpu_set_affinity(curr, cpumask_of(wqv->wakeup_cpu)) )
./xen/common/wait.c:        : : "S" (wqv->stack), "D" (wqv->esp),
./xen/common/wait.c:        "c" ((char *)get_cpu_info() - (char *)wqv->esp)
./xen/common/wait.c:    ASSERT(list_empty(&wqv->list));
./xen/common/wait.c:    list_add_tail(&wqv->list, &wq->list);
./xen/common/wait.c:    if ( list_empty(&wqv->list) )
./xen/common/wait.c:    if ( !list_empty(&wqv->list) )
./xen/common/wait.c:        list_del_init(&wqv->list);
./xen/common/compat/domain.c:        rc = v->is_initialised ? -EEXIST : arch_set_info_guest(v, cmp_ctxt);
./xen/common/compat/memory.c:                nat.rsrv->nr_extents = end_extent;
./xen/common/compat/memory.c:                 !guest_handle_is_null(nat.rsrv->extent_start) )
./xen/common/compat/memory.c:                    compat_pfn_t pfn = nat.rsrv->extent_start.p[start_extent];
./xen/common/compat/memory.c:                    BUG_ON(pfn != nat.rsrv->extent_start.p[start_extent]);
./xen/common/compat/memory.c:            if ( (split >= 0) && (end_extent != nat.rsrv->nr_extents) )
./xen/common/domctl.c:        info->max_vcpu_id = v->vcpu_id;
./xen/common/domctl.c:        if ( !test_bit(_VPF_down, &v->pause_flags) )
./xen/common/domctl.c:            if ( !(v->pause_flags & VPF_blocked) )
./xen/common/domctl.c:            if ( v->is_running )
./xen/common/domctl.c:                if ( !test_bit(_VPF_down, &v->pause_flags)
./xen/common/domctl.c:                     && ((cpu = v->processor) < nr_cpus) )
./xen/common/domctl.c:                &op->u.vcpuaffinity.cpumap, v->cpu_affinity);
./xen/common/domctl.c:        if ( !v->is_initialised )
./xen/common/domctl.c:        op->u.getvcpuinfo.online   = !test_bit(_VPF_down, &v->pause_flags);
./xen/common/domctl.c:        op->u.getvcpuinfo.blocked  = test_bit(_VPF_blocked, &v->pause_flags);
./xen/common/domctl.c:        op->u.getvcpuinfo.running  = v->is_running;
./xen/common/domctl.c:        op->u.getvcpuinfo.cpu      = v->processor;
./xen/common/sched_credit2.c:    if ( rqd->load_last_update + (1ULL<<prv->load_window_shift) < now )
./xen/common/sched_credit2.c:        rqd->avgload = (unsigned long long)rqd->load << prv->load_window_shift;
./xen/common/sched_credit2.c:        rqd->b_avgload = (unsigned long long)rqd->load << prv->load_window_shift;
./xen/common/sched_credit2.c:            ( ( delta * ( (unsigned long long)rqd->load << prv->load_window_shift ) )
./xen/common/sched_credit2.c:              + ( ((1ULL<<prv->load_window_shift) - delta) * rqd->avgload ) ) >> prv->load_window_shift;
./xen/common/sched_credit2.c:            ( ( delta * ( (unsigned long long)rqd->load << prv->load_window_shift ) )
./xen/common/sched_credit2.c:              + ( ((1ULL<<prv->load_window_shift) - delta) * rqd->b_avgload ) ) >> prv->load_window_shift;
./xen/common/sched_credit2.c:    if ( svc->load_last_update + (1ULL<<prv->load_window_shift) < now )
./xen/common/sched_credit2.c:        svc->avgload = (unsigned long long)vcpu_load << prv->load_window_shift;
./xen/common/sched_credit2.c:            ( ( delta * ( (unsigned long long)vcpu_load << prv->load_window_shift ) )
./xen/common/sched_credit2.c:              + ( ((1ULL<<prv->load_window_shift) - delta) * svc->avgload ) ) >> prv->load_window_shift;
./xen/common/sched_credit2.c:    BUG_ON(cpumask_empty(&prv->active_queues));
./xen/common/sched_credit2.c:    if ( !spin_trylock(&prv->lock) )
./xen/common/sched_credit2.c:    for_each_cpu(i, &prv->active_queues)
./xen/common/sched_credit2.c:        rqd = prv->rqd + i;
./xen/common/sched_credit2.c:        BUG_ON(cpumask_empty(&prv->rqd[min_rqi].active));
./xen/common/sched_credit2.c:        new_cpu = cpumask_first(&prv->rqd[min_rqi].active);
./xen/common/sched_credit2.c:    spin_unlock(&prv->lock);
./xen/common/sched_credit2.c:    if ( !spin_trylock(&prv->lock) )
./xen/common/sched_credit2.c:    for_each_cpu(i, &prv->active_queues)
./xen/common/sched_credit2.c:        st.orqd = prv->rqd + i;
./xen/common/sched_credit2.c:    spin_unlock(&prv->lock);
./xen/common/sched_credit2.c:        if ( load_max < (1ULL<<(prv->load_window_shift))*cpus_max )
./xen/common/sched_credit2.c:            if ( st.load_delta < (1ULL<<(prv->load_window_shift+opt_underload_balance_tolerance) ) )
./xen/common/sched_credit2.c:            if ( st.load_delta < (1ULL<<(prv->load_window_shift+opt_overload_balance_tolerance)) )
./xen/common/sched_credit2.c:    st.orqd = prv->rqd + max_delta_rqi;
./xen/common/sched_credit2.c:    /* Make sure the runqueue hasn't been deactivated since we released prv->lock */
./xen/common/sched_credit2.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_credit2.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit2.c:           cpumask_weight(&prv->active_queues),
./xen/common/sched_credit2.c:    for_each_cpu(i, &prv->active_queues)
./xen/common/sched_credit2.c:        fraction = prv->rqd[i].avgload * 100 / (1ULL<<prv->load_window_shift);
./xen/common/sched_credit2.c:               cpumask_weight(&prv->rqd[i].active),
./xen/common/sched_credit2.c:               prv->rqd[i].max_weight,
./xen/common/sched_credit2.c:               prv->rqd[i].load,
./xen/common/sched_credit2.c:    list_for_each( iter_sdom, &prv->sdom )
./xen/common/sched_credit2.c:    rqd = prv->rqd + rqi;
./xen/common/sched_credit2.c:    cpumask_set_cpu(rqi, &prv->active_queues);
./xen/common/sched_credit2.c:    rqd = prv->rqd + rqi;
./xen/common/sched_credit2.c:    cpumask_clear_cpu(rqi, &prv->active_queues);
./xen/common/sched_credit2.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_credit2.c:    if ( cpumask_test_cpu(cpu, &prv->initialized) )
./xen/common/sched_credit2.c:        spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit2.c:    rqd=prv->rqd + rqi;
./xen/common/sched_credit2.c:    if ( ! cpumask_test_cpu(rqi, &prv->active_queues) )
./xen/common/sched_credit2.c:    prv->runq_map[cpu]=rqi;
./xen/common/sched_credit2.c:    cpumask_set_cpu(cpu, &prv->initialized);
./xen/common/sched_credit2.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit2.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_credit2.c:    BUG_ON(!cpumask_test_cpu(cpu, &prv->initialized));
./xen/common/sched_credit2.c:    rqi = prv->runq_map[cpu];
./xen/common/sched_credit2.c:    rqd = prv->rqd + rqi;
./xen/common/sched_credit2.c:    cpumask_clear_cpu(cpu, &prv->initialized);
./xen/common/sched_credit2.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/sched_credit2.c:    spin_lock_init(&prv->lock);
./xen/common/sched_credit2.c:    INIT_LIST_HEAD(&prv->sdom);
./xen/common/sched_credit2.c:        prv->runq_map[i] = -1;
./xen/common/sched_credit2.c:        prv->rqd[i].id = -1;
./xen/common/sched_credit2.c:    prv->load_window_shift = opt_load_window_shift;
./xen/common/sched_arinc653.c:    sched_priv->num_schedule_entries = schedule->num_sched_entries;
./xen/common/sched_arinc653.c:    sched_priv->major_frame = schedule->major_frame;
./xen/common/sched_arinc653.c:        memcpy(sched_priv->schedule[i].dom_handle,
./xen/common/sched_arinc653.c:               sizeof(sched_priv->schedule[i].dom_handle));
./xen/common/sched_arinc653.c:        sched_priv->schedule[i].vcpu_id =
./xen/common/sched_arinc653.c:        sched_priv->schedule[i].runtime =
./xen/common/sched_arinc653.c:    sched_priv->next_major_frame = NOW();
./xen/common/sched_arinc653.c:    schedule->num_sched_entries = sched_priv->num_schedule_entries;
./xen/common/sched_arinc653.c:    schedule->major_frame = sched_priv->major_frame;
./xen/common/sched_arinc653.c:    for ( i = 0; i < sched_priv->num_schedule_entries; i++ )
./xen/common/sched_arinc653.c:               sched_priv->schedule[i].dom_handle,
./xen/common/sched_arinc653.c:               sizeof(sched_priv->schedule[i].dom_handle));
./xen/common/sched_arinc653.c:        schedule->sched_entries[i].vcpu_id = sched_priv->schedule[i].vcpu_id;
./xen/common/sched_arinc653.c:        schedule->sched_entries[i].runtime = sched_priv->schedule[i].runtime;
./xen/common/sched_arinc653.c:    prv->schedule[0].dom_handle[0] = '\0';
./xen/common/sched_arinc653.c:    prv->schedule[0].vcpu_id = 0;
./xen/common/sched_arinc653.c:    prv->schedule[0].runtime = MILLISECS(10);
./xen/common/sched_arinc653.c:    prv->schedule[0].vc = NULL;
./xen/common/sched_arinc653.c:    prv->num_schedule_entries = 1;
./xen/common/sched_arinc653.c:    prv->major_frame = MILLISECS(10);
./xen/common/sched_arinc653.c:    prv->next_major_frame = 0;
./xen/common/sched_arinc653.c:    INIT_LIST_HEAD(&prv->vcpu_list);
./xen/common/sched_arinc653.c:    list_del(&av->list);
./xen/common/sched_arinc653.c:    if ( now >= sched_priv->next_major_frame )
./xen/common/sched_arinc653.c:        sched_priv->next_major_frame = now + sched_priv->major_frame;
./xen/common/sched_arinc653.c:        next_switch_time = now + sched_priv->schedule[0].runtime;
./xen/common/sched_arinc653.c:                && (sched_index < sched_priv->num_schedule_entries) )
./xen/common/sched_arinc653.c:            next_switch_time += sched_priv->schedule[sched_index].runtime;
./xen/common/sched_arinc653.c:    if ( sched_index >= sched_priv->num_schedule_entries )
./xen/common/sched_arinc653.c:        next_switch_time = sched_priv->next_major_frame;
./xen/common/sched_arinc653.c:    new_task = (sched_index < sched_priv->num_schedule_entries)
./xen/common/sched_arinc653.c:        ? sched_priv->schedule[sched_index].vc
./xen/common/sched_arinc653.c:    BUG_ON(now >= sched_priv->next_major_frame);
./xen/common/domain.c:        if ( !v->paused_for_shutdown )
./xen/common/domain.c:    struct domain *d = v->domain;
./xen/common/domain.c:        if ( !v->paused_for_shutdown )
./xen/common/domain.c:        v->paused_for_shutdown = 1;
./xen/common/domain.c:        v->defer_shutdown = 0;
./xen/common/domain.c:    v->domain = d;
./xen/common/domain.c:    v->vcpu_id = vcpu_id;
./xen/common/domain.c:    spin_lock_init(&v->virq_lock);
./xen/common/domain.c:    tasklet_init(&v->continue_hypercall_tasklet, NULL, 0);
./xen/common/domain.c:    if ( !zalloc_cpumask_var(&v->cpu_affinity) ||
./xen/common/domain.c:         !zalloc_cpumask_var(&v->cpu_affinity_tmp) ||
./xen/common/domain.c:         !zalloc_cpumask_var(&v->vcpu_dirty_cpumask) )
./xen/common/domain.c:        v->runstate.state = RUNSTATE_running;
./xen/common/domain.c:        v->runstate.state = RUNSTATE_offline;        
./xen/common/domain.c:        v->runstate.state_entry_time = NOW();
./xen/common/domain.c:        set_bit(_VPF_down, &v->pause_flags);
./xen/common/domain.c:        v->vcpu_info = ((vcpu_id < XEN_LEGACY_MAX_VCPUS)
./xen/common/domain.c:        free_cpumask_var(v->cpu_affinity);
./xen/common/domain.c:        free_cpumask_var(v->cpu_affinity_tmp);
./xen/common/domain.c:        free_cpumask_var(v->vcpu_dirty_cpumask);
./xen/common/domain.c:        int prev_id = v->vcpu_id - 1;
./xen/common/domain.c:        v->next_in_list = d->vcpu[prev_id]->next_in_list;
./xen/common/domain.c:        cpumask_and(online_affinity, v->cpu_affinity, online);
./xen/common/domain.c:            v->defer_shutdown = 0;
./xen/common/domain.c:        else if ( v->defer_shutdown )
./xen/common/domain.c:        v->paused_for_shutdown = 1;
./xen/common/domain.c:        if ( v->paused_for_shutdown )
./xen/common/domain.c:        v->paused_for_shutdown = 0;
./xen/common/domain.c:    if ( v->defer_shutdown )
./xen/common/domain.c:    v->defer_shutdown = 1;
./xen/common/domain.c:    if ( unlikely(v->domain->is_shutting_down) )
./xen/common/domain.c:    return v->defer_shutdown;
./xen/common/domain.c:    v->defer_shutdown = 0;
./xen/common/domain.c:    if ( unlikely(v->domain->is_shutting_down) )
./xen/common/domain.c:        tasklet_kill(&v->continue_hypercall_tasklet);
./xen/common/domain.c:            free_cpumask_var(v->cpu_affinity);
./xen/common/domain.c:            free_cpumask_var(v->cpu_affinity_tmp);
./xen/common/domain.c:            free_cpumask_var(v->vcpu_dirty_cpumask);
./xen/common/domain.c:    atomic_inc(&v->pause_count);
./xen/common/domain.c:    atomic_inc(&v->pause_count);
./xen/common/domain.c:    if ( atomic_dec_and_test(&v->pause_count) )
./xen/common/domain.c:    struct domain *d = v->domain;
./xen/common/domain.c:    set_bit(_VPF_down, &v->pause_flags);
./xen/common/domain.c:    clear_bit(v->vcpu_id, d->poll_mask);
./xen/common/domain.c:    v->poll_evtchn = 0;
./xen/common/domain.c:    v->fpu_initialised = 0;
./xen/common/domain.c:    v->fpu_dirtied     = 0;
./xen/common/domain.c:    v->is_initialised  = 0;
./xen/common/domain.c:    v->async_exception_mask = 0;
./xen/common/domain.c:    memset(v->async_exception_state, 0, sizeof(v->async_exception_state));
./xen/common/domain.c:    cpumask_clear(v->cpu_affinity_tmp);
./xen/common/domain.c:    clear_bit(_VPF_blocked, &v->pause_flags);
./xen/common/domain.c:    domain_unlock(v->domain);
./xen/common/domain.c:        if ( v->vcpu_info == &dummy_vcpu_info )
./xen/common/domain.c:        rc = v->is_initialised ? -EEXIST : arch_set_info_guest(v, ctxt);
./xen/common/domain.c:        if ( !v->is_initialised )
./xen/common/domain.c:            wake = test_and_clear_bit(_VPF_down, &v->pause_flags);
./xen/common/domain.c:        if ( !test_and_set_bit(_VPF_down, &v->pause_flags) )
./xen/common/domain.c:        rc = !test_bit(_VPF_down, &v->pause_flags);
./xen/common/domain.c:        v->periodic_period = set.period_ns;
./xen/common/domain.c:        v->periodic_period = 0;
./xen/common/domain.c:        migrate_timer(&v->singleshot_timer, smp_processor_id());
./xen/common/domain.c:        set_timer(&v->singleshot_timer, set.timeout_abs_ns);
./xen/common/domain.c:        stop_timer(&v->singleshot_timer);
./xen/common/domain.c:        if ( !test_and_set_bool(v->nmi_pending) )
./xen/common/domain.c:        put_domain(v->domain);
./xen/common/xmalloc_tlsf.c:        b->ptr.free_ptr.prev->ptr.free_ptr.next =
./xen/common/sched_sedf.c:    list_insert_sort(WAITQ(v->processor), LIST(v), waitq_comp);
./xen/common/sched_sedf.c:    list_insert_sort(RUNQ(v->processor), LIST(v), runq_comp);
./xen/common/sched_sedf.c:    online = cpupool_scheduler_cpumask(v->domain->cpupool);
./xen/common/sched_sedf.c:    cpumask_and(&online_affinity, v->cpu_affinity, online);
./xen/common/sched_sedf.c:    spin_lock_init(&prv->lock);
./xen/common/sched_sedf.c:    spin_lock_irqsave(&prv->lock, flags);
./xen/common/sched_sedf.c:         * within our prv->lock.
./xen/common/sched_sedf.c:    spin_unlock_irqrestore(&prv->lock, flags);
./xen/common/event_channel.c:    if ( test_and_clear_bit(_VPF_blocked_in_xen, &v->pause_flags) )
./xen/common/event_channel.c:    if ( (virq < 0) || (virq >= ARRAY_SIZE(v->virq_to_evtchn)) )
./xen/common/event_channel.c:    if ( v->virq_to_evtchn[virq] != 0 )
./xen/common/event_channel.c:    v->virq_to_evtchn[virq] = bind->port = port;
./xen/common/event_channel.c:    chn->u.pirq.next_port = v->pirq_evtchn_head;
./xen/common/event_channel.c:    if ( v->pirq_evtchn_head )
./xen/common/event_channel.c:        evtchn_from_port(v->domain, v->pirq_evtchn_head)
./xen/common/event_channel.c:    v->pirq_evtchn_head = port;
./xen/common/event_channel.c:    struct domain *d = v->domain;
./xen/common/event_channel.c:        v->pirq_evtchn_head = chn->u.pirq.next_port;
./xen/common/event_channel.c:            if ( v->virq_to_evtchn[chn1->u.virq] != port1 )
./xen/common/event_channel.c:            v->virq_to_evtchn[chn1->u.virq] = 0;
./xen/common/event_channel.c:            spin_barrier(&v->virq_lock);
./xen/common/event_channel.c:    struct domain *d = v->domain;
./xen/common/event_channel.c:        if ( ((v->poll_evtchn <= 0) || (v->poll_evtchn == port)) &&
./xen/common/event_channel.c:            v->poll_evtchn = 0;
./xen/common/event_channel.c:    return ((v != NULL) && (v->virq_to_evtchn[virq] != 0));
./xen/common/event_channel.c:    spin_lock_irqsave(&v->virq_lock, flags);
./xen/common/event_channel.c:    port = v->virq_to_evtchn[virq];
./xen/common/event_channel.c:    spin_unlock_irqrestore(&v->virq_lock, flags);
./xen/common/event_channel.c:    spin_lock_irqsave(&v->virq_lock, flags);
./xen/common/event_channel.c:    port = v->virq_to_evtchn[virq];
./xen/common/event_channel.c:    spin_unlock_irqrestore(&v->virq_lock, flags);
./xen/common/event_channel.c:    struct domain *d = v->domain;
./xen/common/event_channel.c:    const cpumask_t *mask = cpumask_of(v->processor);
./xen/common/event_channel.c:    for ( port = v->pirq_evtchn_head; port; port = chn->u.pirq.next_port )
./xen/xsm/flask/hooks.c:        u32 sbdf = (dev->seg << 16) | (dev->bus << 8) | dev->devfn;
./xen/xsm/flask/ss/ebitmap.c:            prev->next = new;
./xen/xsm/flask/ss/ebitmap.c:                        e->highbit = prev->startbit + EBITMAP_SIZE;
./xen/xsm/flask/ss/ebitmap.c:                    prev->next = n->next;
./xen/xsm/flask/ss/ebitmap.c:        new->next = prev->next;
./xen/xsm/flask/ss/ebitmap.c:        prev->next = new;
./xen/xsm/flask/ss/sidtab.c:        newnode->next = prev->next;
./xen/xsm/flask/ss/sidtab.c:        prev->next = newnode;
./xen/xsm/flask/ss/hashtab.c:        newnode->next = prev->next;
./xen/xsm/flask/ss/hashtab.c:        prev->next = newnode;
./xen/xsm/flask/ss/avtab.c:        newnode->next = prev->next;
./xen/xsm/flask/ss/avtab.c:        prev->next = newnode;
./xen/xsm/flask/ss/services.c:            add->next = prev->next;
./xen/xsm/flask/ss/services.c:            prev->next = add;
./xen/xsm/flask/ss/services.c:            add->next = prev->next;
./xen/xsm/flask/ss/services.c:            prev->next = add;
